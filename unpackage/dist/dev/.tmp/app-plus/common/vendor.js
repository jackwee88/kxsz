(global["webpackJsonp"] = global["webpackJsonp"] || []).push([["common/vendor"],{

/***/ 1:
/*!***********************************************************!*\
  !*** ./node_modules/@dcloudio/uni-app-plus/dist/index.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(global) {Object.defineProperty(exports, \"__esModule\", { value: true });exports.createApp = createApp;exports.createComponent = createComponent;exports.createPage = createPage;exports.default = void 0;var _vue = _interopRequireDefault(__webpack_require__(/*! vue */ 3));function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}function _slicedToArray(arr, i) {return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();}function _nonIterableRest() {throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");}function _iterableToArrayLimit(arr, i) {var _arr = [];var _n = true;var _d = false;var _e = undefined;try {for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {_arr.push(_s.value);if (i && _arr.length === i) break;}} catch (err) {_d = true;_e = err;} finally {try {if (!_n && _i[\"return\"] != null) _i[\"return\"]();} finally {if (_d) throw _e;}}return _arr;}function _arrayWithHoles(arr) {if (Array.isArray(arr)) return arr;}function _defineProperty(obj, key, value) {if (key in obj) {Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });} else {obj[key] = value;}return obj;}function _toConsumableArray(arr) {return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();}function _nonIterableSpread() {throw new TypeError(\"Invalid attempt to spread non-iterable instance\");}function _iterableToArray(iter) {if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);}function _arrayWithoutHoles(arr) {if (Array.isArray(arr)) {for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {arr2[i] = arr[i];}return arr2;}}\n\nvar _toString = Object.prototype.toString;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction isFn(fn) {\n  return typeof fn === 'function';\n}\n\nfunction isStr(str) {\n  return typeof str === 'string';\n}\n\nfunction isPlainObject(obj) {\n  return _toString.call(obj) === '[object Object]';\n}\n\nfunction hasOwn(obj, key) {\n  return hasOwnProperty.call(obj, key);\n}\n\nfunction noop() {}\n\n/**\r\n                    * Create a cached version of a pure function.\r\n                    */\nfunction cached(fn) {\n  var cache = Object.create(null);\n  return function cachedFn(str) {\n    var hit = cache[str];\n    return hit || (cache[str] = fn(str));\n  };\n}\n\n/**\r\n   * Camelize a hyphen-delimited string.\r\n   */\nvar camelizeRE = /-(\\w)/g;\nvar camelize = cached(function (str) {\n  return str.replace(camelizeRE, function (_, c) {return c ? c.toUpperCase() : '';});\n});\n\nvar HOOKS = [\n'invoke',\n'success',\n'fail',\n'complete',\n'returnValue'];\n\n\nvar globalInterceptors = {};\nvar scopedInterceptors = {};\n\nfunction mergeHook(parentVal, childVal) {\n  var res = childVal ?\n  parentVal ?\n  parentVal.concat(childVal) :\n  Array.isArray(childVal) ?\n  childVal : [childVal] :\n  parentVal;\n  return res ?\n  dedupeHooks(res) :\n  res;\n}\n\nfunction dedupeHooks(hooks) {\n  var res = [];\n  for (var i = 0; i < hooks.length; i++) {\n    if (res.indexOf(hooks[i]) === -1) {\n      res.push(hooks[i]);\n    }\n  }\n  return res;\n}\n\nfunction removeHook(hooks, hook) {\n  var index = hooks.indexOf(hook);\n  if (index !== -1) {\n    hooks.splice(index, 1);\n  }\n}\n\nfunction mergeInterceptorHook(interceptor, option) {\n  Object.keys(option).forEach(function (hook) {\n    if (HOOKS.indexOf(hook) !== -1 && isFn(option[hook])) {\n      interceptor[hook] = mergeHook(interceptor[hook], option[hook]);\n    }\n  });\n}\n\nfunction removeInterceptorHook(interceptor, option) {\n  if (!interceptor || !option) {\n    return;\n  }\n  Object.keys(option).forEach(function (hook) {\n    if (HOOKS.indexOf(hook) !== -1 && isFn(option[hook])) {\n      removeHook(interceptor[hook], option[hook]);\n    }\n  });\n}\n\nfunction addInterceptor(method, option) {\n  if (typeof method === 'string' && isPlainObject(option)) {\n    mergeInterceptorHook(scopedInterceptors[method] || (scopedInterceptors[method] = {}), option);\n  } else if (isPlainObject(method)) {\n    mergeInterceptorHook(globalInterceptors, method);\n  }\n}\n\nfunction removeInterceptor(method, option) {\n  if (typeof method === 'string') {\n    if (isPlainObject(option)) {\n      removeInterceptorHook(scopedInterceptors[method], option);\n    } else {\n      delete scopedInterceptors[method];\n    }\n  } else if (isPlainObject(method)) {\n    removeInterceptorHook(globalInterceptors, method);\n  }\n}\n\nfunction wrapperHook(hook) {\n  return function (data) {\n    return hook(data) || data;\n  };\n}\n\nfunction isPromise(obj) {\n  return !!obj && (typeof obj === 'object' || typeof obj === 'function') && typeof obj.then === 'function';\n}\n\nfunction queue(hooks, data) {\n  var promise = false;\n  for (var i = 0; i < hooks.length; i++) {\n    var hook = hooks[i];\n    if (promise) {\n      promise = Promise.then(wrapperHook(hook));\n    } else {\n      var res = hook(data);\n      if (isPromise(res)) {\n        promise = Promise.resolve(res);\n      }\n      if (res === false) {\n        return {\n          then: function then() {} };\n\n      }\n    }\n  }\n  return promise || {\n    then: function then(callback) {\n      return callback(data);\n    } };\n\n}\n\nfunction wrapperOptions(interceptor) {var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  ['success', 'fail', 'complete'].forEach(function (name) {\n    if (Array.isArray(interceptor[name])) {\n      var oldCallback = options[name];\n      options[name] = function callbackInterceptor(res) {\n        queue(interceptor[name], res).then(function (res) {\n          /* eslint-disable no-mixed-operators */\n          return isFn(oldCallback) && oldCallback(res) || res;\n        });\n      };\n    }\n  });\n  return options;\n}\n\nfunction wrapperReturnValue(method, returnValue) {\n  var returnValueHooks = [];\n  if (Array.isArray(globalInterceptors.returnValue)) {\n    returnValueHooks.push.apply(returnValueHooks, _toConsumableArray(globalInterceptors.returnValue));\n  }\n  var interceptor = scopedInterceptors[method];\n  if (interceptor && Array.isArray(interceptor.returnValue)) {\n    returnValueHooks.push.apply(returnValueHooks, _toConsumableArray(interceptor.returnValue));\n  }\n  returnValueHooks.forEach(function (hook) {\n    returnValue = hook(returnValue) || returnValue;\n  });\n  return returnValue;\n}\n\nfunction getApiInterceptorHooks(method) {\n  var interceptor = Object.create(null);\n  Object.keys(globalInterceptors).forEach(function (hook) {\n    if (hook !== 'returnValue') {\n      interceptor[hook] = globalInterceptors[hook].slice();\n    }\n  });\n  var scopedInterceptor = scopedInterceptors[method];\n  if (scopedInterceptor) {\n    Object.keys(scopedInterceptor).forEach(function (hook) {\n      if (hook !== 'returnValue') {\n        interceptor[hook] = (interceptor[hook] || []).concat(scopedInterceptor[hook]);\n      }\n    });\n  }\n  return interceptor;\n}\n\nfunction invokeApi(method, api, options) {for (var _len = arguments.length, params = new Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {params[_key - 3] = arguments[_key];}\n  var interceptor = getApiInterceptorHooks(method);\n  if (interceptor && Object.keys(interceptor).length) {\n    if (Array.isArray(interceptor.invoke)) {\n      var res = queue(interceptor.invoke, options);\n      return res.then(function (options) {\n        return api.apply(void 0, [wrapperOptions(interceptor, options)].concat(params));\n      });\n    } else {\n      return api.apply(void 0, [wrapperOptions(interceptor, options)].concat(params));\n    }\n  }\n  return api.apply(void 0, [options].concat(params));\n}\n\nvar promiseInterceptor = {\n  returnValue: function returnValue(res) {\n    if (!isPromise(res)) {\n      return res;\n    }\n    return res.then(function (res) {\n      return res[1];\n    }).catch(function (res) {\n      return res[0];\n    });\n  } };\n\n\nvar SYNC_API_RE =\n/^\\$|restoreGlobal|getCurrentSubNVue|getMenuButtonBoundingClientRect|^report|interceptors|Interceptor$|getSubNVueById|requireNativePlugin|upx2px|hideKeyboard|canIUse|^create|Sync$|Manager$|base64ToArrayBuffer|arrayBufferToBase64/;\n\nvar CONTEXT_API_RE = /^create|Manager$/;\n\nvar CALLBACK_API_RE = /^on/;\n\nfunction isContextApi(name) {\n  return CONTEXT_API_RE.test(name);\n}\nfunction isSyncApi(name) {\n  return SYNC_API_RE.test(name);\n}\n\nfunction isCallbackApi(name) {\n  return CALLBACK_API_RE.test(name) && name !== 'onPush';\n}\n\nfunction handlePromise(promise) {\n  return promise.then(function (data) {\n    return [null, data];\n  }).\n  catch(function (err) {return [err];});\n}\n\nfunction shouldPromise(name) {\n  if (\n  isContextApi(name) ||\n  isSyncApi(name) ||\n  isCallbackApi(name))\n  {\n    return false;\n  }\n  return true;\n}\n\nfunction promisify(name, api) {\n  if (!shouldPromise(name)) {\n    return api;\n  }\n  return function promiseApi() {var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};for (var _len2 = arguments.length, params = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {params[_key2 - 1] = arguments[_key2];}\n    if (isFn(options.success) || isFn(options.fail) || isFn(options.complete)) {\n      return wrapperReturnValue(name, invokeApi.apply(void 0, [name, api, options].concat(params)));\n    }\n    return wrapperReturnValue(name, handlePromise(new Promise(function (resolve, reject) {\n      invokeApi.apply(void 0, [name, api, Object.assign({}, options, {\n        success: resolve,\n        fail: reject })].concat(\n      params));\n      /* eslint-disable no-extend-native */\n      if (!Promise.prototype.finally) {\n        Promise.prototype.finally = function (callback) {\n          var promise = this.constructor;\n          return this.then(\n          function (value) {return promise.resolve(callback()).then(function () {return value;});},\n          function (reason) {return promise.resolve(callback()).then(function () {\n              throw reason;\n            });});\n\n        };\n      }\n    })));\n  };\n}\n\nvar EPS = 1e-4;\nvar BASE_DEVICE_WIDTH = 750;\nvar isIOS = false;\nvar deviceWidth = 0;\nvar deviceDPR = 0;\n\nfunction checkDeviceWidth() {var _wx$getSystemInfoSync =\n\n\n\n\n  wx.getSystemInfoSync(),platform = _wx$getSystemInfoSync.platform,pixelRatio = _wx$getSystemInfoSync.pixelRatio,windowWidth = _wx$getSystemInfoSync.windowWidth; // uni=>wx runtime 编译目标是 uni 对象，内部不允许直接使用 uni\n\n  deviceWidth = windowWidth;\n  deviceDPR = pixelRatio;\n  isIOS = platform === 'ios';\n}\n\nfunction upx2px(number, newDeviceWidth) {\n  if (deviceWidth === 0) {\n    checkDeviceWidth();\n  }\n\n  number = Number(number);\n  if (number === 0) {\n    return 0;\n  }\n  var result = number / BASE_DEVICE_WIDTH * (newDeviceWidth || deviceWidth);\n  if (result < 0) {\n    result = -result;\n  }\n  result = Math.floor(result + EPS);\n  if (result === 0) {\n    if (deviceDPR === 1 || !isIOS) {\n      return 1;\n    } else {\n      return 0.5;\n    }\n  }\n  return number < 0 ? -result : result;\n}\n\nvar interceptors = {\n  promiseInterceptor: promiseInterceptor };\n\n\n\n\nvar baseApi = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  upx2px: upx2px,\n  interceptors: interceptors,\n  addInterceptor: addInterceptor,\n  removeInterceptor: removeInterceptor });\n\n\nvar protocols = {};\nvar todos = [];\nvar canIUses = [];\n\nvar CALLBACKS = ['success', 'fail', 'cancel', 'complete'];\n\nfunction processCallback(methodName, method, returnValue) {\n  return function (res) {\n    return method(processReturnValue(methodName, res, returnValue));\n  };\n}\n\nfunction processArgs(methodName, fromArgs) {var argsOption = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};var returnValue = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};var keepFromArgs = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n  if (isPlainObject(fromArgs)) {// 一般 api 的参数解析\n    var toArgs = keepFromArgs === true ? fromArgs : {}; // returnValue 为 false 时，说明是格式化返回值，直接在返回值对象上修改赋值\n    if (isFn(argsOption)) {\n      argsOption = argsOption(fromArgs, toArgs) || {};\n    }\n    for (var key in fromArgs) {\n      if (hasOwn(argsOption, key)) {\n        var keyOption = argsOption[key];\n        if (isFn(keyOption)) {\n          keyOption = keyOption(fromArgs[key], fromArgs, toArgs);\n        }\n        if (!keyOption) {// 不支持的参数\n          console.warn(\"app-plus \".concat(methodName, \"\\u6682\\u4E0D\\u652F\\u6301\").concat(key));\n        } else if (isStr(keyOption)) {// 重写参数 key\n          toArgs[keyOption] = fromArgs[key];\n        } else if (isPlainObject(keyOption)) {// {name:newName,value:value}可重新指定参数 key:value\n          toArgs[keyOption.name ? keyOption.name : key] = keyOption.value;\n        }\n      } else if (CALLBACKS.indexOf(key) !== -1) {\n        toArgs[key] = processCallback(methodName, fromArgs[key], returnValue);\n      } else {\n        if (!keepFromArgs) {\n          toArgs[key] = fromArgs[key];\n        }\n      }\n    }\n    return toArgs;\n  } else if (isFn(fromArgs)) {\n    fromArgs = processCallback(methodName, fromArgs, returnValue);\n  }\n  return fromArgs;\n}\n\nfunction processReturnValue(methodName, res, returnValue) {var keepReturnValue = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  if (isFn(protocols.returnValue)) {// 处理通用 returnValue\n    res = protocols.returnValue(methodName, res);\n  }\n  return processArgs(methodName, res, returnValue, {}, keepReturnValue);\n}\n\nfunction wrapper(methodName, method) {\n  if (hasOwn(protocols, methodName)) {\n    var protocol = protocols[methodName];\n    if (!protocol) {// 暂不支持的 api\n      return function () {\n        console.error(\"app-plus \\u6682\\u4E0D\\u652F\\u6301\".concat(methodName));\n      };\n    }\n    return function (arg1, arg2) {// 目前 api 最多两个参数\n      var options = protocol;\n      if (isFn(protocol)) {\n        options = protocol(arg1);\n      }\n\n      arg1 = processArgs(methodName, arg1, options.args, options.returnValue);\n\n      var args = [arg1];\n      if (typeof arg2 !== 'undefined') {\n        args.push(arg2);\n      }\n      var returnValue = wx[options.name || methodName].apply(wx, args);\n      if (isSyncApi(methodName)) {// 同步 api\n        return processReturnValue(methodName, returnValue, options.returnValue, isContextApi(methodName));\n      }\n      return returnValue;\n    };\n  }\n  return method;\n}\n\nvar todoApis = Object.create(null);\n\nvar TODOS = [\n'onTabBarMidButtonTap',\n'subscribePush',\n'unsubscribePush',\n'onPush',\n'offPush',\n'share'];\n\n\nfunction createTodoApi(name) {\n  return function todoApi(_ref)\n\n\n  {var fail = _ref.fail,complete = _ref.complete;\n    var res = {\n      errMsg: \"\".concat(name, \":fail:\\u6682\\u4E0D\\u652F\\u6301 \").concat(name, \" \\u65B9\\u6CD5\") };\n\n    isFn(fail) && fail(res);\n    isFn(complete) && complete(res);\n  };\n}\n\nTODOS.forEach(function (name) {\n  todoApis[name] = createTodoApi(name);\n});\n\nvar getEmitter = function () {\n  if (typeof getUniEmitter === 'function') {\n    /* eslint-disable no-undef */\n    return getUniEmitter;\n  }\n  var Emitter;\n  return function getUniEmitter() {\n    if (!Emitter) {\n      Emitter = new _vue.default();\n    }\n    return Emitter;\n  };\n}();\n\nfunction apply(ctx, method, args) {\n  return ctx[method].apply(ctx, args);\n}\n\nfunction $on() {\n  return apply(getEmitter(), '$on', Array.prototype.slice.call(arguments));\n}\nfunction $off() {\n  return apply(getEmitter(), '$off', Array.prototype.slice.call(arguments));\n}\nfunction $once() {\n  return apply(getEmitter(), '$once', Array.prototype.slice.call(arguments));\n}\nfunction $emit() {\n  return apply(getEmitter(), '$emit', Array.prototype.slice.call(arguments));\n}\n\nvar eventApi = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  $on: $on,\n  $off: $off,\n  $once: $once,\n  $emit: $emit });\n\n\nfunction requireNativePlugin(pluginName) {\n  /* eslint-disable no-undef */\n  if (typeof weex !== 'undefined') {\n    return weex.requireModule(pluginName);\n  }\n  /* eslint-disable no-undef */\n  return __requireNativePlugin__(pluginName);\n}\n\nfunction wrapper$1(webview) {\n  webview.$processed = true;\n\n  webview.postMessage = function (data) {\n    plus.webview.postMessageToUniNView({\n      type: 'UniAppSubNVue',\n      data: data },\n    webview.id);\n  };\n  var callbacks = [];\n  webview.onMessage = function (callback) {\n    callbacks.push(callback);\n  };\n  webview.$consumeMessage = function (e) {\n    callbacks.forEach(function (callback) {return callback(e);});\n  };\n\n  if (!webview.__uniapp_mask_id) {\n    return;\n  }\n  var maskColor = webview.__uniapp_mask;\n  var maskWebview = webview.__uniapp_mask_id === '0' ? {\n    setStyle: function setStyle(_ref2)\n\n    {var mask = _ref2.mask;\n      requireNativePlugin('uni-tabview').setMask({\n        color: mask });\n\n    } } :\n  plus.webview.getWebviewById(webview.__uniapp_mask_id);\n  var oldShow = webview.show;\n  var oldHide = webview.hide;\n  var oldClose = webview.close;\n\n  var showMask = function showMask() {\n    maskWebview.setStyle({\n      mask: maskColor });\n\n  };\n  var closeMask = function closeMask() {\n    maskWebview.setStyle({\n      mask: 'none' });\n\n  };\n  webview.show = function () {\n    showMask();for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {args[_key3] = arguments[_key3];}\n    return oldShow.apply(webview, args);\n  };\n  webview.hide = function () {\n    closeMask();for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {args[_key4] = arguments[_key4];}\n    return oldHide.apply(webview, args);\n  };\n  webview.close = function () {\n    closeMask();\n    callbacks = [];for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {args[_key5] = arguments[_key5];}\n    return oldClose.apply(webview, args);\n  };\n}\n\nfunction getSubNVueById(id) {\n  var webview = plus.webview.getWebviewById(id);\n  if (webview && !webview.$processed) {\n    wrapper$1(webview);\n  }\n  return webview;\n}\n\n\n\nvar api = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  getSubNVueById: getSubNVueById,\n  requireNativePlugin: requireNativePlugin });\n\n\nvar MPPage = Page;\nvar MPComponent = Component;\n\nvar customizeRE = /:/g;\n\nvar customize = cached(function (str) {\n  return camelize(str.replace(customizeRE, '-'));\n});\n\nfunction initTriggerEvent(mpInstance) {\n  {\n    if (!wx.canIUse('nextTick')) {\n      return;\n    }\n  }\n  var oldTriggerEvent = mpInstance.triggerEvent;\n  mpInstance.triggerEvent = function (event) {for (var _len6 = arguments.length, args = new Array(_len6 > 1 ? _len6 - 1 : 0), _key6 = 1; _key6 < _len6; _key6++) {args[_key6 - 1] = arguments[_key6];}\n    return oldTriggerEvent.apply(mpInstance, [customize(event)].concat(args));\n  };\n}\n\nfunction initHook(name, options) {\n  var oldHook = options[name];\n  if (!oldHook) {\n    options[name] = function () {\n      initTriggerEvent(this);\n    };\n  } else {\n    options[name] = function () {\n      initTriggerEvent(this);for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {args[_key7] = arguments[_key7];}\n      return oldHook.apply(this, args);\n    };\n  }\n}\n\nPage = function Page() {var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  initHook('onLoad', options);\n  return MPPage(options);\n};\n\nComponent = function Component() {var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  initHook('created', options);\n  return MPComponent(options);\n};\n\nvar PAGE_EVENT_HOOKS = [\n'onPullDownRefresh',\n'onReachBottom',\n'onShareAppMessage',\n'onPageScroll',\n'onResize',\n'onTabItemTap'];\n\n\nfunction initMocks(vm, mocks) {\n  var mpInstance = vm.$mp[vm.mpType];\n  mocks.forEach(function (mock) {\n    if (hasOwn(mpInstance, mock)) {\n      vm[mock] = mpInstance[mock];\n    }\n  });\n}\n\nfunction hasHook(hook, vueOptions) {\n  if (!vueOptions) {\n    return true;\n  }\n\n  if (_vue.default.options && Array.isArray(_vue.default.options[hook])) {\n    return true;\n  }\n\n  vueOptions = vueOptions.default || vueOptions;\n\n  if (isFn(vueOptions)) {\n    if (isFn(vueOptions.extendOptions[hook])) {\n      return true;\n    }\n    if (vueOptions.super &&\n    vueOptions.super.options &&\n    Array.isArray(vueOptions.super.options[hook])) {\n      return true;\n    }\n    return false;\n  }\n\n  if (isFn(vueOptions[hook])) {\n    return true;\n  }\n  var mixins = vueOptions.mixins;\n  if (Array.isArray(mixins)) {\n    return !!mixins.find(function (mixin) {return hasHook(hook, mixin);});\n  }\n}\n\nfunction initHooks(mpOptions, hooks, vueOptions) {\n  hooks.forEach(function (hook) {\n    if (hasHook(hook, vueOptions)) {\n      mpOptions[hook] = function (args) {\n        return this.$vm && this.$vm.__call_hook(hook, args);\n      };\n    }\n  });\n}\n\nfunction initVueComponent(Vue, vueOptions) {\n  vueOptions = vueOptions.default || vueOptions;\n  var VueComponent;\n  if (isFn(vueOptions)) {\n    VueComponent = vueOptions;\n    vueOptions = VueComponent.extendOptions;\n  } else {\n    VueComponent = Vue.extend(vueOptions);\n  }\n  return [VueComponent, vueOptions];\n}\n\nfunction initSlots(vm, vueSlots) {\n  if (Array.isArray(vueSlots) && vueSlots.length) {\n    var $slots = Object.create(null);\n    vueSlots.forEach(function (slotName) {\n      $slots[slotName] = true;\n    });\n    vm.$scopedSlots = vm.$slots = $slots;\n  }\n}\n\nfunction initVueIds(vueIds, mpInstance) {\n  vueIds = (vueIds || '').split(',');\n  var len = vueIds.length;\n\n  if (len === 1) {\n    mpInstance._$vueId = vueIds[0];\n  } else if (len === 2) {\n    mpInstance._$vueId = vueIds[0];\n    mpInstance._$vuePid = vueIds[1];\n  }\n}\n\nfunction initData(vueOptions, context) {\n  var data = vueOptions.data || {};\n  var methods = vueOptions.methods || {};\n\n  if (typeof data === 'function') {\n    try {\n      data = data.call(context); // 支持 Vue.prototype 上挂的数据\n    } catch (e) {\n      if (Object({\"VUE_APP_PLATFORM\":\"app-plus\",\"NODE_ENV\":\"development\",\"BASE_URL\":\"/\"}).VUE_APP_DEBUG) {\n        console.warn('根据 Vue 的 data 函数初始化小程序 data 失败，请尽量确保 data 函数中不访问 vm 对象，否则可能影响首次数据渲染速度。', data);\n      }\n    }\n  } else {\n    try {\n      // 对 data 格式化\n      data = JSON.parse(JSON.stringify(data));\n    } catch (e) {}\n  }\n\n  if (!isPlainObject(data)) {\n    data = {};\n  }\n\n  Object.keys(methods).forEach(function (methodName) {\n    if (context.__lifecycle_hooks__.indexOf(methodName) === -1 && !hasOwn(data, methodName)) {\n      data[methodName] = methods[methodName];\n    }\n  });\n\n  return data;\n}\n\nvar PROP_TYPES = [String, Number, Boolean, Object, Array, null];\n\nfunction createObserver(name) {\n  return function observer(newVal, oldVal) {\n    if (this.$vm) {\n      this.$vm[name] = newVal; // 为了触发其他非 render watcher\n    }\n  };\n}\n\nfunction initBehaviors(vueOptions, initBehavior) {\n  var vueBehaviors = vueOptions['behaviors'];\n  var vueExtends = vueOptions['extends'];\n  var vueMixins = vueOptions['mixins'];\n\n  var vueProps = vueOptions['props'];\n\n  if (!vueProps) {\n    vueOptions['props'] = vueProps = [];\n  }\n\n  var behaviors = [];\n  if (Array.isArray(vueBehaviors)) {\n    vueBehaviors.forEach(function (behavior) {\n      behaviors.push(behavior.replace('uni://', \"wx\".concat(\"://\")));\n      if (behavior === 'uni://form-field') {\n        if (Array.isArray(vueProps)) {\n          vueProps.push('name');\n          vueProps.push('value');\n        } else {\n          vueProps['name'] = {\n            type: String,\n            default: '' };\n\n          vueProps['value'] = {\n            type: [String, Number, Boolean, Array, Object, Date],\n            default: '' };\n\n        }\n      }\n    });\n  }\n  if (isPlainObject(vueExtends) && vueExtends.props) {\n    behaviors.push(\n    initBehavior({\n      properties: initProperties(vueExtends.props, true) }));\n\n\n  }\n  if (Array.isArray(vueMixins)) {\n    vueMixins.forEach(function (vueMixin) {\n      if (isPlainObject(vueMixin) && vueMixin.props) {\n        behaviors.push(\n        initBehavior({\n          properties: initProperties(vueMixin.props, true) }));\n\n\n      }\n    });\n  }\n  return behaviors;\n}\n\nfunction parsePropType(key, type, defaultValue, file) {\n  // [String]=>String\n  if (Array.isArray(type) && type.length === 1) {\n    return type[0];\n  }\n  return type;\n}\n\nfunction initProperties(props) {var isBehavior = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;var file = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n  var properties = {};\n  if (!isBehavior) {\n    properties.vueId = {\n      type: String,\n      value: '' };\n\n    properties.vueSlots = { // 小程序不能直接定义 $slots 的 props，所以通过 vueSlots 转换到 $slots\n      type: null,\n      value: [],\n      observer: function observer(newVal, oldVal) {\n        var $slots = Object.create(null);\n        newVal.forEach(function (slotName) {\n          $slots[slotName] = true;\n        });\n        this.setData({\n          $slots: $slots });\n\n      } };\n\n  }\n  if (Array.isArray(props)) {// ['title']\n    props.forEach(function (key) {\n      properties[key] = {\n        type: null,\n        observer: createObserver(key) };\n\n    });\n  } else if (isPlainObject(props)) {// {title:{type:String,default:''},content:String}\n    Object.keys(props).forEach(function (key) {\n      var opts = props[key];\n      if (isPlainObject(opts)) {// title:{type:String,default:''}\n        var value = opts['default'];\n        if (isFn(value)) {\n          value = value();\n        }\n\n        opts.type = parsePropType(key, opts.type);\n\n        properties[key] = {\n          type: PROP_TYPES.indexOf(opts.type) !== -1 ? opts.type : null,\n          value: value,\n          observer: createObserver(key) };\n\n      } else {// content:String\n        var type = parsePropType(key, opts);\n        properties[key] = {\n          type: PROP_TYPES.indexOf(type) !== -1 ? type : null,\n          observer: createObserver(key) };\n\n      }\n    });\n  }\n  return properties;\n}\n\nfunction wrapper$2(event) {\n  // TODO 又得兼容 mpvue 的 mp 对象\n  try {\n    event.mp = JSON.parse(JSON.stringify(event));\n  } catch (e) {}\n\n  event.stopPropagation = noop;\n  event.preventDefault = noop;\n\n  event.target = event.target || {};\n\n  if (!hasOwn(event, 'detail')) {\n    event.detail = {};\n  }\n\n  if (isPlainObject(event.detail)) {\n    event.target = Object.assign({}, event.target, event.detail);\n  }\n\n  return event;\n}\n\nfunction getExtraValue(vm, dataPathsArray) {\n  var context = vm;\n  dataPathsArray.forEach(function (dataPathArray) {\n    var dataPath = dataPathArray[0];\n    var value = dataPathArray[2];\n    if (dataPath || typeof value !== 'undefined') {// ['','',index,'disable']\n      var propPath = dataPathArray[1];\n      var valuePath = dataPathArray[3];\n\n      var vFor = dataPath ? vm.__get_value(dataPath, context) : context;\n\n      if (Number.isInteger(vFor)) {\n        context = value;\n      } else if (!propPath) {\n        context = vFor[value];\n      } else {\n        if (Array.isArray(vFor)) {\n          context = vFor.find(function (vForItem) {\n            return vm.__get_value(propPath, vForItem) === value;\n          });\n        } else if (isPlainObject(vFor)) {\n          context = Object.keys(vFor).find(function (vForKey) {\n            return vm.__get_value(propPath, vFor[vForKey]) === value;\n          });\n        } else {\n          console.error('v-for 暂不支持循环数据：', vFor);\n        }\n      }\n\n      if (valuePath) {\n        context = vm.__get_value(valuePath, context);\n      }\n    }\n  });\n  return context;\n}\n\nfunction processEventExtra(vm, extra, event) {\n  var extraObj = {};\n\n  if (Array.isArray(extra) && extra.length) {\n    /**\r\n                                              *[\r\n                                              *    ['data.items', 'data.id', item.data.id],\r\n                                              *    ['metas', 'id', meta.id]\r\n                                              *],\r\n                                              *[\r\n                                              *    ['data.items', 'data.id', item.data.id],\r\n                                              *    ['metas', 'id', meta.id]\r\n                                              *],\r\n                                              *'test'\r\n                                              */\n    extra.forEach(function (dataPath, index) {\n      if (typeof dataPath === 'string') {\n        if (!dataPath) {// model,prop.sync\n          extraObj['$' + index] = vm;\n        } else {\n          if (dataPath === '$event') {// $event\n            extraObj['$' + index] = event;\n          } else if (dataPath.indexOf('$event.') === 0) {// $event.target.value\n            extraObj['$' + index] = vm.__get_value(dataPath.replace('$event.', ''), event);\n          } else {\n            extraObj['$' + index] = vm.__get_value(dataPath);\n          }\n        }\n      } else {\n        extraObj['$' + index] = getExtraValue(vm, dataPath);\n      }\n    });\n  }\n\n  return extraObj;\n}\n\nfunction getObjByArray(arr) {\n  var obj = {};\n  for (var i = 1; i < arr.length; i++) {\n    var element = arr[i];\n    obj[element[0]] = element[1];\n  }\n  return obj;\n}\n\nfunction processEventArgs(vm, event) {var args = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];var extra = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];var isCustom = arguments.length > 4 ? arguments[4] : undefined;var methodName = arguments.length > 5 ? arguments[5] : undefined;\n  var isCustomMPEvent = false; // wxcomponent 组件，传递原始 event 对象\n  if (isCustom) {// 自定义事件\n    isCustomMPEvent = event.currentTarget &&\n    event.currentTarget.dataset &&\n    event.currentTarget.dataset.comType === 'wx';\n    if (!args.length) {// 无参数，直接传入 event 或 detail 数组\n      if (isCustomMPEvent) {\n        return [event];\n      }\n      return event.detail.__args__ || event.detail;\n    }\n  }\n\n  var extraObj = processEventExtra(vm, extra, event);\n\n  var ret = [];\n  args.forEach(function (arg) {\n    if (arg === '$event') {\n      if (methodName === '__set_model' && !isCustom) {// input v-model value\n        ret.push(event.target.value);\n      } else {\n        if (isCustom && !isCustomMPEvent) {\n          ret.push(event.detail.__args__[0]);\n        } else {// wxcomponent 组件或内置组件\n          ret.push(event);\n        }\n      }\n    } else {\n      if (Array.isArray(arg) && arg[0] === 'o') {\n        ret.push(getObjByArray(arg));\n      } else if (typeof arg === 'string' && hasOwn(extraObj, arg)) {\n        ret.push(extraObj[arg]);\n      } else {\n        ret.push(arg);\n      }\n    }\n  });\n\n  return ret;\n}\n\nvar ONCE = '~';\nvar CUSTOM = '^';\n\nfunction isMatchEventType(eventType, optType) {\n  return eventType === optType ||\n\n  optType === 'regionchange' && (\n\n  eventType === 'begin' ||\n  eventType === 'end');\n\n\n}\n\nfunction handleEvent(event) {var _this = this;\n  event = wrapper$2(event);\n\n  // [['tap',[['handle',[1,2,a]],['handle1',[1,2,a]]]]]\n  var dataset = (event.currentTarget || event.target).dataset;\n  if (!dataset) {\n    return console.warn(\"\\u4E8B\\u4EF6\\u4FE1\\u606F\\u4E0D\\u5B58\\u5728\");\n  }\n  var eventOpts = dataset.eventOpts || dataset['event-opts']; // 支付宝 web-view 组件 dataset 非驼峰\n  if (!eventOpts) {\n    return console.warn(\"\\u4E8B\\u4EF6\\u4FE1\\u606F\\u4E0D\\u5B58\\u5728\");\n  }\n\n  // [['handle',[1,2,a]],['handle1',[1,2,a]]]\n  var eventType = event.type;\n\n  var ret = [];\n\n  eventOpts.forEach(function (eventOpt) {\n    var type = eventOpt[0];\n    var eventsArray = eventOpt[1];\n\n    var isCustom = type.charAt(0) === CUSTOM;\n    type = isCustom ? type.slice(1) : type;\n    var isOnce = type.charAt(0) === ONCE;\n    type = isOnce ? type.slice(1) : type;\n\n    if (eventsArray && isMatchEventType(eventType, type)) {\n      eventsArray.forEach(function (eventArray) {\n        var methodName = eventArray[0];\n        if (methodName) {\n          var handlerCtx = _this.$vm;\n          if (\n          handlerCtx.$options.generic &&\n          handlerCtx.$parent &&\n          handlerCtx.$parent.$parent)\n          {// mp-weixin,mp-toutiao 抽象节点模拟 scoped slots\n            handlerCtx = handlerCtx.$parent.$parent;\n          }\n          if (methodName === '$emit') {\n            handlerCtx.$emit.apply(handlerCtx,\n            processEventArgs(\n            _this.$vm,\n            event,\n            eventArray[1],\n            eventArray[2],\n            isCustom,\n            methodName));\n\n            return;\n          }\n          var handler = handlerCtx[methodName];\n          if (!isFn(handler)) {\n            throw new Error(\" _vm.\".concat(methodName, \" is not a function\"));\n          }\n          if (isOnce) {\n            if (handler.once) {\n              return;\n            }\n            handler.once = true;\n          }\n          ret.push(handler.apply(handlerCtx, processEventArgs(\n          _this.$vm,\n          event,\n          eventArray[1],\n          eventArray[2],\n          isCustom,\n          methodName)));\n\n        }\n      });\n    }\n  });\n\n  if (\n  eventType === 'input' &&\n  ret.length === 1 &&\n  typeof ret[0] !== 'undefined')\n  {\n    return ret[0];\n  }\n}\n\nvar hooks = [\n'onShow',\n'onHide',\n'onError',\n'onPageNotFound'];\n\n\nfunction parseBaseApp(vm, _ref3)\n\n\n{var mocks = _ref3.mocks,initRefs = _ref3.initRefs;\n  if (vm.$options.store) {\n    _vue.default.prototype.$store = vm.$options.store;\n  }\n\n  _vue.default.prototype.mpHost = \"app-plus\";\n\n  _vue.default.mixin({\n    beforeCreate: function beforeCreate() {\n      if (!this.$options.mpType) {\n        return;\n      }\n\n      this.mpType = this.$options.mpType;\n\n      this.$mp = _defineProperty({\n        data: {} },\n      this.mpType, this.$options.mpInstance);\n\n\n      this.$scope = this.$options.mpInstance;\n\n      delete this.$options.mpType;\n      delete this.$options.mpInstance;\n\n      if (this.mpType !== 'app') {\n        initRefs(this);\n        initMocks(this, mocks);\n      }\n    } });\n\n\n  var appOptions = {\n    onLaunch: function onLaunch(args) {\n      if (this.$vm) {// 已经初始化过了，主要是为了百度，百度 onShow 在 onLaunch 之前\n        return;\n      }\n\n      this.$vm = vm;\n\n      this.$vm.$mp = {\n        app: this };\n\n\n      this.$vm.$scope = this;\n      // vm 上也挂载 globalData\n      this.$vm.globalData = this.globalData;\n\n      this.$vm._isMounted = true;\n      this.$vm.__call_hook('mounted', args);\n\n      this.$vm.__call_hook('onLaunch', args);\n    } };\n\n\n  // 兼容旧版本 globalData\n  appOptions.globalData = vm.$options.globalData || {};\n  // 将 methods 中的方法挂在 getApp() 中\n  var methods = vm.$options.methods;\n  if (methods) {\n    Object.keys(methods).forEach(function (name) {\n      appOptions[name] = methods[name];\n    });\n  }\n\n  initHooks(appOptions, hooks);\n\n  return appOptions;\n}\n\nvar mocks = ['__route__', '__wxExparserNodeId__', '__wxWebviewId__'];\n\nfunction findVmByVueId(vm, vuePid) {\n  var $children = vm.$children;\n  // 优先查找直属(反向查找:https://github.com/dcloudio/uni-app/issues/1200)\n  for (var i = $children.length - 1; i >= 0; i--) {\n    var childVm = $children[i];\n    if (childVm.$scope._$vueId === vuePid) {\n      return childVm;\n    }\n  }\n  // 反向递归查找\n  var parentVm;\n  for (var _i = $children.length - 1; _i >= 0; _i--) {\n    parentVm = findVmByVueId($children[_i], vuePid);\n    if (parentVm) {\n      return parentVm;\n    }\n  }\n}\n\nfunction initBehavior(options) {\n  return Behavior(options);\n}\n\nfunction isPage() {\n  return !!this.route;\n}\n\nfunction initRelation(detail) {\n  this.triggerEvent('__l', detail);\n}\n\nfunction initRefs(vm) {\n  var mpInstance = vm.$scope;\n  Object.defineProperty(vm, '$refs', {\n    get: function get() {\n      var $refs = {};\n      var components = mpInstance.selectAllComponents('.vue-ref');\n      components.forEach(function (component) {\n        var ref = component.dataset.ref;\n        $refs[ref] = component.$vm || component;\n      });\n      var forComponents = mpInstance.selectAllComponents('.vue-ref-in-for');\n      forComponents.forEach(function (component) {\n        var ref = component.dataset.ref;\n        if (!$refs[ref]) {\n          $refs[ref] = [];\n        }\n        $refs[ref].push(component.$vm || component);\n      });\n      return $refs;\n    } });\n\n}\n\nfunction handleLink(event) {var _ref4 =\n\n\n\n  event.detail || event.value,vuePid = _ref4.vuePid,vueOptions = _ref4.vueOptions; // detail 是微信,value 是百度(dipatch)\n\n  var parentVm;\n\n  if (vuePid) {\n    parentVm = findVmByVueId(this.$vm, vuePid);\n  }\n\n  if (!parentVm) {\n    parentVm = this.$vm;\n  }\n\n  vueOptions.parent = parentVm;\n}\n\nfunction parseApp(vm) {\n  return parseBaseApp(vm, {\n    mocks: mocks,\n    initRefs: initRefs });\n\n}\n\nvar hooks$1 = [\n'onUniNViewMessage'];\n\n\nfunction parseApp$1(vm) {\n  var appOptions = parseApp(vm);\n\n  initHooks(appOptions, hooks$1);\n\n  return appOptions;\n}\n\nfunction createApp(vm) {\n  App(parseApp$1(vm));\n  return vm;\n}\n\nfunction parseBaseComponent(vueComponentOptions)\n\n\n{var _ref5 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},isPage = _ref5.isPage,initRelation = _ref5.initRelation;var _initVueComponent =\n  initVueComponent(_vue.default, vueComponentOptions),_initVueComponent2 = _slicedToArray(_initVueComponent, 2),VueComponent = _initVueComponent2[0],vueOptions = _initVueComponent2[1];\n\n  var options = {\n    multipleSlots: true,\n    addGlobalClass: true };\n\n\n  var componentOptions = {\n    options: options,\n    data: initData(vueOptions, _vue.default.prototype),\n    behaviors: initBehaviors(vueOptions, initBehavior),\n    properties: initProperties(vueOptions.props, false, vueOptions.__file),\n    lifetimes: {\n      attached: function attached() {\n        var properties = this.properties;\n\n        var options = {\n          mpType: isPage.call(this) ? 'page' : 'component',\n          mpInstance: this,\n          propsData: properties };\n\n\n        initVueIds(properties.vueId, this);\n\n        // 处理父子关系\n        initRelation.call(this, {\n          vuePid: this._$vuePid,\n          vueOptions: options });\n\n\n        // 初始化 vue 实例\n        this.$vm = new VueComponent(options);\n\n        // 处理$slots,$scopedSlots（暂不支持动态变化$slots）\n        initSlots(this.$vm, properties.vueSlots);\n\n        // 触发首次 setData\n        this.$vm.$mount();\n      },\n      ready: function ready() {\n        // 当组件 props 默认值为 true，初始化时传入 false 会导致 created,ready 触发, 但 attached 不触发\n        // https://developers.weixin.qq.com/community/develop/doc/00066ae2844cc0f8eb883e2a557800\n        if (this.$vm) {\n          this.$vm._isMounted = true;\n          this.$vm.__call_hook('mounted');\n          this.$vm.__call_hook('onReady');\n        }\n      },\n      detached: function detached() {\n        this.$vm && this.$vm.$destroy();\n      } },\n\n    pageLifetimes: {\n      show: function show(args) {\n        this.$vm && this.$vm.__call_hook('onPageShow', args);\n      },\n      hide: function hide() {\n        this.$vm && this.$vm.__call_hook('onPageHide');\n      },\n      resize: function resize(size) {\n        this.$vm && this.$vm.__call_hook('onPageResize', size);\n      } },\n\n    methods: {\n      __l: handleLink,\n      __e: handleEvent } };\n\n\n\n  if (Array.isArray(vueOptions.wxsCallMethods)) {\n    vueOptions.wxsCallMethods.forEach(function (callMethod) {\n      componentOptions.methods[callMethod] = function (args) {\n        return this.$vm[callMethod](args);\n      };\n    });\n  }\n\n  if (isPage) {\n    return componentOptions;\n  }\n  return [componentOptions, VueComponent];\n}\n\nfunction parseComponent(vueComponentOptions) {\n  return parseBaseComponent(vueComponentOptions, {\n    isPage: isPage,\n    initRelation: initRelation });\n\n}\n\nfunction parseComponent$1(vueComponentOptions) {\n  var componentOptions = parseComponent(vueComponentOptions);\n\n  componentOptions.methods.$getAppWebview = function () {\n    return plus.webview.getWebviewById(\"\".concat(this.__wxWebviewId__));\n  };\n  return componentOptions;\n}\n\nvar hooks$2 = [\n'onShow',\n'onHide',\n'onUnload'];\n\n\nhooks$2.push.apply(hooks$2, PAGE_EVENT_HOOKS);\n\nfunction parseBasePage(vuePageOptions, _ref6)\n\n\n{var isPage = _ref6.isPage,initRelation = _ref6.initRelation;\n  var pageOptions = parseComponent$1(vuePageOptions);\n\n  initHooks(pageOptions.methods, hooks$2, vuePageOptions);\n\n  pageOptions.methods.onLoad = function (args) {\n    this.$vm.$mp.query = args; // 兼容 mpvue\n    this.$vm.__call_hook('onLoad', args);\n  };\n\n  return pageOptions;\n}\n\nfunction parsePage(vuePageOptions) {\n  return parseBasePage(vuePageOptions, {\n    isPage: isPage,\n    initRelation: initRelation });\n\n}\n\nvar hooks$3 = [\n'onBackPress',\n'onNavigationBarButtonTap',\n'onNavigationBarSearchInputChanged',\n'onNavigationBarSearchInputConfirmed',\n'onNavigationBarSearchInputClicked'];\n\n\nfunction parsePage$1(vuePageOptions) {\n  var pageOptions = parsePage(vuePageOptions);\n\n  initHooks(pageOptions.methods, hooks$3);\n\n  return pageOptions;\n}\n\nfunction createPage(vuePageOptions) {\n  {\n    return Component(parsePage$1(vuePageOptions));\n  }\n}\n\nfunction createComponent(vueOptions) {\n  {\n    return Component(parseComponent$1(vueOptions));\n  }\n}\n\ntodos.forEach(function (todoApi) {\n  protocols[todoApi] = false;\n});\n\ncanIUses.forEach(function (canIUseApi) {\n  var apiName = protocols[canIUseApi] && protocols[canIUseApi].name ? protocols[canIUseApi].name :\n  canIUseApi;\n  if (!wx.canIUse(apiName)) {\n    protocols[canIUseApi] = false;\n  }\n});\n\nvar uni = {};\n\nif (typeof Proxy !== 'undefined' && \"app-plus\" !== 'app-plus') {\n  uni = new Proxy({}, {\n    get: function get(target, name) {\n      if (target[name]) {\n        return target[name];\n      }\n      if (baseApi[name]) {\n        return baseApi[name];\n      }\n      if (api[name]) {\n        return promisify(name, api[name]);\n      }\n      if (eventApi[name]) {\n        return eventApi[name];\n      }\n      if (!hasOwn(wx, name) && !hasOwn(protocols, name)) {\n        return;\n      }\n      return promisify(name, wrapper(name, wx[name]));\n    },\n    set: function set(target, name, value) {\n      target[name] = value;\n      return true;\n    } });\n\n} else {\n  Object.keys(baseApi).forEach(function (name) {\n    uni[name] = baseApi[name];\n  });\n\n  Object.keys(eventApi).forEach(function (name) {\n    uni[name] = eventApi[name];\n  });\n\n  Object.keys(api).forEach(function (name) {\n    uni[name] = promisify(name, api[name]);\n  });\n\n  Object.keys(wx).forEach(function (name) {\n    if (hasOwn(wx, name) || hasOwn(protocols, name)) {\n      uni[name] = promisify(name, wrapper(name, wx[name]));\n    }\n  });\n}\n\n{\n  if (typeof global !== 'undefined') {\n    global.uni = uni;\n    global.UniEmitter = eventApi;\n  }\n}\n\nwx.createApp = createApp;\nwx.createPage = createPage;\nwx.createComponent = createComponent;\n\nvar uni$1 = uni;var _default =\n\nuni$1;exports.default = _default;\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../webpack/buildin/global.js */ 2)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbIl90b1N0cmluZyIsIk9iamVjdCIsInByb3RvdHlwZSIsInRvU3RyaW5nIiwiaGFzT3duUHJvcGVydHkiLCJpc0ZuIiwiZm4iLCJpc1N0ciIsInN0ciIsImlzUGxhaW5PYmplY3QiLCJvYmoiLCJjYWxsIiwiaGFzT3duIiwia2V5Iiwibm9vcCIsImNhY2hlZCIsImNhY2hlIiwiY3JlYXRlIiwiY2FjaGVkRm4iLCJoaXQiLCJjYW1lbGl6ZVJFIiwiY2FtZWxpemUiLCJyZXBsYWNlIiwiXyIsImMiLCJ0b1VwcGVyQ2FzZSIsIkhPT0tTIiwiZ2xvYmFsSW50ZXJjZXB0b3JzIiwic2NvcGVkSW50ZXJjZXB0b3JzIiwibWVyZ2VIb29rIiwicGFyZW50VmFsIiwiY2hpbGRWYWwiLCJyZXMiLCJjb25jYXQiLCJBcnJheSIsImlzQXJyYXkiLCJkZWR1cGVIb29rcyIsImhvb2tzIiwiaSIsImxlbmd0aCIsImluZGV4T2YiLCJwdXNoIiwicmVtb3ZlSG9vayIsImhvb2siLCJpbmRleCIsInNwbGljZSIsIm1lcmdlSW50ZXJjZXB0b3JIb29rIiwiaW50ZXJjZXB0b3IiLCJvcHRpb24iLCJrZXlzIiwiZm9yRWFjaCIsInJlbW92ZUludGVyY2VwdG9ySG9vayIsImFkZEludGVyY2VwdG9yIiwibWV0aG9kIiwicmVtb3ZlSW50ZXJjZXB0b3IiLCJ3cmFwcGVySG9vayIsImRhdGEiLCJpc1Byb21pc2UiLCJ0aGVuIiwicXVldWUiLCJwcm9taXNlIiwiUHJvbWlzZSIsInJlc29sdmUiLCJjYWxsYmFjayIsIndyYXBwZXJPcHRpb25zIiwib3B0aW9ucyIsIm5hbWUiLCJvbGRDYWxsYmFjayIsImNhbGxiYWNrSW50ZXJjZXB0b3IiLCJ3cmFwcGVyUmV0dXJuVmFsdWUiLCJyZXR1cm5WYWx1ZSIsInJldHVyblZhbHVlSG9va3MiLCJnZXRBcGlJbnRlcmNlcHRvckhvb2tzIiwic2xpY2UiLCJzY29wZWRJbnRlcmNlcHRvciIsImludm9rZUFwaSIsImFwaSIsInBhcmFtcyIsImludm9rZSIsInByb21pc2VJbnRlcmNlcHRvciIsImNhdGNoIiwiU1lOQ19BUElfUkUiLCJDT05URVhUX0FQSV9SRSIsIkNBTExCQUNLX0FQSV9SRSIsImlzQ29udGV4dEFwaSIsInRlc3QiLCJpc1N5bmNBcGkiLCJpc0NhbGxiYWNrQXBpIiwiaGFuZGxlUHJvbWlzZSIsImVyciIsInNob3VsZFByb21pc2UiLCJwcm9taXNpZnkiLCJwcm9taXNlQXBpIiwic3VjY2VzcyIsImZhaWwiLCJjb21wbGV0ZSIsInJlamVjdCIsImFzc2lnbiIsImZpbmFsbHkiLCJjb25zdHJ1Y3RvciIsInZhbHVlIiwicmVhc29uIiwiRVBTIiwiQkFTRV9ERVZJQ0VfV0lEVEgiLCJpc0lPUyIsImRldmljZVdpZHRoIiwiZGV2aWNlRFBSIiwiY2hlY2tEZXZpY2VXaWR0aCIsInd4IiwiZ2V0U3lzdGVtSW5mb1N5bmMiLCJwbGF0Zm9ybSIsInBpeGVsUmF0aW8iLCJ3aW5kb3dXaWR0aCIsInVweDJweCIsIm51bWJlciIsIm5ld0RldmljZVdpZHRoIiwiTnVtYmVyIiwicmVzdWx0IiwiTWF0aCIsImZsb29yIiwiaW50ZXJjZXB0b3JzIiwiYmFzZUFwaSIsImZyZWV6ZSIsIl9fcHJvdG9fXyIsInByb3RvY29scyIsInRvZG9zIiwiY2FuSVVzZXMiLCJDQUxMQkFDS1MiLCJwcm9jZXNzQ2FsbGJhY2siLCJtZXRob2ROYW1lIiwicHJvY2Vzc1JldHVyblZhbHVlIiwicHJvY2Vzc0FyZ3MiLCJmcm9tQXJncyIsImFyZ3NPcHRpb24iLCJrZWVwRnJvbUFyZ3MiLCJ0b0FyZ3MiLCJrZXlPcHRpb24iLCJjb25zb2xlIiwid2FybiIsImtlZXBSZXR1cm5WYWx1ZSIsIndyYXBwZXIiLCJwcm90b2NvbCIsImVycm9yIiwiYXJnMSIsImFyZzIiLCJhcmdzIiwiYXBwbHkiLCJ0b2RvQXBpcyIsIlRPRE9TIiwiY3JlYXRlVG9kb0FwaSIsInRvZG9BcGkiLCJlcnJNc2ciLCJnZXRFbWl0dGVyIiwiZ2V0VW5pRW1pdHRlciIsIkVtaXR0ZXIiLCJWdWUiLCJjdHgiLCIkb24iLCJhcmd1bWVudHMiLCIkb2ZmIiwiJG9uY2UiLCIkZW1pdCIsImV2ZW50QXBpIiwicmVxdWlyZU5hdGl2ZVBsdWdpbiIsInBsdWdpbk5hbWUiLCJ3ZWV4IiwicmVxdWlyZU1vZHVsZSIsIl9fcmVxdWlyZU5hdGl2ZVBsdWdpbl9fIiwid3JhcHBlciQxIiwid2VidmlldyIsIiRwcm9jZXNzZWQiLCJwb3N0TWVzc2FnZSIsInBsdXMiLCJwb3N0TWVzc2FnZVRvVW5pTlZpZXciLCJ0eXBlIiwiaWQiLCJjYWxsYmFja3MiLCJvbk1lc3NhZ2UiLCIkY29uc3VtZU1lc3NhZ2UiLCJlIiwiX191bmlhcHBfbWFza19pZCIsIm1hc2tDb2xvciIsIl9fdW5pYXBwX21hc2siLCJtYXNrV2VidmlldyIsInNldFN0eWxlIiwibWFzayIsInNldE1hc2siLCJjb2xvciIsImdldFdlYnZpZXdCeUlkIiwib2xkU2hvdyIsInNob3ciLCJvbGRIaWRlIiwiaGlkZSIsIm9sZENsb3NlIiwiY2xvc2UiLCJzaG93TWFzayIsImNsb3NlTWFzayIsImdldFN1Yk5WdWVCeUlkIiwiTVBQYWdlIiwiUGFnZSIsIk1QQ29tcG9uZW50IiwiQ29tcG9uZW50IiwiY3VzdG9taXplUkUiLCJjdXN0b21pemUiLCJpbml0VHJpZ2dlckV2ZW50IiwibXBJbnN0YW5jZSIsImNhbklVc2UiLCJvbGRUcmlnZ2VyRXZlbnQiLCJ0cmlnZ2VyRXZlbnQiLCJldmVudCIsImluaXRIb29rIiwib2xkSG9vayIsIlBBR0VfRVZFTlRfSE9PS1MiLCJpbml0TW9ja3MiLCJ2bSIsIm1vY2tzIiwiJG1wIiwibXBUeXBlIiwibW9jayIsImhhc0hvb2siLCJ2dWVPcHRpb25zIiwiZGVmYXVsdCIsImV4dGVuZE9wdGlvbnMiLCJzdXBlciIsIm1peGlucyIsImZpbmQiLCJtaXhpbiIsImluaXRIb29rcyIsIm1wT3B0aW9ucyIsIiR2bSIsIl9fY2FsbF9ob29rIiwiaW5pdFZ1ZUNvbXBvbmVudCIsIlZ1ZUNvbXBvbmVudCIsImV4dGVuZCIsImluaXRTbG90cyIsInZ1ZVNsb3RzIiwiJHNsb3RzIiwic2xvdE5hbWUiLCIkc2NvcGVkU2xvdHMiLCJpbml0VnVlSWRzIiwidnVlSWRzIiwic3BsaXQiLCJsZW4iLCJfJHZ1ZUlkIiwiXyR2dWVQaWQiLCJpbml0RGF0YSIsImNvbnRleHQiLCJtZXRob2RzIiwicHJvY2VzcyIsIlZVRV9BUFBfREVCVUciLCJKU09OIiwicGFyc2UiLCJzdHJpbmdpZnkiLCJfX2xpZmVjeWNsZV9ob29rc19fIiwiUFJPUF9UWVBFUyIsIlN0cmluZyIsIkJvb2xlYW4iLCJjcmVhdGVPYnNlcnZlciIsIm9ic2VydmVyIiwibmV3VmFsIiwib2xkVmFsIiwiaW5pdEJlaGF2aW9ycyIsImluaXRCZWhhdmlvciIsInZ1ZUJlaGF2aW9ycyIsInZ1ZUV4dGVuZHMiLCJ2dWVNaXhpbnMiLCJ2dWVQcm9wcyIsImJlaGF2aW9ycyIsImJlaGF2aW9yIiwiRGF0ZSIsInByb3BzIiwicHJvcGVydGllcyIsImluaXRQcm9wZXJ0aWVzIiwidnVlTWl4aW4iLCJwYXJzZVByb3BUeXBlIiwiZGVmYXVsdFZhbHVlIiwiZmlsZSIsImlzQmVoYXZpb3IiLCJ2dWVJZCIsInNldERhdGEiLCJvcHRzIiwid3JhcHBlciQyIiwibXAiLCJzdG9wUHJvcGFnYXRpb24iLCJwcmV2ZW50RGVmYXVsdCIsInRhcmdldCIsImRldGFpbCIsImdldEV4dHJhVmFsdWUiLCJkYXRhUGF0aHNBcnJheSIsImRhdGFQYXRoQXJyYXkiLCJkYXRhUGF0aCIsInByb3BQYXRoIiwidmFsdWVQYXRoIiwidkZvciIsIl9fZ2V0X3ZhbHVlIiwiaXNJbnRlZ2VyIiwidkZvckl0ZW0iLCJ2Rm9yS2V5IiwicHJvY2Vzc0V2ZW50RXh0cmEiLCJleHRyYSIsImV4dHJhT2JqIiwiZ2V0T2JqQnlBcnJheSIsImFyciIsImVsZW1lbnQiLCJwcm9jZXNzRXZlbnRBcmdzIiwiaXNDdXN0b20iLCJpc0N1c3RvbU1QRXZlbnQiLCJjdXJyZW50VGFyZ2V0IiwiZGF0YXNldCIsImNvbVR5cGUiLCJfX2FyZ3NfXyIsInJldCIsImFyZyIsIk9OQ0UiLCJDVVNUT00iLCJpc01hdGNoRXZlbnRUeXBlIiwiZXZlbnRUeXBlIiwib3B0VHlwZSIsImhhbmRsZUV2ZW50IiwiZXZlbnRPcHRzIiwiZXZlbnRPcHQiLCJldmVudHNBcnJheSIsImNoYXJBdCIsImlzT25jZSIsImV2ZW50QXJyYXkiLCJoYW5kbGVyQ3R4IiwiJG9wdGlvbnMiLCJnZW5lcmljIiwiJHBhcmVudCIsImhhbmRsZXIiLCJFcnJvciIsIm9uY2UiLCJwYXJzZUJhc2VBcHAiLCJpbml0UmVmcyIsInN0b3JlIiwiJHN0b3JlIiwibXBIb3N0IiwiYmVmb3JlQ3JlYXRlIiwiJHNjb3BlIiwiYXBwT3B0aW9ucyIsIm9uTGF1bmNoIiwiYXBwIiwiZ2xvYmFsRGF0YSIsIl9pc01vdW50ZWQiLCJmaW5kVm1CeVZ1ZUlkIiwidnVlUGlkIiwiJGNoaWxkcmVuIiwiY2hpbGRWbSIsInBhcmVudFZtIiwiQmVoYXZpb3IiLCJpc1BhZ2UiLCJyb3V0ZSIsImluaXRSZWxhdGlvbiIsImRlZmluZVByb3BlcnR5IiwiZ2V0IiwiJHJlZnMiLCJjb21wb25lbnRzIiwic2VsZWN0QWxsQ29tcG9uZW50cyIsImNvbXBvbmVudCIsInJlZiIsImZvckNvbXBvbmVudHMiLCJoYW5kbGVMaW5rIiwicGFyZW50IiwicGFyc2VBcHAiLCJob29rcyQxIiwicGFyc2VBcHAkMSIsImNyZWF0ZUFwcCIsIkFwcCIsInBhcnNlQmFzZUNvbXBvbmVudCIsInZ1ZUNvbXBvbmVudE9wdGlvbnMiLCJtdWx0aXBsZVNsb3RzIiwiYWRkR2xvYmFsQ2xhc3MiLCJjb21wb25lbnRPcHRpb25zIiwiX19maWxlIiwibGlmZXRpbWVzIiwiYXR0YWNoZWQiLCJwcm9wc0RhdGEiLCIkbW91bnQiLCJyZWFkeSIsImRldGFjaGVkIiwiJGRlc3Ryb3kiLCJwYWdlTGlmZXRpbWVzIiwicmVzaXplIiwic2l6ZSIsIl9fbCIsIl9fZSIsInd4c0NhbGxNZXRob2RzIiwiY2FsbE1ldGhvZCIsInBhcnNlQ29tcG9uZW50IiwicGFyc2VDb21wb25lbnQkMSIsIiRnZXRBcHBXZWJ2aWV3IiwiX193eFdlYnZpZXdJZF9fIiwiaG9va3MkMiIsInBhcnNlQmFzZVBhZ2UiLCJ2dWVQYWdlT3B0aW9ucyIsInBhZ2VPcHRpb25zIiwib25Mb2FkIiwicXVlcnkiLCJwYXJzZVBhZ2UiLCJob29rcyQzIiwicGFyc2VQYWdlJDEiLCJjcmVhdGVQYWdlIiwiY3JlYXRlQ29tcG9uZW50IiwiY2FuSVVzZUFwaSIsImFwaU5hbWUiLCJ1bmkiLCJQcm94eSIsInNldCIsImdsb2JhbCIsIlVuaUVtaXR0ZXIiLCJ1bmkkMSJdLCJtYXBwaW5ncyI6IjZPQUFBLHFFOztBQUVBLElBQU1BLFNBQVMsR0FBR0MsTUFBTSxDQUFDQyxTQUFQLENBQWlCQyxRQUFuQztBQUNBLElBQU1DLGNBQWMsR0FBR0gsTUFBTSxDQUFDQyxTQUFQLENBQWlCRSxjQUF4Qzs7QUFFQSxTQUFTQyxJQUFULENBQWVDLEVBQWYsRUFBbUI7QUFDakIsU0FBTyxPQUFPQSxFQUFQLEtBQWMsVUFBckI7QUFDRDs7QUFFRCxTQUFTQyxLQUFULENBQWdCQyxHQUFoQixFQUFxQjtBQUNuQixTQUFPLE9BQU9BLEdBQVAsS0FBZSxRQUF0QjtBQUNEOztBQUVELFNBQVNDLGFBQVQsQ0FBd0JDLEdBQXhCLEVBQTZCO0FBQzNCLFNBQU9WLFNBQVMsQ0FBQ1csSUFBVixDQUFlRCxHQUFmLE1BQXdCLGlCQUEvQjtBQUNEOztBQUVELFNBQVNFLE1BQVQsQ0FBaUJGLEdBQWpCLEVBQXNCRyxHQUF0QixFQUEyQjtBQUN6QixTQUFPVCxjQUFjLENBQUNPLElBQWYsQ0FBb0JELEdBQXBCLEVBQXlCRyxHQUF6QixDQUFQO0FBQ0Q7O0FBRUQsU0FBU0MsSUFBVCxHQUFpQixDQUFFOztBQUVuQjs7O0FBR0EsU0FBU0MsTUFBVCxDQUFpQlQsRUFBakIsRUFBcUI7QUFDbkIsTUFBTVUsS0FBSyxHQUFHZixNQUFNLENBQUNnQixNQUFQLENBQWMsSUFBZCxDQUFkO0FBQ0EsU0FBTyxTQUFTQyxR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eUIsU0FBUyxDQUFDekIsSUFBRCxFQUFPMEUsT0FBTyxDQUFDMUUsSUFBRCxFQUFPMEMsRUFBRSxDQUFDMUMsSUFBRCxDQUFULENBQWQsQ0FBckI7QUFDRDtBQUNGLEdBSkQ7QUFLRDs7QUFFRDtBQUNFLE1BQUksT0FBT3NWLE1BQVAsS0FBa0IsV0FBdEIsRUFBbUM7QUFDakNBLFVBQU0sQ0FBQ0gsR0FBUCxHQUFhQSxHQUFiO0FBQ0FHLFVBQU0sQ0FBQ0MsVUFBUCxHQUFvQnZQLFFBQXBCO0FBQ0Q7QUFDRjs7QUFFRHRELEVBQUUsQ0FBQ2tRLFNBQUgsR0FBZUEsU0FBZjtBQUNBbFEsRUFBRSxDQUFDcVMsVUFBSCxHQUFnQkEsVUFBaEI7QUFDQXJTLEVBQUUsQ0FBQ3NTLGVBQUgsR0FBcUJBLGVBQXJCOztBQUVBLElBQUlRLEtBQUssR0FBR0wsR0FBWixDOztBQUVlSyxLIiwiZmlsZSI6IjEuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgVnVlIGZyb20gJ3Z1ZSc7XHJcblxyXG5jb25zdCBfdG9TdHJpbmcgPSBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nO1xyXG5jb25zdCBoYXNPd25Qcm9wZXJ0eSA9IE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHk7XHJcblxyXG5mdW5jdGlvbiBpc0ZuIChmbikge1xyXG4gIHJldHVybiB0eXBlb2YgZm4gPT09ICdmdW5jdGlvbidcclxufVxyXG5cclxuZnVuY3Rpb24gaXNTdHIgKHN0cikge1xyXG4gIHJldHVybiB0eXBlb2Ygc3RyID09PSAnc3RyaW5nJ1xyXG59XHJcblxyXG5mdW5jdGlvbiBpc1BsYWluT2JqZWN0IChvYmopIHtcclxuICByZXR1cm4gX3RvU3RyaW5nLmNhbGwob2JqKSA9PT0gJ1tvYmplY3QgT2JqZWN0XSdcclxufVxyXG5cclxuZnVuY3Rpb24gaGFzT3duIChvYmosIGtleSkge1xyXG4gIHJldHVybiBoYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwga2V5KVxyXG59XHJcblxyXG5mdW5jdGlvbiBub29wICgpIHt9XHJcblxyXG4vKipcclxuICogQ3JlYXRlIGEgY2FjaGVkIHZlcnNpb24gb2YgYSBwdXJlIGZ1bmN0aW9uLlxyXG4gKi9cclxuZnVuY3Rpb24gY2FjaGVkIChmbikge1xyXG4gIGNvbnN0IGNhY2hlID0gT2JqZWN0LmNyZWF0ZShudWxsKTtcclxuICByZXR1cm4gZnVuY3Rpb24gY2FjaGVkRm4gKHN0cikge1xyXG4gICAgY29uc3QgaGl0ID0gY2FjaGVbc3RyXTtcclxuICAgIHJldHVybiBoaXQgfHwgKGNhY2hlW3N0cl0gPSBmbihzdHIpKVxyXG4gIH1cclxufVxyXG5cclxuLyoqXHJcbiAqIENhbWVsaXplIGEgaHlwaGVuLWRlbGltaXRlZCBzdHJpbmcuXHJcbiAqL1xyXG5jb25zdCBjYW1lbGl6ZVJFID0gLy0oXFx3KS9nO1xyXG5jb25zdCBjYW1lbGl6ZSA9IGNhY2hlZCgoc3RyKSA9PiB7XHJcbiAgcmV0dXJuIHN0ci5yZXBsYWNlKGNhbWVsaXplUkUsIChfLCBjKSA9PiBjID8gYy50b1VwcGVyQ2FzZSgpIDogJycpXHJcbn0pO1xyXG5cclxuY29uc3QgSE9PS1MgPSBbXHJcbiAgJ2ludm9rZScsXHJcbiAgJ3N1Y2Nlc3MnLFxyXG4gICdmYWlsJyxcclxuICAnY29tcGxldGUnLFxyXG4gICdyZXR1cm5WYWx1ZSdcclxuXTtcclxuXHJcbmNvbnN0IGdsb2JhbEludGVyY2VwdG9ycyA9IHt9O1xyXG5jb25zdCBzY29wZWRJbnRlcmNlcHRvcnMgPSB7fTtcclxuXHJcbmZ1bmN0aW9uIG1lcmdlSG9vayAocGFyZW50VmFsLCBjaGlsZFZhbCkge1xyXG4gIGNvbnN0IHJlcyA9IGNoaWxkVmFsXHJcbiAgICA/IHBhcmVudFZhbFxyXG4gICAgICA/IHBhcmVudFZhbC5jb25jYXQoY2hpbGRWYWwpXHJcbiAgICAgIDogQXJyYXkuaXNBcnJheShjaGlsZFZhbClcclxuICAgICAgICA/IGNoaWxkVmFsIDogW2NoaWxkVmFsXVxyXG4gICAgOiBwYXJlbnRWYWw7XHJcbiAgcmV0dXJuIHJlc1xyXG4gICAgPyBkZWR1cGVIb29rcyhyZXMpXHJcbiAgICA6IHJlc1xyXG59XHJcblxyXG5mdW5jdGlvbiBkZWR1cGVIb29rcyAoaG9va3MpIHtcclxuICBjb25zdCByZXMgPSBbXTtcclxuICBmb3IgKGxldCBpID0gMDsgaSA8IGhvb2tzLmxlbmd0aDsgaSsrKSB7XHJcbiAgICBpZiAocmVzLmluZGV4T2YoaG9va3NbaV0pID09PSAtMSkge1xyXG4gICAgICByZXMucHVzaChob29rc1tpXSk7XHJcbiAgICB9XHJcbiAgfVxyXG4gIHJldHVybiByZXNcclxufVxyXG5cclxuZnVuY3Rpb24gcmVtb3ZlSG9vayAoaG9va3MsIGhvb2spIHtcclxuICBjb25zdCBpbmRleCA9IGhvb2tzLmluZGV4T2YoaG9vayk7XHJcbiAgaWYgKGluZGV4ICE9PSAtMSkge1xyXG4gICAgaG9va3Muc3BsaWNlKGluZGV4LCAxKTtcclxuICB9XHJcbn1cclxuXHJcbmZ1bmN0aW9uIG1lcmdlSW50ZXJjZXB0b3JIb29rIChpbnRlcmNlcHRvciwgb3B0aW9uKSB7XHJcbiAgT2JqZWN0LmtleXMob3B0aW9uKS5mb3JFYWNoKGhvb2sgPT4ge1xyXG4gICAgaWYgKEhPT0tTLmluZGV4T2YoaG9vaykgIT09IC0xICYmIGlzRm4ob3B0aW9uW2hvb2tdKSkge1xyXG4gICAgICBpbnRlcmNlcHRvcltob29rXSA9IG1lcmdlSG9vayhpbnRlcmNlcHRvcltob29rXSwgb3B0aW9uW2hvb2tdKTtcclxuICAgIH1cclxuICB9KTtcclxufVxyXG5cclxuZnVuY3Rpb24gcmVtb3ZlSW50ZXJjZXB0b3JIb29rIChpbnRlcmNlcHRvciwgb3B0aW9uKSB7XHJcbiAgaWYgKCFpbnRlcmNlcHRvciB8fCAhb3B0aW9uKSB7XHJcbiAgICByZXR1cm5cclxuICB9XHJcbiAgT2JqZWN0LmtleXMob3B0aW9uKS5mb3JFYWNoKGhvb2sgPT4ge1xyXG4gICAgaWYgKEhPT0tTLmluZGV4T2YoaG9vaykgIT09IC0xICYmIGlzRm4ob3B0aW9uW2hvb2tdKSkge1xyXG4gICAgICByZW1vdmVIb29rKGludGVyY2VwdG9yW2hvb2tdLCBvcHRpb25baG9va10pO1xyXG4gICAgfVxyXG4gIH0pO1xyXG59XHJcblxyXG5mdW5jdGlvbiBhZGRJbnRlcmNlcHRvciAobWV0aG9kLCBvcHRpb24pIHtcclxuICBpZiAodHlwZW9mIG1ldGhvZCA9PT0gJ3N0cmluZycgJiYgaXNQbGFpbk9iamVjdChvcHRpb24pKSB7XHJcbiAgICBtZXJnZUludGVyY2VwdG9ySG9vayhzY29wZWRJbnRlcmNlcHRvcnNbbWV0aG9kXSB8fCAoc2NvcGVkSW50ZXJjZXB0b3JzW21ldGhvZF0gPSB7fSksIG9wdGlvbik7XHJcbiAgfSBlbHNlIGlmIChpc1BsYWluT2JqZWN0KG1ldGhvZCkpIHtcclxuICAgIG1lcmdlSW50ZXJjZXB0b3JIb29rKGdsb2JhbEludGVyY2VwdG9ycywgbWV0aG9kKTtcclxuICB9XHJcbn1cclxuXHJcbmZ1bmN0aW9uIHJlbW92ZUludGVyY2VwdG9yIChtZXRob2QsIG9wdGlvbikge1xyXG4gIGlmICh0eXBlb2YgbWV0aG9kID09PSAnc3RyaW5nJykge1xyXG4gICAgaWYgKGlzUGxhaW5PYmplY3Qob3B0aW9uKSkge1xyXG4gICAgICByZW1vdmVJbnRlcmNlcHRvckhvb2soc2NvcGVkSW50ZXJjZXB0b3JzW21ldGhvZF0sIG9wdGlvbik7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICBkZWxldGUgc2NvcGVkSW50ZXJjZXB0b3JzW21ldGhvZF07XHJcbiAgICB9XHJcbiAgfSBlbHNlIGlmIChpc1BsYWluT2JqZWN0KG1ldGhvZCkpIHtcclxuICAgIHJlbW92ZUludGVyY2VwdG9ySG9vayhnbG9iYWxJbnRlcmNlcHRvcnMsIG1ldGhvZCk7XHJcbiAgfVxyXG59XHJcblxyXG5mdW5jdGlvbiB3cmFwcGVySG9vayAoaG9vaykge1xyXG4gIHJldHVybiBmdW5jdGlvbiAoZGF0YSkge1xyXG4gICAgcmV0dXJuIGhvb2soZGF0YSkgfHwgZGF0YVxyXG4gIH1cclxufVxyXG5cclxuZnVuY3Rpb24gaXNQcm9taXNlIChvYmopIHtcclxuICByZXR1cm4gISFvYmogJiYgKHR5cGVvZiBvYmogPT09ICdvYmplY3QnIHx8IHR5cGVvZiBvYmogPT09ICdmdW5jdGlvbicpICYmIHR5cGVvZiBvYmoudGhlbiA9PT0gJ2Z1bmN0aW9uJ1xyXG59XHJcblxyXG5mdW5jdGlvbiBxdWV1ZSAoaG9va3MsIGRhdGEpIHtcclxuICBsZXQgcHJvbWlzZSA9IGZhbHNlO1xyXG4gIGZvciAobGV0IGkgPSAwOyBpIDwgaG9va3MubGVuZ3RoOyBpKyspIHtcclxuICAgIGNvbnN0IGhvb2sgPSBob29rc1tpXTtcclxuICAgIGlmIChwcm9taXNlKSB7XHJcbiAgICAgIHByb21pc2UgPSBQcm9taXNlLnRoZW4od3JhcHBlckhvb2soaG9vaykpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgY29uc3QgcmVzID0gaG9vayhkYXRhKTtcclxuICAgICAgaWYgKGlzUHJvbWlzZShyZXMpKSB7XHJcbiAgICAgICAgcHJvbWlzZSA9IFByb21pc2UucmVzb2x2ZShyZXMpO1xyXG4gICAgICB9XHJcbiAgICAgIGlmIChyZXMgPT09IGZhbHNlKSB7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgIHRoZW4gKCkge31cclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcbiAgcmV0dXJuIHByb21pc2UgfHwge1xyXG4gICAgdGhlbiAoY2FsbGJhY2spIHtcclxuICAgICAgcmV0dXJuIGNhbGxiYWNrKGRhdGEpXHJcbiAgICB9XHJcbiAgfVxyXG59XHJcblxyXG5mdW5jdGlvbiB3cmFwcGVyT3B0aW9ucyAoaW50ZXJjZXB0b3IsIG9wdGlvbnMgPSB7fSkge1xyXG4gIFsnc3VjY2VzcycsICdmYWlsJywgJ2NvbXBsZXRlJ10uZm9yRWFjaChuYW1lID0+IHtcclxuICAgIGlmIChBcnJheS5pc0FycmF5KGludGVyY2VwdG9yW25hbWVdKSkge1xyXG4gICAgICBjb25zdCBvbGRDYWxsYmFjayA9IG9wdGlvbnNbbmFtZV07XHJcbiAgICAgIG9wdGlvbnNbbmFtZV0gPSBmdW5jdGlvbiBjYWxsYmFja0ludGVyY2VwdG9yIChyZXMpIHtcclxuICAgICAgICBxdWV1ZShpbnRlcmNlcHRvcltuYW1lXSwgcmVzKS50aGVuKChyZXMpID0+IHtcclxuICAgICAgICAgIC8qIGVzbGludC1kaXNhYmxlIG5vLW1peGVkLW9wZXJhdG9ycyAqL1xyXG4gICAgICAgICAgcmV0dXJuIGlzRm4ob2xkQ2FsbGJhY2spICYmIG9sZENhbGxiYWNrKHJlcykgfHwgcmVzXHJcbiAgICAgICAgfSk7XHJcbiAgICAgIH07XHJcbiAgICB9XHJcbiAgfSk7XHJcbiAgcmV0dXJuIG9wdGlvbnNcclxufVxyXG5cclxuZnVuY3Rpb24gd3JhcHBlclJldHVyblZhbHVlIChtZXRob2QsIHJldHVyblZhbHVlKSB7XHJcbiAgY29uc3QgcmV0dXJuVmFsdWVIb29rcyA9IFtdO1xyXG4gIGlmIChBcnJheS5pc0FycmF5KGdsb2JhbEludGVyY2VwdG9ycy5yZXR1cm5WYWx1ZSkpIHtcclxuICAgIHJldHVyblZhbHVlSG9va3MucHVzaCguLi5nbG9iYWxJbnRlcmNlcHRvcnMucmV0dXJuVmFsdWUpO1xyXG4gIH1cclxuICBjb25zdCBpbnRlcmNlcHRvciA9IHNjb3BlZEludGVyY2VwdG9yc1ttZXRob2RdO1xyXG4gIGlmIChpbnRlcmNlcHRvciAmJiBBcnJheS5pc0FycmF5KGludGVyY2VwdG9yLnJldHVyblZhbHVlKSkge1xyXG4gICAgcmV0dXJuVmFsdWVIb29rcy5wdXNoKC4uLmludGVyY2VwdG9yLnJldHVyblZhbHVlKTtcclxuICB9XHJcbiAgcmV0dXJuVmFsdWVIb29rcy5mb3JFYWNoKGhvb2sgPT4ge1xyXG4gICAgcmV0dXJuVmFsdWUgPSBob29rKHJldHVyblZhbHVlKSB8fCByZXR1cm5WYWx1ZTtcclxuICB9KTtcclxuICByZXR1cm4gcmV0dXJuVmFsdWVcclxufVxyXG5cclxuZnVuY3Rpb24gZ2V0QXBpSW50ZXJjZXB0b3JIb29rcyAobWV0aG9kKSB7XHJcbiAgY29uc3QgaW50ZXJjZXB0b3IgPSBPYmplY3QuY3JlYXRlKG51bGwpO1xyXG4gIE9iamVjdC5rZXlzKGdsb2JhbEludGVyY2VwdG9ycykuZm9yRWFjaChob29rID0+IHtcclxuICAgIGlmIChob29rICE9PSAncmV0dXJuVmFsdWUnKSB7XHJcbiAgICAgIGludGVyY2VwdG9yW2hvb2tdID0gZ2xvYmFsSW50ZXJjZXB0b3JzW2hvb2tdLnNsaWNlKCk7XHJcbiAgICB9XHJcbiAgfSk7XHJcbiAgY29uc3Qgc2NvcGVkSW50ZXJjZXB0b3IgPSBzY29wZWRJbnRlcmNlcHRvcnNbbWV0aG9kXTtcclxuICBpZiAoc2NvcGVkSW50ZXJjZXB0b3IpIHtcclxuICAgIE9iamVjdC5rZXlzKHNjb3BlZEludGVyY2VwdG9yKS5mb3JFYWNoKGhvb2sgPT4ge1xyXG4gICAgICBpZiAoaG9vayAhPT0gJ3JldHVyblZhbHVlJykge1xyXG4gICAgICAgIGludGVyY2VwdG9yW2hvb2tdID0gKGludGVyY2VwdG9yW2hvb2tdIHx8IFtdKS5jb25jYXQoc2NvcGVkSW50ZXJjZXB0b3JbaG9va10pO1xyXG4gICAgICB9XHJcbiAgICB9KTtcclxuICB9XHJcbiAgcmV0dXJuIGludGVyY2VwdG9yXHJcbn1cclxuXHJcbmZ1bmN0aW9uIGludm9rZUFwaSAobWV0aG9kLCBhcGksIG9wdGlvbnMsIC4uLnBhcmFtcykge1xyXG4gIGNvbnN0IGludGVyY2VwdG9yID0gZ2V0QXBpSW50ZXJjZXB0b3JIb29rcyhtZXRob2QpO1xyXG4gIGlmIChpbnRlcmNlcHRvciAmJiBPYmplY3Qua2V5cyhpbnRlcmNlcHRvcikubGVuZ3RoKSB7XHJcbiAgICBpZiAoQXJyYXkuaXNBcnJheShpbnRlcmNlcHRvci5pbnZva2UpKSB7XHJcbiAgICAgIGNvbnN0IHJlcyA9IHF1ZXVlKGludGVyY2VwdG9yLmludm9rZSwgb3B0aW9ucyk7XHJcbiAgICAgIHJldHVybiByZXMudGhlbigob3B0aW9ucykgPT4ge1xyXG4gICAgICAgIHJldHVybiBhcGkod3JhcHBlck9wdGlvbnMoaW50ZXJjZXB0b3IsIG9wdGlvbnMpLCAuLi5wYXJhbXMpXHJcbiAgICAgIH0pXHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICByZXR1cm4gYXBpKHdyYXBwZXJPcHRpb25zKGludGVyY2VwdG9yLCBvcHRpb25zKSwgLi4ucGFyYW1zKVxyXG4gICAgfVxyXG4gIH1cclxuICByZXR1cm4gYXBpKG9wdGlvbnMsIC4uLnBhcmFtcylcclxufVxyXG5cclxuY29uc3QgcHJvbWlzZUludGVyY2VwdG9yID0ge1xyXG4gIHJldHVyblZhbHVlIChyZXMpIHtcclxuICAgIGlmICghaXNQcm9taXNlKHJlcykpIHtcclxuICAgICAgcmV0dXJuIHJlc1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIHJlcy50aGVuKHJlcyA9PiB7XHJcbiAgICAgIHJldHVybiByZXNbMV1cclxuICAgIH0pLmNhdGNoKHJlcyA9PiB7XHJcbiAgICAgIHJldHVybiByZXNbMF1cclxuICAgIH0pXHJcbiAgfVxyXG59O1xyXG5cclxuY29uc3QgU1lOQ19BUElfUkUgPVxyXG4gIC9eXFwkfHJlc3RvcmVHbG9iYWx8Z2V0Q3VycmVudFN1Yk5WdWV8Z2V0TWVudUJ1dHRvbkJvdW5kaW5nQ2xpZW50UmVjdHxecmVwb3J0fGludGVyY2VwdG9yc3xJbnRlcmNlcHRvciR8Z2V0U3ViTlZ1ZUJ5SWR8cmVxdWlyZU5hdGl2ZVBsdWdpbnx1cHgycHh8aGlkZUtleWJvYXJkfGNhbklVc2V8XmNyZWF0ZXxTeW5jJHxNYW5hZ2VyJHxiYXNlNjRUb0FycmF5QnVmZmVyfGFycmF5QnVmZmVyVG9CYXNlNjQvO1xyXG5cclxuY29uc3QgQ09OVEVYVF9BUElfUkUgPSAvXmNyZWF0ZXxNYW5hZ2VyJC87XHJcblxyXG5jb25zdCBDQUxMQkFDS19BUElfUkUgPSAvXm9uLztcclxuXHJcbmZ1bmN0aW9uIGlzQ29udGV4dEFwaSAobmFtZSkge1xyXG4gIHJldHVybiBDT05URVhUX0FQSV9SRS50ZXN0KG5hbWUpXHJcbn1cclxuZnVuY3Rpb24gaXNTeW5jQXBpIChuYW1lKSB7XHJcbiAgcmV0dXJuIFNZTkNfQVBJX1JFLnRlc3QobmFtZSlcclxufVxyXG5cclxuZnVuY3Rpb24gaXNDYWxsYmFja0FwaSAobmFtZSkge1xyXG4gIHJldHVybiBDQUxMQkFDS19BUElfUkUudGVzdChuYW1lKSAmJiBuYW1lICE9PSAnb25QdXNoJ1xyXG59XHJcblxyXG5mdW5jdGlvbiBoYW5kbGVQcm9taXNlIChwcm9taXNlKSB7XHJcbiAgcmV0dXJuIHByb21pc2UudGhlbihkYXRhID0+IHtcclxuICAgIHJldHVybiBbbnVsbCwgZGF0YV1cclxuICB9KVxyXG4gICAgLmNhdGNoKGVyciA9PiBbZXJyXSlcclxufVxyXG5cclxuZnVuY3Rpb24gc2hvdWxkUHJvbWlzZSAobmFtZSkge1xyXG4gIGlmIChcclxuICAgIGlzQ29udGV4dEFwaShuYW1lKSB8fFxyXG4gICAgaXNTeW5jQXBpKG5hbWUpIHx8XHJcbiAgICBpc0NhbGxiYWNrQXBpKG5hbWUpXHJcbiAgKSB7XHJcbiAgICByZXR1cm4gZmFsc2VcclxuICB9XHJcbiAgcmV0dXJuIHRydWVcclxufVxyXG5cclxuZnVuY3Rpb24gcHJvbWlzaWZ5IChuYW1lLCBhcGkpIHtcclxuICBpZiAoIXNob3VsZFByb21pc2UobmFtZSkpIHtcclxuICAgIHJldHVybiBhcGlcclxuICB9XHJcbiAgcmV0dXJuIGZ1bmN0aW9uIHByb21pc2VBcGkgKG9wdGlvbnMgPSB7fSwgLi4ucGFyYW1zKSB7XHJcbiAgICBpZiAoaXNGbihvcHRpb25zLnN1Y2Nlc3MpIHx8IGlzRm4ob3B0aW9ucy5mYWlsKSB8fCBpc0ZuKG9wdGlvbnMuY29tcGxldGUpKSB7XHJcbiAgICAgIHJldHVybiB3cmFwcGVyUmV0dXJuVmFsdWUobmFtZSwgaW52b2tlQXBpKG5hbWUsIGFwaSwgb3B0aW9ucywgLi4ucGFyYW1zKSlcclxuICAgIH1cclxuICAgIHJldHVybiB3cmFwcGVyUmV0dXJuVmFsdWUobmFtZSwgaGFuZGxlUHJvbWlzZShuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XHJcbiAgICAgIGludm9rZUFwaShuYW1lLCBhcGksIE9iamVjdC5hc3NpZ24oe30sIG9wdGlvbnMsIHtcclxuICAgICAgICBzdWNjZXNzOiByZXNvbHZlLFxyXG4gICAgICAgIGZhaWw6IHJlamVjdFxyXG4gICAgICB9KSwgLi4ucGFyYW1zKTtcclxuICAgICAgLyogZXNsaW50LWRpc2FibGUgbm8tZXh0ZW5kLW5hdGl2ZSAqL1xyXG4gICAgICBpZiAoIVByb21pc2UucHJvdG90eXBlLmZpbmFsbHkpIHtcclxuICAgICAgICBQcm9taXNlLnByb3RvdHlwZS5maW5hbGx5ID0gZnVuY3Rpb24gKGNhbGxiYWNrKSB7XHJcbiAgICAgICAgICBjb25zdCBwcm9taXNlID0gdGhpcy5jb25zdHJ1Y3RvcjtcclxuICAgICAgICAgIHJldHVybiB0aGlzLnRoZW4oXHJcbiAgICAgICAgICAgIHZhbHVlID0+IHByb21pc2UucmVzb2x2ZShjYWxsYmFjaygpKS50aGVuKCgpID0+IHZhbHVlKSxcclxuICAgICAgICAgICAgcmVhc29uID0+IHByb21pc2UucmVzb2x2ZShjYWxsYmFjaygpKS50aGVuKCgpID0+IHtcclxuICAgICAgICAgICAgICB0aHJvdyByZWFzb25cclxuICAgICAgICAgICAgfSlcclxuICAgICAgICAgIClcclxuICAgICAgICB9O1xyXG4gICAgICB9XHJcbiAgICB9KSkpXHJcbiAgfVxyXG59XHJcblxyXG5jb25zdCBFUFMgPSAxZS00O1xyXG5jb25zdCBCQVNFX0RFVklDRV9XSURUSCA9IDc1MDtcclxubGV0IGlzSU9TID0gZmFsc2U7XHJcbmxldCBkZXZpY2VXaWR0aCA9IDA7XHJcbmxldCBkZXZpY2VEUFIgPSAwO1xyXG5cclxuZnVuY3Rpb24gY2hlY2tEZXZpY2VXaWR0aCAoKSB7XHJcbiAgY29uc3Qge1xyXG4gICAgcGxhdGZvcm0sXHJcbiAgICBwaXhlbFJhdGlvLFxyXG4gICAgd2luZG93V2lkdGhcclxuICB9ID0gd3guZ2V0U3lzdGVtSW5mb1N5bmMoKTsgLy8gdW5pPT53eCBydW50aW1lIOe8luivkeebruagh+aYryB1bmkg5a+56LGh77yM5YaF6YOo5LiN5YWB6K6455u05o6l5L2/55SoIHVuaVxyXG5cclxuICBkZXZpY2VXaWR0aCA9IHdpbmRvd1dpZHRoO1xyXG4gIGRldmljZURQUiA9IHBpeGVsUmF0aW87XHJcbiAgaXNJT1MgPSBwbGF0Zm9ybSA9PT0gJ2lvcyc7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIHVweDJweCAobnVtYmVyLCBuZXdEZXZpY2VXaWR0aCkge1xyXG4gIGlmIChkZXZpY2VXaWR0aCA9PT0gMCkge1xyXG4gICAgY2hlY2tEZXZpY2VXaWR0aCgpO1xyXG4gIH1cclxuXHJcbiAgbnVtYmVyID0gTnVtYmVyKG51bWJlcik7XHJcbiAgaWYgKG51bWJlciA9PT0gMCkge1xyXG4gICAgcmV0dXJuIDBcclxuICB9XHJcbiAgbGV0IHJlc3VsdCA9IChudW1iZXIgLyBCQVNFX0RFVklDRV9XSURUSCkgKiAobmV3RGV2aWNlV2lkdGggfHwgZGV2aWNlV2lkdGgpO1xyXG4gIGlmIChyZXN1bHQgPCAwKSB7XHJcbiAgICByZXN1bHQgPSAtcmVzdWx0O1xyXG4gIH1cclxuICByZXN1bHQgPSBNYXRoLmZsb29yKHJlc3VsdCArIEVQUyk7XHJcbiAgaWYgKHJlc3VsdCA9PT0gMCkge1xyXG4gICAgaWYgKGRldmljZURQUiA9PT0gMSB8fCAhaXNJT1MpIHtcclxuICAgICAgcmV0dXJuIDFcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHJldHVybiAwLjVcclxuICAgIH1cclxuICB9XHJcbiAgcmV0dXJuIG51bWJlciA8IDAgPyAtcmVzdWx0IDogcmVzdWx0XHJcbn1cclxuXHJcbmNvbnN0IGludGVyY2VwdG9ycyA9IHtcclxuICBwcm9taXNlSW50ZXJjZXB0b3JcclxufTtcclxuXHJcblxyXG5cclxudmFyIGJhc2VBcGkgPSAvKiNfX1BVUkVfXyovT2JqZWN0LmZyZWV6ZSh7XHJcbiAgX19wcm90b19fOiBudWxsLFxyXG4gIHVweDJweDogdXB4MnB4LFxyXG4gIGludGVyY2VwdG9yczogaW50ZXJjZXB0b3JzLFxyXG4gIGFkZEludGVyY2VwdG9yOiBhZGRJbnRlcmNlcHRvcixcclxuICByZW1vdmVJbnRlcmNlcHRvcjogcmVtb3ZlSW50ZXJjZXB0b3JcclxufSk7XHJcblxyXG5jb25zdCBwcm90b2NvbHMgPSB7fTtcclxuY29uc3QgdG9kb3MgPSBbXTtcclxuY29uc3QgY2FuSVVzZXMgPSBbXTtcclxuXHJcbmNvbnN0IENBTExCQUNLUyA9IFsnc3VjY2VzcycsICdmYWlsJywgJ2NhbmNlbCcsICdjb21wbGV0ZSddO1xyXG5cclxuZnVuY3Rpb24gcHJvY2Vzc0NhbGxiYWNrIChtZXRob2ROYW1lLCBtZXRob2QsIHJldHVyblZhbHVlKSB7XHJcbiAgcmV0dXJuIGZ1bmN0aW9uIChyZXMpIHtcclxuICAgIHJldHVybiBtZXRob2QocHJvY2Vzc1JldHVyblZhbHVlKG1ldGhvZE5hbWUsIHJlcywgcmV0dXJuVmFsdWUpKVxyXG4gIH1cclxufVxyXG5cclxuZnVuY3Rpb24gcHJvY2Vzc0FyZ3MgKG1ldGhvZE5hbWUsIGZyb21BcmdzLCBhcmdzT3B0aW9uID0ge30sIHJldHVyblZhbHVlID0ge30sIGtlZXBGcm9tQXJncyA9IGZhbHNlKSB7XHJcbiAgaWYgKGlzUGxhaW5PYmplY3QoZnJvbUFyZ3MpKSB7IC8vIOS4gOiIrCBhcGkg55qE5Y+C5pWw6Kej5p6QXHJcbiAgICBjb25zdCB0b0FyZ3MgPSBrZWVwRnJvbUFyZ3MgPT09IHRydWUgPyBmcm9tQXJncyA6IHt9OyAvLyByZXR1cm5WYWx1ZSDkuLogZmFsc2Ug5pe277yM6K+05piO5piv5qC85byP5YyW6L+U5Zue5YC877yM55u05o6l5Zyo6L+U5Zue5YC85a+56LGh5LiK5L+u5pS56LWL5YC8XHJcbiAgICBpZiAoaXNGbihhcmdzT3B0aW9uKSkge1xyXG4gICAgICBhcmdzT3B0aW9uID0gYXJnc09wdGlvbihmcm9tQXJncywgdG9BcmdzKSB8fCB7fTtcclxuICAgIH1cclxuICAgIGZvciAobGV0IGtleSBpbiBmcm9tQXJncykge1xyXG4gICAgICBpZiAoaGFzT3duKGFyZ3NPcHRpb24sIGtleSkpIHtcclxuICAgICAgICBsZXQga2V5T3B0aW9uID0gYXJnc09wdGlvbltrZXldO1xyXG4gICAgICAgIGlmIChpc0ZuKGtleU9wdGlvbikpIHtcclxuICAgICAgICAgIGtleU9wdGlvbiA9IGtleU9wdGlvbihmcm9tQXJnc1trZXldLCBmcm9tQXJncywgdG9BcmdzKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKCFrZXlPcHRpb24pIHsgLy8g5LiN5pSv5oyB55qE5Y+C5pWwXHJcbiAgICAgICAgICBjb25zb2xlLndhcm4oYGFwcC1wbHVzICR7bWV0aG9kTmFtZX3mmoLkuI3mlK/mjIEke2tleX1gKTtcclxuICAgICAgICB9IGVsc2UgaWYgKGlzU3RyKGtleU9wdGlvbikpIHsgLy8g6YeN5YaZ5Y+C5pWwIGtleVxyXG4gICAgICAgICAgdG9BcmdzW2tleU9wdGlvbl0gPSBmcm9tQXJnc1trZXldO1xyXG4gICAgICAgIH0gZWxzZSBpZiAoaXNQbGFpbk9iamVjdChrZXlPcHRpb24pKSB7IC8vIHtuYW1lOm5ld05hbWUsdmFsdWU6dmFsdWV95Y+v6YeN5paw5oyH5a6a5Y+C5pWwIGtleTp2YWx1ZVxyXG4gICAgICAgICAgdG9BcmdzW2tleU9wdGlvbi5uYW1lID8ga2V5T3B0aW9uLm5hbWUgOiBrZXldID0ga2V5T3B0aW9uLnZhbHVlO1xyXG4gICAgICAgIH1cclxuICAgICAgfSBlbHNlIGlmIChDQUxMQkFDS1MuaW5kZXhPZihrZXkpICE9PSAtMSkge1xyXG4gICAgICAgIHRvQXJnc1trZXldID0gcHJvY2Vzc0NhbGxiYWNrKG1ldGhvZE5hbWUsIGZyb21BcmdzW2tleV0sIHJldHVyblZhbHVlKTtcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICBpZiAoIWtlZXBGcm9tQXJncykge1xyXG4gICAgICAgICAgdG9BcmdzW2tleV0gPSBmcm9tQXJnc1trZXldO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfVxyXG4gICAgcmV0dXJuIHRvQXJnc1xyXG4gIH0gZWxzZSBpZiAoaXNGbihmcm9tQXJncykpIHtcclxuICAgIGZyb21BcmdzID0gcHJvY2Vzc0NhbGxiYWNrKG1ldGhvZE5hbWUsIGZyb21BcmdzLCByZXR1cm5WYWx1ZSk7XHJcbiAgfVxyXG4gIHJldHVybiBmcm9tQXJnc1xyXG59XHJcblxyXG5mdW5jdGlvbiBwcm9jZXNzUmV0dXJuVmFsdWUgKG1ldGhvZE5hbWUsIHJlcywgcmV0dXJuVmFsdWUsIGtlZXBSZXR1cm5WYWx1ZSA9IGZhbHNlKSB7XHJcbiAgaWYgKGlzRm4ocHJvdG9jb2xzLnJldHVyblZhbHVlKSkgeyAvLyDlpITnkIbpgJrnlKggcmV0dXJuVmFsdWVcclxuICAgIHJlcyA9IHByb3RvY29scy5yZXR1cm5WYWx1ZShtZXRob2ROYW1lLCByZXMpO1xyXG4gIH1cclxuICByZXR1cm4gcHJvY2Vzc0FyZ3MobWV0aG9kTmFtZSwgcmVzLCByZXR1cm5WYWx1ZSwge30sIGtlZXBSZXR1cm5WYWx1ZSlcclxufVxyXG5cclxuZnVuY3Rpb24gd3JhcHBlciAobWV0aG9kTmFtZSwgbWV0aG9kKSB7XHJcbiAgaWYgKGhhc093bihwcm90b2NvbHMsIG1ldGhvZE5hbWUpKSB7XHJcbiAgICBjb25zdCBwcm90b2NvbCA9IHByb3RvY29sc1ttZXRob2ROYW1lXTtcclxuICAgIGlmICghcHJvdG9jb2wpIHsgLy8g5pqC5LiN5pSv5oyB55qEIGFwaVxyXG4gICAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIGNvbnNvbGUuZXJyb3IoYGFwcC1wbHVzIOaaguS4jeaUr+aMgSR7bWV0aG9kTmFtZX1gKTtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gICAgcmV0dXJuIGZ1bmN0aW9uIChhcmcxLCBhcmcyKSB7IC8vIOebruWJjSBhcGkg5pyA5aSa5Lik5Liq5Y+C5pWwXHJcbiAgICAgIGxldCBvcHRpb25zID0gcHJvdG9jb2w7XHJcbiAgICAgIGlmIChpc0ZuKHByb3RvY29sKSkge1xyXG4gICAgICAgIG9wdGlvbnMgPSBwcm90b2NvbChhcmcxKTtcclxuICAgICAgfVxyXG5cclxuICAgICAgYXJnMSA9IHByb2Nlc3NBcmdzKG1ldGhvZE5hbWUsIGFyZzEsIG9wdGlvbnMuYXJncywgb3B0aW9ucy5yZXR1cm5WYWx1ZSk7XHJcblxyXG4gICAgICBjb25zdCBhcmdzID0gW2FyZzFdO1xyXG4gICAgICBpZiAodHlwZW9mIGFyZzIgIT09ICd1bmRlZmluZWQnKSB7XHJcbiAgICAgICAgYXJncy5wdXNoKGFyZzIpO1xyXG4gICAgICB9XHJcbiAgICAgIGNvbnN0IHJldHVyblZhbHVlID0gd3hbb3B0aW9ucy5uYW1lIHx8IG1ldGhvZE5hbWVdLmFwcGx5KHd4LCBhcmdzKTtcclxuICAgICAgaWYgKGlzU3luY0FwaShtZXRob2ROYW1lKSkgeyAvLyDlkIzmraUgYXBpXHJcbiAgICAgICAgcmV0dXJuIHByb2Nlc3NSZXR1cm5WYWx1ZShtZXRob2ROYW1lLCByZXR1cm5WYWx1ZSwgb3B0aW9ucy5yZXR1cm5WYWx1ZSwgaXNDb250ZXh0QXBpKG1ldGhvZE5hbWUpKVxyXG4gICAgICB9XHJcbiAgICAgIHJldHVybiByZXR1cm5WYWx1ZVxyXG4gICAgfVxyXG4gIH1cclxuICByZXR1cm4gbWV0aG9kXHJcbn1cclxuXHJcbmNvbnN0IHRvZG9BcGlzID0gT2JqZWN0LmNyZWF0ZShudWxsKTtcclxuXHJcbmNvbnN0IFRPRE9TID0gW1xyXG4gICdvblRhYkJhck1pZEJ1dHRvblRhcCcsXHJcbiAgJ3N1YnNjcmliZVB1c2gnLFxyXG4gICd1bnN1YnNjcmliZVB1c2gnLFxyXG4gICdvblB1c2gnLFxyXG4gICdvZmZQdXNoJyxcclxuICAnc2hhcmUnXHJcbl07XHJcblxyXG5mdW5jdGlvbiBjcmVhdGVUb2RvQXBpIChuYW1lKSB7XHJcbiAgcmV0dXJuIGZ1bmN0aW9uIHRvZG9BcGkgKHtcclxuICAgIGZhaWwsXHJcbiAgICBjb21wbGV0ZVxyXG4gIH0pIHtcclxuICAgIGNvbnN0IHJlcyA9IHtcclxuICAgICAgZXJyTXNnOiBgJHtuYW1lfTpmYWlsOuaaguS4jeaUr+aMgSAke25hbWV9IOaWueazlWBcclxuICAgIH07XHJcbiAgICBpc0ZuKGZhaWwpICYmIGZhaWwocmVzKTtcclxuICAgIGlzRm4oY29tcGxldGUpICYmIGNvbXBsZXRlKHJlcyk7XHJcbiAgfVxyXG59XHJcblxyXG5UT0RPUy5mb3JFYWNoKGZ1bmN0aW9uIChuYW1lKSB7XHJcbiAgdG9kb0FwaXNbbmFtZV0gPSBjcmVhdGVUb2RvQXBpKG5hbWUpO1xyXG59KTtcclxuXHJcbmNvbnN0IGdldEVtaXR0ZXIgPSAoZnVuY3Rpb24gKCkge1xyXG4gIGlmICh0eXBlb2YgZ2V0VW5pRW1pdHRlciA9PT0gJ2Z1bmN0aW9uJykge1xyXG4gICAgLyogZXNsaW50LWRpc2FibGUgbm8tdW5kZWYgKi9cclxuICAgIHJldHVybiBnZXRVbmlFbWl0dGVyXHJcbiAgfVxyXG4gIGxldCBFbWl0dGVyO1xyXG4gIHJldHVybiBmdW5jdGlvbiBnZXRVbmlFbWl0dGVyICgpIHtcclxuICAgIGlmICghRW1pdHRlcikge1xyXG4gICAgICBFbWl0dGVyID0gbmV3IFZ1ZSgpO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIEVtaXR0ZXJcclxuICB9XHJcbn0pKCk7XHJcblxyXG5mdW5jdGlvbiBhcHBseSAoY3R4LCBtZXRob2QsIGFyZ3MpIHtcclxuICByZXR1cm4gY3R4W21ldGhvZF0uYXBwbHkoY3R4LCBhcmdzKVxyXG59XHJcblxyXG5mdW5jdGlvbiAkb24gKCkge1xyXG4gIHJldHVybiBhcHBseShnZXRFbWl0dGVyKCksICckb24nLCBbLi4uYXJndW1lbnRzXSlcclxufVxyXG5mdW5jdGlvbiAkb2ZmICgpIHtcclxuICByZXR1cm4gYXBwbHkoZ2V0RW1pdHRlcigpLCAnJG9mZicsIFsuLi5hcmd1bWVudHNdKVxyXG59XHJcbmZ1bmN0aW9uICRvbmNlICgpIHtcclxuICByZXR1cm4gYXBwbHkoZ2V0RW1pdHRlcigpLCAnJG9uY2UnLCBbLi4uYXJndW1lbnRzXSlcclxufVxyXG5mdW5jdGlvbiAkZW1pdCAoKSB7XHJcbiAgcmV0dXJuIGFwcGx5KGdldEVtaXR0ZXIoKSwgJyRlbWl0JywgWy4uLmFyZ3VtZW50c10pXHJcbn1cclxuXHJcbnZhciBldmVudEFwaSA9IC8qI19fUFVSRV9fKi9PYmplY3QuZnJlZXplKHtcclxuICBfX3Byb3RvX186IG51bGwsXHJcbiAgJG9uOiAkb24sXHJcbiAgJG9mZjogJG9mZixcclxuICAkb25jZTogJG9uY2UsXHJcbiAgJGVtaXQ6ICRlbWl0XHJcbn0pO1xyXG5cclxuZnVuY3Rpb24gcmVxdWlyZU5hdGl2ZVBsdWdpbiAocGx1Z2luTmFtZSkge1xyXG4gIC8qIGVzbGludC1kaXNhYmxlIG5vLXVuZGVmICovXHJcbiAgaWYgKHR5cGVvZiB3ZWV4ICE9PSAndW5kZWZpbmVkJykge1xyXG4gICAgcmV0dXJuIHdlZXgucmVxdWlyZU1vZHVsZShwbHVnaW5OYW1lKVxyXG4gIH1cclxuICAvKiBlc2xpbnQtZGlzYWJsZSBuby11bmRlZiAqL1xyXG4gIHJldHVybiBfX3JlcXVpcmVOYXRpdmVQbHVnaW5fXyhwbHVnaW5OYW1lKVxyXG59XHJcblxyXG5mdW5jdGlvbiB3cmFwcGVyJDEgKHdlYnZpZXcpIHtcclxuICB3ZWJ2aWV3LiRwcm9jZXNzZWQgPSB0cnVlO1xyXG5cclxuICB3ZWJ2aWV3LnBvc3RNZXNzYWdlID0gZnVuY3Rpb24gKGRhdGEpIHtcclxuICAgIHBsdXMud2Vidmlldy5wb3N0TWVzc2FnZVRvVW5pTlZpZXcoe1xyXG4gICAgICB0eXBlOiAnVW5pQXBwU3ViTlZ1ZScsXHJcbiAgICAgIGRhdGFcclxuICAgIH0sIHdlYnZpZXcuaWQpO1xyXG4gIH07XHJcbiAgbGV0IGNhbGxiYWNrcyA9IFtdO1xyXG4gIHdlYnZpZXcub25NZXNzYWdlID0gZnVuY3Rpb24gKGNhbGxiYWNrKSB7XHJcbiAgICBjYWxsYmFja3MucHVzaChjYWxsYmFjayk7XHJcbiAgfTtcclxuICB3ZWJ2aWV3LiRjb25zdW1lTWVzc2FnZSA9IGZ1bmN0aW9uIChlKSB7XHJcbiAgICBjYWxsYmFja3MuZm9yRWFjaChjYWxsYmFjayA9PiBjYWxsYmFjayhlKSk7XHJcbiAgfTtcclxuXHJcbiAgaWYgKCF3ZWJ2aWV3Ll9fdW5pYXBwX21hc2tfaWQpIHtcclxuICAgIHJldHVyblxyXG4gIH1cclxuICBjb25zdCBtYXNrQ29sb3IgPSB3ZWJ2aWV3Ll9fdW5pYXBwX21hc2s7XHJcbiAgbGV0IG1hc2tXZWJ2aWV3ID0gd2Vidmlldy5fX3VuaWFwcF9tYXNrX2lkID09PSAnMCcgPyB7XHJcbiAgICBzZXRTdHlsZSAoe1xyXG4gICAgICBtYXNrXHJcbiAgICB9KSB7XHJcbiAgICAgIHJlcXVpcmVOYXRpdmVQbHVnaW4oJ3VuaS10YWJ2aWV3Jykuc2V0TWFzayh7XHJcbiAgICAgICAgY29sb3I6IG1hc2tcclxuICAgICAgfSk7XHJcbiAgICB9XHJcbiAgfSA6IHBsdXMud2Vidmlldy5nZXRXZWJ2aWV3QnlJZCh3ZWJ2aWV3Ll9fdW5pYXBwX21hc2tfaWQpO1xyXG4gIGNvbnN0IG9sZFNob3cgPSB3ZWJ2aWV3LnNob3c7XHJcbiAgY29uc3Qgb2xkSGlkZSA9IHdlYnZpZXcuaGlkZTtcclxuICBjb25zdCBvbGRDbG9zZSA9IHdlYnZpZXcuY2xvc2U7XHJcblxyXG4gIGNvbnN0IHNob3dNYXNrID0gZnVuY3Rpb24gKCkge1xyXG4gICAgbWFza1dlYnZpZXcuc2V0U3R5bGUoe1xyXG4gICAgICBtYXNrOiBtYXNrQ29sb3JcclxuICAgIH0pO1xyXG4gIH07XHJcbiAgY29uc3QgY2xvc2VNYXNrID0gZnVuY3Rpb24gKCkge1xyXG4gICAgbWFza1dlYnZpZXcuc2V0U3R5bGUoe1xyXG4gICAgICBtYXNrOiAnbm9uZSdcclxuICAgIH0pO1xyXG4gIH07XHJcbiAgd2Vidmlldy5zaG93ID0gZnVuY3Rpb24gKC4uLmFyZ3MpIHtcclxuICAgIHNob3dNYXNrKCk7XHJcbiAgICByZXR1cm4gb2xkU2hvdy5hcHBseSh3ZWJ2aWV3LCBhcmdzKVxyXG4gIH07XHJcbiAgd2Vidmlldy5oaWRlID0gZnVuY3Rpb24gKC4uLmFyZ3MpIHtcclxuICAgIGNsb3NlTWFzaygpO1xyXG4gICAgcmV0dXJuIG9sZEhpZGUuYXBwbHkod2VidmlldywgYXJncylcclxuICB9O1xyXG4gIHdlYnZpZXcuY2xvc2UgPSBmdW5jdGlvbiAoLi4uYXJncykge1xyXG4gICAgY2xvc2VNYXNrKCk7XHJcbiAgICBjYWxsYmFja3MgPSBbXTtcclxuICAgIHJldHVybiBvbGRDbG9zZS5hcHBseSh3ZWJ2aWV3LCBhcmdzKVxyXG4gIH07XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGdldFN1Yk5WdWVCeUlkIChpZCkge1xyXG4gIGNvbnN0IHdlYnZpZXcgPSBwbHVzLndlYnZpZXcuZ2V0V2Vidmlld0J5SWQoaWQpO1xyXG4gIGlmICh3ZWJ2aWV3ICYmICF3ZWJ2aWV3LiRwcm9jZXNzZWQpIHtcclxuICAgIHdyYXBwZXIkMSh3ZWJ2aWV3KTtcclxuICB9XHJcbiAgcmV0dXJuIHdlYnZpZXdcclxufVxyXG5cclxuXHJcblxyXG52YXIgYXBpID0gLyojX19QVVJFX18qL09iamVjdC5mcmVlemUoe1xyXG4gIF9fcHJvdG9fXzogbnVsbCxcclxuICBnZXRTdWJOVnVlQnlJZDogZ2V0U3ViTlZ1ZUJ5SWQsXHJcbiAgcmVxdWlyZU5hdGl2ZVBsdWdpbjogcmVxdWlyZU5hdGl2ZVBsdWdpblxyXG59KTtcclxuXHJcbmNvbnN0IE1QUGFnZSA9IFBhZ2U7XHJcbmNvbnN0IE1QQ29tcG9uZW50ID0gQ29tcG9uZW50O1xyXG5cclxuY29uc3QgY3VzdG9taXplUkUgPSAvOi9nO1xyXG5cclxuY29uc3QgY3VzdG9taXplID0gY2FjaGVkKChzdHIpID0+IHtcclxuICByZXR1cm4gY2FtZWxpemUoc3RyLnJlcGxhY2UoY3VzdG9taXplUkUsICctJykpXHJcbn0pO1xyXG5cclxuZnVuY3Rpb24gaW5pdFRyaWdnZXJFdmVudCAobXBJbnN0YW5jZSkge1xyXG4gIHtcclxuICAgIGlmICghd3guY2FuSVVzZSgnbmV4dFRpY2snKSkge1xyXG4gICAgICByZXR1cm5cclxuICAgIH1cclxuICB9XHJcbiAgY29uc3Qgb2xkVHJpZ2dlckV2ZW50ID0gbXBJbnN0YW5jZS50cmlnZ2VyRXZlbnQ7XHJcbiAgbXBJbnN0YW5jZS50cmlnZ2VyRXZlbnQgPSBmdW5jdGlvbiAoZXZlbnQsIC4uLmFyZ3MpIHtcclxuICAgIHJldHVybiBvbGRUcmlnZ2VyRXZlbnQuYXBwbHkobXBJbnN0YW5jZSwgW2N1c3RvbWl6ZShldmVudCksIC4uLmFyZ3NdKVxyXG4gIH07XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGluaXRIb29rIChuYW1lLCBvcHRpb25zKSB7XHJcbiAgY29uc3Qgb2xkSG9vayA9IG9wdGlvbnNbbmFtZV07XHJcbiAgaWYgKCFvbGRIb29rKSB7XHJcbiAgICBvcHRpb25zW25hbWVdID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICBpbml0VHJpZ2dlckV2ZW50KHRoaXMpO1xyXG4gICAgfTtcclxuICB9IGVsc2Uge1xyXG4gICAgb3B0aW9uc1tuYW1lXSA9IGZ1bmN0aW9uICguLi5hcmdzKSB7XHJcbiAgICAgIGluaXRUcmlnZ2VyRXZlbnQodGhpcyk7XHJcbiAgICAgIHJldHVybiBvbGRIb29rLmFwcGx5KHRoaXMsIGFyZ3MpXHJcbiAgICB9O1xyXG4gIH1cclxufVxyXG5cclxuUGFnZSA9IGZ1bmN0aW9uIChvcHRpb25zID0ge30pIHtcclxuICBpbml0SG9vaygnb25Mb2FkJywgb3B0aW9ucyk7XHJcbiAgcmV0dXJuIE1QUGFnZShvcHRpb25zKVxyXG59O1xyXG5cclxuQ29tcG9uZW50ID0gZnVuY3Rpb24gKG9wdGlvbnMgPSB7fSkge1xyXG4gIGluaXRIb29rKCdjcmVhdGVkJywgb3B0aW9ucyk7XHJcbiAgcmV0dXJuIE1QQ29tcG9uZW50KG9wdGlvbnMpXHJcbn07XHJcblxyXG5jb25zdCBQQUdFX0VWRU5UX0hPT0tTID0gW1xyXG4gICdvblB1bGxEb3duUmVmcmVzaCcsXHJcbiAgJ29uUmVhY2hCb3R0b20nLFxyXG4gICdvblNoYXJlQXBwTWVzc2FnZScsXHJcbiAgJ29uUGFnZVNjcm9sbCcsXHJcbiAgJ29uUmVzaXplJyxcclxuICAnb25UYWJJdGVtVGFwJ1xyXG5dO1xyXG5cclxuZnVuY3Rpb24gaW5pdE1vY2tzICh2bSwgbW9ja3MpIHtcclxuICBjb25zdCBtcEluc3RhbmNlID0gdm0uJG1wW3ZtLm1wVHlwZV07XHJcbiAgbW9ja3MuZm9yRWFjaChtb2NrID0+IHtcclxuICAgIGlmIChoYXNPd24obXBJbnN0YW5jZSwgbW9jaykpIHtcclxuICAgICAgdm1bbW9ja10gPSBtcEluc3RhbmNlW21vY2tdO1xyXG4gICAgfVxyXG4gIH0pO1xyXG59XHJcblxyXG5mdW5jdGlvbiBoYXNIb29rIChob29rLCB2dWVPcHRpb25zKSB7XHJcbiAgaWYgKCF2dWVPcHRpb25zKSB7XHJcbiAgICByZXR1cm4gdHJ1ZVxyXG4gIH1cclxuXHJcbiAgaWYgKFZ1ZS5vcHRpb25zICYmIEFycmF5LmlzQXJyYXkoVnVlLm9wdGlvbnNbaG9va10pKSB7XHJcbiAgICByZXR1cm4gdHJ1ZVxyXG4gIH1cclxuXHJcbiAgdnVlT3B0aW9ucyA9IHZ1ZU9wdGlvbnMuZGVmYXVsdCB8fCB2dWVPcHRpb25zO1xyXG5cclxuICBpZiAoaXNGbih2dWVPcHRpb25zKSkge1xyXG4gICAgaWYgKGlzRm4odnVlT3B0aW9ucy5leHRlbmRPcHRpb25zW2hvb2tdKSkge1xyXG4gICAgICByZXR1cm4gdHJ1ZVxyXG4gICAgfVxyXG4gICAgaWYgKHZ1ZU9wdGlvbnMuc3VwZXIgJiZcclxuICAgICAgdnVlT3B0aW9ucy5zdXBlci5vcHRpb25zICYmXHJcbiAgICAgIEFycmF5LmlzQXJyYXkodnVlT3B0aW9ucy5zdXBlci5vcHRpb25zW2hvb2tdKSkge1xyXG4gICAgICByZXR1cm4gdHJ1ZVxyXG4gICAgfVxyXG4gICAgcmV0dXJuIGZhbHNlXHJcbiAgfVxyXG5cclxuICBpZiAoaXNGbih2dWVPcHRpb25zW2hvb2tdKSkge1xyXG4gICAgcmV0dXJuIHRydWVcclxuICB9XHJcbiAgY29uc3QgbWl4aW5zID0gdnVlT3B0aW9ucy5taXhpbnM7XHJcbiAgaWYgKEFycmF5LmlzQXJyYXkobWl4aW5zKSkge1xyXG4gICAgcmV0dXJuICEhbWl4aW5zLmZpbmQobWl4aW4gPT4gaGFzSG9vayhob29rLCBtaXhpbikpXHJcbiAgfVxyXG59XHJcblxyXG5mdW5jdGlvbiBpbml0SG9va3MgKG1wT3B0aW9ucywgaG9va3MsIHZ1ZU9wdGlvbnMpIHtcclxuICBob29rcy5mb3JFYWNoKGhvb2sgPT4ge1xyXG4gICAgaWYgKGhhc0hvb2soaG9vaywgdnVlT3B0aW9ucykpIHtcclxuICAgICAgbXBPcHRpb25zW2hvb2tdID0gZnVuY3Rpb24gKGFyZ3MpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy4kdm0gJiYgdGhpcy4kdm0uX19jYWxsX2hvb2soaG9vaywgYXJncylcclxuICAgICAgfTtcclxuICAgIH1cclxuICB9KTtcclxufVxyXG5cclxuZnVuY3Rpb24gaW5pdFZ1ZUNvbXBvbmVudCAoVnVlLCB2dWVPcHRpb25zKSB7XHJcbiAgdnVlT3B0aW9ucyA9IHZ1ZU9wdGlvbnMuZGVmYXVsdCB8fCB2dWVPcHRpb25zO1xyXG4gIGxldCBWdWVDb21wb25lbnQ7XHJcbiAgaWYgKGlzRm4odnVlT3B0aW9ucykpIHtcclxuICAgIFZ1ZUNvbXBvbmVudCA9IHZ1ZU9wdGlvbnM7XHJcbiAgICB2dWVPcHRpb25zID0gVnVlQ29tcG9uZW50LmV4dGVuZE9wdGlvbnM7XHJcbiAgfSBlbHNlIHtcclxuICAgIFZ1ZUNvbXBvbmVudCA9IFZ1ZS5leHRlbmQodnVlT3B0aW9ucyk7XHJcbiAgfVxyXG4gIHJldHVybiBbVnVlQ29tcG9uZW50LCB2dWVPcHRpb25zXVxyXG59XHJcblxyXG5mdW5jdGlvbiBpbml0U2xvdHMgKHZtLCB2dWVTbG90cykge1xyXG4gIGlmIChBcnJheS5pc0FycmF5KHZ1ZVNsb3RzKSAmJiB2dWVTbG90cy5sZW5ndGgpIHtcclxuICAgIGNvbnN0ICRzbG90cyA9IE9iamVjdC5jcmVhdGUobnVsbCk7XHJcbiAgICB2dWVTbG90cy5mb3JFYWNoKHNsb3ROYW1lID0+IHtcclxuICAgICAgJHNsb3RzW3Nsb3ROYW1lXSA9IHRydWU7XHJcbiAgICB9KTtcclxuICAgIHZtLiRzY29wZWRTbG90cyA9IHZtLiRzbG90cyA9ICRzbG90cztcclxuICB9XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGluaXRWdWVJZHMgKHZ1ZUlkcywgbXBJbnN0YW5jZSkge1xyXG4gIHZ1ZUlkcyA9ICh2dWVJZHMgfHwgJycpLnNwbGl0KCcsJyk7XHJcbiAgY29uc3QgbGVuID0gdnVlSWRzLmxlbmd0aDtcclxuXHJcbiAgaWYgKGxlbiA9PT0gMSkge1xyXG4gICAgbXBJbnN0YW5jZS5fJHZ1ZUlkID0gdnVlSWRzWzBdO1xyXG4gIH0gZWxzZSBpZiAobGVuID09PSAyKSB7XHJcbiAgICBtcEluc3RhbmNlLl8kdnVlSWQgPSB2dWVJZHNbMF07XHJcbiAgICBtcEluc3RhbmNlLl8kdnVlUGlkID0gdnVlSWRzWzFdO1xyXG4gIH1cclxufVxyXG5cclxuZnVuY3Rpb24gaW5pdERhdGEgKHZ1ZU9wdGlvbnMsIGNvbnRleHQpIHtcclxuICBsZXQgZGF0YSA9IHZ1ZU9wdGlvbnMuZGF0YSB8fCB7fTtcclxuICBjb25zdCBtZXRob2RzID0gdnVlT3B0aW9ucy5tZXRob2RzIHx8IHt9O1xyXG5cclxuICBpZiAodHlwZW9mIGRhdGEgPT09ICdmdW5jdGlvbicpIHtcclxuICAgIHRyeSB7XHJcbiAgICAgIGRhdGEgPSBkYXRhLmNhbGwoY29udGV4dCk7IC8vIOaUr+aMgSBWdWUucHJvdG90eXBlIOS4iuaMgueahOaVsOaNrlxyXG4gICAgfSBjYXRjaCAoZSkge1xyXG4gICAgICBpZiAocHJvY2Vzcy5lbnYuVlVFX0FQUF9ERUJVRykge1xyXG4gICAgICAgIGNvbnNvbGUud2Fybign5qC55o2uIFZ1ZSDnmoQgZGF0YSDlh73mlbDliJ3lp4vljJblsI/nqIvluo8gZGF0YSDlpLHotKXvvIzor7flsL3ph4/noa7kv50gZGF0YSDlh73mlbDkuK3kuI3orr/pl64gdm0g5a+56LGh77yM5ZCm5YiZ5Y+v6IO95b2x5ZON6aaW5qyh5pWw5o2u5riy5p+T6YCf5bqm44CCJywgZGF0YSk7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9IGVsc2Uge1xyXG4gICAgdHJ5IHtcclxuICAgICAgLy8g5a+5IGRhdGEg5qC85byP5YyWXHJcbiAgICAgIGRhdGEgPSBKU09OLnBhcnNlKEpTT04uc3RyaW5naWZ5KGRhdGEpKTtcclxuICAgIH0gY2F0Y2ggKGUpIHt9XHJcbiAgfVxyXG5cclxuICBpZiAoIWlzUGxhaW5PYmplY3QoZGF0YSkpIHtcclxuICAgIGRhdGEgPSB7fTtcclxuICB9XHJcblxyXG4gIE9iamVjdC5rZXlzKG1ldGhvZHMpLmZvckVhY2gobWV0aG9kTmFtZSA9PiB7XHJcbiAgICBpZiAoY29udGV4dC5fX2xpZmVjeWNsZV9ob29rc19fLmluZGV4T2YobWV0aG9kTmFtZSkgPT09IC0xICYmICFoYXNPd24oZGF0YSwgbWV0aG9kTmFtZSkpIHtcclxuICAgICAgZGF0YVttZXRob2ROYW1lXSA9IG1ldGhvZHNbbWV0aG9kTmFtZV07XHJcbiAgICB9XHJcbiAgfSk7XHJcblxyXG4gIHJldHVybiBkYXRhXHJcbn1cclxuXHJcbmNvbnN0IFBST1BfVFlQRVMgPSBbU3RyaW5nLCBOdW1iZXIsIEJvb2xlYW4sIE9iamVjdCwgQXJyYXksIG51bGxdO1xyXG5cclxuZnVuY3Rpb24gY3JlYXRlT2JzZXJ2ZXIgKG5hbWUpIHtcclxuICByZXR1cm4gZnVuY3Rpb24gb2JzZXJ2ZXIgKG5ld1ZhbCwgb2xkVmFsKSB7XHJcbiAgICBpZiAodGhpcy4kdm0pIHtcclxuICAgICAgdGhpcy4kdm1bbmFtZV0gPSBuZXdWYWw7IC8vIOS4uuS6huinpuWPkeWFtuS7lumdniByZW5kZXIgd2F0Y2hlclxyXG4gICAgfVxyXG4gIH1cclxufVxyXG5cclxuZnVuY3Rpb24gaW5pdEJlaGF2aW9ycyAodnVlT3B0aW9ucywgaW5pdEJlaGF2aW9yKSB7XHJcbiAgY29uc3QgdnVlQmVoYXZpb3JzID0gdnVlT3B0aW9uc1snYmVoYXZpb3JzJ107XHJcbiAgY29uc3QgdnVlRXh0ZW5kcyA9IHZ1ZU9wdGlvbnNbJ2V4dGVuZHMnXTtcclxuICBjb25zdCB2dWVNaXhpbnMgPSB2dWVPcHRpb25zWydtaXhpbnMnXTtcclxuXHJcbiAgbGV0IHZ1ZVByb3BzID0gdnVlT3B0aW9uc1sncHJvcHMnXTtcclxuXHJcbiAgaWYgKCF2dWVQcm9wcykge1xyXG4gICAgdnVlT3B0aW9uc1sncHJvcHMnXSA9IHZ1ZVByb3BzID0gW107XHJcbiAgfVxyXG5cclxuICBjb25zdCBiZWhhdmlvcnMgPSBbXTtcclxuICBpZiAoQXJyYXkuaXNBcnJheSh2dWVCZWhhdmlvcnMpKSB7XHJcbiAgICB2dWVCZWhhdmlvcnMuZm9yRWFjaChiZWhhdmlvciA9PiB7XHJcbiAgICAgIGJlaGF2aW9ycy5wdXNoKGJlaGF2aW9yLnJlcGxhY2UoJ3VuaTovLycsIGAke1wid3hcIn06Ly9gKSk7XHJcbiAgICAgIGlmIChiZWhhdmlvciA9PT0gJ3VuaTovL2Zvcm0tZmllbGQnKSB7XHJcbiAgICAgICAgaWYgKEFycmF5LmlzQXJyYXkodnVlUHJvcHMpKSB7XHJcbiAgICAgICAgICB2dWVQcm9wcy5wdXNoKCduYW1lJyk7XHJcbiAgICAgICAgICB2dWVQcm9wcy5wdXNoKCd2YWx1ZScpO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICB2dWVQcm9wc1snbmFtZSddID0ge1xyXG4gICAgICAgICAgICB0eXBlOiBTdHJpbmcsXHJcbiAgICAgICAgICAgIGRlZmF1bHQ6ICcnXHJcbiAgICAgICAgICB9O1xyXG4gICAgICAgICAgdnVlUHJvcHNbJ3ZhbHVlJ10gPSB7XHJcbiAgICAgICAgICAgIHR5cGU6IFtTdHJpbmcsIE51bWJlciwgQm9vbGVhbiwgQXJyYXksIE9iamVjdCwgRGF0ZV0sXHJcbiAgICAgICAgICAgIGRlZmF1bHQ6ICcnXHJcbiAgICAgICAgICB9O1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfSk7XHJcbiAgfVxyXG4gIGlmIChpc1BsYWluT2JqZWN0KHZ1ZUV4dGVuZHMpICYmIHZ1ZUV4dGVuZHMucHJvcHMpIHtcclxuICAgIGJlaGF2aW9ycy5wdXNoKFxyXG4gICAgICBpbml0QmVoYXZpb3Ioe1xyXG4gICAgICAgIHByb3BlcnRpZXM6IGluaXRQcm9wZXJ0aWVzKHZ1ZUV4dGVuZHMucHJvcHMsIHRydWUpXHJcbiAgICAgIH0pXHJcbiAgICApO1xyXG4gIH1cclxuICBpZiAoQXJyYXkuaXNBcnJheSh2dWVNaXhpbnMpKSB7XHJcbiAgICB2dWVNaXhpbnMuZm9yRWFjaCh2dWVNaXhpbiA9PiB7XHJcbiAgICAgIGlmIChpc1BsYWluT2JqZWN0KHZ1ZU1peGluKSAmJiB2dWVNaXhpbi5wcm9wcykge1xyXG4gICAgICAgIGJlaGF2aW9ycy5wdXNoKFxyXG4gICAgICAgICAgaW5pdEJlaGF2aW9yKHtcclxuICAgICAgICAgICAgcHJvcGVydGllczogaW5pdFByb3BlcnRpZXModnVlTWl4aW4ucHJvcHMsIHRydWUpXHJcbiAgICAgICAgICB9KVxyXG4gICAgICAgICk7XHJcbiAgICAgIH1cclxuICAgIH0pO1xyXG4gIH1cclxuICByZXR1cm4gYmVoYXZpb3JzXHJcbn1cclxuXHJcbmZ1bmN0aW9uIHBhcnNlUHJvcFR5cGUgKGtleSwgdHlwZSwgZGVmYXVsdFZhbHVlLCBmaWxlKSB7XHJcbiAgLy8gW1N0cmluZ109PlN0cmluZ1xyXG4gIGlmIChBcnJheS5pc0FycmF5KHR5cGUpICYmIHR5cGUubGVuZ3RoID09PSAxKSB7XHJcbiAgICByZXR1cm4gdHlwZVswXVxyXG4gIH1cclxuICByZXR1cm4gdHlwZVxyXG59XHJcblxyXG5mdW5jdGlvbiBpbml0UHJvcGVydGllcyAocHJvcHMsIGlzQmVoYXZpb3IgPSBmYWxzZSwgZmlsZSA9ICcnKSB7XHJcbiAgY29uc3QgcHJvcGVydGllcyA9IHt9O1xyXG4gIGlmICghaXNCZWhhdmlvcikge1xyXG4gICAgcHJvcGVydGllcy52dWVJZCA9IHtcclxuICAgICAgdHlwZTogU3RyaW5nLFxyXG4gICAgICB2YWx1ZTogJydcclxuICAgIH07XHJcbiAgICBwcm9wZXJ0aWVzLnZ1ZVNsb3RzID0geyAvLyDlsI/nqIvluo/kuI3og73nm7TmjqXlrprkuYkgJHNsb3RzIOeahCBwcm9wc++8jOaJgOS7pemAmui/hyB2dWVTbG90cyDovazmjaLliLAgJHNsb3RzXHJcbiAgICAgIHR5cGU6IG51bGwsXHJcbiAgICAgIHZhbHVlOiBbXSxcclxuICAgICAgb2JzZXJ2ZXI6IGZ1bmN0aW9uIChuZXdWYWwsIG9sZFZhbCkge1xyXG4gICAgICAgIGNvbnN0ICRzbG90cyA9IE9iamVjdC5jcmVhdGUobnVsbCk7XHJcbiAgICAgICAgbmV3VmFsLmZvckVhY2goc2xvdE5hbWUgPT4ge1xyXG4gICAgICAgICAgJHNsb3RzW3Nsb3ROYW1lXSA9IHRydWU7XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgdGhpcy5zZXREYXRhKHtcclxuICAgICAgICAgICRzbG90c1xyXG4gICAgICAgIH0pO1xyXG4gICAgICB9XHJcbiAgICB9O1xyXG4gIH1cclxuICBpZiAoQXJyYXkuaXNBcnJheShwcm9wcykpIHsgLy8gWyd0aXRsZSddXHJcbiAgICBwcm9wcy5mb3JFYWNoKGtleSA9PiB7XHJcbiAgICAgIHByb3BlcnRpZXNba2V5XSA9IHtcclxuICAgICAgICB0eXBlOiBudWxsLFxyXG4gICAgICAgIG9ic2VydmVyOiBjcmVhdGVPYnNlcnZlcihrZXkpXHJcbiAgICAgIH07XHJcbiAgICB9KTtcclxuICB9IGVsc2UgaWYgKGlzUGxhaW5PYmplY3QocHJvcHMpKSB7IC8vIHt0aXRsZTp7dHlwZTpTdHJpbmcsZGVmYXVsdDonJ30sY29udGVudDpTdHJpbmd9XHJcbiAgICBPYmplY3Qua2V5cyhwcm9wcykuZm9yRWFjaChrZXkgPT4ge1xyXG4gICAgICBjb25zdCBvcHRzID0gcHJvcHNba2V5XTtcclxuICAgICAgaWYgKGlzUGxhaW5PYmplY3Qob3B0cykpIHsgLy8gdGl0bGU6e3R5cGU6U3RyaW5nLGRlZmF1bHQ6Jyd9XHJcbiAgICAgICAgbGV0IHZhbHVlID0gb3B0c1snZGVmYXVsdCddO1xyXG4gICAgICAgIGlmIChpc0ZuKHZhbHVlKSkge1xyXG4gICAgICAgICAgdmFsdWUgPSB2YWx1ZSgpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgb3B0cy50eXBlID0gcGFyc2VQcm9wVHlwZShrZXksIG9wdHMudHlwZSk7XHJcblxyXG4gICAgICAgIHByb3BlcnRpZXNba2V5XSA9IHtcclxuICAgICAgICAgIHR5cGU6IFBST1BfVFlQRVMuaW5kZXhPZihvcHRzLnR5cGUpICE9PSAtMSA/IG9wdHMudHlwZSA6IG51bGwsXHJcbiAgICAgICAgICB2YWx1ZSxcclxuICAgICAgICAgIG9ic2VydmVyOiBjcmVhdGVPYnNlcnZlcihrZXkpXHJcbiAgICAgICAgfTtcclxuICAgICAgfSBlbHNlIHsgLy8gY29udGVudDpTdHJpbmdcclxuICAgICAgICBjb25zdCB0eXBlID0gcGFyc2VQcm9wVHlwZShrZXksIG9wdHMpO1xyXG4gICAgICAgIHByb3BlcnRpZXNba2V5XSA9IHtcclxuICAgICAgICAgIHR5cGU6IFBST1BfVFlQRVMuaW5kZXhPZih0eXBlKSAhPT0gLTEgPyB0eXBlIDogbnVsbCxcclxuICAgICAgICAgIG9ic2VydmVyOiBjcmVhdGVPYnNlcnZlcihrZXkpXHJcbiAgICAgICAgfTtcclxuICAgICAgfVxyXG4gICAgfSk7XHJcbiAgfVxyXG4gIHJldHVybiBwcm9wZXJ0aWVzXHJcbn1cclxuXHJcbmZ1bmN0aW9uIHdyYXBwZXIkMiAoZXZlbnQpIHtcclxuICAvLyBUT0RPIOWPiOW+l+WFvOWuuSBtcHZ1ZSDnmoQgbXAg5a+56LGhXHJcbiAgdHJ5IHtcclxuICAgIGV2ZW50Lm1wID0gSlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeShldmVudCkpO1xyXG4gIH0gY2F0Y2ggKGUpIHt9XHJcblxyXG4gIGV2ZW50LnN0b3BQcm9wYWdhdGlvbiA9IG5vb3A7XHJcbiAgZXZlbnQucHJldmVudERlZmF1bHQgPSBub29wO1xyXG5cclxuICBldmVudC50YXJnZXQgPSBldmVudC50YXJnZXQgfHwge307XHJcblxyXG4gIGlmICghaGFzT3duKGV2ZW50LCAnZGV0YWlsJykpIHtcclxuICAgIGV2ZW50LmRldGFpbCA9IHt9O1xyXG4gIH1cclxuXHJcbiAgaWYgKGlzUGxhaW5PYmplY3QoZXZlbnQuZGV0YWlsKSkge1xyXG4gICAgZXZlbnQudGFyZ2V0ID0gT2JqZWN0LmFzc2lnbih7fSwgZXZlbnQudGFyZ2V0LCBldmVudC5kZXRhaWwpO1xyXG4gIH1cclxuXHJcbiAgcmV0dXJuIGV2ZW50XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGdldEV4dHJhVmFsdWUgKHZtLCBkYXRhUGF0aHNBcnJheSkge1xyXG4gIGxldCBjb250ZXh0ID0gdm07XHJcbiAgZGF0YVBhdGhzQXJyYXkuZm9yRWFjaChkYXRhUGF0aEFycmF5ID0+IHtcclxuICAgIGNvbnN0IGRhdGFQYXRoID0gZGF0YVBhdGhBcnJheVswXTtcclxuICAgIGNvbnN0IHZhbHVlID0gZGF0YVBhdGhBcnJheVsyXTtcclxuICAgIGlmIChkYXRhUGF0aCB8fCB0eXBlb2YgdmFsdWUgIT09ICd1bmRlZmluZWQnKSB7IC8vIFsnJywnJyxpbmRleCwnZGlzYWJsZSddXHJcbiAgICAgIGNvbnN0IHByb3BQYXRoID0gZGF0YVBhdGhBcnJheVsxXTtcclxuICAgICAgY29uc3QgdmFsdWVQYXRoID0gZGF0YVBhdGhBcnJheVszXTtcclxuXHJcbiAgICAgIGNvbnN0IHZGb3IgPSBkYXRhUGF0aCA/IHZtLl9fZ2V0X3ZhbHVlKGRhdGFQYXRoLCBjb250ZXh0KSA6IGNvbnRleHQ7XHJcblxyXG4gICAgICBpZiAoTnVtYmVyLmlzSW50ZWdlcih2Rm9yKSkge1xyXG4gICAgICAgIGNvbnRleHQgPSB2YWx1ZTtcclxuICAgICAgfSBlbHNlIGlmICghcHJvcFBhdGgpIHtcclxuICAgICAgICBjb250ZXh0ID0gdkZvclt2YWx1ZV07XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgaWYgKEFycmF5LmlzQXJyYXkodkZvcikpIHtcclxuICAgICAgICAgIGNvbnRleHQgPSB2Rm9yLmZpbmQodkZvckl0ZW0gPT4ge1xyXG4gICAgICAgICAgICByZXR1cm4gdm0uX19nZXRfdmFsdWUocHJvcFBhdGgsIHZGb3JJdGVtKSA9PT0gdmFsdWVcclxuICAgICAgICAgIH0pO1xyXG4gICAgICAgIH0gZWxzZSBpZiAoaXNQbGFpbk9iamVjdCh2Rm9yKSkge1xyXG4gICAgICAgICAgY29udGV4dCA9IE9iamVjdC5rZXlzKHZGb3IpLmZpbmQodkZvcktleSA9PiB7XHJcbiAgICAgICAgICAgIHJldHVybiB2bS5fX2dldF92YWx1ZShwcm9wUGF0aCwgdkZvclt2Rm9yS2V5XSkgPT09IHZhbHVlXHJcbiAgICAgICAgICB9KTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgY29uc29sZS5lcnJvcigndi1mb3Ig5pqC5LiN5pSv5oyB5b6q546v5pWw5o2u77yaJywgdkZvcik7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcblxyXG4gICAgICBpZiAodmFsdWVQYXRoKSB7XHJcbiAgICAgICAgY29udGV4dCA9IHZtLl9fZ2V0X3ZhbHVlKHZhbHVlUGF0aCwgY29udGV4dCk7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9KTtcclxuICByZXR1cm4gY29udGV4dFxyXG59XHJcblxyXG5mdW5jdGlvbiBwcm9jZXNzRXZlbnRFeHRyYSAodm0sIGV4dHJhLCBldmVudCkge1xyXG4gIGNvbnN0IGV4dHJhT2JqID0ge307XHJcblxyXG4gIGlmIChBcnJheS5pc0FycmF5KGV4dHJhKSAmJiBleHRyYS5sZW5ndGgpIHtcclxuICAgIC8qKlxyXG4gICAgICpbXHJcbiAgICAgKiAgICBbJ2RhdGEuaXRlbXMnLCAnZGF0YS5pZCcsIGl0ZW0uZGF0YS5pZF0sXHJcbiAgICAgKiAgICBbJ21ldGFzJywgJ2lkJywgbWV0YS5pZF1cclxuICAgICAqXSxcclxuICAgICAqW1xyXG4gICAgICogICAgWydkYXRhLml0ZW1zJywgJ2RhdGEuaWQnLCBpdGVtLmRhdGEuaWRdLFxyXG4gICAgICogICAgWydtZXRhcycsICdpZCcsIG1ldGEuaWRdXHJcbiAgICAgKl0sXHJcbiAgICAgKid0ZXN0J1xyXG4gICAgICovXHJcbiAgICBleHRyYS5mb3JFYWNoKChkYXRhUGF0aCwgaW5kZXgpID0+IHtcclxuICAgICAgaWYgKHR5cGVvZiBkYXRhUGF0aCA9PT0gJ3N0cmluZycpIHtcclxuICAgICAgICBpZiAoIWRhdGFQYXRoKSB7IC8vIG1vZGVsLHByb3Auc3luY1xyXG4gICAgICAgICAgZXh0cmFPYmpbJyQnICsgaW5kZXhdID0gdm07XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgIGlmIChkYXRhUGF0aCA9PT0gJyRldmVudCcpIHsgLy8gJGV2ZW50XHJcbiAgICAgICAgICAgIGV4dHJhT2JqWyckJyArIGluZGV4XSA9IGV2ZW50O1xyXG4gICAgICAgICAgfSBlbHNlIGlmIChkYXRhUGF0aC5pbmRleE9mKCckZXZlbnQuJykgPT09IDApIHsgLy8gJGV2ZW50LnRhcmdldC52YWx1ZVxyXG4gICAgICAgICAgICBleHRyYU9ialsnJCcgKyBpbmRleF0gPSB2bS5fX2dldF92YWx1ZShkYXRhUGF0aC5yZXBsYWNlKCckZXZlbnQuJywgJycpLCBldmVudCk7XHJcbiAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICBleHRyYU9ialsnJCcgKyBpbmRleF0gPSB2bS5fX2dldF92YWx1ZShkYXRhUGF0aCk7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIGV4dHJhT2JqWyckJyArIGluZGV4XSA9IGdldEV4dHJhVmFsdWUodm0sIGRhdGFQYXRoKTtcclxuICAgICAgfVxyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuICByZXR1cm4gZXh0cmFPYmpcclxufVxyXG5cclxuZnVuY3Rpb24gZ2V0T2JqQnlBcnJheSAoYXJyKSB7XHJcbiAgY29uc3Qgb2JqID0ge307XHJcbiAgZm9yIChsZXQgaSA9IDE7IGkgPCBhcnIubGVuZ3RoOyBpKyspIHtcclxuICAgIGNvbnN0IGVsZW1lbnQgPSBhcnJbaV07XHJcbiAgICBvYmpbZWxlbWVudFswXV0gPSBlbGVtZW50WzFdO1xyXG4gIH1cclxuICByZXR1cm4gb2JqXHJcbn1cclxuXHJcbmZ1bmN0aW9uIHByb2Nlc3NFdmVudEFyZ3MgKHZtLCBldmVudCwgYXJncyA9IFtdLCBleHRyYSA9IFtdLCBpc0N1c3RvbSwgbWV0aG9kTmFtZSkge1xyXG4gIGxldCBpc0N1c3RvbU1QRXZlbnQgPSBmYWxzZTsgLy8gd3hjb21wb25lbnQg57uE5Lu277yM5Lyg6YCS5Y6f5aeLIGV2ZW50IOWvueixoVxyXG4gIGlmIChpc0N1c3RvbSkgeyAvLyDoh6rlrprkuYnkuovku7ZcclxuICAgIGlzQ3VzdG9tTVBFdmVudCA9IGV2ZW50LmN1cnJlbnRUYXJnZXQgJiZcclxuICAgICAgZXZlbnQuY3VycmVudFRhcmdldC5kYXRhc2V0ICYmXHJcbiAgICAgIGV2ZW50LmN1cnJlbnRUYXJnZXQuZGF0YXNldC5jb21UeXBlID09PSAnd3gnO1xyXG4gICAgaWYgKCFhcmdzLmxlbmd0aCkgeyAvLyDml6Dlj4LmlbDvvIznm7TmjqXkvKDlhaUgZXZlbnQg5oiWIGRldGFpbCDmlbDnu4RcclxuICAgICAgaWYgKGlzQ3VzdG9tTVBFdmVudCkge1xyXG4gICAgICAgIHJldHVybiBbZXZlbnRdXHJcbiAgICAgIH1cclxuICAgICAgcmV0dXJuIGV2ZW50LmRldGFpbC5fX2FyZ3NfXyB8fCBldmVudC5kZXRhaWxcclxuICAgIH1cclxuICB9XHJcblxyXG4gIGNvbnN0IGV4dHJhT2JqID0gcHJvY2Vzc0V2ZW50RXh0cmEodm0sIGV4dHJhLCBldmVudCk7XHJcblxyXG4gIGNvbnN0IHJldCA9IFtdO1xyXG4gIGFyZ3MuZm9yRWFjaChhcmcgPT4ge1xyXG4gICAgaWYgKGFyZyA9PT0gJyRldmVudCcpIHtcclxuICAgICAgaWYgKG1ldGhvZE5hbWUgPT09ICdfX3NldF9tb2RlbCcgJiYgIWlzQ3VzdG9tKSB7IC8vIGlucHV0IHYtbW9kZWwgdmFsdWVcclxuICAgICAgICByZXQucHVzaChldmVudC50YXJnZXQudmFsdWUpO1xyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIGlmIChpc0N1c3RvbSAmJiAhaXNDdXN0b21NUEV2ZW50KSB7XHJcbiAgICAgICAgICByZXQucHVzaChldmVudC5kZXRhaWwuX19hcmdzX19bMF0pO1xyXG4gICAgICAgIH0gZWxzZSB7IC8vIHd4Y29tcG9uZW50IOe7hOS7tuaIluWGhee9rue7hOS7tlxyXG4gICAgICAgICAgcmV0LnB1c2goZXZlbnQpO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfSBlbHNlIHtcclxuICAgICAgaWYgKEFycmF5LmlzQXJyYXkoYXJnKSAmJiBhcmdbMF0gPT09ICdvJykge1xyXG4gICAgICAgIHJldC5wdXNoKGdldE9iakJ5QXJyYXkoYXJnKSk7XHJcbiAgICAgIH0gZWxzZSBpZiAodHlwZW9mIGFyZyA9PT0gJ3N0cmluZycgJiYgaGFzT3duKGV4dHJhT2JqLCBhcmcpKSB7XHJcbiAgICAgICAgcmV0LnB1c2goZXh0cmFPYmpbYXJnXSk7XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgcmV0LnB1c2goYXJnKTtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH0pO1xyXG5cclxuICByZXR1cm4gcmV0XHJcbn1cclxuXHJcbmNvbnN0IE9OQ0UgPSAnfic7XHJcbmNvbnN0IENVU1RPTSA9ICdeJztcclxuXHJcbmZ1bmN0aW9uIGlzTWF0Y2hFdmVudFR5cGUgKGV2ZW50VHlwZSwgb3B0VHlwZSkge1xyXG4gIHJldHVybiAoZXZlbnRUeXBlID09PSBvcHRUeXBlKSB8fFxyXG4gICAgKFxyXG4gICAgICBvcHRUeXBlID09PSAncmVnaW9uY2hhbmdlJyAmJlxyXG4gICAgICAoXHJcbiAgICAgICAgZXZlbnRUeXBlID09PSAnYmVnaW4nIHx8XHJcbiAgICAgICAgZXZlbnRUeXBlID09PSAnZW5kJ1xyXG4gICAgICApXHJcbiAgICApXHJcbn1cclxuXHJcbmZ1bmN0aW9uIGhhbmRsZUV2ZW50IChldmVudCkge1xyXG4gIGV2ZW50ID0gd3JhcHBlciQyKGV2ZW50KTtcclxuXHJcbiAgLy8gW1sndGFwJyxbWydoYW5kbGUnLFsxLDIsYV1dLFsnaGFuZGxlMScsWzEsMixhXV1dXV1cclxuICBjb25zdCBkYXRhc2V0ID0gKGV2ZW50LmN1cnJlbnRUYXJnZXQgfHwgZXZlbnQudGFyZ2V0KS5kYXRhc2V0O1xyXG4gIGlmICghZGF0YXNldCkge1xyXG4gICAgcmV0dXJuIGNvbnNvbGUud2Fybihg5LqL5Lu25L+h5oGv5LiN5a2Y5ZyoYClcclxuICB9XHJcbiAgY29uc3QgZXZlbnRPcHRzID0gZGF0YXNldC5ldmVudE9wdHMgfHwgZGF0YXNldFsnZXZlbnQtb3B0cyddOyAvLyDmlK/ku5jlrp0gd2ViLXZpZXcg57uE5Lu2IGRhdGFzZXQg6Z2e6am85bOwXHJcbiAgaWYgKCFldmVudE9wdHMpIHtcclxuICAgIHJldHVybiBjb25zb2xlLndhcm4oYOS6i+S7tuS/oeaBr+S4jeWtmOWcqGApXHJcbiAgfVxyXG5cclxuICAvLyBbWydoYW5kbGUnLFsxLDIsYV1dLFsnaGFuZGxlMScsWzEsMixhXV1dXHJcbiAgY29uc3QgZXZlbnRUeXBlID0gZXZlbnQudHlwZTtcclxuXHJcbiAgY29uc3QgcmV0ID0gW107XHJcblxyXG4gIGV2ZW50T3B0cy5mb3JFYWNoKGV2ZW50T3B0ID0+IHtcclxuICAgIGxldCB0eXBlID0gZXZlbnRPcHRbMF07XHJcbiAgICBjb25zdCBldmVudHNBcnJheSA9IGV2ZW50T3B0WzFdO1xyXG5cclxuICAgIGNvbnN0IGlzQ3VzdG9tID0gdHlwZS5jaGFyQXQoMCkgPT09IENVU1RPTTtcclxuICAgIHR5cGUgPSBpc0N1c3RvbSA/IHR5cGUuc2xpY2UoMSkgOiB0eXBlO1xyXG4gICAgY29uc3QgaXNPbmNlID0gdHlwZS5jaGFyQXQoMCkgPT09IE9OQ0U7XHJcbiAgICB0eXBlID0gaXNPbmNlID8gdHlwZS5zbGljZSgxKSA6IHR5cGU7XHJcblxyXG4gICAgaWYgKGV2ZW50c0FycmF5ICYmIGlzTWF0Y2hFdmVudFR5cGUoZXZlbnRUeXBlLCB0eXBlKSkge1xyXG4gICAgICBldmVudHNBcnJheS5mb3JFYWNoKGV2ZW50QXJyYXkgPT4ge1xyXG4gICAgICAgIGNvbnN0IG1ldGhvZE5hbWUgPSBldmVudEFycmF5WzBdO1xyXG4gICAgICAgIGlmIChtZXRob2ROYW1lKSB7XHJcbiAgICAgICAgICBsZXQgaGFuZGxlckN0eCA9IHRoaXMuJHZtO1xyXG4gICAgICAgICAgaWYgKFxyXG4gICAgICAgICAgICBoYW5kbGVyQ3R4LiRvcHRpb25zLmdlbmVyaWMgJiZcclxuICAgICAgICAgICAgaGFuZGxlckN0eC4kcGFyZW50ICYmXHJcbiAgICAgICAgICAgIGhhbmRsZXJDdHguJHBhcmVudC4kcGFyZW50XHJcbiAgICAgICAgICApIHsgLy8gbXAtd2VpeGluLG1wLXRvdXRpYW8g5oq96LGh6IqC54K55qih5oufIHNjb3BlZCBzbG90c1xyXG4gICAgICAgICAgICBoYW5kbGVyQ3R4ID0gaGFuZGxlckN0eC4kcGFyZW50LiRwYXJlbnQ7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgICBpZiAobWV0aG9kTmFtZSA9PT0gJyRlbWl0Jykge1xyXG4gICAgICAgICAgICBoYW5kbGVyQ3R4LiRlbWl0LmFwcGx5KGhhbmRsZXJDdHgsXHJcbiAgICAgICAgICAgICAgcHJvY2Vzc0V2ZW50QXJncyhcclxuICAgICAgICAgICAgICAgIHRoaXMuJHZtLFxyXG4gICAgICAgICAgICAgICAgZXZlbnQsXHJcbiAgICAgICAgICAgICAgICBldmVudEFycmF5WzFdLFxyXG4gICAgICAgICAgICAgICAgZXZlbnRBcnJheVsyXSxcclxuICAgICAgICAgICAgICAgIGlzQ3VzdG9tLFxyXG4gICAgICAgICAgICAgICAgbWV0aG9kTmFtZVxyXG4gICAgICAgICAgICAgICkpO1xyXG4gICAgICAgICAgICByZXR1cm5cclxuICAgICAgICAgIH1cclxuICAgICAgICAgIGNvbnN0IGhhbmRsZXIgPSBoYW5kbGVyQ3R4W21ldGhvZE5hbWVdO1xyXG4gICAgICAgICAgaWYgKCFpc0ZuKGhhbmRsZXIpKSB7XHJcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgIF92bS4ke21ldGhvZE5hbWV9IGlzIG5vdCBhIGZ1bmN0aW9uYClcclxuICAgICAgICAgIH1cclxuICAgICAgICAgIGlmIChpc09uY2UpIHtcclxuICAgICAgICAgICAgaWYgKGhhbmRsZXIub25jZSkge1xyXG4gICAgICAgICAgICAgIHJldHVyblxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGhhbmRsZXIub25jZSA9IHRydWU7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgICByZXQucHVzaChoYW5kbGVyLmFwcGx5KGhhbmRsZXJDdHgsIHByb2Nlc3NFdmVudEFyZ3MoXHJcbiAgICAgICAgICAgIHRoaXMuJHZtLFxyXG4gICAgICAgICAgICBldmVudCxcclxuICAgICAgICAgICAgZXZlbnRBcnJheVsxXSxcclxuICAgICAgICAgICAgZXZlbnRBcnJheVsyXSxcclxuICAgICAgICAgICAgaXNDdXN0b20sXHJcbiAgICAgICAgICAgIG1ldGhvZE5hbWVcclxuICAgICAgICAgICkpKTtcclxuICAgICAgICB9XHJcbiAgICAgIH0pO1xyXG4gICAgfVxyXG4gIH0pO1xyXG5cclxuICBpZiAoXHJcbiAgICBldmVudFR5cGUgPT09ICdpbnB1dCcgJiZcclxuICAgIHJldC5sZW5ndGggPT09IDEgJiZcclxuICAgIHR5cGVvZiByZXRbMF0gIT09ICd1bmRlZmluZWQnXHJcbiAgKSB7XHJcbiAgICByZXR1cm4gcmV0WzBdXHJcbiAgfVxyXG59XHJcblxyXG5jb25zdCBob29rcyA9IFtcclxuICAnb25TaG93JyxcclxuICAnb25IaWRlJyxcclxuICAnb25FcnJvcicsXHJcbiAgJ29uUGFnZU5vdEZvdW5kJ1xyXG5dO1xyXG5cclxuZnVuY3Rpb24gcGFyc2VCYXNlQXBwICh2bSwge1xyXG4gIG1vY2tzLFxyXG4gIGluaXRSZWZzXHJcbn0pIHtcclxuICBpZiAodm0uJG9wdGlvbnMuc3RvcmUpIHtcclxuICAgIFZ1ZS5wcm90b3R5cGUuJHN0b3JlID0gdm0uJG9wdGlvbnMuc3RvcmU7XHJcbiAgfVxyXG5cclxuICBWdWUucHJvdG90eXBlLm1wSG9zdCA9IFwiYXBwLXBsdXNcIjtcclxuXHJcbiAgVnVlLm1peGluKHtcclxuICAgIGJlZm9yZUNyZWF0ZSAoKSB7XHJcbiAgICAgIGlmICghdGhpcy4kb3B0aW9ucy5tcFR5cGUpIHtcclxuICAgICAgICByZXR1cm5cclxuICAgICAgfVxyXG5cclxuICAgICAgdGhpcy5tcFR5cGUgPSB0aGlzLiRvcHRpb25zLm1wVHlwZTtcclxuXHJcbiAgICAgIHRoaXMuJG1wID0ge1xyXG4gICAgICAgIGRhdGE6IHt9LFxyXG4gICAgICAgIFt0aGlzLm1wVHlwZV06IHRoaXMuJG9wdGlvbnMubXBJbnN0YW5jZVxyXG4gICAgICB9O1xyXG5cclxuICAgICAgdGhpcy4kc2NvcGUgPSB0aGlzLiRvcHRpb25zLm1wSW5zdGFuY2U7XHJcblxyXG4gICAgICBkZWxldGUgdGhpcy4kb3B0aW9ucy5tcFR5cGU7XHJcbiAgICAgIGRlbGV0ZSB0aGlzLiRvcHRpb25zLm1wSW5zdGFuY2U7XHJcblxyXG4gICAgICBpZiAodGhpcy5tcFR5cGUgIT09ICdhcHAnKSB7XHJcbiAgICAgICAgaW5pdFJlZnModGhpcyk7XHJcbiAgICAgICAgaW5pdE1vY2tzKHRoaXMsIG1vY2tzKTtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH0pO1xyXG5cclxuICBjb25zdCBhcHBPcHRpb25zID0ge1xyXG4gICAgb25MYXVuY2ggKGFyZ3MpIHtcclxuICAgICAgaWYgKHRoaXMuJHZtKSB7IC8vIOW3sue7j+WIneWni+WMlui/h+S6hu+8jOS4u+imgeaYr+S4uuS6hueZvuW6pu+8jOeZvuW6piBvblNob3cg5ZyoIG9uTGF1bmNoIOS5i+WJjVxyXG4gICAgICAgIHJldHVyblxyXG4gICAgICB9XHJcblxyXG4gICAgICB0aGlzLiR2bSA9IHZtO1xyXG5cclxuICAgICAgdGhpcy4kdm0uJG1wID0ge1xyXG4gICAgICAgIGFwcDogdGhpc1xyXG4gICAgICB9O1xyXG5cclxuICAgICAgdGhpcy4kdm0uJHNjb3BlID0gdGhpcztcclxuICAgICAgLy8gdm0g5LiK5Lmf5oyC6L29IGdsb2JhbERhdGFcclxuICAgICAgdGhpcy4kdm0uZ2xvYmFsRGF0YSA9IHRoaXMuZ2xvYmFsRGF0YTtcclxuXHJcbiAgICAgIHRoaXMuJHZtLl9pc01vdW50ZWQgPSB0cnVlO1xyXG4gICAgICB0aGlzLiR2bS5fX2NhbGxfaG9vaygnbW91bnRlZCcsIGFyZ3MpO1xyXG5cclxuICAgICAgdGhpcy4kdm0uX19jYWxsX2hvb2soJ29uTGF1bmNoJywgYXJncyk7XHJcbiAgICB9XHJcbiAgfTtcclxuXHJcbiAgLy8g5YW85a655pen54mI5pysIGdsb2JhbERhdGFcclxuICBhcHBPcHRpb25zLmdsb2JhbERhdGEgPSB2bS4kb3B0aW9ucy5nbG9iYWxEYXRhIHx8IHt9O1xyXG4gIC8vIOWwhiBtZXRob2RzIOS4reeahOaWueazleaMguWcqCBnZXRBcHAoKSDkuK1cclxuICBjb25zdCBtZXRob2RzID0gdm0uJG9wdGlvbnMubWV0aG9kcztcclxuICBpZiAobWV0aG9kcykge1xyXG4gICAgT2JqZWN0LmtleXMobWV0aG9kcykuZm9yRWFjaChuYW1lID0+IHtcclxuICAgICAgYXBwT3B0aW9uc1tuYW1lXSA9IG1ldGhvZHNbbmFtZV07XHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIGluaXRIb29rcyhhcHBPcHRpb25zLCBob29rcyk7XHJcblxyXG4gIHJldHVybiBhcHBPcHRpb25zXHJcbn1cclxuXHJcbmNvbnN0IG1vY2tzID0gWydfX3JvdXRlX18nLCAnX193eEV4cGFyc2VyTm9kZUlkX18nLCAnX193eFdlYnZpZXdJZF9fJ107XHJcblxyXG5mdW5jdGlvbiBmaW5kVm1CeVZ1ZUlkICh2bSwgdnVlUGlkKSB7XHJcbiAgY29uc3QgJGNoaWxkcmVuID0gdm0uJGNoaWxkcmVuO1xyXG4gIC8vIOS8mOWFiOafpeaJvuebtOWxnijlj43lkJHmn6Xmib46aHR0cHM6Ly9naXRodWIuY29tL2RjbG91ZGlvL3VuaS1hcHAvaXNzdWVzLzEyMDApXHJcbiAgZm9yIChsZXQgaSA9ICRjaGlsZHJlbi5sZW5ndGggLSAxOyBpID49IDA7IGktLSkge1xyXG4gICAgY29uc3QgY2hpbGRWbSA9ICRjaGlsZHJlbltpXTtcclxuICAgIGlmIChjaGlsZFZtLiRzY29wZS5fJHZ1ZUlkID09PSB2dWVQaWQpIHtcclxuICAgICAgcmV0dXJuIGNoaWxkVm1cclxuICAgIH1cclxuICB9XHJcbiAgLy8g5Y+N5ZCR6YCS5b2S5p+l5om+XHJcbiAgbGV0IHBhcmVudFZtO1xyXG4gIGZvciAobGV0IGkgPSAkY2hpbGRyZW4ubGVuZ3RoIC0gMTsgaSA+PSAwOyBpLS0pIHtcclxuICAgIHBhcmVudFZtID0gZmluZFZtQnlWdWVJZCgkY2hpbGRyZW5baV0sIHZ1ZVBpZCk7XHJcbiAgICBpZiAocGFyZW50Vm0pIHtcclxuICAgICAgcmV0dXJuIHBhcmVudFZtXHJcbiAgICB9XHJcbiAgfVxyXG59XHJcblxyXG5mdW5jdGlvbiBpbml0QmVoYXZpb3IgKG9wdGlvbnMpIHtcclxuICByZXR1cm4gQmVoYXZpb3Iob3B0aW9ucylcclxufVxyXG5cclxuZnVuY3Rpb24gaXNQYWdlICgpIHtcclxuICByZXR1cm4gISF0aGlzLnJvdXRlXHJcbn1cclxuXHJcbmZ1bmN0aW9uIGluaXRSZWxhdGlvbiAoZGV0YWlsKSB7XHJcbiAgdGhpcy50cmlnZ2VyRXZlbnQoJ19fbCcsIGRldGFpbCk7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGluaXRSZWZzICh2bSkge1xyXG4gIGNvbnN0IG1wSW5zdGFuY2UgPSB2bS4kc2NvcGU7XHJcbiAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHZtLCAnJHJlZnMnLCB7XHJcbiAgICBnZXQgKCkge1xyXG4gICAgICBjb25zdCAkcmVmcyA9IHt9O1xyXG4gICAgICBjb25zdCBjb21wb25lbnRzID0gbXBJbnN0YW5jZS5zZWxlY3RBbGxDb21wb25lbnRzKCcudnVlLXJlZicpO1xyXG4gICAgICBjb21wb25lbnRzLmZvckVhY2goY29tcG9uZW50ID0+IHtcclxuICAgICAgICBjb25zdCByZWYgPSBjb21wb25lbnQuZGF0YXNldC5yZWY7XHJcbiAgICAgICAgJHJlZnNbcmVmXSA9IGNvbXBvbmVudC4kdm0gfHwgY29tcG9uZW50O1xyXG4gICAgICB9KTtcclxuICAgICAgY29uc3QgZm9yQ29tcG9uZW50cyA9IG1wSW5zdGFuY2Uuc2VsZWN0QWxsQ29tcG9uZW50cygnLnZ1ZS1yZWYtaW4tZm9yJyk7XHJcbiAgICAgIGZvckNvbXBvbmVudHMuZm9yRWFjaChjb21wb25lbnQgPT4ge1xyXG4gICAgICAgIGNvbnN0IHJlZiA9IGNvbXBvbmVudC5kYXRhc2V0LnJlZjtcclxuICAgICAgICBpZiAoISRyZWZzW3JlZl0pIHtcclxuICAgICAgICAgICRyZWZzW3JlZl0gPSBbXTtcclxuICAgICAgICB9XHJcbiAgICAgICAgJHJlZnNbcmVmXS5wdXNoKGNvbXBvbmVudC4kdm0gfHwgY29tcG9uZW50KTtcclxuICAgICAgfSk7XHJcbiAgICAgIHJldHVybiAkcmVmc1xyXG4gICAgfVxyXG4gIH0pO1xyXG59XHJcblxyXG5mdW5jdGlvbiBoYW5kbGVMaW5rIChldmVudCkge1xyXG4gIGNvbnN0IHtcclxuICAgIHZ1ZVBpZCxcclxuICAgIHZ1ZU9wdGlvbnNcclxuICB9ID0gZXZlbnQuZGV0YWlsIHx8IGV2ZW50LnZhbHVlOyAvLyBkZXRhaWwg5piv5b6u5L+hLHZhbHVlIOaYr+eZvuW6pihkaXBhdGNoKVxyXG5cclxuICBsZXQgcGFyZW50Vm07XHJcblxyXG4gIGlmICh2dWVQaWQpIHtcclxuICAgIHBhcmVudFZtID0gZmluZFZtQnlWdWVJZCh0aGlzLiR2bSwgdnVlUGlkKTtcclxuICB9XHJcblxyXG4gIGlmICghcGFyZW50Vm0pIHtcclxuICAgIHBhcmVudFZtID0gdGhpcy4kdm07XHJcbiAgfVxyXG5cclxuICB2dWVPcHRpb25zLnBhcmVudCA9IHBhcmVudFZtO1xyXG59XHJcblxyXG5mdW5jdGlvbiBwYXJzZUFwcCAodm0pIHtcclxuICByZXR1cm4gcGFyc2VCYXNlQXBwKHZtLCB7XHJcbiAgICBtb2NrcyxcclxuICAgIGluaXRSZWZzXHJcbiAgfSlcclxufVxyXG5cclxuY29uc3QgaG9va3MkMSA9IFtcclxuICAnb25VbmlOVmlld01lc3NhZ2UnXHJcbl07XHJcblxyXG5mdW5jdGlvbiBwYXJzZUFwcCQxICh2bSkge1xyXG4gIGNvbnN0IGFwcE9wdGlvbnMgPSBwYXJzZUFwcCh2bSk7XHJcblxyXG4gIGluaXRIb29rcyhhcHBPcHRpb25zLCBob29rcyQxKTtcclxuXHJcbiAgcmV0dXJuIGFwcE9wdGlvbnNcclxufVxyXG5cclxuZnVuY3Rpb24gY3JlYXRlQXBwICh2bSkge1xyXG4gIEFwcChwYXJzZUFwcCQxKHZtKSk7XHJcbiAgcmV0dXJuIHZtXHJcbn1cclxuXHJcbmZ1bmN0aW9uIHBhcnNlQmFzZUNvbXBvbmVudCAodnVlQ29tcG9uZW50T3B0aW9ucywge1xyXG4gIGlzUGFnZSxcclxuICBpbml0UmVsYXRpb25cclxufSA9IHt9KSB7XHJcbiAgbGV0IFtWdWVDb21wb25lbnQsIHZ1ZU9wdGlvbnNdID0gaW5pdFZ1ZUNvbXBvbmVudChWdWUsIHZ1ZUNvbXBvbmVudE9wdGlvbnMpO1xyXG5cclxuICBjb25zdCBvcHRpb25zID0ge1xyXG4gICAgbXVsdGlwbGVTbG90czogdHJ1ZSxcclxuICAgIGFkZEdsb2JhbENsYXNzOiB0cnVlXHJcbiAgfTtcclxuXHJcbiAgY29uc3QgY29tcG9uZW50T3B0aW9ucyA9IHtcclxuICAgIG9wdGlvbnMsXHJcbiAgICBkYXRhOiBpbml0RGF0YSh2dWVPcHRpb25zLCBWdWUucHJvdG90eXBlKSxcclxuICAgIGJlaGF2aW9yczogaW5pdEJlaGF2aW9ycyh2dWVPcHRpb25zLCBpbml0QmVoYXZpb3IpLFxyXG4gICAgcHJvcGVydGllczogaW5pdFByb3BlcnRpZXModnVlT3B0aW9ucy5wcm9wcywgZmFsc2UsIHZ1ZU9wdGlvbnMuX19maWxlKSxcclxuICAgIGxpZmV0aW1lczoge1xyXG4gICAgICBhdHRhY2hlZCAoKSB7XHJcbiAgICAgICAgY29uc3QgcHJvcGVydGllcyA9IHRoaXMucHJvcGVydGllcztcclxuXHJcbiAgICAgICAgY29uc3Qgb3B0aW9ucyA9IHtcclxuICAgICAgICAgIG1wVHlwZTogaXNQYWdlLmNhbGwodGhpcykgPyAncGFnZScgOiAnY29tcG9uZW50JyxcclxuICAgICAgICAgIG1wSW5zdGFuY2U6IHRoaXMsXHJcbiAgICAgICAgICBwcm9wc0RhdGE6IHByb3BlcnRpZXNcclxuICAgICAgICB9O1xyXG5cclxuICAgICAgICBpbml0VnVlSWRzKHByb3BlcnRpZXMudnVlSWQsIHRoaXMpO1xyXG5cclxuICAgICAgICAvLyDlpITnkIbniLblrZDlhbPns7tcclxuICAgICAgICBpbml0UmVsYXRpb24uY2FsbCh0aGlzLCB7XHJcbiAgICAgICAgICB2dWVQaWQ6IHRoaXMuXyR2dWVQaWQsXHJcbiAgICAgICAgICB2dWVPcHRpb25zOiBvcHRpb25zXHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIC8vIOWIneWni+WMliB2dWUg5a6e5L6LXHJcbiAgICAgICAgdGhpcy4kdm0gPSBuZXcgVnVlQ29tcG9uZW50KG9wdGlvbnMpO1xyXG5cclxuICAgICAgICAvLyDlpITnkIYkc2xvdHMsJHNjb3BlZFNsb3Rz77yI5pqC5LiN5pSv5oyB5Yqo5oCB5Y+Y5YyWJHNsb3Rz77yJXHJcbiAgICAgICAgaW5pdFNsb3RzKHRoaXMuJHZtLCBwcm9wZXJ0aWVzLnZ1ZVNsb3RzKTtcclxuXHJcbiAgICAgICAgLy8g6Kem5Y+R6aaW5qyhIHNldERhdGFcclxuICAgICAgICB0aGlzLiR2bS4kbW91bnQoKTtcclxuICAgICAgfSxcclxuICAgICAgcmVhZHkgKCkge1xyXG4gICAgICAgIC8vIOW9k+e7hOS7tiBwcm9wcyDpu5jorqTlgLzkuLogdHJ1Ze+8jOWIneWni+WMluaXtuS8oOWFpSBmYWxzZSDkvJrlr7zoh7QgY3JlYXRlZCxyZWFkeSDop6blj5EsIOS9hiBhdHRhY2hlZCDkuI3op6blj5FcclxuICAgICAgICAvLyBodHRwczovL2RldmVsb3BlcnMud2VpeGluLnFxLmNvbS9jb21tdW5pdHkvZGV2ZWxvcC9kb2MvMDAwNjZhZTI4NDRjYzBmOGViODgzZTJhNTU3ODAwXHJcbiAgICAgICAgaWYgKHRoaXMuJHZtKSB7XHJcbiAgICAgICAgICB0aGlzLiR2bS5faXNNb3VudGVkID0gdHJ1ZTtcclxuICAgICAgICAgIHRoaXMuJHZtLl9fY2FsbF9ob29rKCdtb3VudGVkJyk7XHJcbiAgICAgICAgICB0aGlzLiR2bS5fX2NhbGxfaG9vaygnb25SZWFkeScpO1xyXG4gICAgICAgIH1cclxuICAgICAgfSxcclxuICAgICAgZGV0YWNoZWQgKCkge1xyXG4gICAgICAgIHRoaXMuJHZtICYmIHRoaXMuJHZtLiRkZXN0cm95KCk7XHJcbiAgICAgIH1cclxuICAgIH0sXHJcbiAgICBwYWdlTGlmZXRpbWVzOiB7XHJcbiAgICAgIHNob3cgKGFyZ3MpIHtcclxuICAgICAgICB0aGlzLiR2bSAmJiB0aGlzLiR2bS5fX2NhbGxfaG9vaygnb25QYWdlU2hvdycsIGFyZ3MpO1xyXG4gICAgICB9LFxyXG4gICAgICBoaWRlICgpIHtcclxuICAgICAgICB0aGlzLiR2bSAmJiB0aGlzLiR2bS5fX2NhbGxfaG9vaygnb25QYWdlSGlkZScpO1xyXG4gICAgICB9LFxyXG4gICAgICByZXNpemUgKHNpemUpIHtcclxuICAgICAgICB0aGlzLiR2bSAmJiB0aGlzLiR2bS5fX2NhbGxfaG9vaygnb25QYWdlUmVzaXplJywgc2l6ZSk7XHJcbiAgICAgIH1cclxuICAgIH0sXHJcbiAgICBtZXRob2RzOiB7XHJcbiAgICAgIF9fbDogaGFuZGxlTGluayxcclxuICAgICAgX19lOiBoYW5kbGVFdmVudFxyXG4gICAgfVxyXG4gIH07XHJcblxyXG4gIGlmIChBcnJheS5pc0FycmF5KHZ1ZU9wdGlvbnMud3hzQ2FsbE1ldGhvZHMpKSB7XHJcbiAgICB2dWVPcHRpb25zLnd4c0NhbGxNZXRob2RzLmZvckVhY2goY2FsbE1ldGhvZCA9PiB7XHJcbiAgICAgIGNvbXBvbmVudE9wdGlvbnMubWV0aG9kc1tjYWxsTWV0aG9kXSA9IGZ1bmN0aW9uIChhcmdzKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuJHZtW2NhbGxNZXRob2RdKGFyZ3MpXHJcbiAgICAgIH07XHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIGlmIChpc1BhZ2UpIHtcclxuICAgIHJldHVybiBjb21wb25lbnRPcHRpb25zXHJcbiAgfVxyXG4gIHJldHVybiBbY29tcG9uZW50T3B0aW9ucywgVnVlQ29tcG9uZW50XVxyXG59XHJcblxyXG5mdW5jdGlvbiBwYXJzZUNvbXBvbmVudCAodnVlQ29tcG9uZW50T3B0aW9ucykge1xyXG4gIHJldHVybiBwYXJzZUJhc2VDb21wb25lbnQodnVlQ29tcG9uZW50T3B0aW9ucywge1xyXG4gICAgaXNQYWdlLFxyXG4gICAgaW5pdFJlbGF0aW9uXHJcbiAgfSlcclxufVxyXG5cclxuZnVuY3Rpb24gcGFyc2VDb21wb25lbnQkMSAodnVlQ29tcG9uZW50T3B0aW9ucykge1xyXG4gIGNvbnN0IGNvbXBvbmVudE9wdGlvbnMgPSBwYXJzZUNvbXBvbmVudCh2dWVDb21wb25lbnRPcHRpb25zKTtcclxuXHJcbiAgY29tcG9uZW50T3B0aW9ucy5tZXRob2RzLiRnZXRBcHBXZWJ2aWV3ID0gZnVuY3Rpb24gKCkge1xyXG4gICAgcmV0dXJuIHBsdXMud2Vidmlldy5nZXRXZWJ2aWV3QnlJZChgJHt0aGlzLl9fd3hXZWJ2aWV3SWRfX31gKVxyXG4gIH07XHJcbiAgcmV0dXJuIGNvbXBvbmVudE9wdGlvbnNcclxufVxyXG5cclxuY29uc3QgaG9va3MkMiA9IFtcclxuICAnb25TaG93JyxcclxuICAnb25IaWRlJyxcclxuICAnb25VbmxvYWQnXHJcbl07XHJcblxyXG5ob29rcyQyLnB1c2goLi4uUEFHRV9FVkVOVF9IT09LUyk7XHJcblxyXG5mdW5jdGlvbiBwYXJzZUJhc2VQYWdlICh2dWVQYWdlT3B0aW9ucywge1xyXG4gIGlzUGFnZSxcclxuICBpbml0UmVsYXRpb25cclxufSkge1xyXG4gIGNvbnN0IHBhZ2VPcHRpb25zID0gcGFyc2VDb21wb25lbnQkMSh2dWVQYWdlT3B0aW9ucyk7XHJcblxyXG4gIGluaXRIb29rcyhwYWdlT3B0aW9ucy5tZXRob2RzLCBob29rcyQyLCB2dWVQYWdlT3B0aW9ucyk7XHJcblxyXG4gIHBhZ2VPcHRpb25zLm1ldGhvZHMub25Mb2FkID0gZnVuY3Rpb24gKGFyZ3MpIHtcclxuICAgIHRoaXMuJHZtLiRtcC5xdWVyeSA9IGFyZ3M7IC8vIOWFvOWuuSBtcHZ1ZVxyXG4gICAgdGhpcy4kdm0uX19jYWxsX2hvb2soJ29uTG9hZCcsIGFyZ3MpO1xyXG4gIH07XHJcblxyXG4gIHJldHVybiBwYWdlT3B0aW9uc1xyXG59XHJcblxyXG5mdW5jdGlvbiBwYXJzZVBhZ2UgKHZ1ZVBhZ2VPcHRpb25zKSB7XHJcbiAgcmV0dXJuIHBhcnNlQmFzZVBhZ2UodnVlUGFnZU9wdGlvbnMsIHtcclxuICAgIGlzUGFnZSxcclxuICAgIGluaXRSZWxhdGlvblxyXG4gIH0pXHJcbn1cclxuXHJcbmNvbnN0IGhvb2tzJDMgPSBbXHJcbiAgJ29uQmFja1ByZXNzJyxcclxuICAnb25OYXZpZ2F0aW9uQmFyQnV0dG9uVGFwJyxcclxuICAnb25OYXZpZ2F0aW9uQmFyU2VhcmNoSW5wdXRDaGFuZ2VkJyxcclxuICAnb25OYXZpZ2F0aW9uQmFyU2VhcmNoSW5wdXRDb25maXJtZWQnLFxyXG4gICdvbk5hdmlnYXRpb25CYXJTZWFyY2hJbnB1dENsaWNrZWQnXHJcbl07XHJcblxyXG5mdW5jdGlvbiBwYXJzZVBhZ2UkMSAodnVlUGFnZU9wdGlvbnMpIHtcclxuICBjb25zdCBwYWdlT3B0aW9ucyA9IHBhcnNlUGFnZSh2dWVQYWdlT3B0aW9ucyk7XHJcblxyXG4gIGluaXRIb29rcyhwYWdlT3B0aW9ucy5tZXRob2RzLCBob29rcyQzKTtcclxuXHJcbiAgcmV0dXJuIHBhZ2VPcHRpb25zXHJcbn1cclxuXHJcbmZ1bmN0aW9uIGNyZWF0ZVBhZ2UgKHZ1ZVBhZ2VPcHRpb25zKSB7XHJcbiAge1xyXG4gICAgcmV0dXJuIENvbXBvbmVudChwYXJzZVBhZ2UkMSh2dWVQYWdlT3B0aW9ucykpXHJcbiAgfVxyXG59XHJcblxyXG5mdW5jdGlvbiBjcmVhdGVDb21wb25lbnQgKHZ1ZU9wdGlvbnMpIHtcclxuICB7XHJcbiAgICByZXR1cm4gQ29tcG9uZW50KHBhcnNlQ29tcG9uZW50JDEodnVlT3B0aW9ucykpXHJcbiAgfVxyXG59XHJcblxyXG50b2Rvcy5mb3JFYWNoKHRvZG9BcGkgPT4ge1xyXG4gIHByb3RvY29sc1t0b2RvQXBpXSA9IGZhbHNlO1xyXG59KTtcclxuXHJcbmNhbklVc2VzLmZvckVhY2goY2FuSVVzZUFwaSA9PiB7XHJcbiAgY29uc3QgYXBpTmFtZSA9IHByb3RvY29sc1tjYW5JVXNlQXBpXSAmJiBwcm90b2NvbHNbY2FuSVVzZUFwaV0ubmFtZSA/IHByb3RvY29sc1tjYW5JVXNlQXBpXS5uYW1lXHJcbiAgICA6IGNhbklVc2VBcGk7XHJcbiAgaWYgKCF3eC5jYW5JVXNlKGFwaU5hbWUpKSB7XHJcbiAgICBwcm90b2NvbHNbY2FuSVVzZUFwaV0gPSBmYWxzZTtcclxuICB9XHJcbn0pO1xyXG5cclxubGV0IHVuaSA9IHt9O1xyXG5cclxuaWYgKHR5cGVvZiBQcm94eSAhPT0gJ3VuZGVmaW5lZCcgJiYgXCJhcHAtcGx1c1wiICE9PSAnYXBwLXBsdXMnKSB7XHJcbiAgdW5pID0gbmV3IFByb3h5KHt9LCB7XHJcbiAgICBnZXQgKHRhcmdldCwgbmFtZSkge1xyXG4gICAgICBpZiAodGFyZ2V0W25hbWVdKSB7XHJcbiAgICAgICAgcmV0dXJuIHRhcmdldFtuYW1lXVxyXG4gICAgICB9XHJcbiAgICAgIGlmIChiYXNlQXBpW25hbWVdKSB7XHJcbiAgICAgICAgcmV0dXJuIGJhc2VBcGlbbmFtZV1cclxuICAgICAgfVxyXG4gICAgICBpZiAoYXBpW25hbWVdKSB7XHJcbiAgICAgICAgcmV0dXJuIHByb21pc2lmeShuYW1lLCBhcGlbbmFtZV0pXHJcbiAgICAgIH1cclxuICAgICAgaWYgKGV2ZW50QXBpW25hbWVdKSB7XHJcbiAgICAgICAgcmV0dXJuIGV2ZW50QXBpW25hbWVdXHJcbiAgICAgIH1cclxuICAgICAgaWYgKCFoYXNPd24od3gsIG5hbWUpICYmICFoYXNPd24ocHJvdG9jb2xzLCBuYW1lKSkge1xyXG4gICAgICAgIHJldHVyblxyXG4gICAgICB9XHJcbiAgICAgIHJldHVybiBwcm9taXNpZnkobmFtZSwgd3JhcHBlcihuYW1lLCB3eFtuYW1lXSkpXHJcbiAgICB9LFxyXG4gICAgc2V0ICh0YXJnZXQsIG5hbWUsIHZhbHVlKSB7XHJcbiAgICAgIHRhcmdldFtuYW1lXSA9IHZhbHVlO1xyXG4gICAgICByZXR1cm4gdHJ1ZVxyXG4gICAgfVxyXG4gIH0pO1xyXG59IGVsc2Uge1xyXG4gIE9iamVjdC5rZXlzKGJhc2VBcGkpLmZvckVhY2gobmFtZSA9PiB7XHJcbiAgICB1bmlbbmFtZV0gPSBiYXNlQXBpW25hbWVdO1xyXG4gIH0pO1xyXG5cclxuICBPYmplY3Qua2V5cyhldmVudEFwaSkuZm9yRWFjaChuYW1lID0+IHtcclxuICAgIHVuaVtuYW1lXSA9IGV2ZW50QXBpW25hbWVdO1xyXG4gIH0pO1xyXG5cclxuICBPYmplY3Qua2V5cyhhcGkpLmZvckVhY2gobmFtZSA9PiB7XHJcbiAgICB1bmlbbmFtZV0gPSBwcm9taXNpZnkobmFtZSwgYXBpW25hbWVdKTtcclxuICB9KTtcclxuXHJcbiAgT2JqZWN0LmtleXMod3gpLmZvckVhY2gobmFtZSA9PiB7XHJcbiAgICBpZiAoaGFzT3duKHd4LCBuYW1lKSB8fCBoYXNPd24ocHJvdG9jb2xzLCBuYW1lKSkge1xyXG4gICAgICB1bmlbbmFtZV0gPSBwcm9taXNpZnkobmFtZSwgd3JhcHBlcihuYW1lLCB3eFtuYW1lXSkpO1xyXG4gICAgfVxyXG4gIH0pO1xyXG59XHJcblxyXG57XHJcbiAgaWYgKHR5cGVvZiBnbG9iYWwgIT09ICd1bmRlZmluZWQnKSB7XHJcbiAgICBnbG9iYWwudW5pID0gdW5pO1xyXG4gICAgZ2xvYmFsLlVuaUVtaXR0ZXIgPSBldmVudEFwaTtcclxuICB9XHJcbn1cclxuXHJcbnd4LmNyZWF0ZUFwcCA9IGNyZWF0ZUFwcDtcclxud3guY3JlYXRlUGFnZSA9IGNyZWF0ZVBhZ2U7XHJcbnd4LmNyZWF0ZUNvbXBvbmVudCA9IGNyZWF0ZUNvbXBvbmVudDtcclxuXHJcbnZhciB1bmkkMSA9IHVuaTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHVuaSQxO1xyXG5leHBvcnQgeyBjcmVhdGVBcHAsIGNyZWF0ZUNvbXBvbmVudCwgY3JlYXRlUGFnZSB9O1xyXG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///1\n");

/***/ }),

/***/ 14:
/*!**********************************************************************************************************!*\
  !*** ./node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/runtime/componentNormalizer.js ***!
  \**********************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return normalizeComponent; });\n/* globals __VUE_SSR_CONTEXT__ */\n\n// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).\n// This module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle.\n\nfunction normalizeComponent (\n  scriptExports,\n  render,\n  staticRenderFns,\n  functionalTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier, /* server only */\n  shadowMode, /* vue-cli only */\n  components, // fixed by xxxxxx auto components\n  renderjs // fixed by xxxxxx renderjs\n) {\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // fixed by xxxxxx auto components\n  if (components) {\n    options.components = Object.assign(components, options.components || {})\n  }\n  // fixed by xxxxxx renderjs\n  if (renderjs) {\n    (renderjs.beforeCreate || (renderjs.beforeCreate = [])).unshift(function() {\n      this[renderjs.__module] = this\n    });\n    (options.mixins || (options.mixins = [])).push(renderjs)\n  }\n\n  // render functions\n  if (render) {\n    options.render = render\n    options.staticRenderFns = staticRenderFns\n    options._compiled = true\n  }\n\n  // functional template\n  if (functionalTemplate) {\n    options.functional = true\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = 'data-v-' + scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = shadowMode\n      ? function () { injectStyles.call(this, this.$root.$options.shadowRoot) }\n      : injectStyles\n  }\n\n  if (hook) {\n    if (options.functional) {\n      // for template-only hot-reload because in that case the render fn doesn't\n      // go through the normalizer\n      options._injectStyles = hook\n      // register for functioal component in vue file\n      var originalRender = options.render\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return originalRender(h, context)\n      }\n    } else {\n      // inject component registration as beforeCreate hook\n      var existing = options.beforeCreate\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    }\n  }\n\n  return {\n    exports: scriptExports,\n    options: options\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLDJFQUEyRTtBQUMzRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EseUJBQXlCO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6IjE0LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyogZ2xvYmFscyBfX1ZVRV9TU1JfQ09OVEVYVF9fICovXG5cbi8vIElNUE9SVEFOVDogRG8gTk9UIHVzZSBFUzIwMTUgZmVhdHVyZXMgaW4gdGhpcyBmaWxlIChleGNlcHQgZm9yIG1vZHVsZXMpLlxuLy8gVGhpcyBtb2R1bGUgaXMgYSBydW50aW1lIHV0aWxpdHkgZm9yIGNsZWFuZXIgY29tcG9uZW50IG1vZHVsZSBvdXRwdXQgYW5kIHdpbGxcbi8vIGJlIGluY2x1ZGVkIGluIHRoZSBmaW5hbCB3ZWJwYWNrIHVzZXIgYnVuZGxlLlxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBub3JtYWxpemVDb21wb25lbnQgKFxuICBzY3JpcHRFeHBvcnRzLFxuICByZW5kZXIsXG4gIHN0YXRpY1JlbmRlckZucyxcbiAgZnVuY3Rpb25hbFRlbXBsYXRlLFxuICBpbmplY3RTdHlsZXMsXG4gIHNjb3BlSWQsXG4gIG1vZHVsZUlkZW50aWZpZXIsIC8qIHNlcnZlciBvbmx5ICovXG4gIHNoYWRvd01vZGUsIC8qIHZ1ZS1jbGkgb25seSAqL1xuICBjb21wb25lbnRzLCAvLyBmaXhlZCBieSB4eHh4eHggYXV0byBjb21wb25lbnRzXG4gIHJlbmRlcmpzIC8vIGZpeGVkIGJ5IHh4eHh4eCByZW5kZXJqc1xuKSB7XG4gIC8vIFZ1ZS5leHRlbmQgY29uc3RydWN0b3IgZXhwb3J0IGludGVyb3BcbiAgdmFyIG9wdGlvbnMgPSB0eXBlb2Ygc2NyaXB0RXhwb3J0cyA9PT0gJ2Z1bmN0aW9uJ1xuICAgID8gc2NyaXB0RXhwb3J0cy5vcHRpb25zXG4gICAgOiBzY3JpcHRFeHBvcnRzXG5cbiAgLy8gZml4ZWQgYnkgeHh4eHh4IGF1dG8gY29tcG9uZW50c1xuICBpZiAoY29tcG9uZW50cykge1xuICAgIG9wdGlvbnMuY29tcG9uZW50cyA9IE9iamVjdC5hc3NpZ24oY29tcG9uZW50cywgb3B0aW9ucy5jb21wb25lbnRzIHx8IHt9KVxuICB9XG4gIC8vIGZpeGVkIGJ5IHh4eHh4eCByZW5kZXJqc1xuICBpZiAocmVuZGVyanMpIHtcbiAgICAocmVuZGVyanMuYmVmb3JlQ3JlYXRlIHx8IChyZW5kZXJqcy5iZWZvcmVDcmVhdGUgPSBbXSkpLnVuc2hpZnQoZnVuY3Rpb24oKSB7XG4gICAgICB0aGlzW3JlbmRlcmpzLl9fbW9kdWxlXSA9IHRoaXNcbiAgICB9KTtcbiAgICAob3B0aW9ucy5taXhpbnMgfHwgKG9wdGlvbnMubWl4aW5zID0gW10pKS5wdXNoKHJlbmRlcmpzKVxuICB9XG5cbiAgLy8gcmVuZGVyIGZ1bmN0aW9uc1xuICBpZiAocmVuZGVyKSB7XG4gICAgb3B0aW9ucy5yZW5kZXIgPSByZW5kZXJcbiAgICBvcHRpb25zLnN0YXRpY1JlbmRlckZucyA9IHN0YXRpY1JlbmRlckZuc1xuICAgIG9wdGlvbnMuX2NvbXBpbGVkID0gdHJ1ZVxuICB9XG5cbiAgLy8gZnVuY3Rpb25hbCB0ZW1wbGF0ZVxuICBpZiAoZnVuY3Rpb25hbFRlbXBsYXRlKSB7XG4gICAgb3B0aW9ucy5mdW5jdGlvbmFsID0gdHJ1ZVxuICB9XG5cbiAgLy8gc2NvcGVkSWRcbiAgaWYgKHNjb3BlSWQpIHtcbiAgICBvcHRpb25zLl9zY29wZUlkID0gJ2RhdGEtdi0nICsgc2NvcGVJZFxuICB9XG5cbiAgdmFyIGhvb2tcbiAgaWYgKG1vZHVsZUlkZW50aWZpZXIpIHsgLy8gc2VydmVyIGJ1aWxkXG4gICAgaG9vayA9IGZ1bmN0aW9uIChjb250ZXh0KSB7XG4gICAgICAvLyAyLjMgaW5qZWN0aW9uXG4gICAgICBjb250ZXh0ID1cbiAgICAgICAgY29udGV4dCB8fCAvLyBjYWNoZWQgY2FsbFxuICAgICAgICAodGhpcy4kdm5vZGUgJiYgdGhpcy4kdm5vZGUuc3NyQ29udGV4dCkgfHwgLy8gc3RhdGVmdWxcbiAgICAgICAgKHRoaXMucGFyZW50ICYmIHRoaXMucGFyZW50LiR2bm9kZSAmJiB0aGlzLnBhcmVudC4kdm5vZGUuc3NyQ29udGV4dCkgLy8gZnVuY3Rpb25hbFxuICAgICAgLy8gMi4yIHdpdGggcnVuSW5OZXdDb250ZXh0OiB0cnVlXG4gICAgICBpZiAoIWNvbnRleHQgJiYgdHlwZW9mIF9fVlVFX1NTUl9DT05URVhUX18gIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgIGNvbnRleHQgPSBfX1ZVRV9TU1JfQ09OVEVYVF9fXG4gICAgICB9XG4gICAgICAvLyBpbmplY3QgY29tcG9uZW50IHN0eWxlc1xuICAgICAgaWYgKGluamVjdFN0eWxlcykge1xuICAgICAgICBpbmplY3RTdHlsZXMuY2FsbCh0aGlzLCBjb250ZXh0KVxuICAgICAgfVxuICAgICAgLy8gcmVnaXN0ZXIgY29tcG9uZW50IG1vZHVsZSBpZGVudGlmaWVyIGZvciBhc3luYyBjaHVuayBpbmZlcnJlbmNlXG4gICAgICBpZiAoY29udGV4dCAmJiBjb250ZXh0Ll9yZWdpc3RlcmVkQ29tcG9uZW50cykge1xuICAgICAgICBjb250ZXh0Ll9yZWdpc3RlcmVkQ29tcG9uZW50cy5hZGQobW9kdWxlSWRlbnRpZmllcilcbiAgICAgIH1cbiAgICB9XG4gICAgLy8gdXNlZCBieSBzc3IgaW4gY2FzZSBjb21wb25lbnQgaXMgY2FjaGVkIGFuZCBiZWZvcmVDcmVhdGVcbiAgICAvLyBuZXZlciBnZXRzIGNhbGxlZFxuICAgIG9wdGlvbnMuX3NzclJlZ2lzdGVyID0gaG9va1xuICB9IGVsc2UgaWYgKGluamVjdFN0eWxlcykge1xuICAgIGhvb2sgPSBzaGFkb3dNb2RlXG4gICAgICA/IGZ1bmN0aW9uICgpIHsgaW5qZWN0U3R5bGVzLmNhbGwodGhpcywgdGhpcy4kcm9vdC4kb3B0aW9ucy5zaGFkb3dSb290KSB9XG4gICAgICA6IGluamVjdFN0eWxlc1xuICB9XG5cbiAgaWYgKGhvb2spIHtcbiAgICBpZiAob3B0aW9ucy5mdW5jdGlvbmFsKSB7XG4gICAgICAvLyBmb3IgdGVtcGxhdGUtb25seSBob3QtcmVsb2FkIGJlY2F1c2UgaW4gdGhhdCBjYXNlIHRoZSByZW5kZXIgZm4gZG9lc24ndFxuICAgICAgLy8gZ28gdGhyb3VnaCB0aGUgbm9ybWFsaXplclxuICAgICAgb3B0aW9ucy5faW5qZWN0U3R5bGVzID0gaG9va1xuICAgICAgLy8gcmVnaXN0ZXIgZm9yIGZ1bmN0aW9hbCBjb21wb25lbnQgaW4gdnVlIGZpbGVcbiAgICAgIHZhciBvcmlnaW5hbFJlbmRlciA9IG9wdGlvbnMucmVuZGVyXG4gICAgICBvcHRpb25zLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcldpdGhTdHlsZUluamVjdGlvbiAoaCwgY29udGV4dCkge1xuICAgICAgICBob29rLmNhbGwoY29udGV4dClcbiAgICAgICAgcmV0dXJuIG9yaWdpbmFsUmVuZGVyKGgsIGNvbnRleHQpXG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIC8vIGluamVjdCBjb21wb25lbnQgcmVnaXN0cmF0aW9uIGFzIGJlZm9yZUNyZWF0ZSBob29rXG4gICAgICB2YXIgZXhpc3RpbmcgPSBvcHRpb25zLmJlZm9yZUNyZWF0ZVxuICAgICAgb3B0aW9ucy5iZWZvcmVDcmVhdGUgPSBleGlzdGluZ1xuICAgICAgICA/IFtdLmNvbmNhdChleGlzdGluZywgaG9vaylcbiAgICAgICAgOiBbaG9va11cbiAgICB9XG4gIH1cblxuICByZXR1cm4ge1xuICAgIGV4cG9ydHM6IHNjcmlwdEV4cG9ydHMsXG4gICAgb3B0aW9uczogb3B0aW9uc1xuICB9XG59XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///14\n");

/***/ }),

/***/ 2:
/*!***********************************!*\
  !*** (webpack)/buildin/global.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLENBQUM7O0FBRUQ7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsNENBQTRDOztBQUU1QyIsImZpbGUiOiIyLmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIGc7XG5cbi8vIFRoaXMgd29ya3MgaW4gbm9uLXN0cmljdCBtb2RlXG5nID0gKGZ1bmN0aW9uKCkge1xuXHRyZXR1cm4gdGhpcztcbn0pKCk7XG5cbnRyeSB7XG5cdC8vIFRoaXMgd29ya3MgaWYgZXZhbCBpcyBhbGxvd2VkIChzZWUgQ1NQKVxuXHRnID0gZyB8fCBuZXcgRnVuY3Rpb24oXCJyZXR1cm4gdGhpc1wiKSgpO1xufSBjYXRjaCAoZSkge1xuXHQvLyBUaGlzIHdvcmtzIGlmIHRoZSB3aW5kb3cgcmVmZXJlbmNlIGlzIGF2YWlsYWJsZVxuXHRpZiAodHlwZW9mIHdpbmRvdyA9PT0gXCJvYmplY3RcIikgZyA9IHdpbmRvdztcbn1cblxuLy8gZyBjYW4gc3RpbGwgYmUgdW5kZWZpbmVkLCBidXQgbm90aGluZyB0byBkbyBhYm91dCBpdC4uLlxuLy8gV2UgcmV0dXJuIHVuZGVmaW5lZCwgaW5zdGVhZCBvZiBub3RoaW5nIGhlcmUsIHNvIGl0J3Ncbi8vIGVhc2llciB0byBoYW5kbGUgdGhpcyBjYXNlLiBpZighZ2xvYmFsKSB7IC4uLn1cblxubW9kdWxlLmV4cG9ydHMgPSBnO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///2\n");

/***/ }),

/***/ 21:
/*!*********************************************************************!*\
  !*** ./node_modules/@dcloudio/vue-cli-plugin-uni/lib/format-log.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("Object.defineProperty(exports, \"__esModule\", { value: true });exports.default = formatLog;function typof(v) {\n  var s = Object.prototype.toString.call(v);\n  return s.substring(8, s.length - 1);\n}\n\nfunction isDebugMode() {\n  /* eslint-disable no-undef */\n  return typeof __channelId__ === 'string' && __channelId__;\n}\n\nfunction formatLog() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n  var type = args.shift();\n  if (isDebugMode()) {\n    args.push(args.pop().replace('at ', 'uni-app:///'));\n    return console[type]['apply'](console, args);\n  }\n\n  var msgs = args.map(function (v) {\n    var type = Object.prototype.toString.call(v);\n\n    if (type.toLowerCase() === '[object object]') {\n      try {\n        v = '---BEGIN:JSON---' + JSON.stringify(v) + '---END:JSON---';\n      } catch (e) {\n        v = '[object object]';\n      }\n    } else {\n      if (v === null) {\n        v = '---NULL---';\n      } else if (v === undefined) {\n        v = '---UNDEFINED---';\n      } else {\n        var vType = typof(v).toUpperCase();\n\n        if (vType === 'NUMBER' || vType === 'BOOLEAN') {\n          v = '---BEGIN:' + vType + '---' + v + '---END:' + vType + '---';\n        } else {\n          v = String(v);\n        }\n      }\n    }\n\n    return v;\n  });\n  var msg = '';\n\n  if (msgs.length > 1) {\n    var lastMsg = msgs.pop();\n    msg = msgs.join('---COMMA---');\n\n    if (lastMsg.indexOf(' at ') === 0) {\n      msg += lastMsg;\n    } else {\n      msg += '---COMMA---' + lastMsg;\n    }\n  } else {\n    msg = msgs[0];\n  }\n\n  console[type](msg);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbInR5cG9mIiwidiIsInMiLCJPYmplY3QiLCJwcm90b3R5cGUiLCJ0b1N0cmluZyIsImNhbGwiLCJzdWJzdHJpbmciLCJsZW5ndGgiLCJpc0RlYnVnTW9kZSIsIl9fY2hhbm5lbElkX18iLCJmb3JtYXRMb2ciLCJfbGVuIiwiYXJndW1lbnRzIiwiYXJncyIsIkFycmF5IiwiX2tleSIsInR5cGUiLCJzaGlmdCIsInB1c2giLCJwb3AiLCJyZXBsYWNlIiwiY29uc29sZSIsIm1zZ3MiLCJtYXAiLCJ0b0xvd2VyQ2FzZSIsIkpTT04iLCJzdHJpbmdpZnkiLCJlIiwidW5kZWZpbmVkIiwidlR5cGUiLCJ0b1VwcGVyQ2FzZSIsIlN0cmluZyIsIm1zZyIsImxhc3RNc2ciLCJqb2luIiwiaW5kZXhPZiJdLCJtYXBwaW5ncyI6IjBGQUFBLFNBQVNBLEtBQVQsQ0FBZ0JDLENBQWhCLEVBQW1CO0FBQ2pCLE1BQUlDLENBQUMsR0FBR0MsTUFBTSxDQUFDQyxTQUFQLENBQWlCQyxRQUFqQixDQUEwQkMsSUFBMUIsQ0FBK0JMLENBQS9CLENBQVI7QUFDQSxTQUFPQyxDQUFDLENBQUNLLFNBQUYsQ0FBWSxDQUFaLEVBQWVMLENBQUMsQ0FBQ00sTUFBRixHQUFXLENBQTFCLENBQVA7QUFDRDs7QUFFRCxTQUFTQyxXQUFULEdBQXdCO0FBQ3RCO0FBQ0EsU0FBTyxPQUFPQyxhQUFQLEtBQXlCLFFBQXpCLElBQXFDQSxhQUE1QztBQUNEOztBQUVjLFNBQVNDLFNBQVQsR0FBc0I7QUFDbkMsT0FBSyxJQUFJQyxJQUFJLEdBQUdDLFNBQVMsQ0FBQ0wsTUFBckIsRUFBNkJNLElBQUksR0FBRyxJQUFJQyxLQUFKLENBQVVILElBQVYsQ0FBcEMsRUFBcURJLElBQUksR0FBRyxDQUFqRSxFQUFvRUEsSUFBSSxHQUFHSixJQUEzRSxFQUFpRkksSUFBSSxFQUFyRixFQUF5RjtBQUN2RkYsUUFBSSxDQUFDRSxJQUFELENBQUosR0FBYUgsU0FBUyxDQUFDRyxJQUFELENBQXRCO0FBQ0Q7QUFDRCxNQUFNQyxJQUFJLEdBQUdILElBQUksQ0FBQ0ksS0FBTCxFQUFiO0FBQ0EsTUFBSVQsV0FBVyxFQUFmLEVBQW1CO0FBQ2pCSyxRQUFJLENBQUNLLElBQUwsQ0FBVUwsSUFBSSxDQUFDTSxHQUFMLEdBQVdDLE9BQVgsQ0FBbUIsS0FBbkIsRUFBMEIsYUFBMUIsQ0FBVjtBQUNBLFdBQU9DLE9BQU8sQ0FBQ0wsSUFBRCxDQUFQLENBQWMsT0FBZCxFQUF1QkssT0FBdkIsRUFBZ0NSLElBQWhDLENBQVA7QUFDRDs7QUFFRCxNQUFJUyxJQUFJLEdBQUdULElBQUksQ0FBQ1UsR0FBTCxDQUFTLFVBQVV2QixDQUFWLEVBQWE7QUFDL0IsUUFBSWdCLElBQUksR0FBR2QsTUFBTSxDQUFDQyxTQUFQLENBQWlCQyxRQUFqQixDQUEwQkMsSUFBMUIsQ0FBK0JMLENBQS9CLENBQVg7O0FBRUEsUUFBSWdCLElBQUksQ0FBQ1EsV0FBTCxPQUF1QixpQkFBM0IsRUFBOEM7QUFDNUMsVUFBSTtBQUNGeEIsU0FBQyxHQUFHLHFCQUFxQnlCLElBQUksQ0FBQ0MsU0FBTCxDQUFlMUIsQ0FBZixDQUFyQixHQUF5QyxnQkFBN0M7QUFDRCxPQUZELENBRUUsT0FBTzJCLENBQVAsRUFBVTtBQUNWM0IsU0FBQyxHQUFHLGlCQUFKO0FBQ0Q7QUFDRixLQU5ELE1BTU87QUFDTCxVQUFJQSxDQUFDLEtBQUssSUFBVixFQUFnQjtBQUNkQSxTQUFDLEdBQUcsWUFBSjtBQUNELE9BRkQsTUFFTyxJQUFJQSxDQUFDLEtBQUs0QixTQUFWLEVBQXFCO0FBQzFCNUIsU0FBQyxHQUFHLGlCQUFKO0FBQ0QsT0FGTSxNQUVBO0FBQ0wsWUFBSTZCLEtBQUssR0FBRzlCLEtBQUssQ0FBQ0MsQ0FBRCxDQUFMLENBQVM4QixXQUFULEVBQVo7O0FBRUEsWUFBSUQsS0FBSyxLQUFLLFFBQVYsSUFBc0JBLEtBQUssS0FBSyxTQUFwQyxFQUErQztBQUM3QzdCLFdBQUMsR0FBRyxjQUFjNkIsS0FBZCxHQUFzQixLQUF0QixHQUE4QjdCLENBQTlCLEdBQWtDLFNBQWxDLEdBQThDNkIsS0FBOUMsR0FBc0QsS0FBMUQ7QUFDRCxTQUZELE1BRU87QUFDTDdCLFdBQUMsR0FBRytCLE1BQU0sQ0FBQy9CLENBQUQsQ0FBVjtBQUNEO0FBQ0Y7QUFDRjs7QUFFRCxXQUFPQSxDQUFQO0FBQ0QsR0ExQlUsQ0FBWDtBQTJCQSxNQUFJZ0MsR0FBRyxHQUFHLEVBQVY7O0FBRUEsTUFBSVYsSUFBSSxDQUFDZixNQUFMLEdBQWMsQ0FBbEIsRUFBcUI7QUFDbkIsUUFBSTBCLE9BQU8sR0FBR1gsSUFBSSxDQUFDSCxHQUFMLEVBQWQ7QUFDQWEsT0FBRyxHQUFHVixJQUFJLENBQUNZLElBQUwsQ0FBVSxhQUFWLENBQU47O0FBRUEsUUFBSUQsT0FBTyxDQUFDRSxPQUFSLENBQWdCLE1BQWhCLE1BQTRCLENBQWhDLEVBQW1DO0FBQ2pDSCxTQUFHLElBQUlDLE9BQVA7QUFDRCxLQUZELE1BRU87QUFDTEQsU0FBRyxJQUFJLGdCQUFnQkMsT0FBdkI7QUFDRDtBQUNGLEdBVEQsTUFTTztBQUNMRCxPQUFHLEdBQUdWLElBQUksQ0FBQyxDQUFELENBQVY7QUFDRDs7QUFFREQsU0FBTyxDQUFDTCxJQUFELENBQVAsQ0FBY2dCLEdBQWQ7QUFDRCIsImZpbGUiOiIyMS5qcyIsInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIHR5cG9mICh2KSB7XHJcbiAgdmFyIHMgPSBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwodilcclxuICByZXR1cm4gcy5zdWJzdHJpbmcoOCwgcy5sZW5ndGggLSAxKVxyXG59XHJcblxyXG5mdW5jdGlvbiBpc0RlYnVnTW9kZSAoKSB7XHJcbiAgLyogZXNsaW50LWRpc2FibGUgbm8tdW5kZWYgKi9cclxuICByZXR1cm4gdHlwZW9mIF9fY2hhbm5lbElkX18gPT09ICdzdHJpbmcnICYmIF9fY2hhbm5lbElkX19cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gZm9ybWF0TG9nICgpIHtcclxuICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IG5ldyBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcclxuICAgIGFyZ3NbX2tleV0gPSBhcmd1bWVudHNbX2tleV1cclxuICB9XHJcbiAgY29uc3QgdHlwZSA9IGFyZ3Muc2hpZnQoKVxyXG4gIGlmIChpc0RlYnVnTW9kZSgpKSB7XHJcbiAgICBhcmdzLnB1c2goYXJncy5wb3AoKS5yZXBsYWNlKCdhdCAnLCAndW5pLWFwcDovLy8nKSlcclxuICAgIHJldHVybiBjb25zb2xlW3R5cGVdWydhcHBseSddKGNvbnNvbGUsIGFyZ3MpXHJcbiAgfVxyXG5cclxuICB2YXIgbXNncyA9IGFyZ3MubWFwKGZ1bmN0aW9uICh2KSB7XHJcbiAgICB2YXIgdHlwZSA9IE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbCh2KVxyXG5cclxuICAgIGlmICh0eXBlLnRvTG93ZXJDYXNlKCkgPT09ICdbb2JqZWN0IG9iamVjdF0nKSB7XHJcbiAgICAgIHRyeSB7XHJcbiAgICAgICAgdiA9ICctLS1CRUdJTjpKU09OLS0tJyArIEpTT04uc3RyaW5naWZ5KHYpICsgJy0tLUVORDpKU09OLS0tJ1xyXG4gICAgICB9IGNhdGNoIChlKSB7XHJcbiAgICAgICAgdiA9ICdbb2JqZWN0IG9iamVjdF0nXHJcbiAgICAgIH1cclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIGlmICh2ID09PSBudWxsKSB7XHJcbiAgICAgICAgdiA9ICctLS1OVUxMLS0tJ1xyXG4gICAgICB9IGVsc2UgaWYgKHYgPT09IHVuZGVmaW5lZCkge1xyXG4gICAgICAgIHYgPSAnLS0tVU5ERUZJTkVELS0tJ1xyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIHZhciB2VHlwZSA9IHR5cG9mKHYpLnRvVXBwZXJDYXNlKClcclxuXHJcbiAgICAgICAgaWYgKHZUeXBlID09PSAnTlVNQkVSJyB8fCB2VHlwZSA9PT0gJ0JPT0xFQU4nKSB7XHJcbiAgICAgICAgICB2ID0gJy0tLUJFR0lOOicgKyB2VHlwZSArICctLS0nICsgdiArICctLS1FTkQ6JyArIHZUeXBlICsgJy0tLSdcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgdiA9IFN0cmluZyh2KVxyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiB2XHJcbiAgfSlcclxuICB2YXIgbXNnID0gJydcclxuXHJcbiAgaWYgKG1zZ3MubGVuZ3RoID4gMSkge1xyXG4gICAgdmFyIGxhc3RNc2cgPSBtc2dzLnBvcCgpXHJcbiAgICBtc2cgPSBtc2dzLmpvaW4oJy0tLUNPTU1BLS0tJylcclxuXHJcbiAgICBpZiAobGFzdE1zZy5pbmRleE9mKCcgYXQgJykgPT09IDApIHtcclxuICAgICAgbXNnICs9IGxhc3RNc2dcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIG1zZyArPSAnLS0tQ09NTUEtLS0nICsgbGFzdE1zZ1xyXG4gICAgfVxyXG4gIH0gZWxzZSB7XHJcbiAgICBtc2cgPSBtc2dzWzBdXHJcbiAgfVxyXG5cclxuICBjb25zb2xlW3R5cGVdKG1zZylcclxufVxyXG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///21\n");

/***/ }),

/***/ 22:
/*!*******************************************!*\
  !*** D:/kxsx_app/pages/public/rongyun.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(__f__) {function chatLoad() {\n  var RongIMLib = __webpack_require__(/*! ../../rongyunIM/rongyun.js */ 23);\n  var Protobuf = __webpack_require__(/*! ../../rongyunIM/protobuf-2.3.5.min.js */ 24);\n  var RongIMClient = RongIMLib.RongIMClient;\n  var timer = new Date();\n  var appkey = 'pwe86ga5p4d36';\n  var userId = '924756420';\n  var token = 'ZU5g/RRMEU2RUhfRT95FS0roF+1VR/NPRNBHO7cp39u44UVUi937DYiUHhlkx7cZdusSShxRe04zVZ0awUjVo2Y1rIY6tpSV';\n  //初始化\n  RongIMClient.init(appkey, null, {\n    protobuf: Protobuf });\n\n  //状态监听器\n  RongIMClient.setConnectionStatusListener({\n    onChanged: function onChanged(status) {\n      // status 标识当前连接状态\n      switch (status) {\n        case RongIMLib.ConnectionStatus.CONNECTED:\n          __f__(\"log\", '链接成功', \" at pages\\\\public\\\\rongyun.js:19\");\n          break;\n        case RongIMLib.ConnectionStatus.CONNECTING:\n          __f__(\"log\", '正在链接', \" at pages\\\\public\\\\rongyun.js:22\");\n          break;\n        case RongIMLib.ConnectionStatus.DISCONNECTED:\n          __f__(\"log\", '断开连接', \" at pages\\\\public\\\\rongyun.js:25\");\n          break;\n        case RongIMLib.ConnectionStatus.KICKED_OFFLINE_BY_OTHER_CLIENT:\n          __f__(\"log\", '其他设备登录, 本端被踢', \" at pages\\\\public\\\\rongyun.js:28\");\n          break;\n        case RongIMLib.ConnectionStatus.DOMAIN_INCORRECT:\n          __f__(\"log\", '域名不正确, 请至开发者后台查看安全域名配置', \" at pages\\\\public\\\\rongyun.js:31\");\n          break;\n        case RongIMLib.ConnectionStatus.NETWORK_UNAVAILABLE:\n          __f__(\"log\", '网络不可用, 此时可调用 reconnect 进行重连', \" at pages\\\\public\\\\rongyun.js:34\");\n          break;\n        default:\n          __f__(\"log\", '链接状态为', status, \" at pages\\\\public\\\\rongyun.js:37\");\n          break;}\n\n    } });\n\n  //消息监听器\n  RongIMClient.setOnReceiveMessageListener({\n    // 接收到的消息\n    onReceived: function onReceived(message) {\n      var messageContent = message.content;\n      // 判断消息类型\n      switch (message.messageType) {\n        case RongIMClient.MessageType.TextMessage: // 文字消息\n          __f__(\"log\", '文字内容', messageContent.content, \" at pages\\\\public\\\\rongyun.js:50\");\n          break;\n        case RongIMClient.MessageType.ImageMessage: // 图片消息\n          __f__(\"log\", '图片缩略图 base64', messageContent.content, \" at pages\\\\public\\\\rongyun.js:53\");\n          __f__(\"log\", '原图 url', messageContent.imageUri, \" at pages\\\\public\\\\rongyun.js:54\");\n          break;\n        case RongIMClient.MessageType.HQVoiceMessage: // 音频消息\n          __f__(\"log\", '音频 type ', messageContent.type, \" at pages\\\\public\\\\rongyun.js:57\"); // 编解码类型，默认为 aac 音频\n          __f__(\"log\", '音频 url', messageContent.remoteUrl, \" at pages\\\\public\\\\rongyun.js:58\"); // 播放：<audio src={remoteUrl} />\n          __f__(\"log\", '音频 时长', messageContent.duration, \" at pages\\\\public\\\\rongyun.js:59\");\n          break;\n        case RongIMClient.MessageType.RichContentMessage: // 富文本(图文)消息\n          __f__(\"log\", '文本内容', messageContent.content, \" at pages\\\\public\\\\rongyun.js:62\");\n          __f__(\"log\", '图片 base64', messageContent.imageUri, \" at pages\\\\public\\\\rongyun.js:63\");\n          __f__(\"log\", '原图 url', messageContent.url, \" at pages\\\\public\\\\rongyun.js:64\");\n          break;\n        case RongIMClient.MessageType.UnknownMessage: // 未知消息\n          __f__(\"log\", '未知消息, 请检查消息自定义格式是否正确', message, \" at pages\\\\public\\\\rongyun.js:67\");\n          break;\n        default:\n          __f__(\"log\", '收到消息', message, \" at pages\\\\public\\\\rongyun.js:70\");\n          break;}\n\n    } });\n\n  //连接，登录\n  RongIMClient.connect(token, {\n    onSuccess: function onSuccess(userId) {\n      __f__(\"log\", '连接成功, 用户 id 为', userId, \" at pages\\\\public\\\\rongyun.js:78\");\n      // 连接已成功, 此时可通过 getConversationList 获取会话列表并展示\n    },\n    onTokenIncorrect: function onTokenIncorrect() {\n      __f__(\"log\", '连接失败, 失败原因: token 无效', \" at pages\\\\public\\\\rongyun.js:82\");\n    },\n    onError: function onError(errorCode) {\n      var info = '';\n      switch (errorCode) {\n        case RongIMLib.ErrorCode.TIMEOUT:\n          info = '链接超时';\n          break;\n        case RongIMLib.ConnectionState.UNACCEPTABLE_PAROTOCOL_VERSION:\n          info = '不可接受的协议版本';\n          break;\n        case RongIMLib.ConnectionState.IDENTIFIER_REJECTED:\n          info = 'appkey 不正确';\n          break;\n        case RongIMLib.ConnectionState.SERVER_UNAVAILABLE:\n          info = '服务器不可用';\n          break;\n        default:\n          info = errorCode;\n          break;}\n\n      __f__(\"log\", '连接失败, 失败原因: ', info, \" at pages\\\\public\\\\rongyun.js:103\");\n    } });\n\n  //获取消息列表\n  var conversationTypes = [RongIMLib.ConversationType.PRIVATE];\n  var count = 150;\n  RongIMClient.getInstance().getConversationList({\n    onSuccess: function onSuccess(list) {\n      _self.linkList = list;\n    },\n    onError: function onError(error) {\n      __f__(\"log\", '获取会话列表失败', error, \" at pages\\\\public\\\\rongyun.js:114\");\n    } },\n  conversationTypes, count);\n  //获取历史消息\n  var conversationType = RongIMLib.ConversationType.PRIVATE;\n  var targetId = '123';\n  var timestrap = null; // 默认传 null, 若从头开始获取历史消息, 请赋值为 0\n  var count = 20;\n  RongIMLib.RongIMClient.getInstance().getHistoryMessages(conversationType, targetId, timestrap, count, {\n    onSuccess: function onSuccess(list, hasMsg) {\n      /* \r\n                                                     list: 获取的历史消息列表\r\n                                                     hasMsg: 是否还有历史消息可以获取\r\n                                                   */\n      __f__(\"log\", '获取历史消息成功', list, \" at pages\\\\public\\\\rongyun.js:128\");\n\n    },\n    onError: function onError(error) {\n      // 请排查：单群聊消息云存储是否开通\n      __f__(\"log\", '获取历史消息失败', error, \" at pages\\\\public\\\\rongyun.js:133\");\n    } });\n\n}\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/vue-cli-plugin-uni/lib/format-log.js */ 21)[\"default\"]))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///22\n");

/***/ }),

/***/ 23:
/*!****************************************!*\
  !*** D:/kxsx_app/rongyunIM/rongyun.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(__f__) {!function (a, b) {if (true) module.exports = b();else { var g, f, c, d, e; }}(window, function () {var Polling = { SetUserStatusInput: function SetUserStatusInput() {var a = {};this.setStatus = function (b) {a.status = b;}, this.toArrayBuffer = function () {return a;};}, SetUserStatusOutput: function SetUserStatusOutput() {var a = {};this.setNothing = function (b) {a.nothing = b;}, this.toArrayBuffer = function () {return a;};}, GetUserStatusInput: function GetUserStatusInput() {var a = {};this.setNothing = function (b) {a.nothing = b;}, this.toArrayBuffer = function () {return a;};}, GetUserStatusOutput: function GetUserStatusOutput() {var a = {};this.setStatus = function (b) {a.status = b;}, this.setSubUserId = function (b) {a.subUserId = b;}, this.toArrayBuffer = function () {return a;};}, VoipDynamicInput: function VoipDynamicInput() {var a = {};this.setEngineType = function (b) {a.engineType = b;}, this.setChannelName = function (b) {a.channelName = b;}, this.setChannelExtra = function (b) {a.channelExtra = b;}, this.toArrayBuffer = function () {return a;};}, VoipDynamicOutput: function VoipDynamicOutput() {var a = {};this.setDynamicKey = function (b) {a.dynamicKey = b;}, this.toArrayBuffer = function () {return a;};}, SubUserStatusInput: function SubUserStatusInput() {var a = {};this.setUserid = function (b) {a.userid = b;}, this.toArrayBuffer = function () {return a;};}, SubUserStatusOutput: function SubUserStatusOutput() {var a = {};this.setNothing = function (b) {a.nothing = b;}, this.toArrayBuffer = function () {return a;};}, CleanHisMsgInput: function CleanHisMsgInput() {var a = {};this.setTargetId = function (b) {a.targetId = b;}, this.setDataTime = function (b) {a.dataTime = b;}, this.setConversationType = function (b) {a.conversationType = b;}, this.toArrayBuffer = function () {return a;};}, DeleteMsgInput: function DeleteMsgInput() {var a = {};this.setType = function (b) {a.type = b;}, this.setConversationId = function (b) {a.conversationId = b;}, this.setMsgs = function (b) {a.msgs = b;}, this.toArrayBuffer = function () {return a;};}, DeleteMsg: function DeleteMsg() {var a = {};this.setMsgId = function (b) {a.msgId = b;}, this.setMsgDataTime = function (b) {a.msgDataTime = b;}, this.setDirect = function (b) {a.direct = b;}, this.toArrayBuffer = function () {return a;};}, DeleteMsgOutput: function DeleteMsgOutput() {var a = {};this.setNothing = function (b) {a.nothing = b;}, this.toArrayBuffer = function () {return a;};}, SearchMpInput: function SearchMpInput() {var a = {};this.setType = function (b) {a.type = b;}, this.setId = function (b) {a.id = b;}, this.toArrayBuffer = function () {return a;};}, SearchMpOutput: function SearchMpOutput() {var a = {};this.setNothing = function (b) {a.nothing = b;}, this.setInfo = function (b) {a.info = b;}, this.toArrayBuffer = function () {return a;};}, MpInfo: function MpInfo() {var a = {};this.setMpid = function (b) {a.mpid = b;}, this.setName = function (b) {a.name = b;}, this.setType = function (b) {a.type = b;}, this.setTime = function (b) {a.time = b;}, this.setPortraitUri = function (b) {a.portraitUrl = b;}, this.setExtra = function (b) {a.extra = b;}, this.toArrayBuffer = function () {return a;};}, PullMpInput: function PullMpInput() {var a = {};this.setMpid = function (b) {a.mpid = b;}, this.setTime = function (b) {a.time = b;}, this.toArrayBuffer = function () {return a;};}, PullMpOutput: function PullMpOutput() {var a = {};this.setStatus = function (b) {a.status = b;}, this.setInfo = function (b) {a.info = b;}, this.toArrayBuffer = function () {return a;};}, MPFollowInput: function MPFollowInput() {var a = {};this.setId = function (b) {a.id = b;}, this.toArrayBuffer = function () {return a;};}, MPFollowOutput: function MPFollowOutput() {var a = {};this.setNothing = function (b) {a.nothing = b;}, this.setInfo = function (b) {a.info = b;}, this.toArrayBuffer = function () {return a;};}, NotifyMsg: function NotifyMsg() {var a = {};this.setType = function (b) {a.type = b;}, this.setTime = function (b) {a.time = b;}, this.setChrmId = function (b) {a.chrmId = b;}, this.toArrayBuffer = function () {return a;};}, SyncRequestMsg: function SyncRequestMsg() {var a = {};this.setSyncTime = function (b) {a.syncTime = b || 0;}, this.setIspolling = function (b) {a.ispolling = !!b;}, this.setIsweb = function (b) {a.isweb = !!b;}, this.setIsPullSend = function (b) {a.isPullSend = !!b;}, this.setSendBoxSyncTime = function (b) {a.sendBoxSyncTime = b;}, this.toArrayBuffer = function () {return a;};}, UpStreamMessage: function UpStreamMessage() {var a = {};this.setSessionId = function (b) {a.sessionId = b;}, this.setClassname = function (b) {a.classname = b;}, this.setContent = function (b) {b && (a.content = b);}, this.setPushText = function (b) {a.pushText = b;}, this.setUserId = function (b) {a.userId = b;}, this.setAppData = function (b) {a.appData = b;}, this.toArrayBuffer = function () {return a;};}, DownStreamMessages: function DownStreamMessages() {var a = {};this.setList = function (b) {a.list = b;}, this.setSyncTime = function (b) {a.syncTime = b;}, this.setFinished = function (b) {a.finished = b;}, this.toArrayBuffer = function () {return a;};}, DownStreamMessage: function DownStreamMessage() {var a = {};this.setFromUserId = function (b) {a.fromUserId = b;}, this.setType = function (b) {a.type = b;}, this.setGroupId = function (b) {a.groupId = b;}, this.setClassname = function (b) {a.classname = b;}, this.setContent = function (b) {b && (a.content = b);}, this.setDataTime = function (b) {a.dataTime = b;}, this.setStatus = function (b) {a.status = b;}, this.setMsgId = function (b) {a.msgId = b;}, this.toArrayBuffer = function () {return a;};}, CreateDiscussionInput: function CreateDiscussionInput() {var a = {};this.setName = function (b) {a.name = b;}, this.toArrayBuffer = function () {return a;};}, CreateDiscussionOutput: function CreateDiscussionOutput() {var a = {};this.setId = function (b) {a.id = b;}, this.toArrayBuffer = function () {return a;};}, ChannelInvitationInput: function ChannelInvitationInput() {var a = {};this.setUsers = function (b) {a.users = b;}, this.toArrayBuffer = function () {return a;};}, LeaveChannelInput: function LeaveChannelInput() {var a = {};this.setNothing = function (b) {a.nothing = b;}, this.toArrayBuffer = function () {return a;};}, QueryChatroomInfoInput: function QueryChatroomInfoInput() {var a = {};this.setCount = function (b) {a.count = b;}, this.setOrder = function (b) {a.order = b;}, this.toArrayBuffer = function () {return a;};}, QueryChatroomInfoOutput: function QueryChatroomInfoOutput() {var a = {};this.setUserTotalNums = function (b) {a.userTotalNums = b;}, this.setUserInfos = function (b) {a.userInfos = b;}, this.toArrayBuffer = function () {return a;};}, ChannelEvictionInput: function ChannelEvictionInput() {var a = {};this.setUser = function (b) {a.user = b;}, this.toArrayBuffer = function () {return a;};}, RenameChannelInput: function RenameChannelInput() {var a = {};this.setName = function (b) {a.name = b;}, this.toArrayBuffer = function () {return a;};}, ChannelInfoInput: function ChannelInfoInput() {var a = {};this.setNothing = function (b) {a.nothing = b;}, this.toArrayBuffer = function () {return a;};}, ChannelInfoOutput: function ChannelInfoOutput() {var a = {};this.setType = function (b) {a.type = b;}, this.setChannelId = function (b) {a.channelId = b;}, this.setChannelName = function (b) {a.channelName = b;}, this.setAdminUserId = function (b) {a.adminUserId = b;}, this.setFirstTenUserIds = function (b) {a.firstTenUserIds = b;}, this.setOpenStatus = function (b) {a.openStatus = b;}, this.toArrayBuffer = function () {return a;};}, ChannelInfosInput: function ChannelInfosInput() {var a = {};this.setPage = function (b) {a.page = b;}, this.setNumber = function (b) {a.number = b;}, this.toArrayBuffer = function () {return a;};}, ChannelInfosOutput: function ChannelInfosOutput() {var a = {};this.setChannels = function (b) {a.channels = b;}, this.setTotal = function (b) {a.total = b;}, this.toArrayBuffer = function () {return a;};}, MemberInfo: function MemberInfo() {var a = {};this.setUserId = function (b) {a.userId = b;}, this.setUserName = function (b) {a.userName = b;}, this.setUserPortrait = function (b) {a.userPortrait = b;}, this.setExtension = function (b) {a.extension = b;}, this.toArrayBuffer = function () {return a;};}, GroupMembersInput: function GroupMembersInput() {var a = {};this.setPage = function (b) {a.page = b;}, this.setNumber = function (b) {a.number = b;}, this.toArrayBuffer = function () {return a;};}, GroupMembersOutput: function GroupMembersOutput() {var a = {};this.setMembers = function (b) {a.members = b;}, this.setTotal = function (b) {a.total = b;}, this.toArrayBuffer = function () {return a;};}, GetUserInfoInput: function GetUserInfoInput() {var a = {};this.setNothing = function (b) {a.nothing = b;}, this.toArrayBuffer = function () {return a;};}, GetUserInfoOutput: function GetUserInfoOutput() {var a = {};this.setUserId = function (b) {a.userId = b;}, this.setUserName = function (b) {a.userName = b;}, this.setUserPortrait = function (b) {a.userPortrait = b;}, this.toArrayBuffer = function () {return a;};}, GetSessionIdInput: function GetSessionIdInput() {var a = {};this.setNothing = function (b) {a.nothing = b;}, this.toArrayBuffer = function () {return a;};}, GetSessionIdOutput: function GetSessionIdOutput() {var a = {};this.setSessionId = function (b) {a.sessionId = b;}, this.toArrayBuffer = function () {return a;};}, GetQNupTokenInput: function GetQNupTokenInput() {var a = {};this.setType = function (b) {a.type = b;}, this.toArrayBuffer = function () {return a;};}, GetQNupTokenOutput: function GetQNupTokenOutput() {var a = {};this.setDeadline = function (b) {a.deadline = b;}, this.setToken = function (b) {a.token = b;}, this.toArrayBuffer = function () {return a;};}, GetQNdownloadUrlInput: function GetQNdownloadUrlInput() {var a = {};this.setType = function (b) {a.type = b;}, this.setKey = function (b) {a.key = b;}, this.setFileName = function (b) {a.fileName = b;}, this.toArrayBuffer = function () {return a;};}, GetQNdownloadUrlOutput: function GetQNdownloadUrlOutput() {var a = {};this.setDownloadUrl = function (b) {a.downloadUrl = b;}, this.toArrayBuffer = function () {return a;};}, Add2BlackListInput: function Add2BlackListInput() {var a = {};this.setUserId = function (b) {a.userId = b;}, this.toArrayBuffer = function () {return a;};}, RemoveFromBlackListInput: function RemoveFromBlackListInput() {var a = {};this.setUserId = function (b) {a.userId = b;}, this.toArrayBuffer = function () {return a;};}, QueryBlackListInput: function QueryBlackListInput() {var a = {};this.setNothing = function (b) {a.nothing = b;}, this.toArrayBuffer = function () {return a;};}, QueryBlackListOutput: function QueryBlackListOutput() {var a = {};this.setUserIds = function (b) {a.userIds = b;}, this.toArrayBuffer = function () {return a;};}, BlackListStatusInput: function BlackListStatusInput() {var a = {};this.setUserId = function (b) {a.userId = b;}, this.toArrayBuffer = function () {return a;};}, BlockPushInput: function BlockPushInput() {var a = {};this.setBlockeeId = function (b) {a.blockeeId = b;}, this.toArrayBuffer = function () {return a;};}, ModifyPermissionInput: function ModifyPermissionInput() {var a = {};this.setOpenStatus = function (b) {a.openStatus = b;}, this.toArrayBuffer = function () {return a;};}, GroupInput: function GroupInput() {var a = {};this.setGroupInfo = function (b) {for (var c = 0, d = []; c < b.length; c++) {d.push({ id: b[c].getContent().id, name: b[c].getContent().name });}a.groupInfo = d;}, this.toArrayBuffer = function () {return a;};}, GroupOutput: function GroupOutput() {var a = {};this.setNothing = function (b) {a.nothing = b;}, this.toArrayBuffer = function () {return a;};}, GroupInfo: function GroupInfo() {var a = {};this.setId = function (b) {a.id = b;}, this.setName = function (b) {a.name = b;}, this.getContent = function () {return a;}, this.toArrayBuffer = function () {return a;};}, GroupHashInput: function GroupHashInput() {var a = {};this.setUserId = function (b) {a.userId = b;}, this.setGroupHashCode = function (b) {a.groupHashCode = b;}, this.toArrayBuffer = function () {return a;};}, GroupHashOutput: function GroupHashOutput() {var a = {};this.setResult = function (b) {a.result = b;}, this.toArrayBuffer = function () {return a;};}, ChrmInput: function ChrmInput() {var a = {};this.setNothing = function (b) {a.nothing = b;}, this.toArrayBuffer = function () {return a;};}, ChrmOutput: function ChrmOutput() {var a = {};this.setNothing = function (b) {a.nothing = b;}, this.toArrayBuffer = function () {return a;};}, ChrmPullMsg: function ChrmPullMsg() {var a = {};this.setSyncTime = function (b) {a.syncTime = b;}, this.setCount = function (b) {a.count = b;}, this.toArrayBuffer = function () {return a;};}, RelationsInput: function RelationsInput() {var a = {};this.setType = function (b) {a.type = b;}, this.setMsg = function (b) {a.msg = b;}, this.setCount = function (b) {a.count = b;}, this.toArrayBuffer = function () {return a;};}, RelationsOutput: function RelationsOutput() {var a = {};this.setInfo = function (b) {a.info = b;}, this.toArrayBuffer = function () {return a;};}, RelationInfo: function RelationInfo() {var a = {};this.setType = function (b) {a.type = b;}, this.setUserId = function (b) {a.userId = b;}, this.setMsg = function (b) {a.msg = b;}, this.toArrayBuffer = function () {return a;};}, HistoryMessageInput: function HistoryMessageInput() {var a = {};this.setTargetId = function (b) {a.targetId = b;}, this.setDataTime = function (b) {a.dataTime = b;}, this.setSize = function (b) {a.size = b;}, this.toArrayBuffer = function () {return a;};}, HistoryMessagesOuput: function HistoryMessagesOuput() {var a = {};this.setList = function (b) {a.list = b;}, this.setSyncTime = function (b) {a.syncTime = b;}, this.setHasMsg = function (b) {a.hasMsg = b;}, this.toArrayBuffer = function () {return a;};}, HistoryMsgInput: function HistoryMsgInput() {var a = {};this.setTargetId = function (b) {a.targetId = b;}, this.setTime = function (b) {a.time = b;}, this.setCount = function (b) {a.count = b;}, this.setOrder = function (b) {a.order = b;}, this.toArrayBuffer = function () {return a;};}, HistoryMsgOuput: function HistoryMsgOuput() {var a = {};this.setList = function (b) {a.list = b;}, this.setSyncTime = function (b) {a.syncTime = b;}, this.setHasMsg = function (b) {a.hasMsg = b;}, this.toArrayBuffer = function () {return a;};} };for (var f in Polling) {Polling[f].decode = function (b) {var back = {},val = JSON.parse(b) || eval(\"(\" + b + \")\");for (var i in val) {back[i] = val[i], back[\"get\" + i.charAt(0).toUpperCase() + i.slice(1)] = function () {return val[i];};}return back;};}var md5 = function () {\"use strict\";function a(a, b) {var c = (65535 & a) + (65535 & b);return (a >> 16) + (b >> 16) + (c >> 16) << 16 | 65535 & c;}function b(a, b) {return a << b | a >>> 32 - b;}function c(c, d, e, f, g, h) {return a(b(a(a(d, c), a(f, h)), g), e);}function d(a, b, d, e, f, g, h) {return c(b & d | ~b & e, a, b, f, g, h);}function e(a, b, d, e, f, g, h) {return c(b & e | d & ~e, a, b, f, g, h);}function f(a, b, d, e, f, g, h) {return c(b ^ d ^ e, a, b, f, g, h);}function g(a, b, d, e, f, g, h) {return c(d ^ (b | ~e), a, b, f, g, h);}function h(b, c) {b[c >> 5] |= 128 << c % 32, b[14 + (c + 64 >>> 9 << 4)] = c;var h,i,j,k,l,m = 1732584193,n = -271733879,o = -1732584194,p = 271733878;for (h = 0; h < b.length; h += 16) {i = m, j = n, k = o, l = p, m = d(m, n, o, p, b[h], 7, -680876936), p = d(p, m, n, o, b[h + 1], 12, -389564586), o = d(o, p, m, n, b[h + 2], 17, 606105819), n = d(n, o, p, m, b[h + 3], 22, -1044525330), m = d(m, n, o, p, b[h + 4], 7, -176418897), p = d(p, m, n, o, b[h + 5], 12, 1200080426), o = d(o, p, m, n, b[h + 6], 17, -1473231341), n = d(n, o, p, m, b[h + 7], 22, -45705983), m = d(m, n, o, p, b[h + 8], 7, 1770035416), p = d(p, m, n, o, b[h + 9], 12, -1958414417), o = d(o, p, m, n, b[h + 10], 17, -42063), n = d(n, o, p, m, b[h + 11], 22, -1990404162), m = d(m, n, o, p, b[h + 12], 7, 1804603682), p = d(p, m, n, o, b[h + 13], 12, -40341101), o = d(o, p, m, n, b[h + 14], 17, -1502002290), n = d(n, o, p, m, b[h + 15], 22, 1236535329), m = e(m, n, o, p, b[h + 1], 5, -165796510), p = e(p, m, n, o, b[h + 6], 9, -1069501632), o = e(o, p, m, n, b[h + 11], 14, 643717713), n = e(n, o, p, m, b[h], 20, -373897302), m = e(m, n, o, p, b[h + 5], 5, -701558691), p = e(p, m, n, o, b[h + 10], 9, 38016083), o = e(o, p, m, n, b[h + 15], 14, -660478335), n = e(n, o, p, m, b[h + 4], 20, -405537848), m = e(m, n, o, p, b[h + 9], 5, 568446438), p = e(p, m, n, o, b[h + 14], 9, -1019803690), o = e(o, p, m, n, b[h + 3], 14, -187363961), n = e(n, o, p, m, b[h + 8], 20, 1163531501), m = e(m, n, o, p, b[h + 13], 5, -1444681467), p = e(p, m, n, o, b[h + 2], 9, -51403784), o = e(o, p, m, n, b[h + 7], 14, 1735328473), n = e(n, o, p, m, b[h + 12], 20, -1926607734), m = f(m, n, o, p, b[h + 5], 4, -378558), p = f(p, m, n, o, b[h + 8], 11, -2022574463), o = f(o, p, m, n, b[h + 11], 16, 1839030562), n = f(n, o, p, m, b[h + 14], 23, -35309556), m = f(m, n, o, p, b[h + 1], 4, -1530992060), p = f(p, m, n, o, b[h + 4], 11, 1272893353), o = f(o, p, m, n, b[h + 7], 16, -155497632), n = f(n, o, p, m, b[h + 10], 23, -1094730640), m = f(m, n, o, p, b[h + 13], 4, 681279174), p = f(p, m, n, o, b[h], 11, -358537222), o = f(o, p, m, n, b[h + 3], 16, -722521979), n = f(n, o, p, m, b[h + 6], 23, 76029189), m = f(m, n, o, p, b[h + 9], 4, -640364487), p = f(p, m, n, o, b[h + 12], 11, -421815835), o = f(o, p, m, n, b[h + 15], 16, 530742520), n = f(n, o, p, m, b[h + 2], 23, -995338651), m = g(m, n, o, p, b[h], 6, -198630844), p = g(p, m, n, o, b[h + 7], 10, 1126891415), o = g(o, p, m, n, b[h + 14], 15, -1416354905), n = g(n, o, p, m, b[h + 5], 21, -57434055), m = g(m, n, o, p, b[h + 12], 6, 1700485571), p = g(p, m, n, o, b[h + 3], 10, -1894986606), o = g(o, p, m, n, b[h + 10], 15, -1051523), n = g(n, o, p, m, b[h + 1], 21, -2054922799), m = g(m, n, o, p, b[h + 8], 6, 1873313359), p = g(p, m, n, o, b[h + 15], 10, -30611744), o = g(o, p, m, n, b[h + 6], 15, -1560198380), n = g(n, o, p, m, b[h + 13], 21, 1309151649), m = g(m, n, o, p, b[h + 4], 6, -145523070), p = g(p, m, n, o, b[h + 11], 10, -1120210379), o = g(o, p, m, n, b[h + 2], 15, 718787259), n = g(n, o, p, m, b[h + 9], 21, -343485551), m = a(m, i), n = a(n, j), o = a(o, k), p = a(p, l);}return [m, n, o, p];}function i(a) {var b,c = \"\";for (b = 0; b < 32 * a.length; b += 8) {c += String.fromCharCode(a[b >> 5] >>> b % 32 & 255);}return c;}function j(a) {var b,c = [];for (c[(a.length >> 2) - 1] = void 0, b = 0; b < c.length; b += 1) {c[b] = 0;}for (b = 0; b < 8 * a.length; b += 8) {c[b >> 5] |= (255 & a.charCodeAt(b / 8)) << b % 32;}return c;}function k(a) {return i(h(j(a), 8 * a.length));}function l(a, b) {var c,d,e = j(a),f = [],g = [];for (f[15] = g[15] = void 0, e.length > 16 && (e = h(e, 8 * a.length)), c = 0; c < 16; c += 1) {f[c] = 909522486 ^ e[c], g[c] = 1549556828 ^ e[c];}return d = h(f.concat(j(b)), 512 + 8 * b.length), i(h(g.concat(d), 640));}function m(a) {var b,c,d = \"0123456789abcdef\",e = \"\";for (c = 0; c < a.length; c += 1) {b = a.charCodeAt(c), e += d.charAt(b >>> 4 & 15) + d.charAt(15 & b);}return e;}function n(a) {return unescape(encodeURIComponent(a));}function o(a) {return k(n(a));}function p(a) {return m(o(a));}function q(a, b) {return l(n(a), n(b));}function r(a, b) {return m(q(a, b));}function s(a, b, c) {return b ? c ? q(b, a) : r(b, a) : c ? o(a) : p(a);}return s;}(),RongIMLib;!function (a) {!function (a) {a[a.ALL = 1] = \"ALL\", a[a.PART = 2] = \"PART\";}(a.MentionedType || (a.MentionedType = {}));a.MentionedType;!function (a) {a[a.CUSTOMER_SERVICE = 1] = \"CUSTOMER_SERVICE\", a[a.RECALL = 2] = \"RECALL\";}(a.MethodType || (a.MethodType = {}));a.MethodType;!function (a) {a[a.IN_BLACK_LIST = 0] = \"IN_BLACK_LIST\", a[a.NOT_IN_BLACK_LIST = 1] = \"NOT_IN_BLACK_LIST\";}(a.BlacklistStatus || (a.BlacklistStatus = {}));a.BlacklistStatus;!function (a) {a[a.XHR_POLLING = 0] = \"XHR_POLLING\", a[a.WEBSOCKET = 1] = \"WEBSOCKET\", a[a.HTTP = 0] = \"HTTP\", a[a.HTTPS = 1] = \"HTTPS\";}(a.ConnectionChannel || (a.ConnectionChannel = {}));a.ConnectionChannel;!function (a) {a[a.ONLY_ROBOT = 1] = \"ONLY_ROBOT\", a[a.ONLY_HUMAN = 2] = \"ONLY_HUMAN\", a[a.ROBOT_FIRST = 3] = \"ROBOT_FIRST\", a[a.HUMAN_FIRST = 4] = \"HUMAN_FIRST\";}(a.CustomerType || (a.CustomerType = {}));a.CustomerType;!function (a) {a[a.NONE = 0] = \"NONE\", a[a.SQQUENCE = 1] = \"SQQUENCE\", a[a.REVERSE = 2] = \"REVERSE\";}(a.GetChatRoomType || (a.GetChatRoomType = {}));a.GetChatRoomType;!function (a) {a[a.CONNECTED = 0] = \"CONNECTED\", a[a.CONNECTING = 1] = \"CONNECTING\", a[a.DISCONNECTED = 2] = \"DISCONNECTED\", a[a.KICKED_OFFLINE_BY_OTHER_CLIENT = 6] = \"KICKED_OFFLINE_BY_OTHER_CLIENT\", a[a.WEBSOCKET_UNAVAILABLE = 7] = \"WEBSOCKET_UNAVAILABLE\", a[a.NETWORK_UNAVAILABLE = 3] = \"NETWORK_UNAVAILABLE\", a[a.DOMAIN_INCORRECT = 12] = \"DOMAIN_INCORRECT\", a[a.APPKEY_IS_FAKE = 20] = \"APPKEY_IS_FAKE\", a[a.CONNECTION_CLOSED = 4] = \"CONNECTION_CLOSED\", a[a.ULTRALIMIT = 1101] = \"ULTRALIMIT\", a[a.REQUEST_NAVI = 201] = \"REQUEST_NAVI\", a[a.RESPONSE_NAVI = 202] = \"RESPONSE_NAVI\", a[a.RESPONSE_NAVI_ERROR = 203] = \"RESPONSE_NAVI_ERROR\", a[a.RESPONSE_NAVI_TIMEOUT = 204] = \"RESPONSE_NAVI_TIMEOUT\";}(a.ConnectionStatus || (a.ConnectionStatus = {}));a.ConnectionStatus;!function (a) {a[a.DO_NOT_DISTURB = 0] = \"DO_NOT_DISTURB\", a[a.NOTIFY = 1] = \"NOTIFY\";}(a.ConversationNotificationStatus || (a.ConversationNotificationStatus = {}));a.ConversationNotificationStatus;!function (a) {a[a.NONE = 0] = \"NONE\", a[a.PRIVATE = 1] = \"PRIVATE\", a[a.DISCUSSION = 2] = \"DISCUSSION\", a[a.GROUP = 3] = \"GROUP\", a[a.CHATROOM = 4] = \"CHATROOM\", a[a.CUSTOMER_SERVICE = 5] = \"CUSTOMER_SERVICE\", a[a.SYSTEM = 6] = \"SYSTEM\", a[a.APP_PUBLIC_SERVICE = 7] = \"APP_PUBLIC_SERVICE\", a[a.PUBLIC_SERVICE = 8] = \"PUBLIC_SERVICE\";}(a.ConversationType || (a.ConversationType = {}));a.ConversationType;!function (a) {a[a.OPENED = 0] = \"OPENED\", a[a.CLOSED = 1] = \"CLOSED\";}(a.DiscussionInviteStatus || (a.DiscussionInviteStatus = {}));a.DiscussionInviteStatus;!function (a) {a[a.RECALL_MESSAGE = 25101] = \"RECALL_MESSAGE\", a[a.SEND_FREQUENCY_TOO_FAST = 20604] = \"SEND_FREQUENCY_TOO_FAST\", a[a.RC_MSG_UNAUTHORIZED = 20406] = \"RC_MSG_UNAUTHORIZED\", a[a.RC_DISCUSSION_GROUP_ID_INVALID = 20407] = \"RC_DISCUSSION_GROUP_ID_INVALID\", a[a.FORBIDDEN_IN_GROUP = 22408] = \"FORBIDDEN_IN_GROUP\", a[a.NOT_IN_DISCUSSION = 21406] = \"NOT_IN_DISCUSSION\", a[a.NOT_IN_GROUP = 22406] = \"NOT_IN_GROUP\", a[a.NOT_IN_CHATROOM = 23406] = \"NOT_IN_CHATROOM\", a[a.FORBIDDEN_IN_CHATROOM = 23408] = \"FORBIDDEN_IN_CHATROOM\", a[a.RC_CHATROOM_USER_KICKED = 23409] = \"RC_CHATROOM_USER_KICKED\", a[a.RC_CHATROOM_NOT_EXIST = 23410] = \"RC_CHATROOM_NOT_EXIST\", a[a.RC_CHATROOM_IS_FULL = 23411] = \"RC_CHATROOM_IS_FULL\", a[a.RC_CHATROOM_PATAMETER_INVALID = 23412] = \"RC_CHATROOM_PATAMETER_INVALID\", a[a.CHATROOM_GET_HISTORYMSG_ERROR = 23413] = \"CHATROOM_GET_HISTORYMSG_ERROR\", a[a.CHATROOM_NOT_OPEN_HISTORYMSG_STORE = 23414] = \"CHATROOM_NOT_OPEN_HISTORYMSG_STORE\", a[a.SENSITIVE_SHIELD = 21501] = \"SENSITIVE_SHIELD\", a[a.SENSITIVE_REPLACE = 21502] = \"SENSITIVE_REPLACE\", a[a.TIMEOUT = -1] = \"TIMEOUT\", a[a.UNKNOWN = -2] = \"UNKNOWN\", a[a.JOIN_IN_DISCUSSION = 21407] = \"JOIN_IN_DISCUSSION\", a[a.CREATE_DISCUSSION = 21408] = \"CREATE_DISCUSSION\", a[a.INVITE_DICUSSION = 21409] = \"INVITE_DICUSSION\", a[a.GET_USERINFO_ERROR = 23407] = \"GET_USERINFO_ERROR\", a[a.REJECTED_BY_BLACKLIST = 405] = \"REJECTED_BY_BLACKLIST\", a[a.RC_NET_CHANNEL_INVALID = 30001] = \"RC_NET_CHANNEL_INVALID\", a[a.RC_NET_UNAVAILABLE = 30002] = \"RC_NET_UNAVAILABLE\", a[a.RC_MSG_RESP_TIMEOUT = 30003] = \"RC_MSG_RESP_TIMEOUT\", a[a.RC_HTTP_SEND_FAIL = 30004] = \"RC_HTTP_SEND_FAIL\", a[a.RC_HTTP_REQ_TIMEOUT = 30005] = \"RC_HTTP_REQ_TIMEOUT\", a[a.RC_HTTP_RECV_FAIL = 30006] = \"RC_HTTP_RECV_FAIL\", a[a.RC_NAVI_RESOURCE_ERROR = 30007] = \"RC_NAVI_RESOURCE_ERROR\", a[a.RC_NODE_NOT_FOUND = 30008] = \"RC_NODE_NOT_FOUND\", a[a.RC_DOMAIN_NOT_RESOLVE = 30009] = \"RC_DOMAIN_NOT_RESOLVE\", a[a.RC_SOCKET_NOT_CREATED = 30010] = \"RC_SOCKET_NOT_CREATED\", a[a.RC_SOCKET_DISCONNECTED = 30011] = \"RC_SOCKET_DISCONNECTED\", a[a.RC_PING_SEND_FAIL = 30012] = \"RC_PING_SEND_FAIL\", a[a.RC_PONG_RECV_FAIL = 30013] = \"RC_PONG_RECV_FAIL\", a[a.RC_MSG_SEND_FAIL = 30014] = \"RC_MSG_SEND_FAIL\", a[a.RC_CONN_ACK_TIMEOUT = 31e3] = \"RC_CONN_ACK_TIMEOUT\", a[a.RC_CONN_PROTO_VERSION_ERROR = 31001] = \"RC_CONN_PROTO_VERSION_ERROR\", a[a.RC_CONN_ID_REJECT = 31002] = \"RC_CONN_ID_REJECT\", a[a.RC_CONN_SERVER_UNAVAILABLE = 31003] = \"RC_CONN_SERVER_UNAVAILABLE\", a[a.RC_CONN_USER_OR_PASSWD_ERROR = 31004] = \"RC_CONN_USER_OR_PASSWD_ERROR\", a[a.RC_CONN_NOT_AUTHRORIZED = 31005] = \"RC_CONN_NOT_AUTHRORIZED\", a[a.RC_CONN_REDIRECTED = 31006] = \"RC_CONN_REDIRECTED\", a[a.RC_CONN_PACKAGE_NAME_INVALID = 31007] = \"RC_CONN_PACKAGE_NAME_INVALID\", a[a.RC_CONN_APP_BLOCKED_OR_DELETED = 31008] = \"RC_CONN_APP_BLOCKED_OR_DELETED\", a[a.RC_CONN_USER_BLOCKED = 31009] = \"RC_CONN_USER_BLOCKED\", a[a.RC_DISCONN_KICK = 31010] = \"RC_DISCONN_KICK\", a[a.RC_DISCONN_EXCEPTION = 31011] = \"RC_DISCONN_EXCEPTION\", a[a.RC_QUERY_ACK_NO_DATA = 32001] = \"RC_QUERY_ACK_NO_DATA\", a[a.RC_MSG_DATA_INCOMPLETE = 32002] = \"RC_MSG_DATA_INCOMPLETE\", a[a.BIZ_ERROR_CLIENT_NOT_INIT = 33001] = \"BIZ_ERROR_CLIENT_NOT_INIT\", a[a.BIZ_ERROR_DATABASE_ERROR = 33002] = \"BIZ_ERROR_DATABASE_ERROR\", a[a.BIZ_ERROR_INVALID_PARAMETER = 33003] = \"BIZ_ERROR_INVALID_PARAMETER\", a[a.BIZ_ERROR_NO_CHANNEL = 33004] = \"BIZ_ERROR_NO_CHANNEL\", a[a.BIZ_ERROR_RECONNECT_SUCCESS = 33005] = \"BIZ_ERROR_RECONNECT_SUCCESS\", a[a.BIZ_ERROR_CONNECTING = 33006] = \"BIZ_ERROR_CONNECTING\", a[a.MSG_ROAMING_SERVICE_UNAVAILABLE = 33007] = \"MSG_ROAMING_SERVICE_UNAVAILABLE\", a[a.MSG_INSERT_ERROR = 33008] = \"MSG_INSERT_ERROR\", a[a.MSG_DEL_ERROR = 33009] = \"MSG_DEL_ERROR\", a[a.CONVER_REMOVE_ERROR = 34001] = \"CONVER_REMOVE_ERROR\", a[a.CONVER_GETLIST_ERROR = 34002] = \"CONVER_GETLIST_ERROR\", a[a.CONVER_SETOP_ERROR = 34003] = \"CONVER_SETOP_ERROR\", a[a.CONVER_TOTAL_UNREAD_ERROR = 34004] = \"CONVER_TOTAL_UNREAD_ERROR\", a[a.CONVER_TYPE_UNREAD_ERROR = 34005] = \"CONVER_TYPE_UNREAD_ERROR\", a[a.CONVER_ID_TYPE_UNREAD_ERROR = 34006] = \"CONVER_ID_TYPE_UNREAD_ERROR\", a[a.CONVER_CLEAR_ERROR = 34007] = \"CONVER_CLEAR_ERROR\", a[a.CLEAR_HIS_ERROR = 34010] = \"CLEAR_HIS_ERROR\", a[a.CLEAR_HIS_TYPE_ERROR = 34008] = \"CLEAR_HIS_TYPE_ERROR\", a[a.CLEAR_HIS_TIME_ERROR = 34011] = \"CLEAR_HIS_TIME_ERROR\", a[a.CONVER_GET_ERROR = 34009] = \"CONVER_GET_ERROR\", a[a.GROUP_SYNC_ERROR = 35001] = \"GROUP_SYNC_ERROR\", a[a.GROUP_MATCH_ERROR = 35002] = \"GROUP_MATCH_ERROR\", a[a.CHATROOM_ID_ISNULL = 36001] = \"CHATROOM_ID_ISNULL\", a[a.CHARTOOM_JOIN_ERROR = 36002] = \"CHARTOOM_JOIN_ERROR\", a[a.CHATROOM_HISMESSAGE_ERROR = 36003] = \"CHATROOM_HISMESSAGE_ERROR\", a[a.BLACK_ADD_ERROR = 37001] = \"BLACK_ADD_ERROR\", a[a.BLACK_GETSTATUS_ERROR = 37002] = \"BLACK_GETSTATUS_ERROR\", a[a.BLACK_REMOVE_ERROR = 37003] = \"BLACK_REMOVE_ERROR\", a[a.DRAF_GET_ERROR = 38001] = \"DRAF_GET_ERROR\", a[a.DRAF_SAVE_ERROR = 38002] = \"DRAF_SAVE_ERROR\", a[a.DRAF_REMOVE_ERROR = 38003] = \"DRAF_REMOVE_ERROR\", a[a.SUBSCRIBE_ERROR = 39001] = \"SUBSCRIBE_ERROR\", a[a.QNTKN_FILETYPE_ERROR = 41001] = \"QNTKN_FILETYPE_ERROR\", a[a.QNTKN_GET_ERROR = 41002] = \"QNTKN_GET_ERROR\", a[a.COOKIE_ENABLE = 51001] = \"COOKIE_ENABLE\", a[a.GET_MESSAGE_BY_ID_ERROR = 61001] = \"GET_MESSAGE_BY_ID_ERROR\", a[a.HAVNODEVICEID = 24001] = \"HAVNODEVICEID\", a[a.DEVICEIDISHAVE = 24002] = \"DEVICEIDISHAVE\", a[a.SUCCESS = 0] = \"SUCCESS\", a[a.FEILD = 24009] = \"FEILD\", a[a.VOIPISNULL = 24013] = \"VOIPISNULL\", a[a.NOENGINETYPE = 24010] = \"NOENGINETYPE\", a[a.NULLCHANNELNAME = 24011] = \"NULLCHANNELNAME\", a[a.VOIPDYANMICERROR = 24012] = \"VOIPDYANMICERROR\", a[a.NOVOIP = 24014] = \"NOVOIP\", a[a.INTERNALERRROR = 24015] = \"INTERNALERRROR\", a[a.VOIPCLOSE = 24016] = \"VOIPCLOSE\", a[a.CLOSE_BEFORE_OPEN = 51001] = \"CLOSE_BEFORE_OPEN\", a[a.ALREADY_IN_USE = 51002] = \"ALREADY_IN_USE\", a[a.INVALID_CHANNEL_NAME = 51003] = \"INVALID_CHANNEL_NAME\", a[a.VIDEO_CONTAINER_IS_NULL = 51004] = \"VIDEO_CONTAINER_IS_NULL\", a[a.DELETE_MESSAGE_ID_IS_NULL = 61001] = \"DELETE_MESSAGE_ID_IS_NULL\", a[a.CANCEL = 1] = \"CANCEL\", a[a.REJECT = 2] = \"REJECT\", a[a.HANGUP = 3] = \"HANGUP\", a[a.BUSYLINE = 4] = \"BUSYLINE\", a[a.NO_RESPONSE = 5] = \"NO_RESPONSE\", a[a.ENGINE_UN_SUPPORTED = 6] = \"ENGINE_UN_SUPPORTED\", a[a.NETWORK_ERROR = 7] = \"NETWORK_ERROR\", a[a.REMOTE_CANCEL = 11] = \"REMOTE_CANCEL\", a[a.REMOTE_REJECT = 12] = \"REMOTE_REJECT\", a[a.REMOTE_HANGUP = 13] = \"REMOTE_HANGUP\", a[a.REMOTE_BUSYLINE = 14] = \"REMOTE_BUSYLINE\", a[a.REMOTE_NO_RESPONSE = 15] = \"REMOTE_NO_RESPONSE\", a[a.REMOTE_ENGINE_UN_SUPPORTED = 16] = \"REMOTE_ENGINE_UN_SUPPORTED\", a[a.REMOTE_NETWORK_ERROR = 17] = \"REMOTE_NETWORK_ERROR\", a[a.VOIP_NOT_AVALIABLE = 18] = \"VOIP_NOT_AVALIABLE\";}(a.ErrorCode || (a.ErrorCode = {}));a.ErrorCode;!function (a) {a[a.MEDIA_AUDIO = 1] = \"MEDIA_AUDIO\", a[a.MEDIA_VEDIO = 2] = \"MEDIA_VEDIO\";}(a.VoIPMediaType || (a.VoIPMediaType = {}));a.VoIPMediaType;!function (a) {a[a.IMAGE = 1] = \"IMAGE\", a[a.AUDIO = 2] = \"AUDIO\", a[a.VIDEO = 3] = \"VIDEO\", a[a.FILE = 100] = \"FILE\";}(a.MediaType || (a.MediaType = {}));a.MediaType;!function (a) {a[a.SEND = 1] = \"SEND\", a[a.RECEIVE = 2] = \"RECEIVE\";}(a.MessageDirection || (a.MessageDirection = {}));a.MessageDirection;!function (a) {a[a.IMAGE = 1] = \"IMAGE\", a[a.AUDIO = 2] = \"AUDIO\", a[a.VIDEO = 3] = \"VIDEO\", a[a.FILE = 4] = \"FILE\";}(a.FileType || (a.FileType = {}));a.FileType;!function (a) {a[a.RC_REAL_TIME_LOCATION_NOT_INIT = -1] = \"RC_REAL_TIME_LOCATION_NOT_INIT\", a[a.RC_REAL_TIME_LOCATION_SUCCESS = 0] = \"RC_REAL_TIME_LOCATION_SUCCESS\", a[a.RC_REAL_TIME_LOCATION_GPS_DISABLED = 1] = \"RC_REAL_TIME_LOCATION_GPS_DISABLED\", a[a.RC_REAL_TIME_LOCATION_CONVERSATION_NOT_SUPPORT = 2] = \"RC_REAL_TIME_LOCATION_CONVERSATION_NOT_SUPPORT\", a[a.RC_REAL_TIME_LOCATION_IS_ON_GOING = 3] = \"RC_REAL_TIME_LOCATION_IS_ON_GOING\", a[a.RC_REAL_TIME_LOCATION_EXCEED_MAX_PARTICIPANT = 4] = \"RC_REAL_TIME_LOCATION_EXCEED_MAX_PARTICIPANT\", a[a.RC_REAL_TIME_LOCATION_JOIN_FAILURE = 5] = \"RC_REAL_TIME_LOCATION_JOIN_FAILURE\", a[a.RC_REAL_TIME_LOCATION_START_FAILURE = 6] = \"RC_REAL_TIME_LOCATION_START_FAILURE\", a[a.RC_REAL_TIME_LOCATION_NETWORK_UNAVAILABLE = 7] = \"RC_REAL_TIME_LOCATION_NETWORK_UNAVAILABLE\";}(a.RealTimeLocationErrorCode || (a.RealTimeLocationErrorCode = {}));a.RealTimeLocationErrorCode;!function (a) {a[a.RC_REAL_TIME_LOCATION_STATUS_IDLE = 0] = \"RC_REAL_TIME_LOCATION_STATUS_IDLE\", a[a.RC_REAL_TIME_LOCATION_STATUS_INCOMING = 1] = \"RC_REAL_TIME_LOCATION_STATUS_INCOMING\", a[a.RC_REAL_TIME_LOCATION_STATUS_OUTGOING = 2] = \"RC_REAL_TIME_LOCATION_STATUS_OUTGOING\", a[a.RC_REAL_TIME_LOCATION_STATUS_CONNECTED = 3] = \"RC_REAL_TIME_LOCATION_STATUS_CONNECTED\";}(a.RealTimeLocationStatus || (a.RealTimeLocationStatus = {}));a.RealTimeLocationStatus;!function (a) {a[a.READ = 1] = \"READ\", a[a.LISTENED = 2] = \"LISTENED\", a[a.DOWNLOADED = 4] = \"DOWNLOADED\", a[a.RETRIEVED = 8] = \"RETRIEVED\", a[a.UNREAD = 0] = \"UNREAD\";}(a.ReceivedStatus || (a.ReceivedStatus = {}));a.ReceivedStatus;!function (a) {a[a.READ = 1] = \"READ\", a[a.LISTENED = 2] = \"LISTENED\", a[a.DOWNLOADED = 4] = \"DOWNLOADED\", a[a.RETRIEVED = 8] = \"RETRIEVED\", a[a.UNREAD = 0] = \"UNREAD\";}(a.ReadStatus || (a.ReadStatus = {}));a.ReadStatus;!function (a) {a[a.EXACT = 0] = \"EXACT\", a[a.FUZZY = 1] = \"FUZZY\";}(a.SearchType || (a.SearchType = {}));a.SearchType;!function (a) {a[a.SENDING = 10] = \"SENDING\", a[a.FAILED = 20] = \"FAILED\", a[a.SENT = 30] = \"SENT\", a[a.RECEIVED = 40] = \"RECEIVED\", a[a.READ = 50] = \"READ\", a[a.DESTROYED = 60] = \"DESTROYED\";}(a.SentStatus || (a.SentStatus = {}));a.SentStatus;!function (a) {a[a.ACCEPTED = 0] = \"ACCEPTED\", a[a.UNACCEPTABLE_PROTOCOL_VERSION = 1] = \"UNACCEPTABLE_PROTOCOL_VERSION\", a[a.IDENTIFIER_REJECTED = 2] = \"IDENTIFIER_REJECTED\", a[a.SERVER_UNAVAILABLE = 3] = \"SERVER_UNAVAILABLE\", a[a.TOKEN_INCORRECT = 4] = \"TOKEN_INCORRECT\", a[a.NOT_AUTHORIZED = 5] = \"NOT_AUTHORIZED\", a[a.REDIRECT = 6] = \"REDIRECT\", a[a.PACKAGE_ERROR = 7] = \"PACKAGE_ERROR\", a[a.APP_BLOCK_OR_DELETE = 8] = \"APP_BLOCK_OR_DELETE\", a[a.BLOCK = 9] = \"BLOCK\", a[a.TOKEN_EXPIRE = 10] = \"TOKEN_EXPIRE\", a[a.DEVICE_ERROR = 11] = \"DEVICE_ERROR\";}(a.ConnectionState || (a.ConnectionState = {}));a.ConnectionState;!function (a) {a[a.ROOM = 1] = \"ROOM\", a[a.PERSON = 2] = \"PERSON\";}(a.RTCAPIType || (a.RTCAPIType = {}));a.RTCAPIType;}(RongIMLib || (RongIMLib = {}));var RongIMLib;!function (a) {var b = function () {function b() {}return b.getInstance = function () {if (!b._instance) throw new Error(\"RongIMClient is not initialized. Call .init() method first.\");return b._instance;}, b.showError = function (a) {console && console.error && __f__(\"error\", JSON.stringify(a), \" at rongyunIM\\\\rongyun.js:1\");}, b.logger = function (a) {var c = a.code,d = b.LogFactory[c] || a;d.funcName = a.funcName, d.msg = a.msg || d.msg, b._memoryStore.depend.showError && b.showError(d);}, b.logCallback = function (a, c) {return { onSuccess: a.onSuccess, onError: function onError(d) {b.logger({ code: d, funcName: c }), a.onError(d);} };}, b.logSendCallback = function (a, c) {return { onSuccess: a.onSuccess, onError: function onError(d, e) {b.logger({ code: d, funcName: c }), a.onError(d, e);}, onBefore: a.onBefore };}, b.init = function (c, d, e, f) {if (b._instance) return b._memoryStore.sdkInfo;b._instance = new b(), e = e || {};var g = \"http://\",h = \"ws://\";\"https:\" == location.protocol && (h = \"wss://\", g = \"https://\");var i = !1;\"function\" != typeof WebSocket && (i = !0);var j = function j() {var a = typeof WebSocket,b = \"number\" == typeof WebSocket.OPEN;return a && b;};\"object\" == typeof WebSocket && j() && (i = !1);var k = function k() {return document.documentElement.addBehavior;};a.RongUtil.supportLocalStorage() ? b._storageProvider = new a.LocalStorageProvider() : k() ? b._storageProvider = new a.UserDataProvider() : b._storageProvider = new a.MemeoryProvider();var l = b._storageProvider.getItem(\"serverIndex\");b.serverStore.index = l || 0;var m = \"{0}{1}\",n = { api: \"api.cn.ronghub.com\" };a.RongUtil.forEach(n, function (b, c) {n[c] = a.RongUtil.stringFormat(m, [g, b]);}), a.RongUtil.forEach(n, function (b, c) {var d = c in e,f = { path: e[c], tmpl: m, protocol: g, sub: !0 };b = d ? a.RongUtil.formatProtoclPath(f) : b, e[c] = b;});var o = e.navigaters || [];e.navi && (o = [e.navi]), !e.navi && a.RongUtil.isEqual(o.length, 0) && (o = [\"nav.cn.ronghub.com\", \"nav2-cn.ronghub.com\"]), a.RongUtil.forEach(o, function (b, c) {var d = { path: b, tmpl: m, protocol: g, sub: !0 };b = a.RongUtil.formatProtoclPath(d), o[c] = b;});var p = { protobuf: \"cdn.ronghub.com/protobuf-2.3.5.min.js\" };a.RongUtil.forEach(p, function (b, c) {p[c] = a.RongUtil.stringFormat(m, [g, b]);}), a.RongUtil.extend(p, e);var q = { isPolling: i, wsScheme: h, protocol: g, showError: !0, openMp: !0, snifferTime: 2e3, naviTimeout: 5e3, navigaters: o, maxNaviRetry: 10 };delete e.navigaters, a.RongUtil.extend(q, e), a.RongUtil.isFunction(e.protobuf) && (b.Protobuf = e.protobuf), b.userStatusObserver = new a.RongObserver(), new a.FeaturePatcher().patchAll();var r = { token: \"\", callback: null, lastReadTime: new a.LimitableMap(), historyMessageLimit: new a.MemoryCache(), conversationList: [], appKey: c, publicServiceMap: new a.PublicServiceMap(), providerType: 1, deltaTime: 0, filterMessages: [], isSyncRemoteConverList: !0, otherDevice: !1, custStore: {}, converStore: { latestMessage: {} }, connectAckTime: 0, voipStategy: 0, isFirstPingMsg: !0, depend: e, listenerList: b._memoryStore.listenerList, notification: {} };b._memoryStore = r, d && \"[object Object]\" == Object.prototype.toString.call(d) ? b._dataAccessProvider = d : b._dataAccessProvider = new a.ServerDataProvider(), e.appCallback = f;var s = b._dataAccessProvider.init(c, e);return b._memoryStore.sdkInfo = s, b._dataAccessProvider.setServerInfo({ navi: location.protocol + e.navi + \"/navi.xml\" }), b.MessageParams = { TextMessage: { objectName: \"RC:TxtMsg\", msgTag: new a.MessageTag(!0, !0) }, ImageMessage: { objectName: \"RC:ImgMsg\", msgTag: new a.MessageTag(!0, !0) }, DiscussionNotificationMessage: { objectName: \"RC:DizNtf\", msgTag: new a.MessageTag(!1, !0) }, VoiceMessage: { objectName: \"RC:VcMsg\", msgTag: new a.MessageTag(!0, !0) }, RichContentMessage: { objectName: \"RC:ImgTextMsg\", msgTag: new a.MessageTag(!0, !0) }, FileMessage: { objectName: \"RC:FileMsg\", msgTag: new a.MessageTag(!0, !0) }, HQVoiceMessage: { objectName: \"RC:HQVCMsg\", msgTag: new a.MessageTag(!0, !0) }, HandshakeMessage: { objectName: \"\", msgTag: new a.MessageTag(!0, !0) }, UnknownMessage: { objectName: \"\", msgTag: new a.MessageTag(!0, !0) }, LocationMessage: { objectName: \"RC:LBSMsg\", msgTag: new a.MessageTag(!0, !0) }, InformationNotificationMessage: { objectName: \"RC:InfoNtf\", msgTag: new a.MessageTag(!1, !0) }, ContactNotificationMessage: { objectName: \"RC:ContactNtf\", msgTag: new a.MessageTag(!1, !0) }, ProfileNotificationMessage: { objectName: \"RC:ProfileNtf\", msgTag: new a.MessageTag(!1, !0) }, CommandNotificationMessage: { objectName: \"RC:CmdNtf\", msgTag: new a.MessageTag(!0, !0) }, PublicServiceRichContentMessage: { objectName: \"RC:PSImgTxtMsg\", msgTag: new a.MessageTag(!0, !0) }, PublicServiceMultiRichContentMessage: { objectName: \"RC:PSMultiImgTxtMsg\", msgTag: new a.MessageTag(!0, !0) }, JrmfRedPacketMessage: { objectName: \"RCJrmf:RpMsg\", msgTag: new a.MessageTag(!0, !0) }, JrmfRedPacketOpenedMessage: { objectName: \"RCJrmf:RpOpendMsg\", msgTag: new a.MessageTag(!0, !0) }, GroupNotificationMessage: { objectName: \"RC:GrpNtf\", msgTag: new a.MessageTag(!1, !0) }, CommandMessage: { objectName: \"RC:CmdMsg\", msgTag: new a.MessageTag(!1, !1) }, TypingStatusMessage: { objectName: \"RC:TypSts\", msgTag: new a.MessageTag(!1, !1) }, PublicServiceCommandMessage: { objectName: \"RC:PSCmd\",\n            msgTag: new a.MessageTag(!1, !1) }, RecallCommandMessage: { objectName: \"RC:RcCmd\", msgTag: new a.MessageTag(!1, !0) }, SyncReadStatusMessage: { objectName: \"RC:SRSMsg\", msgTag: new a.MessageTag(!1, !1) }, ReadReceiptRequestMessage: { objectName: \"RC:RRReqMsg\", msgTag: new a.MessageTag(!1, !1) }, ReadReceiptResponseMessage: { objectName: \"RC:RRRspMsg\", msgTag: new a.MessageTag(!1, !1) }, ChangeModeResponseMessage: { objectName: \"RC:CsChaR\", msgTag: new a.MessageTag(!1, !1) }, ChangeModeMessage: { objectName: \"RC:CSCha\", msgTag: new a.MessageTag(!1, !1) }, EvaluateMessage: { objectName: \"RC:CsEva\", msgTag: new a.MessageTag(!1, !1) }, CustomerContact: { objectName: \"RC:CsContact\", msgTag: new a.MessageTag(!1, !1) }, HandShakeMessage: { objectName: \"RC:CsHs\", msgTag: new a.MessageTag(!1, !1) }, HandShakeResponseMessage: { objectName: \"RC:CsHsR\", msgTag: new a.MessageTag(!1, !1) }, SuspendMessage: { objectName: \"RC:CsSp\", msgTag: new a.MessageTag(!1, !1) }, TerminateMessage: { objectName: \"RC:CsEnd\", msgTag: new a.MessageTag(!1, !1) }, CustomerStatusUpdateMessage: { objectName: \"RC:CsUpdate\", msgTag: new a.MessageTag(!1, !1) }, ReadReceiptMessage: { objectName: \"RC:ReadNtf\", msgTag: new a.MessageTag(!1, !1) } }, b.MessageParams.AcceptMessage = { objectName: \"RC:VCAccept\", msgTag: new a.MessageTag(!1, !1) }, b.MessageParams.RingingMessage = { objectName: \"RC:VCRinging\", msgTag: new a.MessageTag(!1, !1) }, b.MessageParams.SummaryMessage = { objectName: \"RC:VCSummary\", msgTag: new a.MessageTag(!1, !1) }, b.MessageParams.HungupMessage = { objectName: \"RC:VCHangup\", msgTag: new a.MessageTag(!1, !1) }, b.MessageParams.InviteMessage = { objectName: \"RC:VCInvite\", msgTag: new a.MessageTag(!1, !1) }, b.MessageParams.MediaModifyMessage = { objectName: \"RC:VCModifyMedia\", msgTag: new a.MessageTag(!1, !1) }, b.MessageParams.MemberModifyMessage = { objectName: \"RC:VCModifyMem\", msgTag: new a.MessageTag(!1, !1) }, b.MessageType = { TextMessage: \"TextMessage\", ImageMessage: \"ImageMessage\", DiscussionNotificationMessage: \"DiscussionNotificationMessage\", VoiceMessage: \"VoiceMessage\", RichContentMessage: \"RichContentMessage\", HandshakeMessage: \"HandshakeMessage\", UnknownMessage: \"UnknownMessage\", LocationMessage: \"LocationMessage\", InformationNotificationMessage: \"InformationNotificationMessage\", ContactNotificationMessage: \"ContactNotificationMessage\", ProfileNotificationMessage: \"ProfileNotificationMessage\", CommandNotificationMessage: \"CommandNotificationMessage\", CommandMessage: \"CommandMessage\", TypingStatusMessage: \"TypingStatusMessage\", ChangeModeResponseMessage: \"ChangeModeResponseMessage\", ChangeModeMessage: \"ChangeModeMessage\", EvaluateMessage: \"EvaluateMessage\", HandShakeMessage: \"HandShakeMessage\", HandShakeResponseMessage: \"HandShakeResponseMessage\", SuspendMessage: \"SuspendMessage\", TerminateMessage: \"TerminateMessage\", CustomerContact: \"CustomerContact\", CustomerStatusUpdateMessage: \"CustomerStatusUpdateMessage\", SyncReadStatusMessage: \"SyncReadStatusMessage\", ReadReceiptRequestMessage: \"ReadReceiptRequestMessage\", ReadReceiptResponseMessage: \"ReadReceiptResponseMessage\", FileMessage: \"FileMessage\", HQVoiceMessage: \"HQVoiceMessage\", AcceptMessage: \"AcceptMessage\", RingingMessage: \"RingingMessage\", SummaryMessage: \"SummaryMessage\", HungupMessage: \"HungupMessage\", InviteMessage: \"InviteMessage\", MediaModifyMessage: \"MediaModifyMessage\", MemberModifyMessage: \"MemberModifyMessage\", JrmfRedPacketMessage: \"JrmfRedPacketMessage\", JrmfRedPacketOpenedMessage: \"JrmfRedPacketOpenedMessage\", GroupNotificationMessage: \"GroupNotificationMessage\", PublicServiceRichContentMessage: \"PublicServiceRichContentMessage\", PublicServiceMultiRichContentMessage: \"PublicServiceMultiRichContentMessage\", PublicServiceCommandMessage: \"PublicServiceCommandMessage\", RecallCommandMessage: \"RecallCommandMessage\", ReadReceiptMessage: \"ReadReceiptMessage\" }, b.LogFactory = { \"-1\": { code: \"-1\", msg: \"æœåŠ¡å™¨è¶…æ—¶\" }, \"-2\": { code: \"-2\", msg: \"æœªçŸ¥åŽŸå› å¤±è´¥\" }, \"-3\": { code: \"-3\", msg: \"å‚æ•°é”™è¯¯\" }, \"-4\": { code: \"-4\", msg: \"å‚æ•°ä¸æ­£ç¡®æˆ–å°šæœªå®žä¾‹åŒ–\" }, 25101: { code: \"25101\", msg: \"æ’¤å›žæ¶ˆæ¯å‚æ•°é”™è¯¯\", desc: \"è¯·æ£€æŸ¥æ’¤å›žæ¶ˆæ¯å‚æ•° https://rongcloud.github.io/websdk-demo/api-test.html\" }, 25102: { code: \"25101\", msg: \"åªèƒ½æ’¤å›žè‡ªå‘å‘é€çš„æ¶ˆæ¯\" }, 20604: { code: \"20604\", msg: \"å‘é€é¢‘çŽ‡è¿‡å¿«\", desc: \"https://developer.rongcloud.cn/ticket/info/9Q3L6vRKd1cLS7rycA==?type=1\" }, 20406: { code: \"20406\", msg: \"è¢«ç¦è¨€\" }, 23407: { code: \"23407\", msg: \"èŽ·å–ç”¨æˆ·å¤±è´¥\" }, 20407: { code: \"20407\", msg: \"ç¾¤ç»„Idæ— æ•ˆ\" }, 22408: { code: \"22408\", msg: \"ç¾¤ç»„è¢«ç¦è¨€\" }, 22406: { code: \"22406\", msg: \"ä¸åœ¨ç¾¤ç»„\" }, 35001: { code: \"35001\", msg: \"ç¾¤ç»„åŒæ­¥å¼‚å¸¸\" }, 35002: { code: \"35002\", msg: \"åŒ¹é…ç¾¤ä¿¡æ¯å¼‚å¸¸\" }, 21406: { code: \"21406\", msg: \"ä¸åœ¨è®¨è®ºç»„\" }, 21407: { code: \"21407\", msg: \"åŠ å…¥è®¨è®ºå¤±è´¥\" }, 21408: { code: \"21408\", msg: \"åˆ›å»ºè®¨è®ºç»„å¤±è´¥\" }, 21409: { code: \"21409\", msg: \"è®¾ç½®è®¨è®ºç»„é‚€è¯·çŠ¶æ€å¤±è´¥\" }, 23406: { code: \"23406\", msg: \"ä¸åœ¨èŠå¤©å®¤\" }, 23408: { code: \"23408\", msg: \"èŠå¤©å®¤è¢«ç¦è¨€\" }, 23409: { code: \"23409\", msg: \"èŠå¤©å®¤ä¸­æˆå‘˜è¢«è¸¢å‡º\" }, 23410: { code: \"23410\", msg: \"èŠå¤©å®¤ä¸å­˜åœ¨\" }, 23411: { code: \"23411\", msg: \"èŠå¤©å®¤æˆå‘˜å·²æ»¡\" }, 23412: { code: \"23412\", msg: \"èŽ·å–èŠå¤©å®¤ä¿¡æ¯å‚æ•°æ— æ•ˆ\" }, 23413: { code: \"23413\", msg: \"èŠå¤©å®¤å¼‚å¸¸\" }, 23414: { code: \"23414\", msg: \"æ²¡æœ‰æ‰“å¼€èŠå¤©å®¤æ¶ˆæ¯å­˜å‚¨\" }, 36001: { code: \"36001\", msg: \"åŠ å…¥èŠå¤©å®¤Idä¸ºç©º\" }, 36002: { code: \"36002\", msg: \"åŠ å…¥èŠå¤©å®¤å¤±è´¥\" }, 36003: { code: \"36003\", msg: \"æ‹‰å–èŠå¤©å®¤åŽ†å²æ¶ˆæ¯å¤±è´¥\" }, 24001: { code: \"24001\", msg: \"æ²¡æœ‰æ³¨å†ŒDeviveId ä¹Ÿå°±æ˜¯ç”¨æˆ·æ²¡æœ‰ç™»é™†\" }, 24002: { code: \"24002\", msg: \"ç”¨æˆ·å·²ç»å­˜åœ¨\" }, 0: { code: \"0\", msg: \"æˆåŠŸ\" }, 24009: { code: \"24009\", msg: \"æ²¡æœ‰å¯¹åº”çš„ç”¨æˆ·æˆ–token\" }, 24013: { code: \"24013\", msg: \"voipä¸ºç©º\" }, 24010: { code: \"24010\", msg: \"ä¸æ”¯æŒçš„Voipå¼•æ“Ž\" }, 24011: { code: \"24011\", msg: \"channelName æ˜¯ç©º\" }, 24012: { code: \"24012\", msg: \"ç”ŸæˆVoipkeyå¤±è´¥\" }, 24014: { code: \"24014\", msg: \"æ²¡æœ‰é…ç½®voip\" }, 24015: { code: \"24015\", msg: \"æœåŠ¡å™¨å†…éƒ¨é”™è¯¯\" }, 24016: { code: \"24016\", msg: \"VOIP close\" }, 30001: { code: \"30001\", msg: \"é€šä¿¡è¿‡ç¨‹ä¸­ï¼Œå½“å‰Socketä¸å­˜åœ¨\" }, 30002: { code: \"30002\", msg: \"Socketè¿žæŽ¥ä¸å¯ç”¨\" }, 30003: { code: \"30003\", msg: \"é€šä¿¡è¶…æ—¶\" }, 30004: { code: \"30004\", msg: \"å¯¼èˆªæ“ä½œæ—¶ï¼ŒHttpè¯·æ±‚å¤±è´¥\" }, 30005: { code: \"30005\", msg: \"HTTPè¯·æ±‚å¤±è´¥\" }, 30006: { code: \"30006\", msg: \"HTTPæŽ¥æ”¶å¤±è´¥\" }, 30007: { code: \"30007\", msg: \"å¯¼èˆªèµ„æºé”™è¯¯\" }, 30008: { code: \"30008\", msg: \"æ²¡æœ‰æœ‰æ•ˆæ•°æ®\" }, 30009: { code: \"30009\", msg: \"ä¸å­˜åœ¨æœ‰æ•ˆ IP åœ°å€\" }, 30010: { code: \"30010\", msg: \"åˆ›å»º Socket å¤±è´¥\" }, 30011: { code: \"30011\", msg: \" Socket è¢«æ–­å¼€\" }, 30012: { code: \"30012\", msg: \"PING æ“ä½œå¤±è´¥\" }, 30013: { code: \"30013\", msg: \"PING è¶…æ—¶\" }, 30014: { code: \"30014\", msg: \"æ¶ˆæ¯å‘é€å¤±è´¥\" }, 30016: { code: \"30016\", msg: \"æ¶ˆæ¯å¤§å°è¶…é™ï¼Œæœ€å¤§ 128 KB\" }, 31000: { code: \"31000\", msg: \"åš connect è¿žæŽ¥æ—¶ï¼Œæ”¶åˆ°çš„ ACK è¶…æ—¶\" }, 31001: { code: \"31001\", msg: \"å‚æ•°é”™è¯¯\" }, 31002: { code: \"31002\", msg: \"å‚æ•°é”™è¯¯ï¼ŒApp Id é”™è¯¯\" }, 31003: { code: \"31003\", msg: \"æœåŠ¡å™¨ä¸å¯ç”¨\" }, 31004: { code: \"31004\", msg: \"Token é”™è¯¯\" }, 31005: { code: \"31005\", msg: \"App Id ä¸Ž Token ä¸åŒ¹é…\" }, 31006: { code: \"31006\", msg: \"é‡å®šå‘ï¼Œåœ°å€é”™è¯¯\" }, 31007: { code: \"31007\", msg: \"NAME ä¸ŽåŽå°æ³¨å†Œä¿¡æ¯ä¸ä¸€è‡´\" }, 31008: { code: \"31008\", msg: \"APP è¢«å±è”½ã€åˆ é™¤æˆ–ä¸å­˜åœ¨\" }, 31009: { code: \"31009\", msg: \"ç”¨æˆ·è¢«å±è”½\" }, 31010: { code: \"31010\", msg: \"Disconnectï¼Œç”±æœåŠ¡å™¨è¿”å›žï¼Œæ¯”å¦‚ç”¨æˆ·äº’è¸¢\" }, 31011: { code: \"31011\", msg: \"Disconnectï¼Œç”±æœåŠ¡å™¨è¿”å›žï¼Œæ¯”å¦‚ç”¨æˆ·äº’è¸¢\" }, 32001: { code: \"32001\", msg: \"åè®®å±‚å†…éƒ¨é”™è¯¯ã€‚queryï¼Œä¸Šä¼ ä¸‹è½½è¿‡ç¨‹ä¸­æ•°æ®é”™è¯¯\" }, 32002: { code: \"32002\", msg: \"åè®®å±‚å†…éƒ¨é”™è¯¯\" }, 33001: { code: \"33001\", msg: \"æœªè°ƒç”¨ init åˆå§‹åŒ–å‡½æ•°\" }, 33002: { code: \"33002\", msg: \"æ•°æ®åº“åˆå§‹åŒ–å¤±è´¥\" }, 33003: { code: \"33003\", msg: \"ä¼ å…¥å‚æ•°æ— æ•ˆ\" }, 33004: { code: \"33004\", msg: \"é€šé“æ— æ•ˆ\" }, 33005: { code: \"33005\", msg: \"é‡æ–°è¿žæŽ¥æˆåŠŸ\" }, 33006: { code: \"33006\", msg: \"è¿žæŽ¥ä¸­ï¼Œå†è°ƒç”¨ connect è¢«æ‹’ç»\" }, 33007: { code: \"33007\", msg: \"æ¶ˆæ¯æ¼«æ¸¸æœåŠ¡æœªå¼€é€š\" }, 33008: { code: \"33008\", msg: \"æ¶ˆæ¯æ·»åŠ å¤±è´¥\" }, 33009: { code: \"33009\", msg: \"æ¶ˆæ¯åˆ é™¤å¤±è´¥\" }, 34001: { code: \"34001\", msg: \"åˆ é™¤ä¼šè¯å¤±è´¥\" }, 34002: { code: \"34002\", msg: \"æ‹‰å–åŽ†å²æ¶ˆæ¯å¤±è´¥\" }, 34003: { code: \"34003\", msg: \"ä¼šè¯æŒ‡å®šå¼‚å¸¸\" }, 34004: { code: \"34004\", msg: \"èŽ·å–ä¼šè¯æœªè¯»æ¶ˆæ¯æ€»æ•°å¤±è´¥\" }, 34005: { code: \"34005\", msg: \"èŽ·å–æŒ‡å®šä¼šè¯ç±»åž‹æœªè¯»æ¶ˆæ¯æ•°å¼‚å¸¸\" }, 34006: { code: \"34006\", msg: \"èŽ·å–æŒ‡å®šç”¨æˆ·ID&ä¼šè¯ç±»åž‹æœªè¯»æ¶ˆæ¯æ•°å¼‚å¸¸\" }, 34007: { code: \"34007\", msg: \"æ¸…é™¤ä¼šè¯æ¶ˆæ¯å¼‚å¸¸\" }, 34008: { code: \"34008\", msg: \"èŽ·å–ä¼šè¯æ¶ˆæ¯å¼‚å¸¸\" }, 34009: { code: \"34009\", msg: \"æ¸…é™¤åŽ†å²æ¶ˆæ¯ä¼šè¯ç±»åž‹ä¸æ­£ç¡®\" }, 34010: { code: \"34010\", msg: \"æ¸…é™¤åŽ†å²æ¶ˆæ¯å¤±è´¥ï¼Œè¯·æ£€æŸ¥ä¼ å…¥å‚æ•°\" }, 37001: { code: \"37001\", msg: \"åŠ å…¥é»‘åå•å¼‚å¸¸\" }, 37002: { code: \"37002\", msg: \"èŽ·å¾—æŒ‡å®šäººå‘˜å†é»‘åå•ä¸­çš„çŠ¶æ€å¼‚å¸¸\" }, 37003: { code: \"37003\", msg: \"ç§»é™¤é»‘åå•å¼‚å¸¸\" }, 405: { code: \"405\", msg: \"åœ¨é»‘åå•ä¸­\" }, 38001: { code: \"38001\", msg: \"èŽ·å–è‰ç¨¿å¤±è´¥\" }, 38002: { code: \"38002\", msg: \"ä¿å­˜è‰ç¨¿å¤±è´¥\" }, 38003: { code: \"38003\", msg: \"åˆ é™¤è‰ç¨¿å¤±è´¥\" }, 39001: { code: \"39001\", msg: \"å…³æ³¨å…¬ä¼—å·å¤±è´¥\" }, 41001: { code: \"41001\", msg: \"æ–‡ä»¶ç±»åž‹é”™è¯¯\" }, 41002: { code: \"41002\", msg: \"èŽ·å–ä¸ƒç‰›tokenå¤±è´¥\" }, 51001: { code: \"51001\", msg: \"æœªå®‰è£…æˆ–æœªå¯åŠ¨æ’ä»¶\" }, 51002: { code: \"51002\", msg: \"è§†é¢‘å·²ç»å­˜åœ¨\" }, 51003: { code: \"51003\", msg: \"æ— æ•ˆçš„channelName\" }, 51004: { code: \"51004\", msg: \"è§†é¢‘å†…å®¹ä¸ºç©º\" }, 61001: { code: \"61001\", msg: \"åˆ é™¤æ¶ˆæ¯æ•°ç»„é•¿åº¦ä¸º 0\" } }, s;}, b.initApp = function (a, c) {b.init(a.appkey, a.dataAccessProvider, a.opts, function () {var a = b._instance;c(null, a);});}, b.connect = function (c, d, e, f) {a.CheckParam.getInstance().check([\"string\", \"object\", \"string|null|object|global|undefined\", \"object|null|global|undefined\"], \"connect\", !0, arguments);var g = { onSuccess: d.onSuccess, onTokenIncorrect: d.onTokenIncorrect, onError: function onError(a) {b.logger({ code: a, funcName: \"connect\" }), d.onError(a);} };b._dataAccessProvider.connect(c, g, e, f);}, b.reconnect = function (a, c) {var d = { onSuccess: a.onSuccess, onTokenIncorrect: a.onTokenIncorrect, onError: function onError(c) {b.logger({ code: c, funcName: \"connect\" }), a.onError(c);} };b._dataAccessProvider.reconnect(d, c);}, b.registerMessageType = function (a, c, d, e, f) {b._dataAccessProvider.registerMessageType(a, c, d, e, f), b.RegisterMessage[a].messageName = a, b.MessageType[a] = a, b.MessageParams[a] = { objectName: c, msgTag: d };}, b.prototype.registerMessageTypes = function (a) {a = a || {}, b._dataAccessProvider.registerMessageTypes(a);}, b.setConnectionStatusListener = function (a) {b._dataAccessProvider ? b._dataAccessProvider.setConnectionStatusListener(a) : b._memoryStore.listenerList.push(a);}, b.statusWatch = function (a) {\"function\" == typeof a && b.statusListeners.push(a);}, b.setOnReceiveMessageListener = function (a) {b._dataAccessProvider ? b._dataAccessProvider.setOnReceiveMessageListener(a) : b._memoryStore.listenerList.push(a);}, b.prototype.logout = function () {b._dataAccessProvider.logout();}, b.prototype.disconnect = function () {b._dataAccessProvider.disconnect();}, b.prototype.startCustomService = function (c, d, e) {if (c && d) {var f = new a.HandShakeMessage(e),g = this;a.RongIMClient._memoryStore.custStore.isInit = !0, b.getInstance().sendMessage(a.ConversationType.CUSTOMER_SERVICE, c, f, { onSuccess: function onSuccess(a) {a.isBlack ? (d.onError(), g.stopCustomeService(c, { onSuccess: function onSuccess() {}, onError: function onError() {} })) : d.onSuccess();}, onError: function onError() {d.onError();}, onBefore: function onBefore() {} });}}, b.prototype.stopCustomeService = function (c, d) {if (c && d) {var e = b._memoryStore.custStore[c];if (e) {var f = new a.SuspendMessage({ sid: e.sid, uid: e.uid, pid: e.pid });this.sendCustMessage(c, f, { onSuccess: function onSuccess() {setTimeout(function () {d.onSuccess();});}, onError: function onError() {setTimeout(function () {d.onError();});} });}}}, b.prototype.switchToHumanMode = function (c, d) {if (c && d) {var e = b._memoryStore.custStore[c];if (e) {var f = new a.ChangeModeMessage({ sid: e.sid, uid: e.uid, pid: e.pid });this.sendCustMessage(c, f, d);}}}, b.prototype.evaluateRebotCustomService = function (c, d, e, f) {if (c && f) {var g = b._memoryStore.custStore[c];if (g) {var h = new a.EvaluateMessage({ sid: g.sid, uid: g.uid, pid: g.pid, isRobotResolved: d, sugest: e, type: 0 });this.sendCustMessage(c, h, f);}}}, b.prototype.evaluateHumanCustomService = function (c, d, e, f) {if (c && f) {var g = b._memoryStore.custStore[c];if (g) {var h = new a.EvaluateMessage({ sid: g.sid, uid: g.uid, pid: g.pid, humanValue: d, sugest: e, type: 1 });this.sendCustMessage(c, h, f);}}}, b.prototype.sendCustMessage = function (c, d, e) {b.getInstance().sendMessage(a.ConversationType.CUSTOMER_SERVICE, c, d, { onSuccess: function onSuccess(a) {e.onSuccess();}, onError: function onError() {e.onError();}, onBefore: function onBefore() {} });}, b.prototype.getCurrentConnectionStatus = function () {return b._dataAccessProvider.getCurrentConnectionStatus();}, b.prototype.getConnectionChannel = function () {return a.Transportations._TransportType == a.Socket.XHR_POLLING ? a.ConnectionChannel.XHR_POLLING : a.Transportations._TransportType == a.Socket.WEBSOCKET ? a.ConnectionChannel.WEBSOCKET : void 0;}, b.prototype.getStorageProvider = function () {return 1 == b._memoryStore.providerType ? \"ServerDataProvider\" : \"OtherDataProvider\";}, b.prototype.setFilterMessages = function (a) {\"[object Array]\" == Object.prototype.toString.call(a) && (b._memoryStore.filterMessages = a);}, b.prototype.getAgoraDynamicKey = function (a, c, d) {b._dataAccessProvider.getAgoraDynamicKey(a, c, d);}, b.prototype.getCurrentUserId = function () {return a.Bridge._client.userId;}, b.prototype.getDeltaTime = function () {return b._dataAccessProvider.getDelaTime();}, b.prototype.getMessage = function (a, c) {b._dataAccessProvider.getMessage(a, b.logCallback(c, \"getMessage\"));}, b.prototype.deleteLocalMessages = function (a, c, d, e) {b._dataAccessProvider.removeLocalMessage(a, c, d, b.logCallback(e, \"deleteLocalMessages\"));}, b.prototype.updateMessage = function (a, c) {b._dataAccessProvider.updateMessage(a, b.logCallback(c, \"updateMessage\"));}, b.prototype.clearData = function () {return b._dataAccessProvider.clearData();}, b.prototype.clearMessages = function (a, c, d) {b._dataAccessProvider.clearMessages(a, c, { onSuccess: function onSuccess(a) {setTimeout(function () {d.onSuccess(a);});}, onError: function onError(a) {setTimeout(function () {b.logger({ code: a, funcName: \"clearMessages\" }), d.onError(a);});} });}, b.prototype.clearMessagesUnreadStatus = function (a, c, d) {b._dataAccessProvider.updateMessages(a, c, \"readStatus\", null, { onSuccess: function onSuccess(a) {setTimeout(function () {d.onSuccess(a);});}, onError: function onError(a) {setTimeout(function () {b.logger({ code: a, funcName: \"clearMessagesUnreadStatus\" }), d.onError(a);});} });}, b.prototype.deleteRemoteMessages = function (c, d, e, f) {if (a.CheckParam.getInstance().check([\"number\", \"string|number\", \"array\", \"object\"], \"deleteRemoteMessages\", !1, arguments), 0 == e.length) {var g = a.ErrorCode.DELETE_MESSAGE_ID_IS_NULL;return b.logger({ code: g, funcName: \"deleteRemoteMessages\" }), void f.onError(a.ErrorCode.DELETE_MESSAGE_ID_IS_NULL);}e.length > 100 && (e.length = 100), f.onSuccess(!0);}, b.prototype.deleteMessages = function (a, c, d, e) {b._dataAccessProvider.removeMessage(a, c, d, { onSuccess: function onSuccess(a) {setTimeout(function () {e.onSuccess(a);});}, onError: function onError(a) {setTimeout(function () {b.logger({ code: a, funcName: \"deleteMessages\" }), e.onError(a);});} });}, b.prototype.sendLocalMessage = function (c, d) {a.CheckParam.getInstance().check([\"object\", \"object\"], \"sendLocalMessage\", !1, arguments), b._dataAccessProvider.updateMessage(c), this.sendMessage(c.conversationType, c.targetId, c.content, b.logSendCallback(d, \"sendLocalMessage\"));}, b.prototype.sendMessage = function (c, d, e, f, g, h, i, j, k) {a.CheckParam.getInstance().check([\"number\", \"string|number\", \"object\", \"object\", \"undefined|object|null|global|boolean\", \"undefined|object|null|global|string\", \"undefined|object|null|global|string\", \"undefined|object|null|global|number\", \"undefined|object|null|global\"], \"sendMessage\", !1, arguments), b._dataAccessProvider.sendMessage(c, d, e, b.logSendCallback(f, \"sendMessage\"), g, h, i, j, k);}, b.prototype.sendReceiptResponse = function (a, c, d) {b._dataAccessProvider.sendReceiptResponse(a, c, b.logSendCallback(d, \"sendReceiptResponse\"));}, b.prototype.sendTypingStatusMessage = function (a, c, d, e) {b._dataAccessProvider.sendTypingStatusMessage(a, c, d, b.logSendCallback(e, \"sendTypingStatusMessage\"));}, b.prototype.sendStatusMessage = function (a, b, c) {throw new Error(\"Not implemented yet\");}, b.prototype.sendTextMessage = function (a, c, d, e) {b._dataAccessProvider.sendTextMessage(a, c, d, b.logSendCallback(e, \"sendTextMessage\"));}, b.prototype.sendRecallMessage = function (c, d) {var e = b.logSendCallback(d, \"sendRecallMessage\");if (c.senderUserId != a.Bridge._client.userId) {var e = b.logSendCallback(d, \"sendRecallMessage\");return void e.onError(a.ErrorCode.RECALL_MESSAGE, c);}b._dataAccessProvider.sendRecallMessage(c, e);}, b.prototype.insertMessage = function (a, c, d, e) {b._dataAccessProvider.addMessage(a, c, d, b.logCallback(e, \"insertMessage\"));}, b.prototype.setMessageContent = function (a, c, d) {b._dataAccessProvider.setMessageContent(a, c, d);}, b.prototype.setMessageSearchField = function (a, c, d) {b._dataAccessProvider.setMessageContent(a, c, d);}, b.prototype.getHistoryMessages = function (c, d, e, f, g, h, i) {if (a.CheckParam.getInstance().check([\"number\", \"string|number\", \"number|null|global|object\", \"number\", \"object\", \"undefined|object|null|global|string\", \"number|null|global|object\"], \"getHistoryMessages\", !1, arguments), f > 20) throw new Error(\"HistroyMessage count must be less than or equal to 20!\");if (c.valueOf() < 0) throw new Error(\"ConversationType must be greater than -1\");b._dataAccessProvider.getHistoryMessages(c, d, e, f, b.logCallback(g, \"getHistoryMessages\"), h, i);}, b.prototype.getRemoteHistoryMessages = function (c, d, e, f, g, h) {a.CheckParam.getInstance().check([\"number\", \"string|number\", \"number|null|global|object\", \"number\", \"object\", \"undefined|null|global|object\"], \"getRemoteHistoryMessages\", !1, arguments);var i = { errorCode: a.ErrorCode.RC_CONN_PROTO_VERSION_ERROR, funcName: \"getRemoteHistoryMessages\" };return f > 20 ? (b.logger(i), void g.onError(a.ErrorCode.RC_CONN_PROTO_VERSION_ERROR)) : c.valueOf() < 0 ? (b.logger(i), void g.onError(a.ErrorCode.RC_CONN_PROTO_VERSION_ERROR)) : void b._dataAccessProvider.getRemoteHistoryMessages(c, d, e, f, b.logCallback(g, \"getRemoteHistoryMessages\"), h);}, b.prototype.clearHistoryMessages = function (a, c) {b._dataAccessProvider.clearHistoryMessages(a, c);}, b.prototype.clearRemoteHistoryMessages = function (a, c) {b._dataAccessProvider.clearRemoteHistoryMessages(a, b.logCallback(c, \"clearRemoteHistoryMessages\"));}, b.prototype.hasRemoteUnreadMessages = function (a, c) {b._dataAccessProvider.hasRemoteUnreadMessages(a, b.logCallback(c, \"hasRemoteUnreadMessages\"));}, b.prototype.getTotalUnreadCount = function (a, c) {b._dataAccessProvider.getTotalUnreadCount({ onSuccess: function onSuccess(b) {setTimeout(function () {a.onSuccess(b);});}, onError: function onError(c) {setTimeout(function () {b.logger({ code: c, funcName: \"getTotalUnreadCount\" }), a.onError(c);});} }, c);}, b.prototype.getConversationUnreadCount = function (a, c) {b._dataAccessProvider.getConversationUnreadCount(a, { onSuccess: function onSuccess(a) {setTimeout(function () {c.onSuccess(a);});}, onError: function onError(a) {setTimeout(function () {b.logger({ code: a, funcName: \"getConversationUnreadCount\" }), c.onError(a);});} });}, b.prototype.getUnreadCount = function (a, c, d) {b._dataAccessProvider.getUnreadCount(a, c, { onSuccess: function onSuccess(a) {setTimeout(function () {d.onSuccess(a);});}, onError: function onError(a) {setTimeout(function () {b.logger({ code: a, funcName: \"getUnreadCount\" }), d.onError(a);});} });}, b.prototype.setUnreadCount = function (c, d, e) {a.CheckParam.getInstance().check([\"number\", \"string\", \"number\"], \"setUnreadCount\", !1, arguments), b._dataAccessProvider.setUnreadCount(c, d, e);}, b.prototype.clearUnreadCountByTimestamp = function (a, c, d, e) {b._dataAccessProvider.clearUnreadCountByTimestamp(a, c, d, b.logCallback(e, \"clearUnreadCountByTimestamp\"));}, b.prototype.clearUnreadCount = function (a, c, d) {b._dataAccessProvider.clearUnreadCount(a, c, { onSuccess: function onSuccess(a) {setTimeout(function () {d.onSuccess(a);});}, onError: function onError(a) {setTimeout(function () {b.logger({ code: a, funcName: \"clearUnreadCount\" }), d.onError(a);});} });}, b.prototype.clearTotalUnreadCount = function (a) {b._dataAccessProvider.clearTotalUnreadCount({ onSuccess: function onSuccess(b) {a.onSuccess(b);}, onError: function onError(c) {setTimeout(function () {b.logger({ code: c, funcName: \"clearTotalUnreadCount\" }), a.onError(c);});} });}, b.prototype.clearLocalStorage = function (a) {b._storageProvider.clearItem(), a();}, b.prototype.setMessageExtra = function (a, c, d) {b._dataAccessProvider.setMessageExtra(a, c, { onSuccess: function onSuccess(a) {setTimeout(function () {d.onSuccess(a);});}, onError: function onError(a) {setTimeout(function () {b.logger({ code: a, funcName: \"setMessageExtra\" }), d.onError(a);});} });}, b.prototype.setMessageReceivedStatus = function (a, c, d) {b._dataAccessProvider.setMessageReceivedStatus(a, c, { onSuccess: function onSuccess(a) {setTimeout(function () {d.onSuccess(a);});}, onError: function onError(a) {setTimeout(function () {b.logger({ code: a, funcName: \"setMessageReceivedStatus\" }), d.onError(a);});} });}, b.prototype.setMessageStatus = function (a, c, d, e, f) {b._dataAccessProvider.setMessageStatus(a, c, d, e, b.logCallback(f, \"setMessageStatus\"));}, b.prototype.setMessageSentStatus = function (a, c, d) {b._dataAccessProvider.setMessageSentStatus(a, c, { onSuccess: function onSuccess(a) {setTimeout(function () {d.onSuccess(a);});}, onError: function onError(a) {setTimeout(function () {b.logger({ code: a, funcName: \"setMessageSentStatus\" }), d.onError(a);});} });}, b.prototype.clearTextMessageDraft = function (c, d) {a.CheckParam.getInstance().check([\"number\", \"string|number\", \"object\"], \"clearTextMessageDraft\", !1, arguments);var e = \"darf_\" + c + \"_\" + d;return delete b._memoryStore[e], !0;}, b.prototype.getTextMessageDraft = function (c, d) {if (a.CheckParam.getInstance().check([\"number\", \"string|number\", \"object\"], \"getTextMessageDraft\", !1, arguments), \"\" == d || c < 0) throw new Error(\"params error : \" + a.ErrorCode.DRAF_GET_ERROR);var e = \"darf_\" + c + \"_\" + d;return b._memoryStore[e];}, b.prototype.saveTextMessageDraft = function (c, d, e) {a.CheckParam.getInstance().check([\"number\", \"string|number\", \"string\", \"object\"], \"saveTextMessageDraft\", !1, arguments);var f = \"darf_\" + c + \"_\" + d;return b._memoryStore[f] = e, !0;}, b.prototype.searchConversationByContent = function (a, c, d) {b._dataAccessProvider.searchConversationByContent(a, b.logCallback(c, \"searchConversationByContent\"), d);}, b.prototype.searchMessageByContent = function (a, c, d, e, f, g, h) {b._dataAccessProvider.searchMessageByContent(a, c, d, e, f, g, b.logCallback(h, \"searchMessageByContent\"));}, b.prototype.clearCache = function () {b._dataAccessProvider.clearCache();}, b.prototype.clearConversations = function (c) {for (var d = [], e = 1; e < arguments.length; e++) {d[e - 1] = arguments[e];}0 == d.length && (d = [a.ConversationType.CHATROOM, a.ConversationType.CUSTOMER_SERVICE, a.ConversationType.DISCUSSION, a.ConversationType.GROUP, a.ConversationType.PRIVATE, a.ConversationType.SYSTEM, a.ConversationType.PUBLIC_SERVICE, a.ConversationType.APP_PUBLIC_SERVICE]), b._dataAccessProvider.clearConversations(d, { onSuccess: function onSuccess(a) {setTimeout(function () {c.onSuccess(a);});}, onError: function onError(a) {setTimeout(function () {b.logger({ code: a, funcName: \"clearConversations\" }), c.onError(a);});} });}, b.prototype.getConversation = function (c, d, e) {a.CheckParam.getInstance().check([\"number\", \"string|number\", \"object\"], \"getConversation\", !1, arguments), b._dataAccessProvider.getConversation(c, d, { onSuccess: function onSuccess(a) {setTimeout(function () {e.onSuccess(a);});}, onError: function onError(a) {setTimeout(function () {b.logger({ code: a, funcName: \"getConversation\" }), e.onError(a);});} });}, b.prototype.pottingConversation = function (c) {var d = this,e = !1;b._dataAccessProvider.getConversation(c.type, c.userId, { onSuccess: function onSuccess(f) {f ? e = !0 : f = new a.Conversation(), f.conversationType = c.type, f.targetId = c.userId, f.latestMessage = a.MessageUtil.messageParser(c.msg), f.latestMessageId = f.latestMessage.messageId, f.objectName = f.latestMessage.objectName, f.receivedStatus = f.latestMessage.receivedStatus, f.receivedTime = f.latestMessage.receiveTime, f.sentStatus = f.latestMessage.sentStatus, f.sentTime = f.latestMessage.sentTime;var g = b._storageProvider.getItem(\"mentioneds_\" + a.Bridge._client.userId + \"_\" + f.conversationType + \"_\" + f.targetId);if (g) {var h = JSON.parse(g);f.mentionedMsg = h[c.type + \"_\" + c.userId];}if (!e) if (a.RongUtil.supportLocalStorage()) {var i = b._storageProvider.getItem(\"cu\" + a.Bridge._client.userId + c.type + c.userId);f.unreadMessageCount = Number(i);} else f.unreadMessageCount = 0;f.conversationType == a.ConversationType.DISCUSSION && d.getDiscussion(c.userId, { onSuccess: function onSuccess(a) {f.conversationTitle = a.name;}, onError: function onError(a) {} }), b._dataAccessProvider.addConversation(f, { onSuccess: function onSuccess(a) {} });}, onError: function onError(a) {} });}, b.prototype.addConversation = function (a, c) {b._dataAccessProvider.addConversation(a, c);}, b.prototype.sortConversationList = function (a) {for (var c = [], d = 0, e = a.length; d < e; d++) {if (a[d]) if (a[d].isTop) c.push(a[d]), a.splice(d, 1);else for (var f = 0; f < e - d - 1; f++) {if (a[f].sentTime < a[f + 1].sentTime) {var g = a[f];a[f] = a[f + 1], a[f + 1] = g;}}}return b._memoryStore.conversationList = c.concat(a);}, b.prototype.getConversationList = function (c, d, e, f) {a.CheckParam.getInstance().check([\"object\", \"null|undefined|array|object|global\", \"number|undefined|null|object|global\", \"boolean|undefined|null|object|global\"], \"getConversationList\", !1, arguments);b._dataAccessProvider.getConversationList({ onSuccess: function onSuccess(a) {d || b._dataAccessProvider ? setTimeout(function () {c.onSuccess(a);}) : setTimeout(function () {c.onSuccess(b._memoryStore.conversationList);});}, onError: function onError(a) {setTimeout(function () {b.logger({ code: a, funcName: \"getConversationList\" }), c.onError(a);});} }, d, e, f);}, b.prototype.getRemoteConversationList = function (c, d, e, f) {a.CheckParam.getInstance().check([\"object\", \"null|array|object|global\", \"number|undefined|null|object|global\", \"boolean|undefined|null|object|global\"], \"getRemoteConversationList\", !1, arguments), b._dataAccessProvider.getRemoteConversationList(b.logCallback(c, \"getRemoteConversationList\"), d, e, f);}, b.prototype.updateConversation = function (a) {return b._dataAccessProvider.updateConversation(a);}, b.prototype.createConversation = function (b, c, d) {a.CheckParam.getInstance().check([\"number\", \"string|number\", \"string\"], \"createConversation\", !1, arguments);var e = new a.Conversation();return e.targetId = c, e.conversationType = b, e.conversationTitle = d, e.latestMessage = {}, e.unreadMessageCount = 0, e;}, b.prototype.removeConversation = function (c, d, e) {a.CheckParam.getInstance().check([\"number\", \"string|number\", \"object\"], \"removeConversation\", !1, arguments), b._dataAccessProvider.removeConversation(c, d, b.logCallback(e, \"removeConversation\"));}, b.prototype.setConversationHidden = function (c, d, e) {a.CheckParam.getInstance().check([\"number\", \"string|number\", \"boolean\"], \"setConversationHidden\", !1, arguments), b._dataAccessProvider.setConversationHidden(c, d, e);}, b.prototype.setConversationToTop = function (c, d, e, f) {a.CheckParam.getInstance().check([\"number\", \"string|number\", \"boolean\", \"object\"], \"setConversationToTop\", !1, arguments), b._dataAccessProvider.setConversationToTop(c, d, e, { onSuccess: function onSuccess(a) {setTimeout(function () {f.onSuccess(a);});}, onError: function onError(a) {setTimeout(function () {b.logger({ code: a, funcName: \"setConversationToTop\" }), f.onError(a);});} });}, b.prototype.getConversationNotificationStatus = function (a, c, d) {var e = { conversationType: a, targetId: c };b._dataAccessProvider.getConversationNotificationStatus(e, b.logCallback(d, \"getConversationNotificationStatus\"));}, b.prototype.setConversationNotificationStatus = function (a, c, d, e) {var f = { conversationType: a, targetId: c, status: status };b._dataAccessProvider.setConversationNotificationStatus(f, b.logCallback(e, \"setConversationNotificationStatus\"));}, b.prototype.getNotificationQuietHours = function (a) {throw new Error(\"Not implemented yet\");}, b.prototype.removeNotificationQuietHours = function (a) {throw new Error(\"Not implemented yet\");}, b.prototype.setNotificationQuietHours = function (a, b, c) {throw new Error(\"Not implemented yet\");}, b.prototype.addMemberToDiscussion = function (c, d, e) {a.CheckParam.getInstance().check([\"string\", \"array\", \"object\"], \"addMemberToDiscussion\", !1, arguments), b._dataAccessProvider.addMemberToDiscussion(c, d, b.logCallback(e, \"addMemberToDiscussion\"));}, b.prototype.createDiscussion = function (c, d, e) {a.CheckParam.getInstance().check([\"string\", \"array\", \"object\"], \"createDiscussion\", !1, arguments), b._dataAccessProvider.createDiscussion(c, d, e);}, b.prototype.getDiscussion = function (c, d) {a.CheckParam.getInstance().check([\"string\", \"object\"], \"getDiscussion\", !1, arguments), b._dataAccessProvider.getDiscussion(c, b.logCallback(d, \"getDiscussion\"));}, b.prototype.quitDiscussion = function (c, d) {a.CheckParam.getInstance().check([\"string\", \"object\"], \"quitDiscussion\", !1, arguments), b._dataAccessProvider.quitDiscussion(c, b.logCallback(d, \"quitDiscussion\"));}, b.prototype.removeMemberFromDiscussion = function (c, d, e) {a.CheckParam.getInstance().check([\"string\", \"string\", \"object\"], \"removeMemberFromDiscussion\", !1, arguments), b._dataAccessProvider.removeMemberFromDiscussion(c, d, b.logCallback(e, \"removeMemberFromDiscussion\"));}, b.prototype.setDiscussionInviteStatus = function (c, d, e) {a.CheckParam.getInstance().check([\"string\", \"number\", \"object\"], \"setDiscussionInviteStatus\", !1, arguments), b._dataAccessProvider.setDiscussionInviteStatus(c, d, b.logCallback(e, \"setDiscussionInviteStatus\"));}, b.prototype.setDiscussionName = function (c, d, e) {a.CheckParam.getInstance().check([\"string\", \"string\", \"object\"], \"setDiscussionName\", !1, arguments), b._dataAccessProvider.setDiscussionName(c, d, b.logCallback(e, \"setDiscussionName\"));}, b.prototype.joinChatRoom = function (c, d, e) {if (a.CheckParam.getInstance().check([\"string|number\", \"number\", \"object\"], \"joinChatRoom\", !1, arguments), \"\" == c) return void setTimeout(function () {var c = a.ErrorCode.CHATROOM_ID_ISNULL;b.logger({ code: c, funcName: \"joinChatRoom\" }), e.onError(a.ErrorCode.CHATROOM_ID_ISNULL);});b._dataAccessProvider.joinChatRoom(c, d, b.logCallback(e, \"joinChatRoom\"));}, b.prototype.setDeviceInfo = function (a) {b._dataAccessProvider.setDeviceInfo(a);}, b.prototype.setChatroomHisMessageTimestamp = function (c, d) {a.CheckParam.getInstance().check([\"string|number\", \"number\"], \"setChatroomHisMessageTimestamp\", !1, arguments), b._dataAccessProvider.setChatroomHisMessageTimestamp(c, d);}, b.prototype.getChatRoomHistoryMessages = function (c, d, e, f) {a.CheckParam.getInstance().check([\"string|number\", \"number\", \"number\", \"object\"], \"getChatRoomHistoryMessages\", !1, arguments), b._dataAccessProvider.getChatRoomHistoryMessages(c, d, e, b.logCallback(f, \"getChatRoomHistoryMessages\"));}, b.prototype.getChatRoomInfo = function (c, d, e, f) {a.CheckParam.getInstance().check([\"string|number\", \"number\", \"number\", \"object\"], \"getChatRoomInfo\", !1, arguments), b._dataAccessProvider.getChatRoomInfo(c, d, e, b.logCallback(f, \"getChatRoomInfo\"));}, b.prototype.quitChatRoom = function (c, d) {a.CheckParam.getInstance().check([\"string|number\", \"object\"], \"quitChatRoom\", !1, arguments), b._dataAccessProvider.quitChatRoom(c, b.logCallback(d, \"quitChatRoom\"));}, b.prototype.getRemotePublicServiceList = function (a, c) {b._dataAccessProvider.getRemotePublicServiceList(b.logCallback(a, \"getRemotePublicServiceList\"), c);}, b.prototype.getPublicServiceList = function (c) {b._memoryStore.depend.openMp && (a.CheckParam.getInstance().check([\"object\"], \"getPublicServiceList\", !1, arguments), this.getRemotePublicServiceList(b.logCallback(c, \"getPublicServiceList\")));}, b.prototype.getPublicServiceProfile = function (c, d, e) {b._memoryStore.depend.openMp && (a.CheckParam.getInstance().check([\"number\", \"string|number\", \"object\"], \"getPublicServiceProfile\", !1, arguments), b._dataAccessProvider.getPublicServiceProfile(c, d, b.logCallback(e, \"getPublicServiceProfile\")));}, b.prototype.pottingPublicSearchType = function (a, c) {if (b._memoryStore.depend.openMp) {var d = 0;return 0 == a ? (d |= 3, d |= 0 == c ? 12 : 48) : 1 == a ? (d |= 1, d |= 0 == c ? 8 : 32) : (d |= 2, d |= 0 == a ? 4 : 16), d;}}, b.prototype.searchPublicService = function (c, d, e) {if (b._memoryStore.depend.openMp) {a.CheckParam.getInstance().check([\"number\", \"string\", \"object\"], \"searchPublicService\", !1, arguments);var f = new b.Protobuf.SearchMpInput();f.setType(this.pottingPublicSearchType(0, c)), f.setId(d), b.bridge.queryMsg(29, a.MessageUtil.ArrayForm(f.toArrayBuffer()), a.Bridge._client.userId, b.logCallback(e, \"searchPublicService\"), \"SearchMpOutput\");}}, b.prototype.searchPublicServiceByType = function (c, d, e, f) {if (b._memoryStore.depend.openMp) {a.CheckParam.getInstance().check([\"number\", \"number\", \"string\", \"object\"], \"searchPublicServiceByType\", !1, arguments);var g = c == a.ConversationType.APP_PUBLIC_SERVICE ? 2 : 1,h = new b.Protobuf.SearchMpInput();h.setType(this.pottingPublicSearchType(g, d)), h.setId(e), b.bridge.queryMsg(29, a.MessageUtil.ArrayForm(h.toArrayBuffer()), a.Bridge._client.userId, b.logCallback(f, \"searchPublicServiceByType\"), \"SearchMpOutput\");}}, b.prototype.subscribePublicService = function (c, d, e) {if (b._memoryStore.depend.openMp) {a.CheckParam.getInstance().check([\"number\", \"string|number\", \"object\"], \"subscribePublicService\", !1, arguments);var f = new b.Protobuf.MPFollowInput(),g = this,h = c == a.ConversationType.APP_PUBLIC_SERVICE ? \"mcFollow\" : \"mpFollow\";f.setId(d), b.bridge.queryMsg(h, a.MessageUtil.ArrayForm(f.toArrayBuffer()), a.Bridge._client.userId, { onSuccess: function onSuccess() {g.getRemotePublicServiceList({ onSuccess: function onSuccess() {}, onError: function onError() {} }), e.onSuccess();}, onError: function onError(a) {var c = a;b.logger({ code: c, funcName: \"subscribePublicService\" }), e.onError(a);} }, \"MPFollowOutput\");}}, b.prototype.unsubscribePublicService = function (c, d, e) {if (b._memoryStore.depend.openMp) {a.CheckParam.getInstance().check([\"number\", \"string|number\", \"object\"], \"unsubscribePublicService\", !1, arguments);var f = new b.Protobuf.MPFollowInput(),g = c == a.ConversationType.APP_PUBLIC_SERVICE ? \"mcUnFollow\" : \"mpUnFollow\";f.setId(d), b.bridge.queryMsg(g, a.MessageUtil.ArrayForm(f.toArrayBuffer()), a.Bridge._client.userId, { onSuccess: function onSuccess() {b._memoryStore.publicServiceMap.remove(c, d), e.onSuccess();}, onError: function onError(a) {var c = a;b.logger({ code: c, funcName: \"unsubscribePublicService\" }), e.onError(a);} }, \"MPFollowOutput\");}}, b.prototype.addToBlacklist = function (c, d) {a.CheckParam.getInstance().check([\"string|number\", \"object\"], \"addToBlacklist\", !1, arguments), b._dataAccessProvider.addToBlacklist(c, b.logCallback(d, \"addToBlacklist\"));}, b.prototype.getBlacklist = function (c) {a.CheckParam.getInstance().check([\"object\"], \"getBlacklist\", !1, arguments), b._dataAccessProvider.getBlacklist(c);}, b.prototype.getBlacklistStatus = function (c, d) {a.CheckParam.getInstance().check([\"string|number\", \"object\"], \"getBlacklistStatus\", !1, arguments), b._dataAccessProvider.getBlacklistStatus(c, b.logCallback(d, \"getBlacklistStatus\"));}, b.prototype.removeFromBlacklist = function (c, d) {\n        a.CheckParam.getInstance().check([\"string|number\", \"object\"], \"removeFromBlacklist\", !1, arguments), b._dataAccessProvider.removeFromBlacklist(c, b.logCallback(d, \"removeFromBlacklist\"));}, b.prototype.getFileToken = function (c, d) {a.CheckParam.getInstance().check([\"number\", \"object\"], \"getQngetFileTokenTkn\", !1, arguments), b._dataAccessProvider.getFileToken(c, b.logCallback(d, \"getFileToken\"));}, b.prototype.getFileUrl = function (c, d, e, f) {a.CheckParam.getInstance().check([\"number\", \"string\", \"string|global|object|null\", \"object\"], \"getFileUrl\", !1, arguments), b._dataAccessProvider.getFileUrl(c, d, e, b.logCallback(f, \"getFileUrl\"));}, b.prototype.addRealTimeLocationListener = function (a, b, c) {throw new Error(\"Not implemented yet\");}, b.prototype.getRealTimeLocation = function (a, b) {throw new Error(\"Not implemented yet\");}, b.prototype.getRealTimeLocationCurrentState = function (a, b) {throw new Error(\"Not implemented yet\");}, b.prototype.getRealTimeLocationParticipants = function (a, b) {throw new Error(\"Not implemented yet\");}, b.prototype.joinRealTimeLocation = function (a, b) {throw new Error(\"Not implemented yet\");}, b.prototype.quitRealTimeLocation = function (a, b) {throw new Error(\"Not implemented yet\");}, b.prototype.startRealTimeLocation = function (a, b) {throw new Error(\"Not implemented yet\");}, b.prototype.updateRealTimeLocationStatus = function (a, b, c, d) {throw new Error(\"Not implemented yet\");}, b.prototype.startCall = function (c, d, e, f, g, h) {if (a.CheckParam.getInstance().check([\"number\", \"string|number\", \"array\", \"number\", \"string\", \"object\"], \"startCall\", !1, arguments), b._memoryStore.voipStategy) b._voipProvider.startCall(c, d, e, f, g, b.logCallback(h, \"startCall\"));else {var i = a.ErrorCode.VOIP_NOT_AVALIABLE;b.logger({ code: i, funcName: \"startCall\" }), h.onError(a.ErrorCode.VOIP_NOT_AVALIABLE);}}, b.prototype.joinCall = function (c, d) {if (a.CheckParam.getInstance().check([\"number\", \"object\"], \"joinCall\", !1, arguments), b._memoryStore.voipStategy) b._voipProvider.joinCall(c, b.logCallback(d, \"joinCall\"));else {var e = a.ErrorCode.VOIP_NOT_AVALIABLE;b.logger({ code: e, funcName: \"joinCall\" }), d.onError(a.ErrorCode.VOIP_NOT_AVALIABLE);}}, b.prototype.hungupCall = function (c, d, e) {a.CheckParam.getInstance().check([\"number\", \"string\", \"number\"], \"hungupCall\", !1, arguments), b._memoryStore.voipStategy && b._voipProvider.hungupCall(c, d, e);}, b.prototype.changeMediaType = function (c, d, e, f) {if (a.CheckParam.getInstance().check([\"number\", \"string\", \"number\", \"object\"], \"changeMediaType\", !1, arguments), b._memoryStore.voipStategy) b._voipProvider.changeMediaType(c, d, e, b.logCallback(f, \"changeMediaType\"));else {var g = a.ErrorCode.VOIP_NOT_AVALIABLE;b.logger({ code: g, funcName: \"changeMediaType\" }), f.onError(a.ErrorCode.VOIP_NOT_AVALIABLE);}}, b.prototype.getUnreadMentionedMessages = function (a, c) {return b._dataAccessProvider.getUnreadMentionedMessages(a, c);}, b.prototype.clearListeners = function () {b._dataAccessProvider.clearListeners();}, b.prototype.getUserStatus = function (a, c) {b._dataAccessProvider.getUserStatus(a, b.logCallback(c, \"getUserStatus\"));}, b.prototype.setUserStatus = function (a, c) {b._dataAccessProvider.setUserStatus(a, b.logCallback(c, \"setUserStatus\"));}, b.prototype.setUserStatusListener = function (a, c) {var d = a.userIds,e = a.multiple;b.userStatusObserver.watch({ key: d, func: c, multiple: e }), b._dataAccessProvider.setUserStatusListener(a, c);}, b.messageWatch = function (a) {b.RTCListener = a;}, b.prototype.getRTCUserInfoList = function (c, d) {a.CheckParam.getInstance().check([\"object\", \"object\"], \"getRTCUserInfoList\", !1, arguments), b._dataAccessProvider.getRTCUserInfoList(c, d);}, b.prototype.getRTCUserList = function (c, d) {a.CheckParam.getInstance().check([\"object\", \"object\"], \"getRTCUserList\", !1, arguments), b._dataAccessProvider.getRTCUserList(c, d);}, b.prototype.setRTCUserInfo = function (c, d, e) {a.CheckParam.getInstance().check([\"object\", \"object\", \"object\"], \"setRTCUserInfo\", !1, arguments), b._dataAccessProvider.setRTCUserInfo(c, d, e);}, b.prototype.removeRTCUserInfo = function (c, d, e) {a.CheckParam.getInstance().check([\"object\", \"object\", \"object\"], \"removeRTCUserInfo\", !1, arguments), b._dataAccessProvider.removeRTCUserInfo(c, d, e);}, b.prototype.getRTCRoomInfo = function (c, d) {a.CheckParam.getInstance().check([\"object\", \"object\"], \"getRTCRoomInfo\", !1, arguments), b._dataAccessProvider.getRTCRoomInfo(c, d);}, b.prototype.setRTCRoomInfo = function (c, d, e) {a.CheckParam.getInstance().check([\"object\", \"object\", \"object\"], \"setRTCRoomInfo\", !1, arguments), b._dataAccessProvider.setRTCRoomInfo(c, d, e);}, b.prototype.removeRTCRoomInfo = function (c, d, e) {a.CheckParam.getInstance().check([\"object\", \"object\", \"object\"], \"removeRTCRoomInfo\", !1, arguments), b._dataAccessProvider.removeRTCRoomInfo(c, d, e);}, b.prototype.joinRTCRoom = function (c, d) {a.CheckParam.getInstance().check([\"object\", \"object\"], \"joinRTCRoom\", !1, arguments), b._dataAccessProvider.joinRTCRoom(c, d);}, b.prototype.quitRTCRoom = function (c, d) {a.CheckParam.getInstance().check([\"object\", \"object\"], \"quitRTCRoom\", !1, arguments), b._dataAccessProvider.quitRTCRoom(c, d);}, b.prototype.RTCPing = function (c, d) {a.CheckParam.getInstance().check([\"object\", \"object\"], \"RTCPing\", !1, arguments), b._dataAccessProvider.RTCPing(c, d);}, b.prototype.setRTCUserData = function (c, d, e, f, g, h) {a.CheckParam.getInstance().check([\"string\", \"string\", \"string\", \"boolean\", \"object\", \"global|object|null|undefined\"], \"setRTCUserData\", !1, arguments), b._dataAccessProvider.setRTCUserData(c, d, e, f, g, h);}, b.prototype.getRTCUserData = function (c, d, e, f) {a.CheckParam.getInstance().check([\"string\", \"array\", \"boolean\", \"object\", \"global|object|null\"], \"getRTCUserData\", !1, arguments), b._dataAccessProvider.getRTCUserData(c, d, e, f);}, b.prototype.removeRTCUserData = function (c, d, e, f, g) {a.CheckParam.getInstance().check([\"string\", \"array\", \"boolean\", \"object\", \"global|object|null|undefined\"], \"removeRTCUserData\", !1, arguments), b._dataAccessProvider.removeRTCUserData(c, d, e, f, g);}, b.prototype.setRTCRoomData = function (c, d, e, f, g, h) {a.CheckParam.getInstance().check([\"string\", \"string\", \"string\", \"boolean\", \"object\", \"global|object|null|undefined\"], \"setRTCRoomData\", !1, arguments), b._dataAccessProvider.setRTCRoomData(c, d, e, f, g, h);}, b.prototype.getRTCRoomData = function (c, d, e, f) {a.CheckParam.getInstance().check([\"string\", \"array\", \"boolean\", \"object\"], \"getRTCRoomData\", !1, arguments), b._dataAccessProvider.getRTCRoomData(c, d, e, f);}, b.prototype.removeRTCRoomData = function (c, d, e, f, g) {a.CheckParam.getInstance().check([\"string\", \"array\", \"boolean\", \"object\", \"global|object|null|undefined\"], \"removeRTCRoomData\", !1, arguments), b._dataAccessProvider.removeRTCRoomData(c, d, e, f, g);}, b.prototype.getNavi = function () {return b._dataAccessProvider.getNavi();}, b.prototype.getRTCToken = function (c, d) {return a.CheckParam.getInstance().check([\"object\", \"object\"], \"getRTCToken\", !1, arguments), b._dataAccessProvider.getRTCToken(c, d);}, b.prototype.getAppInfo = function () {return { appKey: b._memoryStore.appKey };}, b.RTCListener = function () {}, b.currentServer = \"\", b.LogFactory = {}, b.MessageType = {}, b.RegisterMessage = {}, b._memoryStore = { listenerList: [], isPullFinished: !1, syncMsgQueue: [] }, b.isNotPullMsg = !1, b.userStatusObserver = null, b.sdkver = \"2.5.0\", b.otherDeviceLoginCount = 0, b.serverStore = { index: 0 }, b.isFirstConnect = !0, b.statusListeners = [], b.userStatusListener = null, b;}();a.RongIMClient = b;}(RongIMLib || (RongIMLib = {}));var RongIMLib;!function (a) {!function (a) {a[a.AT_MOST_ONCE = 0] = \"AT_MOST_ONCE\", a[a.AT_LEAST_ONCE = 1] = \"AT_LEAST_ONCE\", a[a.EXACTLY_ONCE = 2] = \"EXACTLY_ONCE\", a[a.DEFAULT = 3] = \"DEFAULT\";}(a.Qos || (a.Qos = {}));var b = a.Qos;!function (a) {a[a.CONNECT = 1] = \"CONNECT\", a[a.CONNACK = 2] = \"CONNACK\", a[a.PUBLISH = 3] = \"PUBLISH\", a[a.PUBACK = 4] = \"PUBACK\", a[a.QUERY = 5] = \"QUERY\", a[a.QUERYACK = 6] = \"QUERYACK\", a[a.QUERYCON = 7] = \"QUERYCON\", a[a.SUBSCRIBE = 8] = \"SUBSCRIBE\", a[a.SUBACK = 9] = \"SUBACK\", a[a.UNSUBSCRIBE = 10] = \"UNSUBSCRIBE\", a[a.UNSUBACK = 11] = \"UNSUBACK\", a[a.PINGREQ = 12] = \"PINGREQ\", a[a.PINGRESP = 13] = \"PINGRESP\", a[a.DISCONNECT = 14] = \"DISCONNECT\";}(a.Type || (a.Type = {}));var c = (a.Type, [\"invtDiz\", \"crDiz\", \"qnUrl\", \"userInf\", \"dizInf\", \"userInf\", \"joinGrp\", \"quitDiz\", \"exitGrp\", \"evctDiz\", [\"\", \"ppMsgP\", \"pdMsgP\", \"pgMsgP\", \"chatMsg\", \"pcMsgP\", \"\", \"pmcMsgN\", \"pmpMsgN\", \"\", \"\", \"\", \"prMsgS\"], \"pdOpen\", \"rename\", \"uGcmpr\", \"qnTkn\", \"destroyChrm\", \"createChrm\", \"exitChrm\", \"queryChrm\", \"joinChrm\", \"pGrps\", \"addBlack\", \"rmBlack\", \"getBlack\", \"blackStat\", \"addRelation\", \"qryRelation\", \"delRelation\", \"pullMp\", \"schMp\", \"qnTkn\", \"qnUrl\", \"qryVoipK\", \"delMsg\", \"qryCHMsg\", \"getUserStatus\", \"setUserStatus\", \"subUserStatus\", \"cleanHisMsg\"]),d = function () {function b(c, d) {this.connectionStatus = -1;var f = d.appId,g = encodeURIComponent(d.token),h = d.sdkVer,i = d.apiVer;this.self = d, this.socket = e.getInstance().createServer();var j = this,k = a.RongIMClient._storageProvider,l = k.getItem(\"servers\");l = JSON.parse(l) || [];var m = a.RongIMClient._memoryStore.depend,n = function n(b) {j.url = a.RongUtil.tplEngine(\"{host}/websocket?appId={appId}&token={token}&sdkVer={sdkVer}&apiVer={apiVer}\", { host: b, appId: f, token: g, sdkVer: h, apiVer: i }), j.socket.connect(j.url, c);var d = k.getItem(\"rong_current_user\");a.Navigation.Endpoint = { host: b, userId: d };};({ ws: function ws() {for (var b = new a.Timer({ timeout: 15e3 }), c = [], d = [], e = !1, f = function f() {for (var a = 0; a < c.length; a++) {var b = c[a];clearTimeout(b);}for (var a = 0; a < d.length; a++) {d[a].abort();}c.length = 0, d.length = 0;}, g = function g(_g, h) {var i = _g.url,j = _g.time;if (!e) {var k = setTimeout(function () {var c = function c() {e || (f(), e = !0, b.pause(), h(i));},g = a.MessageUtil.detectCMP({ url: i, success: c, fail: function fail(a) {__f__(\"log\", a, \" at rongyunIM\\\\rongyun.js:3\");} });d.push(g);}, j);c.push(k);}}, h = function h(b) {var c = /(http|https):\\/\\/([^\\/]+)/i,d = b.match(c)[2];a.RongIMClient.currentServer = d, n(d);}, i = \"{protocol}{server}/ping?r={random}\", k = 0; k < l.length; k++) {var o = l[k];o && (o = a.RongUtil.tplEngine(i, { protocol: m.protocol, server: o, random: a.RongUtil.getTimestamp() }), g({ url: o, time: 1e3 * k }, h));}b.resume(function () {a.Navigation.clear(), f(), j.socket.fire(\"StatusChanged\", a.ConnectionStatus.NETWORK_UNAVAILABLE);});}, comet: function comet() {var a = l[0];n(a);} })[m.isPolling ? \"comet\" : \"ws\"]();var o = b._ConnectionStatusListener,p = \"object\" == typeof o,q = this;q.socket.on(\"StatusChanged\", function (b) {if (!p) throw new Error(\"setConnectStatusListener:Parameter format is incorrect\");var c = b == a.ConnectionStatus.NETWORK_UNAVAILABLE,e = !a.RongIMClient._memoryStore.depend.isPolling;if (a.RongIMClient.isFirstConnect && c && e && (b = a.ConnectionStatus.WEBSOCKET_UNAVAILABLE), c) {var f = a.RongIMClient._storageProvider,g = f.getItem(\"servers\");g = JSON.parse(g);var h = a.RongIMClient.currentServer;if (h) {var i = a.RongUtil.indexOf(g, h);if (!a.RongUtil.isEqual(i, -1)) {var j = g.splice(i, 1)[0];g.push(j), f.setItem(\"servers\", JSON.stringify(g));}}}q.connectionStatus = b, setTimeout(function () {o.onChanged(b);}), b == a.ConnectionStatus.DISCONNECTED && d.clearHeartbeat(), b == a.ConnectionStatus.KICKED_OFFLINE_BY_OTHER_CLIENT && a.RongIMClient.otherDeviceLoginCount++, b == a.ConnectionStatus.CONNECTED && (a.RongIMClient.isFirstConnect = !1), b == a.ConnectionStatus.WEBSOCKET_UNAVAILABLE && (q.changeConnectType(), a.RongIMClient.isFirstConnect = !1, a.RongIMClient.connect(d.token, a.RongIMClient._memoryStore.callback));}), this.socket.on(\"message\", d.handler.handleMessage), this.socket.on(\"disconnect\", function (a) {j.socket.fire(\"StatusChanged\", a || 2);});}return b.prototype.changeConnectType = function () {a.RongIMClient._memoryStore.depend.isPolling = !a.RongIMClient._memoryStore.depend.isPolling, new a.FeatureDectector();}, b.prototype.writeAndFlush = function (a) {this.socket.send(a);}, b.prototype.reconnect = function (b) {a.MessageIdHandler.clearMessageId(), this.socket = this.socket.reconnect(), b && (this.self.reconnectObj = b);}, b.prototype.disconnect = function (a) {this.socket.disconnect(a);}, b;}();a.Channel = d;var e = function () {function b() {this.socket = null, this._events = {};}return b.getInstance = function () {return new b();}, b.prototype.connect = function (b, c) {return this.socket && (b && (a.RongIMClient._storageProvider.setItem(\"rongSDK\", this.checkTransport()), this.on(\"connect\", c || new Function())), b && (this.currentURL = b), this.socket.createTransport(b)), this;}, b.prototype.createServer = function () {var a = this.getTransport(this.checkTransport());if (null === a) throw new Error(\"the channel was not supported\");return a;}, b.prototype.getTransport = function (c) {return c == b.XHR_POLLING ? this.socket = new a.PollingTransportation(this) : c == b.WEBSOCKET && (this.socket = new a.SocketTransportation(this)), this;}, b.prototype.send = function (a) {this.socket && (this.checkTransport() == b.WEBSOCKET ? this.socket.send(a) : this.socket.send(this._encode(a)));}, b.prototype.onMessage = function (a) {this.fire(\"message\", a);}, b.prototype.disconnect = function (a) {return this.socket.disconnect(a), this.fire(\"disconnect\", a), this;}, b.prototype.reconnect = function () {if (this.currentURL && a.RongIMClient._storageProvider.getItem(\"rongSDK\")) return this.connect(this.currentURL, null);throw new Error(\"reconnect:no have URL\");}, b.prototype.checkTransport = function () {return a.RongIMClient._memoryStore.depend.isPolling && (a.Transportations._TransportType = b.XHR_POLLING), a.Transportations._TransportType;}, b.prototype.fire = function (a, b) {if (a in this._events) for (var c = 0, d = this._events[a].length; c < d; c++) {this._events[a][c](b);}return this;}, b.prototype.on = function (b, c) {return \"function\" == typeof c && b ? (b in this._events ? -1 == a.MessageUtil.indexOf(this._events, c) && this._events[b].push(c) : this._events[b] = [c], this) : this;}, b.prototype.removeEvent = function (a, b) {if (a in this._events) for (var c = 0, d = this._events[a].length; c < d; c++) {this._events[a][c] == b && this._events[a].splice(c, 1);}return this;}, b.prototype._encode = function (b) {var c = \"?messageid=\" + b.getMessageId() + \"&header=\" + b.getHeaderFlag() + \"&sessionid=\" + a.RongIMClient._storageProvider.getItem(\"sId\" + a.Navigation.Endpoint.userId);return /(PubAckMessage|QueryConMessage)/.test(b._name) || (c += \"&topic=\" + b.getTopic() + \"&targetid=\" + (b.getTargetId() || \"\")), { url: c, data: \"getData\" in b ? b.getData() : \"\" };}, b.XHR_POLLING = \"xhr-polling\", b.WEBSOCKET = \"websocket\", b;}();a.Socket = e;var f = function () {function c(b, c) {this.timeoutMillis = 6e3, this.timeout_ = 0, this.sdkVer = \"\", this.apiVer = Math.floor(1e6 * Math.random()), this.channel = null, this.handler = null, this.userId = \"\", this.reconnectObj = {}, this.heartbeat = 0, this.pullMsgHearbeat = 0, this.chatroomId = \"\", this.SyncTimeQueue = [], this.cacheMessageIds = [], this.token = b, this.appId = c, this.SyncTimeQueue.state = \"complete\", this.sdkVer = a.RongIMClient.sdkver;}return c.prototype.resumeTimer = function () {var b = this;this.timeout_ = setTimeout(function () {b.channel.disconnect(a.ConnectionStatus.NETWORK_UNAVAILABLE);}, this.timeoutMillis);}, c.prototype.pauseTimer = function () {this.timeout_ && (clearTimeout(this.timeout_), this.timeout_ = 0);}, c.prototype.connect = function (b) {this.handler = new h(this), this.handler.setConnectCallback(b);var c = this;this.channel = new d(function () {a.Transportations._TransportType == e.WEBSOCKET && c.keepLive();}, this), this.channel.socket.fire(\"StatusChanged\", a.ConnectionStatus.CONNECTING);}, c.prototype.checkSocket = function (b) {this.channel.writeAndFlush(new a.PingReqMessage());var c = 0,d = setInterval(function () {a.RongIMClient._memoryStore.isFirstPingMsg ? c > 15 && (clearInterval(d), b.onError()) : (clearInterval(d), b.onSuccess()), c++;}, 100);}, c.prototype.keepLive = function () {this.heartbeat > 0 && clearInterval(this.heartbeat);var b = this;b.heartbeat = setInterval(function () {b.resumeTimer(), b.channel.writeAndFlush(new a.PingReqMessage());}, 3e4), b.pullMsgHearbeat > 0 && clearInterval(b.pullMsgHearbeat), b.pullMsgHearbeat = setInterval(function () {b.syncTime(!0, void 0, void 0, !1);}, 18e4);}, c.prototype.clearHeartbeat = function () {clearInterval(this.heartbeat), this.heartbeat = 0, this.pauseTimer(), clearInterval(this.pullMsgHearbeat), this.pullMsgHearbeat = 0;}, c.prototype.publishMessage = function (c, d, e, f, g) {var h = a.MessageIdHandler.messageIdPlus(this.channel.reconnect);if (h) {var i = new a.PublishMessage(c, d, e);i.setMessageId(h), f ? (i.setQos(b.AT_LEAST_ONCE), this.handler.putCallback(new a.PublishCallback(f.onSuccess, f.onError), i.getMessageId(), g)) : i.setQos(b.AT_MOST_ONCE), this.channel.writeAndFlush(i);}}, c.prototype.queryMessage = function (b, d, e, f, g, h) {if (\"userInf\" == b && c.userInfoMapping[e]) return void g.onSuccess(c.userInfoMapping[e]);var i = a.MessageIdHandler.messageIdPlus(this.channel.reconnect);if (i) {var j = new a.QueryMessage(b, d, e);j.setMessageId(i), j.setQos(f), this.handler.putCallback(new a.QueryCallback(g.onSuccess, g.onError), j.getMessageId(), h), this.channel.writeAndFlush(j);}}, c.prototype.invoke = function (c, d, e) {var f,h,i,j,k = this,l = this.SyncTimeQueue.shift();if (void 0 != l) {this.SyncTimeQueue.state = \"pending\";var m = a.SyncTimeUtil.get(),n = m.sent;if (2 != l.type) f = m.received, h = new a.RongIMClient.Protobuf.SyncRequestMsg(), h.setIspolling(!1), i = \"pullMsg\", j = this.userId, h.setSendBoxSyncTime(n);else if (j = l.chrmId || k.chatroomId, f = a.RongIMClient._memoryStore.lastReadTime.get(j + g._client.userId + \"CST\") || 0, h = new a.RongIMClient.Protobuf.ChrmPullMsg(), h.setCount(0), i = \"chrmPull\", !j) throw new Error(\"syncTime:Received messages of chatroom but was not init\");if (l.pulltime <= f) return this.SyncTimeQueue.state = \"complete\", void this.invoke(c, j, e);c && \"setIsPullSend\" in h && h.setIsPullSend(!0), h.setSyncTime(f), this.queryMessage(i, a.MessageUtil.ArrayForm(h.toArrayBuffer()), j, b.AT_LEAST_ONCE, { onSuccess: function onSuccess(b) {var d = a.MessageUtil.int64ToTimestamp(b.syncTime),h = j,l = \"chrmPull\" == i;if (l) h += g._client.userId + \"CST\", a.RongIMClient._memoryStore.lastReadTime.set(h, d);else {var m = a.RongIMClient._storageProvider;d > m.getItem(h) && m.setItem(h, d);}var o = b.list,p = b.finished;l && (p = !0), void 0 === p && (p = !0), a.RongIMClient._memoryStore.isPullFinished = p;for (var q = a.RongIMClient._memoryStore.connectAckTime, r = 0, s = o.length, t = s; r < s; r++) {t -= 1;var u = o[r],v = a.MessageUtil.int64ToTimestamp(u.dataTime);if (v > (u.direction == a.MessageDirection.SEND ? n : f)) {var w = v < q;g._client.handler.onReceived(u, void 0, w, t, !1, p);}}k.SyncTimeQueue.state = \"complete\", k.invoke(c, j, e);}, onError: function onError(a) {k.SyncTimeQueue.state = \"complete\", k.invoke(c, j, e);} }, \"DownStreamMessages\");}}, c.prototype.syncTime = function (a, b, c, d) {this.SyncTimeQueue.push({ type: a, pulltime: b, chrmId: c }), 1 == this.SyncTimeQueue.length && \"complete\" == this.SyncTimeQueue.state && this.invoke(!a, c, d);}, c.prototype.__init = function (b) {this.handler = new h(this), this.handler.setConnectCallback(a.RongIMClient._memoryStore.callback), this.channel = new d(b, this);}, c.userInfoMapping = {}, c;}();a.Client = f;var g = function () {function e() {}return e.getInstance = function () {return new e();}, e.prototype.connect = function (b, c, d) {if (a.RongIMClient.Protobuf) return e._client = new a.Navigation().connect(b, c, d), e._client;}, e.prototype.setListener = function (a) {\"object\" == typeof a && (\"function\" == typeof a.onChanged ? d._ConnectionStatusListener = a : \"function\" == typeof a.onReceived && (d._ReceiveMessageListener = a));}, e.prototype.reconnect = function (a) {e._client.channel.reconnect(a);}, e.prototype.disconnect = function () {e._client.channel.disconnect(2);}, e.prototype.queryMsg = function (a, d, f, g, h) {\"string\" != typeof a && (a = c[a]), e._client.queryMessage(a, d, f, b.AT_MOST_ONCE, g, h);}, e.prototype.pubMsg = function (b, d, f, g, h, i) {\"number\" == typeof i ? i == a.MethodType.CUSTOMER_SERVICE ? e._client.publishMessage(\"pcuMsgP\", d, f, g, h) : i == a.MethodType.RECALL && e._client.publishMessage(\"recallMsg\", d, f, g, h) : e._client.publishMessage(c[10][b], d, f, g, h);}, e;}();a.Bridge = g;var h = function () {function b(a) {if (this.map = {}, this.connectCallback = null, !d._ReceiveMessageListener) throw new Error(\"please set onReceiveMessageListener\");this._onReceived = d._ReceiveMessageListener.onReceived, this._client = a, this.syncMsgMap = new Object();}return b.prototype.putCallback = function (a, b, c) {var d = { Callback: a, Message: c };d.Callback.resumeTimer(), this.map[b] = d;}, b.prototype.setConnectCallback = function (b) {b && (this.connectCallback = new a.ConnectAck(b.onSuccess, b.onError, this._client));}, b.prototype.onReceived = function (b, c, d, e, f) {var h, i, j;if (\"PublishMessage\" != b._name) h = b, a.RongIMClient._storageProvider.setItem(this._client.userId, a.MessageUtil.int64ToTimestamp(h.dataTime));else {if (\"s_ntf\" == b.getTopic()) return h = a.RongIMClient.Protobuf.NotifyMsg.decode(b.getData()), void this._client.syncTime(h.type, a.MessageUtil.int64ToTimestamp(h.time), h.chrmId);if (\"s_msg\" == b.getTopic()) {h = a.RongIMClient.Protobuf.DownStreamMessage.decode(b.getData());var k = a.MessageUtil.int64ToTimestamp(h.dataTime);a.RongIMClient._storageProvider.setItem(this._client.userId, k), a.RongIMClient._memoryStore.lastReadTime.get(this._client.userId, k);} else {if (\"s_stat\" == b.getTopic()) return h = a.RongIMClient.Protobuf.GetUserStatusOutput.decode(b.getData()), h = a.RongInnerTools.convertUserStatus(h), void a.RongIMClient.userStatusObserver.notify({ key: h.userId, entity: h });if (g._client.sdkVer && \"1.0.0\" == g._client.sdkVer) return;h = a.RongIMClient.Protobuf.UpStreamMessage.decode(b.getData());var l = b.getTopic(),m = l.substr(0, 2);\"pp\" == m ? h.type = 1 : \"pd\" == m ? h.type = 2 : \"pg\" == m ? h.type = 3 : \"ch\" == m ? h.type = 4 : \"pc\" == m && (h.type = 5), h.groupId = b.getTargetId(), h.fromUserId = this._client.userId, h.dataTime = Date.parse(new Date().toString());}if (!h) return;}var n = a.RongIMClient._memoryStore.isPullFinished;if (n || d) {i = a.MessageUtil.messageParser(h, this._onReceived, d);if (12 == i.conversationType) return a.RongIMClient.RTCListener(i);if (b.getTopic && \"recallMsg\" == b.getTopic()) {var o = i.content;i.conversationType = o.conversationType, i.targetId = o.targetId, i.messageId = null;}if (c && (i.messageUId = c.getMessageUId(), i.sentTime = c.getTimestamp(), a.RongIMClient._storageProvider.setItem(this._client.userId, i.sentTime)), null !== i) {if (!(i.conversationType == a.ConversationType.CHATROOM)) {a.RongIMClient.MessageParams[i.messageType].msgTag.getMessageTag() >= 0 && a.SyncTimeUtil.set(i);if (i.messageDirection == a.MessageDirection.SEND) {var p = a.RongIMClient._storageProvider,q = a.Bridge._client.userId,r = p.getItem(\"last_sentTime_\" + q) || 0;if (i.sentTime <= r && !f) return;}}if (a.RongIMClient.MessageParams[i.messageType].msgTag.getMessageTag() > 0) {if (j = a.RongIMClient._dataAccessProvider.getConversation(i.conversationType, i.targetId, { onSuccess: function onSuccess() {}, onError: function onError() {} }), j || (j = a.RongIMClient.getInstance().createConversation(i.conversationType, i.targetId, \"\")), i.messageDirection == a.MessageDirection.RECEIVE && 64 == (64 & h.status)) {var s = a.RongIMClient._storageProvider.getItem(\"mentioneds_\" + g._client.userId + \"_\" + i.conversationType + \"_\" + i.targetId),t = i.conversationType + \"_\" + i.targetId,u = {};if (i.content && i.content.mentionedInfo && (u[t] = { uid: i.messageUId, time: i.sentTime, mentionedInfo: i.content.mentionedInfo }, a.RongIMClient._storageProvider.setItem(\"mentioneds_\" + g._client.userId + \"_\" + i.conversationType + \"_\" + i.targetId, JSON.stringify(u)), s = JSON.stringify(u)), s) {var u = JSON.parse(s);j.mentionedMsg = u[t];}}if (i.messageDirection == a.MessageDirection.RECEIVE && i.senderUserId != g._client.userId && (j.unreadMessageCount = j.unreadMessageCount + 1, a.RongUtil.supportLocalStorage())) {var v = a.RongIMClient._storageProvider.getItem(\"cu\" + g._client.userId + j.conversationType + j.targetId),w = Number(v) + 1;a.RongIMClient._storageProvider.setItem(\"cu\" + g._client.userId + j.conversationType + i.targetId, w), j.unreadMessageCount = w;}j.receivedTime = new Date().getTime(), j.receivedStatus = i.receivedStatus, j.senderUserId = i.sendUserId, j.notificationStatus = a.ConversationNotificationStatus.DO_NOT_DISTURB, j.latestMessageId = i.messageId, j.latestMessage = i, j.sentTime = i.sentTime, a.RongIMClient._dataAccessProvider.addConversation(j, { onSuccess: function onSuccess(a) {}, onError: function onError() {} });}if (i.conversationType != a.ConversationType.CUSTOMER_SERVICE || \"ChangeModeResponseMessage\" != i.messageType && \"SuspendMessage\" != i.messageType && \"HandShakeResponseMessage\" != i.messageType && \"TerminateMessage\" != i.messageType && \"CustomerStatusUpdateMessage\" != i.messageType && \"TextMessage\" != i.messageType && \"InformationNotificationMessage\" != i.messageType || a.RongIMClient._memoryStore.custStore.isInit) {if (i.conversationType == a.ConversationType.CUSTOMER_SERVICE && \"HandShakeResponseMessage\" != i.messageType) {if (!a.RongIMClient._memoryStore.custStore[i.targetId]) return;if (\"TerminateMessage\" == i.messageType && a.RongIMClient._memoryStore.custStore[i.targetId].sid != i.content.sid) return;}if (i.messageType === a.RongIMClient.MessageType.HandShakeResponseMessage) {var x = i.content.data;a.RongIMClient._memoryStore.custStore[i.targetId] = x, x.serviceType != a.CustomerType.ONLY_HUMAN && x.serviceType != a.CustomerType.HUMAN_FIRST || \"1\" == x.notAutoCha && a.RongIMClient.getInstance().switchToHumanMode(i.targetId, { onSuccess: function onSuccess() {}, onError: function onError() {} });}var y = new Date(),z = y.getMonth() + 1,A = y.getFullYear() + \"/\" + (1 == z.toString().length ? \"0\" + z : z) + \"/\" + y.getDate(),B = new Date(A).getTime() - i.sentTime < 0;if (a.RongUtil.supportLocalStorage() && i.messageType === a.RongIMClient.MessageType.ReadReceiptRequestMessage && B && i.messageDirection == a.MessageDirection.SEND) {var C = g._client.userId + i.content.messageUId + \"SENT\";a.RongIMClient._storageProvider.setItem(C, JSON.stringify({ count: 0, dealtime: i.sentTime, userIds: {} }));} else if (a.RongUtil.supportLocalStorage() && i.messageType === a.RongIMClient.MessageType.ReadReceiptRequestMessage && B) {var D = g._client.userId + i.conversationType + i.targetId + \"RECEIVED\",E = JSON.parse(a.RongIMClient._storageProvider.getItem(D));if (E) {if (i.senderUserId in E) {if (!E[i.senderUserId].uIds || !E[i.senderUserId].uIds || -1 != E[i.senderUserId].uIds.indexOf(i.content.messageUId)) return;E[i.senderUserId].uIds.push(i.content.messageUId), E[i.senderUserId].dealtime = i.sentTime, E[i.senderUserId].isResponse = !1, a.RongIMClient._storageProvider.setItem(D, JSON.stringify(E));} else {var F = { uIds: [i.content.messageUId], dealtime: i.sentTime, isResponse: !1 };E[i.senderUserId] = F, a.RongIMClient._storageProvider.setItem(D, JSON.stringify(E));}} else {var G = {};G[i.senderUserId] = { uIds: [i.content.messageUId], dealtime: i.sentTime, isResponse: !1 }, a.RongIMClient._storageProvider.setItem(D, JSON.stringify(G));}}if (a.RongUtil.supportLocalStorage() && i.messageType === a.RongIMClient.MessageType.ReadReceiptResponseMessage && B) {var H,I = i.content,J = I.receiptMessageDic[g._client.userId],C = \"\";if (i.receiptResponse || (i.receiptResponse = {}), J) {for (var K = [], L = 0, M = J.length; L < M; L++) {C = g._client.userId + J[L] + \"SENT\", !(H = JSON.parse(a.RongIMClient._storageProvider.getItem(C))) || i.senderUserId in H.userIds || (K.push(J[L]), H.count += 1, H.userIds[i.senderUserId] = i.sentTime, i.receiptResponse[J[L]] = H.count, a.RongIMClient._storageProvider.setItem(C, JSON.stringify(H)));}I.receiptMessageDic[g._client.userId] = K, i.content = I;}}var N = this;if (a.RongIMClient._voipProvider && [\"AcceptMessage\", \"RingingMessage\", \"HungupMessage\", \"InviteMessage\", \"MediaModifyMessage\", \"MemberModifyMessage\"].indexOf(i.messageType) > -1) setTimeout(function () {a.RongIMClient._voipProvider.onReceived(i);});else {var O = e || 0,P = !n;setTimeout(function () {N._onReceived(i, O, P);});}}}}}, b.prototype.handleMessage = function (b) {if (b) switch (b._name) {case \"ConnAckMessage\":g._client.handler.connectCallback.process(b.getStatus(), b.getUserId(), b.getTimestamp());break;case \"PublishMessage\":b.getSyncMsg() || 0 == b.getQos() || g._client.channel.writeAndFlush(new a.PubAckMessage(b.getMessageId())), b.getSyncMsg() && !a.RongIMClient._memoryStore.depend.isPolling ? g._client.handler.syncMsgMap[b.getMessageId()] = b : g._client.handler.onReceived(b);break;case \"QueryAckMessage\":0 != b.getQos() && g._client.channel.writeAndFlush(new a.QueryConMessage(b.getMessageId()));var c = g._client.handler.map[b.getMessageId()];c && (c.Callback.process(b.getStatus(), b.getData(), b.getDate(), c.Message), delete g._client.handler.map[b.getMessageId()]);break;case \"PubAckMessage\":var d = g._client.handler.map[b.getMessageId()];if (d) d.Callback.process(b.getStatus() || 0, b.getMessageUId(), b.getTimestamp(), d.Message, b.getMessageId()), delete g._client.handler.map[b.getMessageId()];else {var e = a.Bridge._client.userId;a.RongIMClient._storageProvider.setItem(\"last_sentTime_\" + e, b.timestamp), g._client.handler.onReceived(g._client.handler.syncMsgMap[b.messageId], b, null, null, !0), delete g._client.handler.syncMsgMap[b.getMessageId()];}break;case \"PingRespMessage\":a.RongIMClient._memoryStore.isFirstPingMsg ? a.RongIMClient._memoryStore.isFirstPingMsg = !1 : g._client.pauseTimer();break;case \"DisconnectMessage\":g._client.channel.disconnect(b.getStatus());}}, b;}();a.MessageHandler = h;}(RongIMLib || (RongIMLib = {}));var __extends = this && this.__extends || function (a, b) {function c() {this.constructor = a;}for (var d in b) {b.hasOwnProperty(d) && (a[d] = b[d]);}a.prototype = null === b ? Object.create(b) : (c.prototype = b.prototype, new c());},RongIMLib;!function (a) {var b = function () {function b(a) {this.timeout = null, this.onError = null, a && \"number\" == typeof a ? this.timeoutMillis = a : (this.timeoutMillis = 3e4, this.onError = a);}return b.prototype.resumeTimer = function () {var a = this;this.timeoutMillis > 0 && !this.timeout && (this.timeout = setTimeout(function () {a.readTimeOut(!0);}, this.timeoutMillis));}, b.prototype.pauseTimer = function () {this.timeout && (clearTimeout(this.timeout), this.timeout = null);}, b.prototype.readTimeOut = function (b) {b && this.onError ? this.onError(a.ErrorCode.TIMEOUT) : this.pauseTimer();}, b;}();a.MessageCallback = b;var c = function () {function b() {this.publicServiceList = [];}return b.getInstance = function () {return new b();}, b.prototype.pottingProfile = function (b) {var c;this.profile = new a.PublicServiceProfile(), c = JSON.parse(b.extra), this.profile.isGlobal = c.isGlobal, this.profile.introduction = c.introduction, this.profile.menu = c.menu, this.profile.hasFollowed = c.follow, this.profile.publicServiceId = b.mpid, this.profile.name = b.name, this.profile.portraitUri = b.portraitUrl, this.profile.conversationType = \"mc\" == b.type ? a.ConversationType.APP_PUBLIC_SERVICE : a.ConversationType.PUBLIC_SERVICE, this.publicServiceList.push(this.profile);}, b.prototype.mapping = function (b, c) {switch (c) {case \"GetUserInfoOutput\":return new a.UserInfo(b.userId, b.userName, b.userPortrait);case \"GetQNupTokenOutput\":return { deadline: a.MessageUtil.int64ToTimestamp(b.deadline), token: b.token };case \"GetQNdownloadUrlOutput\":return { downloadUrl: b.downloadUrl };case \"CreateDiscussionOutput\":return b.id;case \"ChannelInfoOutput\":var d = new a.Discussion();return d.creatorId = b.adminUserId, d.id = b.channelId, d.memberIdList = b.firstTenUserIds, d.name = b.channelName, d.isOpen = b.openStatus, d;case \"GroupHashOutput\":return b.result;case \"QueryBlackListOutput\":return b.userIds;case \"SearchMpOutput\":case \"PullMpOutput\":if (b.info) {var e = this;Array.forEach(b.info, function (a) {setTimeout(function () {e.pottingProfile(a);}, 100);});}return this.publicServiceList;default:return b;}}, b;}();a.CallbackMapping = c;var d = function (c) {function d(a, b) {c.call(this, b), this._cb = a, this._timeout = b;}return __extends(d, c), d.prototype.process = function (b, c, d, e, f) {if (this.readTimeOut(), 0 == b) {e && (e.setSentStatus = b);if (a.RongIMClient._memoryStore.isPullFinished) {var g = a.Bridge._client.userId;a.RongIMClient._storageProvider.setItem(\"last_sentTime_\" + g, d), a.SyncTimeUtil.set({ messageDirection: a.MessageDirection.SEND, sentTime: d });}this._cb({ messageUId: c, timestamp: d, messageId: f });} else this._timeout(b, { messageUId: c, sentTime: d });}, d.prototype.readTimeOut = function (a) {b.prototype.readTimeOut.call(this, a);}, d;}(b);a.PublishCallback = d;var e = function (d) {function e(a, b) {d.call(this, b), this._cb = a, this._timeout = b;}return __extends(e, d), e.prototype.process = function (b, d, e, f) {if (this.readTimeOut(), f && d && 0 == b) {try {d = c.getInstance().mapping(a.RongIMClient.Protobuf[f].decode(d), f);} catch (g) {return void this._timeout(a.ErrorCode.UNKNOWN);}\"GetUserInfoOutput\" == f && (a.Client.userInfoMapping[d.userId] = d), this._cb(d);} else b > 0 ? this._timeout(b) : this._cb(b);}, e.prototype.readTimeOut = function (a) {b.prototype.readTimeOut.call(this, a);}, e;}(b);a.QueryCallback = e;var f = function (c) {function d(a, b, d) {c.call(this, b), this._client = d, this._cb = a, this._timeout = b;}return __extends(d, c), d.prototype.process = function (b, c, d) {if (this.readTimeOut(), 0 == b) {this._client.userId = c;var e = this;if (!a.RongIMClient._memoryStore.depend.isPolling && a.RongIMClient._memoryStore.isFirstPingMsg ? a.Bridge._client.checkSocket({ onSuccess: function onSuccess() {a.RongIMClient.isNotPullMsg || e._client.syncTime(void 0, void 0, void 0, !0);}, onError: function onError() {a.RongIMClient._memoryStore.isFirstPingMsg = !1, a.RongIMClient.getInstance().disconnect(), a.RongIMClient.connect(a.RongIMClient._memoryStore.token, a.RongIMClient._memoryStore.callback);} }) : a.RongIMClient.isNotPullMsg || e._client.syncTime(void 0, void 0, void 0, !0), a.Bridge._client.channel.socket.fire(\"StatusChanged\", 0), this._client.reconnectObj.onSuccess) this._client.reconnectObj.onSuccess(c), delete this._client.reconnectObj.onSuccess;else {var f = this;setTimeout(function () {f._cb(c);}, 500);}a.RongIMClient._memoryStore.connectAckTime = d, new Date().getTime() - d ? a.RongIMClient._memoryStore.deltaTime = new Date().getTime() - d : a.RongIMClient._memoryStore.deltaTime = 0;} else if (6 == b) {a.RongIMClient.getInstance().disconnect();var f = this,g = f._client,h = g.appId,i = g.token;\n          new a.Navigation().requestNavi(i, h, function () {g.clearHeartbeat();var b = new a.Client(i, h);a.Bridge._client = b, b.__init(function () {\"websocket\" == a.Transportations._TransportType && b.keepLive();});}, f._timeout, !1);} else a.Bridge._client.channel.socket.socket._status = b, this._client.reconnectObj.onError ? (this._client.reconnectObj.onError(b), delete this._client.reconnectObj.onError) : this._timeout(b);}, d.prototype.readTimeOut = function (a) {b.prototype.readTimeOut.call(this, a);}, d;}(b);a.ConnectAck = f;}(RongIMLib || (RongIMLib = {}));var RongIMLib;!function (a) {var b = function () {function b() {}return b.clear = function () {var b = a.RongIMClient._storageProvider;b.removeItem(\"rc_uid\"), b.removeItem(\"serverIndex\"), b.removeItem(\"rongSDK\");}, b.prototype.getNaviSuccess = function (b) {var c = a.RongIMClient._storageProvider;c.setItem(\"fullnavi\", JSON.stringify(b));var d = b.server;d && (d += \",\");var e = b.backupServer || \"\",f = \"{server}{backupServer}\",g = a.RongUtil.tplEngine(f, { server: d, backupServer: e });g = g.split(\",\"), c.setItem(\"servers\", JSON.stringify(g));var h = a.RongIMClient._memoryStore.token,i = a.InnerUtil.getUId(h);c.setItem(\"rc_uid\", i);var j = b.userId;if (c.setItem(\"current_user\", j), b.voipCallInfo) {var k = JSON.parse(b.voipCallInfo);a.RongIMClient._memoryStore.voipStategy = k.strategy, c.setItem(\"voipStrategy\", k.strategy);}var l = b.openMp;c.setItem(\"openMp\" + i, l), a.RongIMClient._memoryStore.depend.openMp = l;}, b.prototype.connect = function (b, c, d) {var e = a.RongIMClient._storageProvider.getItem(\"appId\");e && e != b && (a.RongIMClient._storageProvider.clearItem(), a.RongIMClient._storageProvider.setItem(\"appId\", b)), e || a.RongIMClient._storageProvider.setItem(\"appId\", b);var f = new a.Client(c, b);return this.requestNavi(c, b, function () {f.connect(d);}, d.onError, !0), f;}, b.prototype.requestNavi = function (c, d, e, f, g) {if (g) {var h = md5(c).slice(8, 16),i = a.RongIMClient._storageProvider,j = i.getItem(\"rongSDK\"),k = a.Transportations._TransportType == j,l = i.getItem(\"rc_uid\"),m = l == h,n = i.getItem(\"servers\"),o = \"string\" == typeof n;if (m && k && o) {a.RongIMClient._memoryStore.voipStategy = i.getItem(\"voipStrategy\");var p = i.getItem(\"openMp\" + h);return a.RongIMClient._memoryStore.depend.openMp = p, void e();}}b.clear();var q = a.Channel._ConnectionStatusListener,r = a.RongIMClient._memoryStore.depend,s = r.navigaters,t = r.naviTimeout,u = r.maxNaviRetry,v = this,w = new a.Timer({ timeout: t }),x = 1,y = function y() {return x >= u;},z = new a.IndexTools({ items: s, onwheel: function onwheel() {x += 1;} }),A = function A() {if (y()) return void f(a.ConnectionStatus.RESPONSE_NAVI_ERROR);var b = z.get(),g = s[b];z.add();var h = function h(b) {w.pause(), q.onChanged(a.ConnectionStatus.RESPONSE_NAVI);var c = b.code;a.RongUtil.isEqual(c, 200) && (v.getNaviSuccess(b), e()), a.RongUtil.isEqual(c, 401) && f(a.ConnectionState.TOKEN_INCORRECT), a.RongUtil.isEqual(c, 403) && q.onChanged(a.ConnectionStatus.APPKEY_IS_FAKE);},i = function i(b) {a.RongUtil.isEqual(b, 0) || (w.pause(), q.onChanged(a.ConnectionStatus.RESPONSE_NAVI_ERROR), A());};q.onChanged(a.ConnectionStatus.REQUEST_NAVI);var j = v.request(g, d, c, h, i);w.resume(function () {q.onChanged(a.ConnectionStatus.RESPONSE_NAVI_TIMEOUT), j.abort(), A();});};A();}, b.prototype.request = function (b, c, d, e, f) {var g = a.RongIMClient._memoryStore.depend,h = g.isPolling ? \"cometnavi\" : \"navi\";d = encodeURIComponent(d);var i = a.RongIMClient.sdkver,j = a.RongUtil.getTimestamp(),k = \"{navi}/{path}.js?appId={appId}&token={token}&callBack=null&v={sdkver}&r={random}\",l = a.RongUtil.tplEngine(k, { navi: b, path: h, appId: c, token: d, sdkver: i, random: j });return a.RongUtil.request({ url: l, success: function success(a) {a = a.replace(\"null(\", \"\").replace(\");\", \"\");var b = a.lastIndexOf(\")\");b == a.length - 1 && (a = a.substr(0, b)), e(JSON.parse(a));}, error: function error(a, b) {401 == a || 403 == a ? e(JSON.parse(b)) : f(a);} });}, b.Endpoint = new Object(), b;}();a.Navigation = b;}(RongIMLib || (RongIMLib = {}));var RongIMLib;!function (a) {var b = function () {function b(b) {this._name = \"BaseMessage\", this.lengthSize = 0, b instanceof a.Header ? this._header = b : this._header = new a.Header(b, !1, a.Qos.AT_MOST_ONCE, !1);}return b.prototype.read = function (a, b) {this.readMessage(a, b);}, b.prototype.write = function (b) {var c = new a.BinaryHelper(),d = c.convertStream(b);return this._headerCode = this.getHeaderFlag(), d.write(this._headerCode), this.writeMessage(d), d;}, b.prototype.getHeaderFlag = function () {return this._header.encode();}, b.prototype.getLengthSize = function () {return this.lengthSize;}, b.prototype.toBytes = function () {return this.write([]).getBytesArray();}, b.prototype.isRetained = function () {return this._header.retain;}, b.prototype.setRetained = function (a) {this._header.retain = a;}, b.prototype.setQos = function (b) {this._header.qos = \"[object Object]\" == Object.prototype.toString.call(b) ? b : a.Qos[b];}, b.prototype.setDup = function (a) {this._header.dup = a;}, b.prototype.isDup = function () {return this._header.dup;}, b.prototype.getType = function () {return this._header.type;}, b.prototype.getQos = function () {return this._header.qos;}, b.prototype.messageLength = function () {return 0;}, b.prototype.writeMessage = function (a) {}, b.prototype.readMessage = function (a, b) {}, b.prototype.init = function (a) {var b,c,d = this;for (c in a) {a.hasOwnProperty(c) && (b = c.replace(/^\\w/, function (a) {var b = a.charCodeAt(0);return \"set\" + (b >= 97 ? String.fromCharCode(-33 & b) : a);})) in d && (\"status\" == c ? d[b](disconnectStatus[a[c]] ? disconnectStatus[a[c]] : a[c]) : d[b](a[c]));}}, b;}();a.BaseMessage = b;var c = function (b) {function c(c) {switch (b.call(this, 0 == arguments.length || 3 == arguments.length ? a.Type.CONNECT : arguments[0]), this._name = \"ConnectMessage\", this.CONNECT_HEADER_SIZE = 12, this.protocolId = \"RCloud\", this.binaryHelper = new a.BinaryHelper(), this.protocolVersion = 3, arguments.length) {case 0:case 1:case 3:if (!arguments[0] || arguments[0].length > 64) throw new Error(\"ConnectMessage:Client Id cannot be null and must be at most 64 characters long: \" + arguments[0]);this.clientId = arguments[0], this.cleanSession = arguments[1], this.keepAlive = arguments[2];}}return __extends(c, b), c.prototype.messageLength = function () {var a = this.binaryHelper.toMQttString(this.clientId).length;return a += this.binaryHelper.toMQttString(this.willTopic).length, a += this.binaryHelper.toMQttString(this.will).length, a += this.binaryHelper.toMQttString(this.appId).length, (a += this.binaryHelper.toMQttString(this.token).length) + this.CONNECT_HEADER_SIZE;}, c.prototype.readMessage = function (a) {this.protocolId = a.readUTF(), this.protocolVersion = a.readByte();var b = a.readByte();if (this.hasAppId = (128 & b) > 0, this.hasToken = (64 & b) > 0, this.retainWill = (32 & b) > 0, this.willQos = b >> 3 & 3, this.hasWill = (4 & b) > 0, this.cleanSession = (32 & b) > 0, this.keepAlive = 256 * a.read() + a.read(), this.clientId = a.readUTF(), this.hasWill && (this.willTopic = a.readUTF(), this.will = a.readUTF()), this.hasAppId) try {this.appId = a.readUTF();} catch (c) {throw new Error(c);}if (this.hasToken) try {this.token = a.readUTF();} catch (c) {throw new Error(c);}return a;}, c.prototype.writeMessage = function (a) {var b = this.binaryHelper.convertStream(a);b.writeUTF(this.protocolId), b.write(this.protocolVersion);var c = this.cleanSession ? 2 : 0;return c |= this.hasWill ? 4 : 0, c |= this.willQos ? this.willQos >> 3 : 0, c |= this.retainWill ? 32 : 0, c |= this.hasToken ? 64 : 0, c |= this.hasAppId ? 128 : 0, b.write(c), b.writeChar(this.keepAlive), b.writeUTF(this.clientId), this.hasWill && (b.writeUTF(this.willTopic), b.writeUTF(this.will)), this.hasAppId && b.writeUTF(this.appId), this.hasToken && b.writeUTF(this.token), b;}, c;}(b);a.ConnectMessage = c;var d = function (b) {function c(c) {b.call(this, 0 == arguments.length ? a.Type.CONNACK : 1 == arguments.length ? arguments[0] instanceof a.Header ? arguments[0] : a.Type.CONNACK : null), this._name = \"ConnAckMessage\", this.MESSAGE_LENGTH = 2, this.binaryHelper = new a.BinaryHelper();var d = this;switch (arguments.length) {case 0:case 1:if (!(arguments[0] instanceof a.Header) && arguments[0] in a.ConnectionState) {if (null == arguments[0]) throw new Error(\"ConnAckMessage:The status of ConnAskMessage can't be null\");d.setStatus(arguments[0]);}}}return __extends(c, b), c.prototype.messageLength = function () {var a = this.MESSAGE_LENGTH;return this.userId && (a += this.binaryHelper.toMQttString(this.userId).length), a;}, c.prototype.readMessage = function (a, b) {a.read();var c = +a.read();if (!(c >= 0 && c <= 12)) throw new Error(\"Unsupported CONNACK code:\" + c);if (this.setStatus(c), b > this.MESSAGE_LENGTH) {this.setUserId(a.readUTF());var d = (a.readUTF(), a.readLong());this.setTimestamp(d);}}, c.prototype.writeMessage = function (a) {var b = this.binaryHelper.convertStream(a);switch (b.write(128), +status) {case 0:case 1:case 2:case 5:case 6:b.write(+status);break;case 3:case 4:b.write(3);break;default:throw new Error(\"Unsupported CONNACK code:\" + status);}return this.userId && b.writeUTF(this.userId), b;}, c.prototype.setStatus = function (a) {this.status = a;}, c.prototype.setUserId = function (a) {this.userId = a;}, c.prototype.getStatus = function () {return this.status;}, c.prototype.getUserId = function () {return this.userId;}, c.prototype.setTimestamp = function (a) {this.timestrap = a;}, c.prototype.getTimestamp = function () {return this.timestrap;}, c;}(b);a.ConnAckMessage = d;var e = function (b) {function c(c) {b.call(this, c instanceof a.Header ? c : a.Type.DISCONNECT), this._name = \"DisconnectMessage\", this.MESSAGE_LENGTH = 2, this.binaryHelper = new a.BinaryHelper(), c instanceof a.Header || c in a.ConnectionStatus && (this.status = c);}return __extends(c, b), c.prototype.messageLength = function () {return this.MESSAGE_LENGTH;}, c.prototype.readMessage = function (a) {a.read();var b = +a.read();if (!(b >= 0 && b <= 5)) throw new Error(\"Unsupported CONNACK code:\" + b);this.setStatus(disconnectStatus[b] ? disconnectStatus[b] : b);}, c.prototype.writeMessage = function (a) {var b = this.binaryHelper.convertStream(a);if (b.write(0), !(+status >= 1 && +status <= 3)) throw new Error(\"Unsupported CONNACK code:\" + status);b.write(+status - 1);}, c.prototype.setStatus = function (a) {this.status = a;}, c.prototype.getStatus = function () {return this.status;}, c;}(b);a.DisconnectMessage = e;var f = function (b) {function c(c) {b.call(this, c && c instanceof a.Header ? c : a.Type.PINGREQ), this._name = \"PingReqMessage\";}return __extends(c, b), c;}(b);a.PingReqMessage = f;var g = function (b) {function c(c) {b.call(this, c && c instanceof a.Header ? c : a.Type.PINGRESP), this._name = \"PingRespMessage\";}return __extends(c, b), c;}(b);a.PingRespMessage = g;var h = function (b) {function c(c) {b.call(this, c), this._name = \"RetryableMessage\", this.binaryHelper = new a.BinaryHelper();}return __extends(c, b), c.prototype.messageLength = function () {return 2;}, c.prototype.writeMessage = function (a) {var b = this.binaryHelper.convertStream(a),c = this.getMessageId(),d = 255 & c,e = (65280 & c) >> 8;return b.write(e), b.write(d), b;}, c.prototype.readMessage = function (a, b) {var c = 256 * a.read() + a.read();this.setMessageId(parseInt(c, 10));}, c.prototype.setMessageId = function (a) {this.messageId = a;}, c.prototype.getMessageId = function () {return this.messageId;}, c;}(b);a.RetryableMessage = h;var i = function (b) {function c(c) {b.call(this, c instanceof a.Header ? c : a.Type.PUBACK), this.msgLen = 2, this.date = 0, this.millisecond = 0, this.timestamp = 0, this.binaryHelper = new a.BinaryHelper(), this._name = \"PubAckMessage\", c instanceof a.Header || b.prototype.setMessageId.call(this, c);}return __extends(c, b), c.prototype.messageLength = function () {return this.msgLen;}, c.prototype.writeMessage = function (a) {var b = this.binaryHelper.convertStream(a);h.prototype.writeMessage.call(this, b);}, c.prototype.readMessage = function (a, b) {h.prototype.readMessage.call(this, a), this.date = a.readInt(), this.status = 256 * a.read() + a.read(), this.millisecond = 256 * a.read() + a.read(), this.timestamp = 1e3 * this.date + this.millisecond, this.messageUId = a.readUTF();}, c.prototype.setStatus = function (a) {this.status = a;}, c.prototype.setTimestamp = function (a) {this.timestamp = a;}, c.prototype.setMessageUId = function (a) {this.messageUId = a;}, c.prototype.getStatus = function () {return this.status;}, c.prototype.getDate = function () {return this.date;}, c.prototype.getTimestamp = function () {return this.timestamp;}, c.prototype.getMessageUId = function () {return this.messageUId;}, c;}(h);a.PubAckMessage = i;var j = function (b) {function c(c, d, e) {b.call(this, 1 == arguments.length && c instanceof a.Header ? c : 3 == arguments.length ? a.Type.PUBLISH : 0), this._name = \"PublishMessage\", this.binaryHelper = new a.BinaryHelper(), this.syncMsg = !1, 3 == arguments.length && (this.topic = c, this.targetId = e, this.data = \"string\" == typeof d ? this.binaryHelper.toMQttString(d) : d);}return __extends(c, b), c.prototype.messageLength = function () {var a = 10;return a += this.binaryHelper.toMQttString(this.topic).length, a += this.binaryHelper.toMQttString(this.targetId).length, a += this.data.length;}, c.prototype.writeMessage = function (a) {var b = this.binaryHelper.convertStream(a);b.writeUTF(this.topic), b.writeUTF(this.targetId), h.prototype.writeMessage.apply(this, arguments), b.write(this.data);}, c.prototype.readMessage = function (a, b) {var c = 6;this.date = a.readInt(), this.topic = a.readUTF(), c += this.binaryHelper.toMQttString(this.topic).length, this.targetId = a.readUTF(), c += this.binaryHelper.toMQttString(this.targetId).length, h.prototype.readMessage.apply(this, arguments), this.data = new Array(b - c), this.data = a.read(this.data);}, c.prototype.setTopic = function (a) {this.topic = a;}, c.prototype.setData = function (a) {this.data = a;}, c.prototype.setTargetId = function (a) {this.targetId = a;}, c.prototype.setDate = function (a) {this.date = a;}, c.prototype.setSyncMsg = function (a) {this.syncMsg = a;}, c.prototype.getSyncMsg = function () {return this.syncMsg;}, c.prototype.getTopic = function () {return this.topic;}, c.prototype.getData = function () {return this.data;}, c.prototype.getTargetId = function () {return this.targetId;}, c.prototype.getDate = function () {return this.date;}, c;}(h);a.PublishMessage = j;var k = function (b) {function c(c, d, e) {b.call(this, c instanceof a.Header ? c : 3 == arguments.length ? a.Type.QUERY : null), this.binaryHelper = new a.BinaryHelper(), this._name = \"QueryMessage\", 3 == arguments.length && (this.data = \"string\" == typeof d ? this.binaryHelper.toMQttString(d) : d, this.topic = c, this.targetId = e);}return __extends(c, b), c.prototype.messageLength = function () {var a = 0;return a += this.binaryHelper.toMQttString(this.topic).length, a += this.binaryHelper.toMQttString(this.targetId).length, a += 2, a += this.data.length;}, c.prototype.writeMessage = function (a) {var b = this.binaryHelper.convertStream(a);b.writeUTF(this.topic), b.writeUTF(this.targetId), h.prototype.writeMessage.call(this, b), b.write(this.data);}, c.prototype.readMessage = function (a, b) {var c = 0;this.topic = a.readUTF(), this.targetId = a.readUTF(), c += this.binaryHelper.toMQttString(this.topic).length, c += this.binaryHelper.toMQttString(this.targetId).length, this.readMessage.apply(this, arguments), c += 2, this.data = new Array(b - c), a.read(this.data);}, c.prototype.setTopic = function (a) {this.topic = a;}, c.prototype.setData = function (a) {this.data = a;}, c.prototype.setTargetId = function (a) {this.targetId = a;}, c.prototype.getTopic = function () {return this.topic;}, c.prototype.getData = function () {return this.data;}, c.prototype.getTargetId = function () {return this.targetId;}, c;}(h);a.QueryMessage = k;var l = function (b) {function c(c) {b.call(this, c instanceof a.Header ? c : a.Type.QUERYCON), this._name = \"QueryConMessage\", c instanceof a.Header || b.prototype.setMessageId.call(this, c);}return __extends(c, b), c;}(h);a.QueryConMessage = l;var m = function (b) {function c(c) {b.call(this, c), this._name = \"QueryAckMessage\", this.binaryHelper = new a.BinaryHelper();}return __extends(c, b), c.prototype.readMessage = function (a, b) {h.prototype.readMessage.call(this, a), this.date = a.readInt(), this.setStatus(256 * a.read() + a.read()), b > 0 && (this.data = new Array(b - 8), this.data = a.read(this.data));}, c.prototype.getData = function () {return this.data;}, c.prototype.getStatus = function () {return this.status;}, c.prototype.getDate = function () {return this.date;}, c.prototype.setDate = function (a) {this.date = a;}, c.prototype.setStatus = function (a) {this.status = a;}, c.prototype.setData = function (a) {this.data = a;}, c;}(h);a.QueryAckMessage = m;}(RongIMLib || (RongIMLib = {}));var RongIMLib;!function (a) {var b = function () {function b(b) {var c = new a.BinaryHelper();this.out = c.convertStream(b);}return b.prototype.writeMessage = function (b) {b instanceof a.BaseMessage && b.write(this.out);}, b;}();a.MessageOutputStream = b;var c = function () {function b(b, c) {if (c) this.flags = b.headerCode;else {var d = new a.BinaryHelper().convertStream(b);this.flags = d.readByte(), this._in = d;}this.header = new a.Header(this.flags), this.isPolling = c, this.In = b;}return b.prototype.readMessage = function () {switch (this.header.getType()) {case 1:this.msg = new a.ConnectMessage(this.header);break;case 2:this.msg = new a.ConnAckMessage(this.header);break;case 3:this.msg = new a.PublishMessage(this.header), this.msg.setSyncMsg(this.header.getSyncMsg());break;case 4:this.msg = new a.PubAckMessage(this.header);break;case 5:this.msg = new a.QueryMessage(this.header);break;case 6:this.msg = new a.QueryAckMessage(this.header);break;case 7:this.msg = new a.QueryConMessage(this.header);break;case 9:case 11:case 13:this.msg = new a.PingRespMessage(this.header);break;case 8:case 10:case 12:this.msg = new a.PingReqMessage(this.header);break;case 14:this.msg = new a.DisconnectMessage(this.header);break;default:throw new Error(\"No support for deserializing \" + this.header.getType() + \" messages\");}return this.isPolling ? this.msg.init(this.In) : this.msg.read(this._in, this.In.length - 1), this.msg;}, b;}();a.MessageInputStream = c;var d = function () {function b(b, c, d, e) {this.retain = !1, this.qos = a.Qos.AT_LEAST_ONCE, this.dup = !1, this.syncMsg = !1, b && +b == b && 1 == arguments.length ? (this.retain = (1 & b) > 0, this.qos = (6 & b) >> 1, this.dup = (8 & b) > 0, this.type = b >> 4 & 15, this.syncMsg = 8 == (8 & b)) : (this.type = b, this.retain = c, this.qos = d, this.dup = e);}return b.prototype.getSyncMsg = function () {return this.syncMsg;}, b.prototype.getType = function () {return this.type;}, b.prototype.encode = function () {var b = this;switch (this.qos) {case a.Qos[0]:b.qos = a.Qos.AT_MOST_ONCE;break;case a.Qos[1]:b.qos = a.Qos.AT_LEAST_ONCE;break;case a.Qos[2]:b.qos = a.Qos.EXACTLY_ONCE;break;case a.Qos[3]:b.qos = a.Qos.DEFAULT;}var c = this.type << 4;return c |= this.retain ? 1 : 0, c |= this.qos << 1, c |= this.dup ? 8 : 0;}, b.prototype.toString = function () {return \"Header [type=\" + this.type + \",retain=\" + this.retain + \",qos=\" + this.qos + \",dup=\" + this.dup + \"]\";}, b;}();a.Header = d;var e = function () {function a() {}return a.prototype.writeUTF = function (a, b) {for (var c = [], d = 0, e = 0, f = a.length; e < f; e++) {var g = a.charCodeAt(e);g >= 0 && g <= 127 ? (d += 1, c.push(g)) : g >= 128 && g <= 2047 ? (d += 2, c.push(192 | 31 & g >> 6), c.push(128 | 63 & g)) : g >= 2048 && g <= 65535 && (d += 3, c.push(224 | 15 & g >> 12), c.push(128 | 63 & g >> 6), c.push(128 | 63 & g));}for (var e = 0, f = c.length; e < f; e++) {c[e] > 255 && (c[e] &= 255);}return b ? c : d <= 255 ? [0, d].concat(c) : [d >> 8, 255 & d].concat(c);}, a.prototype.readUTF = function (a) {if (\"[object String]\" == Object.prototype.toString.call(a)) return a;for (var b = \"\", c = a, d = 0, e = c.length; d < e; d++) {c[d] < 0 && (c[d] += 256);var f = c[d].toString(2),g = f.match(/^1+?(?=0)/);if (g && 8 == f.length) {for (var h = g[0].length, i = \"\", j = 0; j < h; j++) {i += c[j + d].toString(2).slice(2);}b += String.fromCharCode(parseInt(i, 2)), d += h - 1;} else b += String.fromCharCode(c[d]);}return b;}, a.prototype.convertStream = function (a) {return a instanceof f ? a : new f(a);}, a.prototype.toMQttString = function (a) {return this.writeUTF(a);}, a;}();a.BinaryHelper = e;var f = function () {function a(a) {this.position = 0, this.writen = 0, this.poolLen = 0, this.binaryHelper = new e(), this.pool = a, this.poolLen = a.length;}return a.prototype.check = function () {return this.position >= this.pool.length;}, a.prototype.readInt = function () {if (this.check()) return -1;for (var a = \"\", b = 0; b < 4; b++) {var c = this.pool[this.position++].toString(16);1 == c.length && (c = \"0\" + c), a += c.toString(16);}return parseInt(a, 16);}, a.prototype.readLong = function () {if (this.check()) return -1;for (var a = \"\", b = 0; b < 8; b++) {var c = this.pool[this.position++].toString(16);1 == c.length && (c = \"0\" + c), a += c;}return parseInt(a, 16);}, a.prototype.readTimestamp = function () {if (this.check()) return -1;for (var a = \"\", b = 0; b < 8; b++) {a += this.pool[this.position++].toString(16);}return a = a.substring(2, 8), parseInt(a, 16);}, a.prototype.readUTF = function () {if (this.check()) return -1;var a = this.readByte() << 8 | this.readByte();return this.binaryHelper.readUTF(this.pool.subarray(this.position, this.position += a));}, a.prototype.readByte = function () {if (this.check()) return -1;var a = this.pool[this.position++];return a > 255 && (a &= 255), a;}, a.prototype.read = function (a) {return a ? this.pool.subarray(this.position, this.poolLen) : this.readByte();}, a.prototype.write = function (a) {var b = a;return \"[object array]\" == Object.prototype.toString.call(b).toLowerCase() ? [].push.apply(this.pool, b) : +b == b && (b > 255 && (b &= 255), this.pool.push(b), this.writen++), b;}, a.prototype.writeChar = function (a) {if (+a != a) throw new Error(\"writeChar:arguments type is error\");this.write(a >> 8 & 255), this.write(255 & a), this.writen += 2;}, a.prototype.writeUTF = function (a) {var b = this.binaryHelper.writeUTF(a);[].push.apply(this.pool, b), this.writen += b.length;}, a.prototype.toComplements = function () {for (var a = this.pool, b = 0; b < this.poolLen; b++) {a[b] > 128 && (a[b] -= 256);}return a;}, a.prototype.getBytesArray = function (a) {return a ? this.toComplements() : this.pool;}, a;}();a.RongIMStream = f;}(RongIMLib || (RongIMLib = {}));var RongIMLib;!function (a) {var b = function () {function b(a) {return this.connected = !1, this.isClose = !1, this.queue = [], this.empty = new Function(), this._socket = a, this;}return b.prototype.createTransport = function (b, c) {if (!b) throw new Error(\"URL can't be empty\");this.url = b;var d = a.RongIMClient._memoryStore.depend,e = d.wsScheme;return b = a.RongUtil.tplEngine(\"{wsScheme}{url}\", { wsScheme: e, url: b }), this.socket = new WebSocket(b), this.socket.binaryType = \"arraybuffer\", this.addEvent(), this.socket;}, b.prototype.send = function (b) {if (!this.connected && !this.isClose) return void this.queue.push(b);if (this.isClose) return void this._socket.fire(\"StatusChanged\", a.ConnectionStatus.CONNECTION_CLOSED);var c = new a.RongIMStream([]);new a.MessageOutputStream(c).writeMessage(b);var d = c.getBytesArray(!0),e = new Int8Array(d);return this.socket.send(e.buffer), this;}, b.prototype.onData = function (b) {return a.MessageUtil.isArray(b) ? this._socket.onMessage(new a.MessageInputStream(b).readMessage()) : this._socket.onMessage(new a.MessageInputStream(a.MessageUtil.ArrayFormInput(b)).readMessage()), \"\";}, b.prototype.onClose = function (b) {var c = this;c.isClose = !0, c.socket = this.empty, a.Bridge._client.clearHeartbeat(), 1006 != b.code || this._status ? c._status = 0 : c._socket.fire(\"StatusChanged\", a.ConnectionStatus.NETWORK_UNAVAILABLE);}, b.prototype.onError = function (a) {throw new Error(a);}, b.prototype.addEvent = function () {var a = this;a.socket.onopen = function () {a.connected = !0, a.isClose = !1, a.doQueue(), a._socket.fire(\"connect\");}, a.socket.onmessage = function (b) {\"string\" == typeof b.data ? a.onData(b.data.split(\",\")) : a.onData(b.data);}, a.socket.onerror = function (b) {a.onError(b);}, a.socket.onclose = function (b) {a.onClose(b);};}, b.prototype.doQueue = function () {for (var a = this, b = 0, c = a.queue.length; b < c; b++) {a.send(a.queue[b]);}}, b.prototype.disconnect = function (a) {var b = this;b.socket.readyState && (b.isClose = !0, a && (b._status = a), b.socket.close());}, b.prototype.reconnect = function () {this.disconnect(), this.createTransport(this.url);}, b.prototype.close = function () {this.socket.close();}, b;}();a.SocketTransportation = b;}(RongIMLib || (RongIMLib = {}));var RongIMLib;!function (a) {var b = function () {function b(a) {return this.empty = new Function(), this.connected = !1, this.pid = +new Date() + Math.random() + \"\", this.queue = [], this.socket = a, this;}return b.prototype.createTransport = function (b, c) {if (!b) throw new Error(\"Url is empty,Please check it!\");this.url = b;var d = a.RongIMClient._storageProvider.getItem(\"sId\" + a.Navigation.Endpoint.userId),e = this;return d ? (setTimeout(function () {e.onSuccess('{\"status\":0,\"userId\":\"' + a.Navigation.Endpoint.userId + '\",\"headerCode\":32,\"messageId\":0,\"sessionid\":\"' + d + '\"}'), e.connected = !0;}, 500), this) : (this.getRequest(b, !0), this);}, b.prototype.requestFactory = function (b, c, d) {var e = this.XmlHttpRequest();return d && (e.multipart = !0), e.open(c || \"GET\", a.RongIMClient._memoryStore.depend.protocol + b), \"POST\" == c && \"setRequestHeader\" in e && e.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded; charset=utf-8\"), e;}, b.prototype.getRequest = function (a, b) {var c = this;c.xhr = this.requestFactory(a + \"&pid=\" + encodeURIComponent(c.pid), \"GET\"), \"onload\" in c.xhr ? (c.xhr.onload = function () {c.xhr.onload = c.empty, \"lost params\" == this.responseText ? c.onError() : c.onSuccess(this.responseText, b);}, c.xhr.onerror = function () {c.disconnect();}) : c.xhr.onreadystatechange = function () {4 == c.xhr.readyState && (c.xhr.onreadystatechange = c.empty, /^(200|202)$/.test(c.xhr.status) ? c.onSuccess(c.xhr.responseText, b) : /^(400|403)$/.test(c.xhr.status) ? c.onError() : c.disconnect());}, c.xhr.send();}, b.prototype.send = function (b) {var c = this,d = c.sendxhr = this.requestFactory(a.Navigation.Endpoint.host + \"/websocket\" + b.url + \"&pid=\" + encodeURIComponent(c.pid), \"POST\");\"onload\" in d ? (d.onload = function () {d.onload = c.empty, c.onData(d.responseText);}, d.onerror = function () {d.onerror = c.empty;}) : d.onreadystatechange = function () {4 == d.readyState && (this.onreadystatechange = this.empty, /^(202|200)$/.test(d.status) && c.onData(d.responseText));}, d.send(JSON.stringify(b.data));}, b.prototype.onData = function (b, c) {if (b && \"lost params\" != b) {var d = this,e = JSON.parse(b);return e.userId && (a.Navigation.Endpoint.userId = e.userId), c && a.RongIMClient._storageProvider.setItem(\"sId\" + a.Navigation.Endpoint.userId, c), a.MessageUtil.isArray(e) || (e = [e]), Array.forEach(e, function (b) {d.socket.fire(\"message\", new a.MessageInputStream(b, !0).readMessage());}), \"\";}}, b.prototype.XmlHttpRequest = function () {var a = \"undefined\" != typeof XMLHttpRequest && \"withCredentials\" in new XMLHttpRequest();return \"undefined\" != typeof XMLHttpRequest && a ? new XMLHttpRequest() : \"undefined\" != typeof XDomainRequest ? new XDomainRequest() : new ActiveXObject(\"Microsoft.XMLHTTP\");}, b.prototype.onClose = function () {this.xhr && (this.xhr.onload ? this.xhr.onreadystatechange = this.xhr.onload = this.empty : this.xhr.onreadystatechange = this.empty, this.xhr.abort(), this.xhr = null), this.sendxhr && (this.sendxhr.onload ? this.sendxhr.onreadystatechange = this.sendxhr.onload = this.empty : this.sendxhr.onreadystatechange = this.empty, this.sendxhr.abort(), this.sendxhr = null);}, b.prototype.disconnect = function () {a.RongIMClient._storageProvider.removeItem(\"sId\" + a.Navigation.Endpoint.userId), a.RongIMClient._storageProvider.removeItem(a.Navigation.Endpoint.userId + \"msgId\"), this.onClose();}, b.prototype.reconnect = function () {this.disconnect(), this.createTransport(this.url);}, b.prototype.onSuccess = function (b, c) {var d = b.match(/\"sessionid\":\"\\S+?(?=\")/);if (this.onData(b, d ? d[0].slice(13) : 0), /\"headerCode\":-32,/.test(b)) return a.RongIMClient._storageProvider.removeItem(\"sId\" + a.Navigation.Endpoint.userId), void a.RongIMClient._storageProvider.removeItem(a.Navigation.Endpoint.userId + \"msgId\");this.getRequest(a.Navigation.Endpoint.host + \"/pullmsg.js?sessionid=\" + a.RongIMClient._storageProvider.getItem(\"sId\" + a.Navigation.Endpoint.userId) + \"&timestrap=\" + encodeURIComponent(new Date().getTime() + Math.random() + \"\")), this.connected = !0, c && this.socket.fire(\"connect\");}, b.prototype.onError = function () {a.RongIMClient._storageProvider.removeItem(\"sId\" + a.Navigation.Endpoint.userId), a.RongIMClient._storageProvider.removeItem(a.Navigation.Endpoint.userId + \"msgId\"), this.onClose(), this.connected = !1, this.socket.fire(\"disconnect\");}, b.prototype.close = function () {this.xhr.abort(), this.sendxhr = null;}, b;}();a.PollingTransportation = b;}(RongIMLib || (RongIMLib = {}));var typeMapping = { \"RC:TxtMsg\": \"TextMessage\", \"RC:ImgMsg\": \"ImageMessage\", \"RC:VcMsg\": \"VoiceMessage\", \"RC:ImgTextMsg\": \"RichContentMessage\", \"RC:FileMsg\": \"FileMessage\", \"RC:HQVCMsg\": \"HQVoiceMessage\", \"RC:LBSMsg\": \"LocationMessage\", \"RC:InfoNtf\": \"InformationNotificationMessage\", \"RC:ContactNtf\": \"ContactNotificationMessage\", \"RC:ProfileNtf\": \"ProfileNotificationMessage\", \"RC:CmdNtf\": \"CommandNotificationMessage\", \"RC:DizNtf\": \"DiscussionNotificationMessage\", \"RC:CmdMsg\": \"CommandMessage\", \"RC:TypSts\": \"TypingStatusMessage\", \"RC:CsChaR\": \"ChangeModeResponseMessage\", \"RC:CsHsR\": \"HandShakeResponseMessage\", \"RC:CsEnd\": \"TerminateMessage\", \"RC:CsSp\": \"SuspendMessage\", \"RC:CsUpdate\": \"CustomerStatusUpdateMessage\", \"RC:ReadNtf\": \"ReadReceiptMessage\", \"RC:VCAccept\": \"AcceptMessage\", \"RC:VCRinging\": \"RingingMessage\", \"RC:VCSummary\": \"SummaryMessage\", \"RC:VCHangup\": \"HungupMessage\", \"RC:VCInvite\": \"InviteMessage\", \"RC:VCModifyMedia\": \"MediaModifyMessage\", \"RC:VCModifyMem\": \"MemberModifyMessage\", \"RC:CsContact\": \"CustomerContact\", \"RC:PSImgTxtMsg\": \"PublicServiceRichContentMessage\", \"RC:PSMultiImgTxtMsg\": \"PublicServiceMultiRichContentMessage\", \"RC:GrpNtf\": \"GroupNotificationMessage\", \"RC:PSCmd\": \"PublicServiceCommandMessage\", \"RC:RcCmd\": \"RecallCommandMessage\", \"RC:SRSMsg\": \"SyncReadStatusMessage\", \"RC:RRReqMsg\": \"ReadReceiptRequestMessage\", \"RC:RRRspMsg\": \"ReadReceiptResponseMessage\", \"RCJrmf:RpMsg\": \"JrmfRedPacketMessage\", \"RCJrmf:RpOpendMsg\": \"JrmfRedPacketOpenedMessage\" },registerMessageTypeMapping = {},HistoryMsgType = { 4: \"qryCMsg\", 2: \"qryDMsg\", 3: \"qryGMsg\", 1: \"qryPMsg\", 6: \"qrySMsg\", 7: \"qryPMsg\", 8: \"qryPMsg\", 5: \"qryCMsg\" },disconnectStatus = { 1: 6 },RongIMLib;!function (RongIMLib) {var Transportations = function () {function a() {}return a._TransportType = RongIMLib.Socket.WEBSOCKET, a;}();RongIMLib.Transportations = Transportations;var SyncTimeUtil = function () {function a() {}return a.$getKey = function (a) {var b = RongIMLib.Bridge._client,c = b.userId,d = 1 == a.messageDirection ? \"send\" : \"receive\",e = RongIMLib.RongIMClient._memoryStore.appKey;return RongIMLib.RongUtil.tplEngine(\"{appkey}_{userId}_{direction}box\", { appkey: e, userId: c, direction: d });}, a.set = function (b) {var c = a.$getKey(b),d = b.sentTime;RongIMLib.RongIMClient._storageProvider.setItem(c, d);}, a.get = function () {var b = a.$getKey({ messageDirection: RongIMLib.MessageDirection.SEND }),c = a.$getKey({ messageDirection: RongIMLib.MessageDirection.RECEIVE }),d = RongIMLib.RongIMClient._storageProvider;return { sent: Number(d.getItem(b) || 0), received: Number(d.getItem(c) || 0) };}, a;}();RongIMLib.SyncTimeUtil = SyncTimeUtil;var MessageUtil = function () {function MessageUtil() {}return MessageUtil.checkStorageSize = function () {return JSON.stringify(localStorage).length < 468e4;}, MessageUtil.getFirstKey = function (a) {var b = \"\";for (var c in a) {b = c;break;}return b;}, MessageUtil.isEmpty = function (a) {var b = !0;for (var c in a) {b = !1;break;}return b;}, MessageUtil.ArrayForm = function (a) {if (\"[object ArrayBuffer]\" == Object.prototype.toString.call(a)) {var b = new Int8Array(a);return [].slice.call(b);}return a;}, MessageUtil.ArrayFormInput = function (a) {if (\"[object ArrayBuffer]\" == Object.prototype.toString.call(a)) {return new Uint8Array(a);}return a;}, MessageUtil.indexOf = function (a, b, c) {for (var d = a.length, e = c < 0 ? Math.max(0, +c) : c || 0; e < d; e++) {if (a[e] == b) return e;}return -1;}, MessageUtil.isArray = function (a) {return \"[object Array]\" == Object.prototype.toString.call(a);}, MessageUtil.forEach = function (a, b) {return [].forEach ? function (a, b) {[].forEach.call(a, b);} : function (a, b) {for (var c = 0; c < a.length; c++) {b.call(a, a[c], c, a);}};}, MessageUtil.remove = function (a, b) {for (var c = 0, d = a.length; c < d; c++) {if (b(a[c])) return a.splice(c, 1)[0];}return null;}, MessageUtil.int64ToTimestamp = function (a, b) {if (void 0 === a.low) return a;var c = a.low;c < 0 && (c += 4294967296), c = c.toString(16);var d = parseInt(a.high.toString(16) + \"00000000\".replace(new RegExp(\"0{\" + c.length + \"}$\"), c), 16);return b ? new Date(d) : d;}, MessageUtil.messageParser = function (entity, onReceived, offlineMsg) {var message = new RongIMLib.Message(),content = entity.content,de,objectName = entity.classname,val,isUseDef = !1;try {RongIMLib.RongIMClient._memoryStore.depend.isPolling ? (val = new RongIMLib.BinaryHelper().readUTF(content.offset ? MessageUtil.ArrayForm(content.buffer).slice(content.offset, content.limit) : content), de = JSON.parse(val)) : (val = new RongIMLib.BinaryHelper().readUTF(content.offset ? MessageUtil.ArrayFormInput(content.buffer).subarray(content.offset, content.limit) : content), de = JSON.parse(val));} catch (ex) {de = val, isUseDef = !0;}if (objectName in typeMapping) {var str = \"new RongIMLib.\" + typeMapping[objectName] + \"(de)\";message.content = eval(str), message.messageType = typeMapping[objectName];} else if (objectName in registerMessageTypeMapping) {var str = \"new RongIMLib.RongIMClient.RegisterMessage.\" + registerMessageTypeMapping[objectName] + \"(de)\";message.content = isUseDef ? eval(str).decode(de) : eval(str), message.messageType = registerMessageTypeMapping[objectName];} else message.content = new RongIMLib.UnknownMessage({ content: de, objectName: objectName }), message.messageType = \"UnknownMessage\";var dateTime = MessageUtil.int64ToTimestamp(entity.dataTime);message.sentTime = dateTime > 0 ? dateTime : +new Date(), message.senderUserId = entity.fromUserId, message.conversationType = entity.type, entity.fromUserId == RongIMLib.Bridge._client.userId ? message.targetId = entity.groupId : message.targetId = /^[234]$/.test(entity.type || entity.getType()) ? entity.groupId : message.senderUserId;var selfUserId = RongIMLib.Bridge._client.userId,isSelfSend = 1 == entity.direction || message.senderUserId === selfUserId;\n        isSelfSend ? (message.messageDirection = RongIMLib.MessageDirection.SEND, message.senderUserId = RongIMLib.Bridge._client.userId) : message.messageDirection = RongIMLib.MessageDirection.RECEIVE;var isSelfToSelf = message.senderUserId === selfUserId && message.targetId === selfUserId;return isSelfToSelf && (message.messageDirection = RongIMLib.MessageDirection.RECEIVE), message.messageUId = entity.msgId, message.receivedTime = new Date().getTime(), message.messageId = message.conversationType + \"_\" + ~~(16777215 * Math.random()), message.objectName = objectName, message.receivedStatus = RongIMLib.ReceivedStatus.READ, 2 == (2 & entity.status) && (message.receivedStatus = RongIMLib.ReceivedStatus.RETRIEVED), message.offLineMessage = !!offlineMsg, offlineMsg || RongIMLib.RongIMClient._memoryStore.connectAckTime > message.sentTime && (message.offLineMessage = !0), message;}, MessageUtil.detectCMP = function (a) {var b = new XMLHttpRequest();b.onreadystatechange = function () {if (4 == b.readyState) {200 == b.status ? a.success() : a.fail(b.status);}};var c = a.url,d = a.url,c = a.method || \"GET\";b.open(c, d);var e = a.headers;for (var f in e) {var g = e[f];b.setRequestHeader(f, g);}var h = JSON.stringify(a.body || {});return b.send(h), b;}, MessageUtil.sign = { converNum: 1, msgNum: 1, isMsgStart: !0, isConvStart: !0 }, MessageUtil;}();RongIMLib.MessageUtil = MessageUtil;var MessageIdHandler = function () {function a() {}return a.init = function () {this.messageId = +(RongIMLib.RongIMClient._storageProvider.getItem(RongIMLib.Navigation.Endpoint.userId + \"msgId\") || RongIMLib.RongIMClient._storageProvider.setItem(RongIMLib.Navigation.Endpoint.userId + \"msgId\", 0) || 0);}, a.messageIdPlus = function (a) {return RongIMLib.RongIMClient._memoryStore.depend.isPolling && this.init(), this.messageId >= 65535 ? (a(), !1) : (this.messageId++, RongIMLib.RongIMClient._memoryStore.depend.isPolling && RongIMLib.RongIMClient._storageProvider.setItem(RongIMLib.Navigation.Endpoint.userId + \"msgId\", this.messageId), this.messageId);}, a.clearMessageId = function () {this.messageId = 0, RongIMLib.RongIMClient._memoryStore.depend.isPolling && RongIMLib.RongIMClient._storageProvider.setItem(RongIMLib.Navigation.Endpoint.userId + \"msgId\", this.messageId);}, a.getMessageId = function () {return RongIMLib.RongIMClient._memoryStore.depend.isPolling && this.init(), this.messageId;}, a.messageId = 0, a;}();RongIMLib.MessageIdHandler = MessageIdHandler;var RongInnerTools = function () {function a() {}return a.convertUserStatus = function (a) {a = RongIMLib.RongUtil.rename(a, { subUserId: \"userId\" });var b = JSON.parse(a.status),c = b.us;return c ? (a.status = RongIMLib.RongUtil.rename(c, { o: \"online\", p: \"platform\", s: \"status\" }), a) : a;}, a;}();RongIMLib.RongInnerTools = RongInnerTools;}(RongIMLib || (RongIMLib = {}));var RongIMLib;!function (a) {var b = function () {function a(a) {throw new Error(\"This method is abstract, you must implement this method in inherited class.\");}return a.obtain = function () {throw new Error(\"This method is abstract, you must implement this method in inherited class.\");}, a;}();a.MessageContent = b;var c = function (a) {function b() {a.apply(this, arguments);}return __extends(b, a), b;}(b);a.NotificationMessage = c;var d = function (a) {function b() {a.apply(this, arguments);}return __extends(b, a), b;}(b);a.StatusMessage = d;var e = function () {function b() {}return b.modelClone = function (a) {var b = {};for (var c in a) {\"messageName\" != c && \"encode\" != c && (b[c] = a[c]);}return b;}, b.modleCreate = function (b, c) {var d = function d(e) {var f = this;for (var g in b) {f[b[g]] = e[b[g]];}d.prototype.messageName = c, d.prototype.encode = function () {return JSON.stringify(a.ModelUtil.modelClone(this));};};return d;}, b;}();a.ModelUtil = e;}(RongIMLib || (RongIMLib = {}));var RongIMLib;!function (a) {var b = function () {function b(a) {this.messageName = \"CustomerStatusMessage\", this.status = a.status;}return b.obtain = function () {return null;}, b.prototype.encode = function () {return JSON.stringify(a.ModelUtil.modelClone(this));}, b;}();a.CustomerStatusMessage = b;var c = function () {function b(a) {this.messageName = \"ChangeModeResponseMessage\", this.code = a.code, this.data = a.data, this.msg = a.msg;}return b.obtain = function () {return null;}, b.prototype.encode = function () {return JSON.stringify(a.ModelUtil.modelClone(this));}, b;}();a.ChangeModeResponseMessage = c;var d = function () {function b(a) {this.messageName = \"ChangeModeMessage\", this.uid = a.uid, this.sid = a.sid, this.pid = a.pid;}return b.obtain = function () {return null;}, b.prototype.encode = function () {return JSON.stringify(a.ModelUtil.modelClone(this));}, b;}();a.ChangeModeMessage = d;var e = function () {function b(a) {this.messageName = \"CustomerStatusUpdateMessage\", this.serviceStatus = a.serviceStatus, this.sid = a.sid;}return b.obtain = function () {return null;}, b.prototype.encode = function () {return JSON.stringify(a.ModelUtil.modelClone(this));}, b;}();a.CustomerStatusUpdateMessage = e;var f = function () {function b(a) {this.messageName = \"HandShakeMessage\", a && (this.requestInfo = a.requestInfo, this.userInfo = a.userInfo);}return b.obtain = function () {return null;}, b.prototype.encode = function () {return JSON.stringify(a.ModelUtil.modelClone(this));}, b;}();a.HandShakeMessage = f;var g = function () {function b(a) {this.messageName = \"CustomerContact\", this.page = a.page, this.nickName = a.nickName, this.routingInfo = a.routingInfo, this.info = a.info, this.requestInfo = a.requestInfo;}return b.prototype.encode = function () {return JSON.stringify(a.ModelUtil.modelClone(this));}, b;}();a.CustomerContact = g;var h = function () {function b(a) {this.messageName = \"EvaluateMessage\", this.uid = a.uid, this.sid = a.sid, this.pid = a.pid, this.source = a.source, this.suggest = a.suggest, this.isresolve = a.isresolve, this.type = a.type;}return b.obtain = function () {return null;}, b.prototype.encode = function () {return JSON.stringify(a.ModelUtil.modelClone(this));}, b;}();a.EvaluateMessage = h;var i = function () {function b(a) {this.messageName = \"HandShakeResponseMessage\", this.msg = a.msg, this.status = a.status, this.data = a.data;}return b.obtain = function () {return null;}, b.prototype.encode = function () {return JSON.stringify(a.ModelUtil.modelClone(this));}, b;}();a.HandShakeResponseMessage = i;var j = function () {function b(a) {this.messageName = \"SuspendMessage\", this.uid = a.uid, this.sid = a.sid, this.pid = a.pid;}return b.obtain = function () {return null;}, b.prototype.encode = function () {return JSON.stringify(a.ModelUtil.modelClone(this));}, b;}();a.SuspendMessage = j;var k = function () {function b(a) {this.messageName = \"TerminateMessage\", this.code = a.code, this.msg = a.msg, this.sid = a.sid;}return b.obtain = function () {return null;}, b.prototype.encode = function () {return JSON.stringify(a.ModelUtil.modelClone(this));}, b;}();a.TerminateMessage = k;}(RongIMLib || (RongIMLib = {}));var RongIMLib;!function (a) {var b = function () {function a(a) {this.messageName = \"IsTypingStatusMessage\";}return a.prototype.encode = function () {}, a.prototype.getMessage = function () {return null;}, a;}();a.IsTypingStatusMessage = b;}(RongIMLib || (RongIMLib = {}));var RongIMLib;!function (a) {var b = function () {function b(a) {if (this.messageName = \"InformationNotificationMessage\", 0 == arguments.length) throw new Error(\"Can not instantiate with empty parameters, use obtain method instead -> InformationNotificationMessage.\");this.message = a.message, this.extra = a.extra, a.user && (this.user = a.user);}return b.obtain = function (a) {return new b({ message: a, extra: \"\" });}, b.prototype.encode = function () {return JSON.stringify(a.ModelUtil.modelClone(this));}, b;}();a.InformationNotificationMessage = b;var c = function () {function b(a) {if (this.messageName = \"CommandMessage\", 0 == arguments.length) throw new Error(\"Can not instantiate with empty parameters, use obtain method instead -> CommandMessage.\");try {\"[object String]\" == Object.prototype.toString.call(a.data) ? this.data = JSON.parse(a.data) : this.data = a.data;} catch (b) {this.data = a.data;}this.name = a.name, this.extra = a.extra;}return b.obtain = function (a) {return new b({ data: a, extra: \"\" });}, b.prototype.encode = function () {return JSON.stringify(a.ModelUtil.modelClone(this));}, b;}();a.CommandMessage = c;var d = function () {function c(a) {if (this.messageName = \"ContactNotificationMessage\", 0 == arguments.length) throw new Error(\"Can not instantiate with empty parameters, use obtain method instead -> ContactNotificationMessage.\");this.operation = a.operation, this.targetUserId = a.targetUserId, this.message = a.message, this.extra = a.extra, this.sourceUserId = a.sourceUserId, a.user && (this.user = a.user);}return c.obtain = function (a, c, d, e) {return new b({ operation: a, sourceUserId: c, targetUserId: d, message: e });}, c.prototype.encode = function () {return JSON.stringify(a.ModelUtil.modelClone(this));}, c.CONTACT_OPERATION_ACCEPT_RESPONSE = \"ContactOperationAcceptResponse\", c.CONTACT_OPERATION_REJECT_RESPONSE = \"ContactOperationRejectResponse\", c.CONTACT_OPERATION_REQUEST = \"ContactOperationRequest\", c;}();a.ContactNotificationMessage = d;var e = function () {function b(a) {if (this.messageName = \"ProfileNotificationMessage\", 0 == arguments.length) throw new Error(\"Can not instantiate with empty parameters, use obtain method instead -> ProfileNotificationMessage.\");this.operation = a.operation;try {\"[object String]\" == Object.prototype.toString.call(a.data) ? this.data = JSON.parse(a.data) : this.data = a.data;} catch (b) {this.data = a.data;}this.extra = a.extra, a.user && (this.user = a.user);}return b.obtain = function (a, c) {return new b({ operation: a, data: c });}, b.prototype.encode = function () {return JSON.stringify(a.ModelUtil.modelClone(this));}, b;}();a.ProfileNotificationMessage = e;var f = function () {function b(a) {if (this.messageName = \"CommandNotificationMessage\", 0 == arguments.length) throw new Error(\"Can not instantiate with empty parameters, use obtain method instead -> ProfileNotificationMessage.\");try {\"[object String]\" == Object.prototype.toString.call(a.data) ? this.data = JSON.parse(a.data) : this.data = a.data;} catch (b) {this.data = a.data;}this.name = a.name, this.extra = a.extra, a.user && (this.user = a.user);}return b.obtain = function (a, c) {return new b({ name: a, data: c, extra: \"\" });}, b.prototype.encode = function () {return JSON.stringify(a.ModelUtil.modelClone(this));}, b;}();a.CommandNotificationMessage = f;var g = function () {function b(a) {if (this.messageName = \"DiscussionNotificationMessage\", 0 == arguments.length) throw new Error(\"Can not instantiate with empty parameters, use obtain method instead -> DiscussionNotificationMessage.\");this.extra = a.extra, this.extension = a.extension, this.type = a.type, this.isHasReceived = a.isHasReceived, this.operation = a.operation, this.user = a.user, a.user && (this.user = a.user);}return b.prototype.encode = function () {return JSON.stringify(a.ModelUtil.modelClone(this));}, b;}();a.DiscussionNotificationMessage = g;var h = function () {function b(a) {if (this.messageName = \"GroupNotificationMessage\", 0 == arguments.length) throw new Error(\"Can not instantiate with empty parameters, use obtain method instead -> GroupNotificationMessage.\");a.operatorUserId && (this.operatorUserId = a.operatorUserId), a.operation && (this.operation = a.operation), a.data && (this.data = a.data), a.message && (this.message = a.message), a.extra && (this.extra = a.extra);}return b.prototype.encode = function () {return JSON.stringify(a.ModelUtil.modelClone(this));}, b;}();a.GroupNotificationMessage = h;}(RongIMLib || (RongIMLib = {}));var RongIMLib;!function (a) {var b = function () {function b(a) {if (this.messageName = \"TextMessage\", 0 == arguments.length) throw new Error(\"Can not instantiate with empty parameters, use obtain method instead -> TextMessage.\");this.content = a.content, this.extra = a.extra, a.user && (this.user = a.user), a.mentionedInfo && (this.mentionedInfo = a.mentionedInfo);}return b.obtain = function (a) {return new b({ extra: \"\", content: a });}, b.prototype.encode = function () {return JSON.stringify(a.ModelUtil.modelClone(this));}, b;}();a.TextMessage = b;var c = function () {function b(a) {if (this.messageName = \"TypingStatusMessage\", 0 == arguments.length) throw new Error(\"Can not instantiate with empty parameters, use obtain method instead -> TypingStatusMessage.\");this.typingContentType = a.typingContentType, this.data = a.data;}return b.obtain = function (a, c) {return new b({ typingContentType: a, data: c });}, b.prototype.encode = function () {return JSON.stringify(a.ModelUtil.modelClone(this));}, b;}();a.TypingStatusMessage = c;var d = function () {function b(a) {if (this.messageName = \"ReadReceiptMessage\", 0 == arguments.length) throw new Error(\"Can not instantiate with empty parameters, use obtain method instead -> ReadReceiptMessage.\");this.lastMessageSendTime = a.lastMessageSendTime, this.messageUId = a.messageUId, this.type = a.type;}return b.obtain = function (a, c, d) {return new b({ messageUId: a, lastMessageSendTime: c, type: d });}, b.prototype.encode = function () {return JSON.stringify(a.ModelUtil.modelClone(this));}, b;}();a.ReadReceiptMessage = d;var e = function () {function b(a) {if (this.messageName = \"VoiceMessage\", 0 == arguments.length) throw new Error(\"Can not instantiate with empty parameters, use obtain method instead -> VoiceMessage.\");this.content = a.content, this.duration = a.duration, this.extra = a.extra, a.user && (this.user = a.user), a.mentionedInfo && (this.mentionedInfo = a.mentionedInfo);}return b.obtain = function (a, c) {return new b({ content: a, duration: c, extra: \"\" });}, b.prototype.encode = function () {return JSON.stringify(a.ModelUtil.modelClone(this));}, b;}();a.VoiceMessage = e;var f = function () {function b(a) {this.messageName = \"RecallCommandMessage\", this.messageUId = a.messageUId, this.conversationType = a.conversationType, this.targetId = a.targetId, this.sentTime = a.sentTime, a.extra && (this.extra = a.extra), a.user && (this.user = a.user);}return b.prototype.encode = function () {return JSON.stringify(a.ModelUtil.modelClone(this));}, b;}();a.RecallCommandMessage = f;var g = function () {function b(a) {if (this.messageName = \"ImageMessage\", 0 == arguments.length) throw new Error(\"Can not instantiate with empty parameters, use obtain method instead -> ImageMessage.\");this.content = a.content, this.imageUri = a.imageUri, a.extra && (this.extra = a.extra), a.user && (this.user = a.user), a.mentionedInfo && (this.mentionedInfo = a.mentionedInfo);}return b.obtain = function (a, c) {return new b({ content: a, imageUri: c, extra: \"\" });}, b.prototype.encode = function () {return JSON.stringify(a.ModelUtil.modelClone(this));}, b;}();a.ImageMessage = g;var h = function () {function b(a) {if (this.messageName = \"LocationMessage\", 0 == arguments.length) throw new Error(\"Can not instantiate with empty parameters, use obtain method instead -> LocationMessage.\");this.latitude = a.latitude, this.longitude = a.longitude, this.poi = a.poi, this.content = a.content, this.extra = a.extra, a.user && (this.user = a.user), a.mentionedInfo && (this.mentionedInfo = a.mentionedInfo);}return b.obtain = function (a, c, d, e) {return new b({ latitude: a, longitude: c, poi: d, content: e, extra: \"\" });}, b.prototype.encode = function () {return JSON.stringify(a.ModelUtil.modelClone(this));}, b;}();a.LocationMessage = h;var i = function () {function b(a) {if (this.messageName = \"RichContentMessage\", 0 == arguments.length) throw new Error(\"Can not instantiate with empty parameters, use obtain method instead -> RichContentMessage.\");this.title = a.title, this.content = a.content, this.imageUri = a.imageUri, this.extra = a.extra, this.url = a.url, a.user && (this.user = a.user);}return b.obtain = function (a, c, d, e) {return new b({ title: a, content: c, imageUri: d, url: e, extra: \"\" });}, b.prototype.encode = function () {return JSON.stringify(a.ModelUtil.modelClone(this));}, b;}();a.RichContentMessage = i;var j = function () {function a(a) {this.messageName = \"JrmfRedPacketMessage\", a && (this.message = a);}return a.prototype.encode = function () {return \"\";}, a;}();a.JrmfRedPacketMessage = j;var k = function () {function a(a) {this.messageName = \"JrmfRedPacketOpenedMessage\", a && (this.message = a);}return a.prototype.encode = function () {return \"\";}, a;}();a.JrmfRedPacketOpenedMessage = k;var l = function () {function a(a) {if (this.messageName = \"UnknownMessage\", 0 == arguments.length) throw new Error(\"Can not instantiate with empty parameters, use obtain method instead -> UnknownMessage.\");this.message = a;}return a.prototype.encode = function () {return \"\";}, a;}();a.UnknownMessage = l;var m = function () {function b(a) {if (this.messageName = \"PublicServiceCommandMessage\", 0 == arguments.length) throw new Error(\"Can not instantiate with empty parameters, use obtain method instead -> PublicServiceCommandMessage.\");this.content = a.content, this.extra = a.extra, this.menuItem = a.menuItem, a.user && (this.user = a.user), a.mentionedInfo && (this.mentionedInfo = a.mentionedInfo);}return b.obtain = function (a) {return new b({ content: \"\", command: \"\", menuItem: a, extra: \"\" });}, b.prototype.encode = function () {return JSON.stringify(a.ModelUtil.modelClone(this));}, b;}();a.PublicServiceCommandMessage = m;var n = function () {function a(a) {this.messageName = \"PublicServiceMultiRichContentMessage\", this.richContentMessages = a;}return a.prototype.encode = function () {return null;}, a;}();a.PublicServiceMultiRichContentMessage = n;var o = function () {function b(a) {this.messageName = \"SyncReadStatusMessage\", a.lastMessageSendTime && (this.lastMessageSendTime = a.lastMessageSendTime);}return b.prototype.encode = function () {return JSON.stringify(a.ModelUtil.modelClone(this));}, b;}();a.SyncReadStatusMessage = o;var p = function () {function b(a) {this.messageName = \"ReadReceiptRequestMessage\", a.messageUId && (this.messageUId = a.messageUId);}return b.prototype.encode = function () {return JSON.stringify(a.ModelUtil.modelClone(this));}, b;}();a.ReadReceiptRequestMessage = p;var q = function () {function b(a) {this.messageName = \"ReadReceiptResponseMessage\", a.receiptMessageDic && (this.receiptMessageDic = a.receiptMessageDic);}return b.prototype.encode = function () {return JSON.stringify(a.ModelUtil.modelClone(this));}, b;}();a.ReadReceiptResponseMessage = q;var r = function () {function b(a) {this.messageName = \"PublicServiceRichContentMessage\", this.richContentMessage = a;}return b.prototype.encode = function () {return JSON.stringify(a.ModelUtil.modelClone(this));}, b;}();a.PublicServiceRichContentMessage = r;var s = function () {function b(a) {this.messageName = \"FileMessage\", a.name && (this.name = a.name), a.size && (this.size = a.size), a.type && (this.type = a.type), a.fileUrl && (this.fileUrl = a.fileUrl), a.extra && (this.extra = a.extra), a.user && (this.user = a.user);}return b.obtain = function (a) {return new b({ name: a.name, size: a.size, type: a.type, fileUrl: a.fileUrl });}, b.prototype.encode = function () {return JSON.stringify(a.ModelUtil.modelClone(this));}, b;}();a.FileMessage = s;var t = function () {function b(a) {this.messageName = \"HQVoiceMessage\", this.type = a.type || \"aac\", a.localPath && (this.localPath = a.localPath), a.remoteUrl && (this.remoteUrl = a.remoteUrl), a.duration && (this.duration = a.duration), a.extra && (this.extra = a.extra), a.user && (this.user = a.user);}return b.prototype.encode = function () {return JSON.stringify(a.ModelUtil.modelClone(this));}, b;}();a.HQVoiceMessage = t;var u = function () {function b(a) {this.messageName = \"AcceptMessage\", this.mediaId = a.mediaId, this.callId = a.callId, this.mediaType = a.mediaType, this.mode = a.mode, this.subInfo = a.subInfo;}return b.prototype.encode = function () {return JSON.stringify(a.ModelUtil.modelClone(this));}, b;}();a.AcceptMessage = u;var v = function () {function b(a) {this.messageName = \"RingingMessage\", this.callId = a.callId;}return b.prototype.encode = function () {return JSON.stringify(a.ModelUtil.modelClone(this));}, b;}();a.RingingMessage = v;var w = function () {function b(a) {this.messageName = \"SummaryMessage\", this.caller = a.caller, this.inviter = a.inviter, this.mediaType = a.mediaType, this.memberIdList = a.memberIdList, this.startTime = a.startTime, this.connectedTime = a.connectedTime, this.duration = a.duration, this.status = a.status;}return b.prototype.encode = function () {return JSON.stringify(a.ModelUtil.modelClone(this));}, b;}();a.SummaryMessage = w;var x = function () {function b(a) {this.messageName = \"HungupMessage\", this.callId = a.callId, this.reason = a.reason, this.mode = a.mode, this.subInfo = a.subInfo;}return b.prototype.encode = function () {return JSON.stringify(a.ModelUtil.modelClone(this));}, b;}();a.HungupMessage = x;var y = function () {function b(a) {this.messageName = \"InviteMessage\", this.mediaId = a.mediaId, this.callId = a.callId, this.engineType = a.engineType, this.channelInfo = a.channelInfo, this.mediaType = a.mediaType, this.extra = a.extra, this.inviteUserIds = a.inviteUserIds, this.observerUserIds = a.observerUserIds, this.mode = a.mode, this.subInfo = a.subInfo;}return b.prototype.encode = function () {return JSON.stringify(a.ModelUtil.modelClone(this));}, b;}();a.InviteMessage = y;var z = function () {function b(a) {this.messageName = \"MediaModifyMessage\", this.callId = a.callId, this.mediaType = a.mediaType, this.mode = a.mode, this.subInfo = a.subInfo;}return b.prototype.encode = function () {return JSON.stringify(a.ModelUtil.modelClone(this));}, b;}();a.MediaModifyMessage = z;var A = function () {function b(a) {this.messageName = \"MemberModifyMessage\", this.modifyMemType = a.modifyMemType, this.callId = a.callId, this.caller = a.caller, this.engineType = a.engineType, this.channelInfo = a.channelInfo, this.mediaType = a.mediaType, this.extra = a.extra, this.inviteUserIds = a.inviteUserIds, this.existedMemberStatusList = a.existedMemberStatusList, this.existedUserPofiles = a.existedUserPofiles, this.observerUserIds = a.observerUserIds, this.mode = a.mode, this.subInfo = a.subInfo;}return b.prototype.encode = function () {return JSON.stringify(a.ModelUtil.modelClone(this));}, b;}();a.MemberModifyMessage = A;}(RongIMLib || (RongIMLib = {}));var RongIMLib;!function (a) {var b = function () {function a(a, b) {this.Id = a, this.Key = b;}return a;}();a.ChannelInfo = b;var c = function () {function a(a, b, c) {this.platform = a, this.online = b, this.status = c;}return a;}();a.UserStatus = c;var d = function () {function a(a, b, c) {}return a;}();a.MentionedInfo = d;var e = function () {function a(a, b, c) {this.msgId = a, this.msgDataTime = b, this.direct = c;}return a;}();a.DeleteMessage = e;var f = function () {function a(a, b, c) {}return a;}();a.CustomServiceConfig = f;var g = function () {function a(a, b, c, d, e, f, g) {}return a;}();a.CustomServiceSession = g;var h = function () {function b(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u) {this.conversationTitle = a, this.conversationType = b, this.draft = c, this.isTop = d, this.latestMessage = e, this.latestMessageId = f, this.notificationStatus = g, this.objectName = h, this.receivedStatus = i, this.receivedTime = j, this.senderUserId = k, this.senderUserName = l, this.sentStatus = m, this.sentTime = n, this.targetId = o, this.unreadMessageCount = p, this.senderPortraitUri = q, this.isHidden = r, this.mentionedMsg = s, this.hasUnreadMention = t, this._readTime = u;}return b.prototype.setTop = function () {a.RongIMClient._dataAccessProvider.addConversation(this, { onSuccess: function onSuccess(a) {} });}, b;}();a.Conversation = h;var i = function () {function a(a, b, c, d, e) {this.creatorId = a, this.id = b, this.memberIdList = c, this.name = d, this.isOpen = e;}return a;}();a.Discussion = i;var j = function () {function a(a, b, c) {this.id = a, this.name = b, this.portraitUri = c;}return a;}();a.Group = j;var k = function () {function a(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {this.content = a, this.conversationType = b, this.extra = c, this.objectName = d, this.messageDirection = e, this.messageId = f, this.receivedStatus = g, this.receivedTime = h, this.senderUserId = i, this.sentStatus = j, this.sentTime = k, this.targetId = l, this.messageType = m, this.messageUId = n, this.isLocalMessage = o, this.offLineMessage = p, this.receiptResponse = q;}return a;}();a.Message = k;var l = function () {function a(a, b) {this.isCounted = a, this.isPersited = b;}return a.prototype.getMessageTag = function () {return this.isCounted && this.isPersited ? 3 : this.isCounted ? 2 : this.isPersited ? 1 : this.isCounted || this.isPersited ? void 0 : 0;}, a.getTagByStatus = function (a) {var b = { 3: { isCounted: !0, isPersited: !0 }, 2: { isCounted: !0, isPersited: !1 }, 1: { isCounted: !0, isPersited: !0 }, 0: { isCounted: !0, isPersited: !0 } };return b[a] || b[3];}, a;}();a.MessageTag = l;var m = function () {function a(a, b, c, d, e) {this.id = a, this.name = b, this.type = c, this.sunMenuItems = d, this.url = e;}return a;}();a.PublicServiceMenuItem = m;var n = function () {function a(a, b, c, d, e, f, g, h) {this.conversationType = a, this.introduction = b, this.menu = c, this.name = d, this.portraitUri = e, this.publicServiceId = f, this.hasFollowed = g, this.isGlobal = h;}return a;}();a.PublicServiceProfile = n;var o = function () {function a(a, b, c) {this.id = a, this.name = b, this.portraitUri = c;}return a;}();a.UserInfo = o;var p = function () {function a(a, b) {this.id = a, this.token = b;}return a;}();a.User = p;var q = function () {function a(a, b, c) {this.id = a, this.user = b, this.mode = c;}return a;}();a.Room = q;}(RongIMLib || (RongIMLib = {}));var RongIMLib;!function (a) {var b = function () {function b() {this.userStatusListener = null;}return b.prototype.init = function (b, c) {new a.FeatureDectector(c.appCallback);}, b.prototype.connect = function (b, c, d, e) {a.RongIMClient.bridge = a.Bridge.getInstance(), a.RongIMClient._memoryStore.token = b, a.RongIMClient._memoryStore.callback = c, d = d || \"\", e = e || {};var f = !1,g = !1;if (a.Bridge._client && a.Bridge._client.channel && (f = a.Bridge._client.channel.connectionStatus == a.ConnectionStatus.CONNECTING, g = a.Bridge._client.channel.connectionStatus == a.ConnectionStatus.CONNECTED), !g && !f) {if (a.RongIMClient.otherDeviceLoginCount > 5) return void c.onError(a.ConnectionStatus.ULTRALIMIT);e.force && a.RongIMClient._storageProvider.removeItem(\"servers\");for (var h = 0, i = a.RongIMClient._memoryStore.listenerList.length; h < i; h++) {a.RongIMClient.bridge.setListener(a.RongIMClient._memoryStore.listenerList[h]);}a.RongIMClient._memoryStore.listenerList.length = 0, a.RongIMClient.bridge.connect(a.RongIMClient._memoryStore.appKey, b, { onSuccess: function onSuccess(a) {setTimeout(function () {c.onSuccess(a);});}, onError: function onError(b) {b != a.ConnectionState.TOKEN_INCORRECT && b ? setTimeout(function () {c.onError(b);}) : setTimeout(function () {c.onTokenIncorrect();});} });}}, b.prototype.reconnect = function (b, c) {var d = a.RongIMClient._memoryStore,e = d.token;if (!e) throw new Error(\"reconnect: token is empty.\");if (a.Bridge._client && a.Bridge._client.channel && a.Bridge._client.channel.connectionStatus != a.ConnectionStatus.CONNECTED && a.Bridge._client.channel.connectionStatus != a.ConnectionStatus.CONNECTING) {c = c || {};var f = c.auto ? \"auto\" : \"custom\";({ auto: function auto() {var d = function d(b) {var c = b.step(),d = b.url,e = function e() {a.RongUtil.request({ url: d, success: function success() {b.done();}, error: function error() {f();} });},f = function f() {var d = c();if (\"done\" == d) {var f = a.ConnectionStatus.NETWORK_UNAVAILABLE;return void b.done(f);}setTimeout(e, d);};f();},f = a.RongIMClient._memoryStore.depend.protocol,g = c.url || \"cdn.ronghub.com/RongIMLib-2.2.6.min.js\",h = { protocol: f, path: g };g = a.RongUtil.formatProtoclPath(h);var i = c.rate || [100, 1e3, 3e3, 6e3, 1e4, 18e3];i.push(\"done\"), d({ url: g, step: function step() {var a = 0;return function () {var b = i[a];return a++, b;};}, done: function done(c) {if (c) return void b.onError(c);a.RongIMClient.connect(e, b);} });}, custom: function custom() {a.RongIMClient.connect(e, b);} })[f]();}}, b.prototype.logout = function () {a.RongIMClient.bridge.disconnect(), a.RongIMClient.bridge = null;}, b.prototype.disconnect = function () {a.RongIMClient.bridge.disconnect();}, b.prototype.sendReceiptResponse = function (b, c, d) {var e = a.Bridge._client.userId + b + c + \"RECEIVED\",f = this;if (a.RongUtil.supportLocalStorage()) {var g = JSON.parse(a.RongIMClient._storageProvider.getItem(e));if (g) {var h = [];for (var i in g) {var j = {};j[i] = g[i].uIds, g[i].isResponse || h.push(j);}if (0 == h.length) return void d.onSuccess();var k = setInterval(function () {1 == h.length && clearInterval(k);var i = h.splice(0, 1)[0],j = new a.ReadReceiptResponseMessage({ receiptMessageDic: i });f.sendMessage(b, c, j, { onSuccess: function onSuccess(b) {var c = a.MessageUtil.getFirstKey(i);g[c].isResponse = !0, a.RongIMClient._storageProvider.setItem(e, JSON.stringify(g)), d.onSuccess(b);}, onError: function onError(a, b) {d.onError(a, b);} });}, 200);} else d.onSuccess();} else d.onSuccess();}, b.prototype.sendTypingStatusMessage = function (b, c, d, e) {var f = this;d in a.RongIMClient.MessageParams && f.sendMessage(b, c, a.TypingStatusMessage.obtain(a.RongIMClient.MessageParams[d].objectName, \"\"), { onSuccess: function onSuccess() {setTimeout(function () {e.onSuccess();});}, onError: function onError(a) {setTimeout(function () {e.onError(a, null);});}, onBefore: function onBefore() {} });}, b.prototype.sendRecallMessage = function (b, c) {var d = new a.RecallCommandMessage({ conversationType: b.conversationType, targetId: b.targetId, sentTime: b.sentTime, messageUId: b.messageUId, extra: b.extra, user: b.user });this.sendMessage(b.conversationType, b.senderUserId, d, c, !1, null, null, 2);}, b.prototype.sendTextMessage = function (b, c, d, e) {var f = a.TextMessage.obtain(d);this.sendMessage(b, c, f, e);}, b.prototype.getRemoteHistoryMessages = function (b, c, d, e, f, g) {if (e <= 1) throw new Error(\"the count must be greater than 1.\");g = g || {};var h = g.order || 0,i = function i() {return [b, c, \"_\", h].join(\"\");},j = i();a.RongUtil.isNumber(d) || (d = a.RongIMClient._memoryStore.lastReadTime.get(j));var k = a.RongIMClient._memoryStore,l = k.historyMessageLimit,m = l.get(j) || {},n = m.hasMore;if (!n && m.time == d && 0 == h) return f.onSuccess([], n);var o = new a.RongIMClient.Protobuf.HistoryMsgInput();o.setTargetId(c), o.setTime(d), o.setCount(e), o.setOrder(h), a.RongIMClient.bridge.queryMsg(HistoryMsgType[b], a.MessageUtil.ArrayForm(o.toArrayBuffer()), c, { onSuccess: function onSuccess(b) {var d = a.MessageUtil.int64ToTimestamp(b.syncTime);a.RongIMClient._memoryStore.lastReadTime.set(j, d), l.set(j, { hasMore: !!b.hasMsg, time: d });var e,g = b.list.reverse(),h = null,i = a.SentStatus.READ;if (a.RongUtil.supportLocalStorage()) for (var k = 0, m = g.length; k < m; k++) {h = a.MessageUtil.messageParser(g[k]), e = JSON.parse(a.RongIMClient._storageProvider.getItem(a.Bridge._client.userId + h.messageUId + \"SENT\")), e && (h.receiptResponse || (h.receiptResponse = {}), h.receiptResponse[h.messageUId] = e.count), h.sentStatus = i, h.targetId = c, g[k] = h;} else for (var k = 0, m = g.length; k < m; k++) {var h = a.MessageUtil.messageParser(g[k]);h.sentStatus = i, g[k] = h;}setTimeout(function () {f.onSuccess(g, !!b.hasMsg);});}, onError: function onError(a) {setTimeout(function () {f.onError(a);});} }, \"HistoryMessagesOuput\");}, b.prototype.hasRemoteUnreadMessages = function (b, c) {var d = null;window.RCCallback = function (a) {setTimeout(function () {c.onSuccess(!!+a.status);}), d.parentNode.removeChild(d);}, d = document.createElement(\"script\"), d.src = a.RongIMClient._memoryStore.depend.api + \"/message/exist.js?appKey=\" + encodeURIComponent(a.RongIMClient._memoryStore.appKey) + \"&token=\" + encodeURIComponent(b) + \"&callBack=RCCallback&_=\" + a.RongUtil.getTimestamp(), document.body.appendChild(d), d.onerror = function () {setTimeout(function () {c.onError(a.ErrorCode.UNKNOWN);}), d.parentNode.removeChild(d);};}, b.prototype.getRemoteConversationList = function (b, c, d) {var e = new a.RongIMClient.Protobuf.RelationsInput(),f = this;e.setType(1), void 0 === d ? e.setCount(0) : e.setCount(d), a.RongIMClient.bridge.queryMsg(26, a.MessageUtil.ArrayForm(e.toArrayBuffer()), a.Bridge._client.userId, { onSuccess: function onSuccess(d) {if (d.info) {d.info = d.info.reverse();for (var e = 0, g = d.info.length; e < g; e++) {a.RongIMClient.getInstance().pottingConversation(d.info[e]);}}var h = a.RongIMClient._memoryStore.conversationList;setTimeout(function () {if (c) return b.onSuccess(f.filterConversations(c, h));b.onSuccess(h);});}, onError: function onError(a) {b.onError(a);} }, \"RelationsOutput\");}, b.prototype.addMemberToDiscussion = function (b, c, d) {var e = new a.RongIMClient.Protobuf.ChannelInvitationInput();e.setUsers(c), a.RongIMClient.bridge.queryMsg(0, a.MessageUtil.ArrayForm(e.toArrayBuffer()), b, { onSuccess: function onSuccess() {setTimeout(function () {d.onSuccess();});}, onError: function onError(a) {setTimeout(function () {d.onError(a);});} });}, b.prototype.createDiscussion = function (b, c, d) {var e = new a.RongIMClient.Protobuf.CreateDiscussionInput(),f = this;e.setName(b), a.RongIMClient.bridge.queryMsg(1, a.MessageUtil.ArrayForm(e.toArrayBuffer()), a.Bridge._client.userId, { onSuccess: function onSuccess(a) {c.length > 0 && f.addMemberToDiscussion(a, c, { onSuccess: function onSuccess() {}, onError: function onError(a) {setTimeout(function () {d.onError(a);});} }), setTimeout(function () {d.onSuccess(a);});}, onError: function onError(a) {setTimeout(function () {d.onError(a);});} }, \"CreateDiscussionOutput\");}, b.prototype.getDiscussion = function (b, c) {var d = new a.RongIMClient.Protobuf.ChannelInfoInput();d.setNothing(1), a.RongIMClient.bridge.queryMsg(4, a.MessageUtil.ArrayForm(d.toArrayBuffer()), b, { onSuccess: function onSuccess(a) {setTimeout(function () {c.onSuccess(a);});}, onError: function onError(a) {setTimeout(function () {c.onError(a);});} }, \"ChannelInfoOutput\");}, b.prototype.quitDiscussion = function (b, c) {var d = new a.RongIMClient.Protobuf.LeaveChannelInput();d.setNothing(1), a.RongIMClient.bridge.queryMsg(7, a.MessageUtil.ArrayForm(d.toArrayBuffer()), b, { onSuccess: function onSuccess() {setTimeout(function () {c.onSuccess();});}, onError: function onError(a) {setTimeout(function () {c.onError(a);});} });}, b.prototype.removeMemberFromDiscussion = function (b, c, d) {var e = new a.RongIMClient.Protobuf.ChannelEvictionInput();e.setUser(c), a.RongIMClient.bridge.queryMsg(9, a.MessageUtil.ArrayForm(e.toArrayBuffer()), b, { onSuccess: function onSuccess() {setTimeout(function () {d.onSuccess();});}, onError: function onError(a) {setTimeout(function () {d.onError(a);});} });}, b.prototype.setDiscussionInviteStatus = function (b, c, d) {var e = new a.RongIMClient.Protobuf.ModifyPermissionInput();e.setOpenStatus(c.valueOf()), a.RongIMClient.bridge.queryMsg(11, a.MessageUtil.ArrayForm(e.toArrayBuffer()), b, { onSuccess: function onSuccess(a) {setTimeout(function () {d.onSuccess();});}, onError: function onError(a) {setTimeout(function () {d.onError(a);});} });}, b.prototype.setDiscussionName = function (b, c, d) {\n        var e = new a.RongIMClient.Protobuf.RenameChannelInput();e.setName(c), a.RongIMClient.bridge.queryMsg(12, a.MessageUtil.ArrayForm(e.toArrayBuffer()), b, { onSuccess: function onSuccess() {setTimeout(function () {d.onSuccess();});}, onError: function onError(a) {d.onError(a);} });}, b.prototype.joinChatRoom = function (b, c, d) {var e = new a.RongIMClient.Protobuf.ChrmInput();e.setNothing(1), a.Bridge._client.chatroomId = b, a.RongIMClient.bridge.queryMsg(19, a.MessageUtil.ArrayForm(e.toArrayBuffer()), b, { onSuccess: function onSuccess() {setTimeout(function () {d.onSuccess();});var e = new a.RongIMClient.Protobuf.ChrmPullMsg();0 == c && (c = -1), e.setCount(c), e.setSyncTime(0), a.Bridge._client.queryMessage(\"chrmPull\", a.MessageUtil.ArrayForm(e.toArrayBuffer()), b, 1, { onSuccess: function onSuccess(c) {var d = c.list,e = a.MessageUtil.int64ToTimestamp(c.syncTime),f = d[d.length - 1];f && (f = a.MessageUtil.messageParser(f), e = f.sentTime), a.RongIMClient._memoryStore.lastReadTime.set(b + a.Bridge._client.userId + \"CST\", e);for (var g = a.Bridge._client, h = 0, i = d.length; h < i; h++) {var j = \"R\" + d[h].msgId;if (!(j in g.cacheMessageIds)) {g.cacheMessageIds[j] = !0;var k = a.RongUtil.keys(g.cacheMessageIds);if (k.length > 10 && (j = k[0], delete g.cacheMessageIds[j]), a.RongIMClient._memoryStore.filterMessages.length > 0) for (var l = 0, m = a.RongIMClient._memoryStore.filterMessages.length; l < m; l++) {a.RongIMClient.MessageParams[a.RongIMClient._memoryStore.filterMessages[l]].objectName != d[h].classname && g.handler.onReceived(d[h]);} else g.handler.onReceived(d[h]);}}}, onError: function onError(b) {setTimeout(function () {d.onError(a.ErrorCode.CHATROOM_HISMESSAGE_ERROR);});} }, \"DownStreamMessages\");}, onError: function onError(a) {setTimeout(function () {d.onError(a);});} }, \"ChrmOutput\");}, b.prototype.getChatRoomInfo = function (b, c, d, e) {var f = new a.RongIMClient.Protobuf.QueryChatroomInfoInput();f.setCount(c), f.setOrder(d), a.RongIMClient.bridge.queryMsg(\"queryChrmI\", a.MessageUtil.ArrayForm(f.toArrayBuffer()), b, { onSuccess: function onSuccess(b) {b.userInfos.forEach(function (b) {b.time = a.MessageUtil.int64ToTimestamp(b.time);}), setTimeout(function () {e.onSuccess(b);});}, onError: function onError(a) {setTimeout(function () {e.onError(a);});} }, \"QueryChatroomInfoOutput\");}, b.prototype.quitChatRoom = function (b, c) {var d = new a.RongIMClient.Protobuf.ChrmInput();d.setNothing(1), a.RongIMClient.bridge.queryMsg(17, a.MessageUtil.ArrayForm(d.toArrayBuffer()), b, { onSuccess: function onSuccess() {setTimeout(function () {c.onSuccess();});}, onError: function onError(a) {setTimeout(function () {c.onError(a);});} }, \"ChrmOutput\");}, b.prototype.setChatroomHisMessageTimestamp = function (b, c) {a.RongIMClient._memoryStore.lastReadTime.set(\"chrhis_\" + b, c);}, b.prototype.getChatRoomHistoryMessages = function (b, c, d, e) {var f = new a.RongIMClient.Protobuf.HistoryMsgInput();f.setTargetId(b);var g = a.RongIMClient._memoryStore.lastReadTime.get(\"chrhis_\" + b) || 0;f.setTime(g), f.setCount(c), f.setOrder(d), a.RongIMClient.bridge.queryMsg(34, a.MessageUtil.ArrayForm(f.toArrayBuffer()), a.Bridge._client.userId, { onSuccess: function onSuccess(c) {a.RongIMClient._memoryStore.lastReadTime.set(\"chrhis_\" + b, a.MessageUtil.int64ToTimestamp(c.syncTime));for (var d = c.list.reverse(), f = 0, g = d.length; f < g; f++) {d[f] = a.MessageUtil.messageParser(d[f]);}setTimeout(function () {e.onSuccess(d, !!c.hasMsg);});}, onError: function onError(a) {setTimeout(function () {e.onError(a);});} }, \"HistoryMsgOuput\");}, b.prototype.setMessageStatus = function (a, b, c, d, e) {setTimeout(function () {e.onSuccess(!0);});}, b.prototype.addToBlacklist = function (b, c) {var d = new a.RongIMClient.Protobuf.Add2BlackListInput();d.setUserId(b), a.RongIMClient.bridge.queryMsg(21, a.MessageUtil.ArrayForm(d.toArrayBuffer()), b, { onSuccess: function onSuccess() {setTimeout(function () {c.onSuccess();});}, onError: function onError(a) {setTimeout(function () {c.onError(a);});} });}, b.prototype.getBlacklist = function (b) {var c = new a.RongIMClient.Protobuf.QueryBlackListInput();c.setNothing(1), a.RongIMClient.bridge.queryMsg(23, a.MessageUtil.ArrayForm(c.toArrayBuffer()), a.Bridge._client.userId, { onSuccess: function onSuccess(a) {setTimeout(function () {b.onSuccess(a);});}, onError: function onError(a) {setTimeout(function () {b.onError(a);});} }, \"QueryBlackListOutput\");}, b.prototype.getBlacklistStatus = function (b, c) {var d = new a.RongIMClient.Protobuf.BlackListStatusInput();d.setUserId(b), a.RongIMClient.bridge.queryMsg(24, a.MessageUtil.ArrayForm(d.toArrayBuffer()), b, { onSuccess: function onSuccess(b) {setTimeout(function () {c.onSuccess(a.BlacklistStatus[b]);});}, onError: function onError(a) {setTimeout(function () {c.onError(a);});} });}, b.prototype.removeFromBlacklist = function (b, c) {var d = new a.RongIMClient.Protobuf.RemoveFromBlackListInput();d.setUserId(b), a.RongIMClient.bridge.queryMsg(22, a.MessageUtil.ArrayForm(d.toArrayBuffer()), b, { onSuccess: function onSuccess() {setTimeout(function () {c.onSuccess();});}, onError: function onError(a) {setTimeout(function () {c.onError(a);});} });}, b.prototype.getFileToken = function (b, c) {if (!/(1|2|3|4)/.test(b.toString())) return void setTimeout(function () {c.onError(a.ErrorCode.QNTKN_FILETYPE_ERROR);});var d = new a.RongIMClient.Protobuf.GetQNupTokenInput();d.setType(b), a.RongIMClient.bridge.queryMsg(30, a.MessageUtil.ArrayForm(d.toArrayBuffer()), a.Bridge._client.userId, { onSuccess: function onSuccess(a) {setTimeout(function () {c.onSuccess(a);});}, onError: function onError(a) {setTimeout(function () {c.onError(a);});} }, \"GetQNupTokenOutput\");}, b.prototype.getFileUrl = function (b, c, d, e) {if (!/(1|2|3|4)/.test(b.toString())) return void setTimeout(function () {e.onError(a.ErrorCode.QNTKN_FILETYPE_ERROR);});var f = new a.RongIMClient.Protobuf.GetQNdownloadUrlInput();f.setType(b), f.setKey(c), d && f.setFileName(d), a.RongIMClient.bridge.queryMsg(31, a.MessageUtil.ArrayForm(f.toArrayBuffer()), a.Bridge._client.userId, { onSuccess: function onSuccess(a) {setTimeout(function () {e.onSuccess(a);});}, onError: function onError(a) {setTimeout(function () {e.onError(a);});} }, \"GetQNdownloadUrlOutput\");}, b.prototype.sendMessage = function (b, c, d, e, f, g, h, i, j) {if (!a.Bridge._client.channel) return void setTimeout(function () {e.onError(a.ErrorCode.RC_NET_UNAVAILABLE, null);});if (!a.Bridge._client.channel.socket.socket.connected) throw setTimeout(function () {e.onError(a.ErrorCode.TIMEOUT, null);}), new Error(\"connect is timeout! postion:sendMessage\");var k = b == a.ConversationType.DISCUSSION || b == a.ConversationType.GROUP,l = new a.RongIMClient.Protobuf.UpStreamMessage();if (f && k ? l.setSessionId(7) : l.setSessionId(a.RongIMClient.MessageParams[d.messageName].msgTag.getMessageTag()), g && l.setPushText(g), h && l.setAppData(h), k && d.messageName == a.RongIMClient.MessageType.ReadReceiptResponseMessage) {var m = d;if (m.receiptMessageDic) {var n = [];for (var o in m.receiptMessageDic) {n.push(o);}l.setUserId(n);}}k && d.messageName == a.RongIMClient.MessageType.SyncReadStatusMessage && l.setUserId(a.Bridge._client.userId), j = j || {};var p = j.userIds;k && p && l.setUserId(p), l.setClassname(a.RongIMClient.MessageParams[d.messageName].objectName), l.setContent(d.encode());var q = l.toArrayBuffer();\"[object ArrayBuffer]\" == Object.prototype.toString.call(q) && (q = [].slice.call(new Int8Array(q)));var r = this,s = new a.Message(),t = this.getConversation(b, c);3 == a.RongIMClient.MessageParams[d.messageName].msgTag.getMessageTag() && (t || (t = a.RongIMClient.getInstance().createConversation(b, c, \"\")), t.sentTime = new Date().getTime(), t.sentStatus = a.SentStatus.SENDING, t.senderUserName = \"\", t.senderUserId = a.Bridge._client.userId, t.notificationStatus = a.ConversationNotificationStatus.DO_NOT_DISTURB, t.latestMessage = s, t.unreadMessageCount = 0, a.RongIMClient._dataAccessProvider.addConversation(t, { onSuccess: function onSuccess(a) {} })), a.RongIMClient._memoryStore.converStore = t, s.content = d, s.conversationType = b, s.senderUserId = a.Bridge._client.userId, s.objectName = a.RongIMClient.MessageParams[d.messageName].objectName, s.targetId = c, s.sentTime = new Date().getTime(), s.messageDirection = a.MessageDirection.SEND, s.sentStatus = a.SentStatus.SENT, s.messageType = d.messageName, a.RongIMClient.bridge.pubMsg(b.valueOf(), q, c, { onSuccess: function onSuccess(f) {if (f && f.timestamp && a.RongIMClient._memoryStore.lastReadTime.set(\"converST_\" + a.Bridge._client.userId + b + c, f.timestamp), (b == a.ConversationType.DISCUSSION || b == a.ConversationType.GROUP) && d.messageName == a.RongIMClient.MessageType.ReadReceiptRequestMessage) {var g = s.content,h = a.Bridge._client.userId + g.messageUId + \"SENT\";a.RongIMClient._storageProvider.setItem(h, JSON.stringify({ count: 0, dealtime: f.timestamp, userIds: {} }));}if (3 == a.RongIMClient.MessageParams[s.messageType].msgTag.getMessageTag()) {var i = a.RongIMClient._memoryStore.converStore;i.sentStatus = s.sentStatus, i.latestMessage = s, r.updateConversation(i), a.RongIMClient._dataAccessProvider.addMessage(b, c, s, { onSuccess: function onSuccess(b) {s = b, s.messageUId = f.messageUId, s.sentTime = f.timestamp, s.sentStatus = a.SentStatus.SENT, s.messageId = f.messageId, a.RongIMClient._dataAccessProvider.updateMessage(s);}, onError: function onError() {} });}setTimeout(function () {i && r.updateConversation(i), s.sentTime = f.timestamp, s.messageUId = f.messageUId, e.onSuccess(s);});}, onError: function onError(d, f) {s.sentStatus = a.SentStatus.FAILED, f && (s.messageUId = f.messageUId, s.sentTime = f.sentTime), 3 == a.RongIMClient.MessageParams[s.messageType].msgTag.getMessageTag() && (a.RongIMClient._memoryStore.converStore.latestMessage = s), a.RongIMClient._dataAccessProvider.addMessage(b, c, s, { onSuccess: function onSuccess(b) {s.messageId = b.messageId, a.RongIMClient._dataAccessProvider.updateMessage(s);}, onError: function onError() {} }), setTimeout(function () {e.onError(d, s);});} }, null, i), e.onBefore && e.onBefore(a.MessageIdHandler.messageId), s.messageId = a.MessageIdHandler.messageId + \"\";}, b.prototype.setConnectionStatusListener = function (b) {var c = { onChanged: function onChanged(c) {b.onChanged(c), a.RongUtil.forEach(a.RongIMClient.statusListeners, function (a) {a(c);});} };a.RongIMClient.bridge ? a.RongIMClient.bridge.setListener(c) : a.RongIMClient._memoryStore.listenerList.push(c);}, b.prototype.setOnReceiveMessageListener = function (b) {a.RongIMClient.bridge ? a.RongIMClient.bridge.setListener(b) : a.RongIMClient._memoryStore.listenerList.push(b);}, b.prototype.registerMessageType = function (b, c, d, e, f) {if (!b) throw new Error(\"messageType can't be empty,postion -> registerMessageType\");if (!c) throw new Error(\"objectName can't be empty,postion -> registerMessageType\");if (\"[object Array]\" == Object.prototype.toString.call(e)) {var g = a.ModelUtil.modleCreate(e, b);a.RongIMClient.RegisterMessage[b] = g;} else {if (\"[object Function]\" != Object.prototype.toString.call(e) && \"[object Object]\" != Object.prototype.toString.call(e)) throw new Error(\"The index of 3 parameter was wrong type  must be object or function or array-> registerMessageType\");if (!e.encode) throw new Error(\"encode method has not realized or messageName is undefined-> registerMessageType\");if (!e.decode) throw new Error(\"decode method has not realized -> registerMessageType\");}registerMessageTypeMapping[c] = b;}, b.prototype.registerMessageTypes = function (b) {var c = [],d = function d(a) {var b = [];for (var c in a) {b.push(c);}return b;};for (var e in b) {var f = b[e],g = f.proto,h = d(g),i = f.flag || 3,j = a.MessageTag.getTagByStatus(i);i = new a.MessageTag(j.isCounted, j.isPersited), c.push({ type: e, name: f.name, flag: i, protos: h });}for (var k = function k(b) {var c = b.type,d = b.name,e = b.flag,f = b.protos;a.RongIMClient.registerMessageType(c, d, e, f);}, l = 0, m = c.length; l < m; l++) {var f = c[l];k(f);}}, b.prototype.addConversation = function (b, c) {for (var d = !0, e = 0, f = a.RongIMClient._memoryStore.conversationList.length; e < f; e++) {if (a.RongIMClient._memoryStore.conversationList[e].conversationType === b.conversationType && a.RongIMClient._memoryStore.conversationList[e].targetId === b.targetId) {a.RongIMClient._memoryStore.conversationList.unshift(a.RongIMClient._memoryStore.conversationList.splice(e, 1)[0]), d = !1;break;}}d && a.RongIMClient._memoryStore.conversationList.unshift(b), c && c.onSuccess(!0);}, b.prototype.updateConversation = function (b) {for (var c, d = 0, e = a.RongIMClient._memoryStore.conversationList.length; d < e; d++) {var f = a.RongIMClient._memoryStore.conversationList[d];if (b.conversationType === f.conversationType && b.targetId === f.targetId) {b.conversationTitle && (f.conversationTitle = b.conversationTitle), b.senderUserName && (f.senderUserName = b.senderUserName), b.senderPortraitUri && (f.senderPortraitUri = b.senderPortraitUri), b.latestMessage && (f.latestMessage = b.latestMessage), b.sentStatus && (f.sentStatus = b.sentStatus);break;}}return c;}, b.prototype.removeConversation = function (b, c, d) {var e = new a.RongIMClient.Protobuf.RelationsInput();e.setType(b), a.RongIMClient.bridge.queryMsg(27, a.MessageUtil.ArrayForm(e.toArrayBuffer()), c, { onSuccess: function onSuccess() {for (var e = a.RongIMClient._memoryStore.conversationList, f = e.length, g = 0; g < f; g++) {if (e[g].conversationType == b && c == e[g].targetId) {e.splice(g, 1);break;}}d.onSuccess(!0);}, onError: function onError(a) {setTimeout(function () {d.onError(a);});} });}, b.prototype.getMessage = function (b, c) {c.onSuccess(new a.Message());}, b.prototype.addMessage = function (a, b, c, d) {d && d.onSuccess(c);}, b.prototype.removeMessage = function (b, c, d, e) {a.RongIMClient.getInstance().deleteRemoteMessages(b, c, d, e);}, b.prototype.removeLocalMessage = function (a, b, c, d) {d.onSuccess(!0);}, b.prototype.updateMessage = function (a, b) {b && b.onSuccess(a);}, b.prototype.clearRemoteHistoryMessages = function (b, c) {var d = new a.RongIMClient.Protobuf.CleanHisMsgInput(),e = b.conversationType,f = { 1: \"cleanPMsg\", 2: \"cleanDMsg\", 3: \"cleanGMsg\", 5: \"cleanCMsg\", 6: \"cleanSMsg\" },g = f[e];if (!g) return void c.onError(a.ErrorCode.CLEAR_HIS_TYPE_ERROR);var h = b.timestamp;if (\"number\" != typeof h) return void c.onError(a.ErrorCode.CLEAR_HIS_TIME_ERROR);d.setDataTime(h);var i = b.targetId;d.setTargetId(i), a.RongIMClient.bridge.queryMsg(g, a.MessageUtil.ArrayForm(d.toArrayBuffer()), i, { onSuccess: function onSuccess(a) {c.onSuccess(!a);}, onError: function onError(b) {1 == b && (b = a.ErrorCode.CLEAR_HIS_ERROR), setTimeout(function () {c.onError(b);});} });}, b.prototype.clearHistoryMessages = function (a, b) {this.clearRemoteHistoryMessages(a, b);}, b.prototype.clearMessages = function (a, b, c) {}, b.prototype.updateMessages = function (b, c, d, e, f) {var g = this;\"readStatus\" == d && a.RongIMClient._memoryStore.conversationList.length > 0 && g.getConversationList({ onSuccess: function onSuccess(a) {Array.forEach(a, function (a) {a.conversationType == b && a.targetId == c && (a.unreadMessageCount = 0);});}, onError: function onError(a) {setTimeout(function () {f.onError(a);});} }, null), setTimeout(function () {f.onSuccess(!0);});}, b.prototype.getConversation = function (b, c, d) {for (var e = null, f = 0, g = a.RongIMClient._memoryStore.conversationList.length; f < g; f++) {if (a.RongIMClient._memoryStore.conversationList[f].conversationType == b && a.RongIMClient._memoryStore.conversationList[f].targetId == c && (e = a.RongIMClient._memoryStore.conversationList[f], a.RongUtil.supportLocalStorage())) {var h = a.RongIMClient._storageProvider.getItem(\"cu\" + a.Bridge._client.userId + b + c);0 == e.unreadMessageCount && (e.unreadMessageCount = Number(h));}}return setTimeout(function () {d && d.onSuccess(e);}), e;}, b.prototype.filterConversations = function (b, c) {var d = [];return a.RongUtil.forEach(b, function (b) {a.RongUtil.forEach(c, function (a) {a.conversationType == b && d.push(a);});}), d;}, b.prototype.getConversationList = function (b, c, d, e) {var f = this,g = a.RongIMClient._memoryStore.isSyncRemoteConverList,h = a.RongIMClient._memoryStore.conversationList,i = h.length > d;if (!g && i) return void setTimeout(function () {var a = h.slice(0, d);c && (a = f.filterConversations(c, a)), b.onSuccess(a);});a.RongIMClient.getInstance().getRemoteConversationList({ onSuccess: function onSuccess(c) {a.RongUtil.supportLocalStorage() && Array.forEach(a.RongIMClient._memoryStore.conversationList, function (b) {var c = a.RongIMClient._storageProvider.getItem(\"cu\" + a.Bridge._client.userId + b.conversationType + b.targetId);0 == b.unreadMessageCount && (b.unreadMessageCount = Number(c));}), a.RongIMClient._memoryStore.isSyncRemoteConverList = !1, setTimeout(function () {b.onSuccess(c);});}, onError: function onError(a) {setTimeout(function () {b.onError(a);});} }, c, d, e);}, b.prototype.clearCache = function () {var b = a.RongIMClient._memoryStore || {};b.conversationList = [], b.isSyncRemoteConverList = !0;}, b.prototype.clearConversations = function (b, c) {Array.forEach(b, function (b) {Array.forEach(a.RongIMClient._memoryStore.conversationList, function (c) {b == c.conversationType && a.RongIMClient.getInstance().removeConversation(c.conversationType, c.targetId, { onSuccess: function onSuccess() {}, onError: function onError() {} });});}), setTimeout(function () {c.onSuccess(!0);});}, b.prototype.setMessageContent = function (a, b, c) {}, b.prototype.setMessageSearchField = function (a, b, c) {}, b.prototype.getHistoryMessages = function (b, c, d, e, f, g, h) {var i = { objectname: g, order: h };a.RongIMClient.getInstance().getRemoteHistoryMessages(b, c, d, e, f, i);}, b.prototype.getTotalUnreadCount = function (b, c) {var d = 0,e = a.RongIMClient._storageProvider;if (c) a.RongUtil.forEach(c, function (b) {var c = e.getItemKeyList(\"cu\" + a.Bridge._client.userId + b);a.RongUtil.forEach(c, function (a) {var b = e.getItem(a),c = Number(b) || 0;d += c;});});else {var f = e.getItemKeyList(\"cu\" + a.Bridge._client.userId);a.RongUtil.forEach(f, function (a) {var b = e.getItem(a),c = Number(b) || 0;d += c;});}b.onSuccess(d);}, b.prototype.getConversationUnreadCount = function (b, c) {var d = 0;Array.forEach(b, function (b) {Array.forEach(a.RongIMClient._memoryStore.conversationList, function (a) {a.conversationType == b && (d += a.unreadMessageCount);});}), setTimeout(function () {c.onSuccess(d);});}, b.prototype.setUnreadCount = function (b, c, d) {var e = a.RongIMClient._storageProvider,f = \"cu\" + a.Bridge._client.userId + b + c;e.setItem(f, d);}, b.prototype.getUnreadCount = function (b, c, d) {var e = \"cu\" + a.Bridge._client.userId + b + c,f = a.RongIMClient._storageProvider.getItem(e),g = Number(f);setTimeout(function () {d.onSuccess(g || 0);});}, b.prototype.cleanMentioneds = function (b) {if (b) {b.mentionedMsg = null;var c = b.targetId,d = b.conversationType,e = a.RongIMClient._storageProvider.getItem(\"mentioneds_\" + a.Bridge._client.userId + \"_\" + d + \"_\" + c);if (e) {var f = JSON.parse(e);delete f[d + \"_\" + c], a.MessageUtil.isEmpty(f) ? a.RongIMClient._storageProvider.removeItem(\"mentioneds_\" + a.Bridge._client.userId + \"_\" + d + \"_\" + c) : a.RongIMClient._storageProvider.setItem(\"mentioneds_\" + a.Bridge._client.userId + \"_\" + d + \"_\" + c, JSON.stringify(f));}}}, b.prototype.clearUnreadCountByTimestamp = function (a, b, c, d) {setTimeout(function () {d.onSuccess(!0);});}, b.prototype.clearUnreadCount = function (b, c, d) {var e = this;a.RongIMClient._storageProvider.removeItem(\"cu\" + a.Bridge._client.userId + b + c), this.getConversation(b, c, { onSuccess: function onSuccess(a) {a && (a.unreadMessageCount = 0, e.cleanMentioneds(a)), setTimeout(function () {d.onSuccess(!0);});}, onError: function onError(a) {setTimeout(function () {d.onError(a);});} });}, b.prototype.clearTotalUnreadCount = function (b) {var c = a.RongIMClient._memoryStore.conversationList,d = this;if (c) for (var e = 0; e < c.length; e++) {var f = c[e];f && (f.unreadMessageCount = 0, d.cleanMentioneds(f));}var g = a.RongIMClient._storageProvider.getItemKeyList(\"cu\" + a.Bridge._client.userId);a.RongUtil.forEach(g, function (b) {a.RongIMClient._storageProvider.removeItem(b);}), setTimeout(function () {b.onSuccess(!0);});}, b.prototype.setConversationToTop = function (a, b, c, d) {var e = this;this.getConversation(a, b, { onSuccess: function onSuccess(a) {a.isTop = c, e.addConversation(a, d), setTimeout(function () {d.onSuccess(!0);});}, onError: function onError(a) {setTimeout(function () {d.onError(a);});} });}, b.prototype.getConversationNotificationStatus = function (b, c) {var d = b.targetId,e = b.conversationType,f = a.RongIMClient._memoryStore.notification,g = function g() {return e + \"_\" + d;},h = g(),i = f[h];if (\"number\" == typeof i) return void c.onSuccess(i);var j = { 1: \"qryPPush\", 3: \"qryDPush\" },k = j[e];if (!k) {return void c.onError(8001);}var l = new a.RongIMClient.Protobuf.BlockPushInput();l.setBlockeeId(d);var m = a.Bridge._client.userId,n = function n(a) {f[h] = a, setTimeout(function () {c.onSuccess(a);});};a.RongIMClient.bridge.queryMsg(k, a.MessageUtil.ArrayForm(l.toArrayBuffer()), m, { onSuccess: function onSuccess(a) {n(a);}, onError: function onError(a) {1 == a ? n(a) : setTimeout(function () {c.onError(a);});} });}, b.prototype.setConversationNotificationStatus = function (b, c) {var d = b.conversationType,e = b.targetId,f = b.status,g = function g() {return d + \"_\" + f;},h = { \"1_1\": \"blkPPush\", \"3_1\": \"blkDPush\", \"1_0\": \"unblkPPush\", \"3_0\": \"unblkDPush\" },i = g();a.RongIMClient._memoryStore.notification[i] = f;var j = h[i];if (!j) {return void setTimeout(function () {c.onError(8001);});}var k = new a.RongIMClient.Protobuf.BlockPushInput();k.setBlockeeId(e);var l = a.Bridge._client.userId;a.RongIMClient.bridge.queryMsg(j, a.MessageUtil.ArrayForm(k.toArrayBuffer()), l, { onSuccess: function onSuccess(a) {setTimeout(function () {c.onSuccess(a);});}, onError: function onError(a) {setTimeout(function () {c.onError(a);});} });}, b.prototype.getUserStatus = function (b, c) {var d = new a.RongIMClient.Protobuf.GetUserStatusInput();b = a.Bridge._client.userId, a.RongIMClient.bridge.queryMsg(35, a.MessageUtil.ArrayForm(d.toArrayBuffer()), b, { onSuccess: function onSuccess(b) {b = a.RongInnerTools.convertUserStatus(b), setTimeout(function () {c.onSuccess(b);});}, onError: function onError(a) {setTimeout(function () {c.onError(a);});} }, \"GetUserStatusOutput\");}, b.prototype.setUserStatus = function (b, c) {var d = new a.RongIMClient.Protobuf.SetUserStatusInput(),e = a.Bridge._client.userId;b && d.setStatus(b), a.RongIMClient.bridge.queryMsg(36, a.MessageUtil.ArrayForm(d.toArrayBuffer()), e, { onSuccess: function onSuccess(a) {setTimeout(function () {c.onSuccess(!0);});}, onError: function onError(a) {setTimeout(function () {c.onError(a);});} }, \"SetUserStatusOutput\");}, b.prototype.subscribeUserStatus = function (b, c) {var d = new a.RongIMClient.Protobuf.SubUserStatusInput(),e = a.Bridge._client.userId;d.setUserid(b), a.RongIMClient.bridge.queryMsg(37, a.MessageUtil.ArrayForm(d.toArrayBuffer()), e, { onSuccess: function onSuccess(a) {setTimeout(function () {c && c.onSuccess(!0);});}, onError: function onError(a) {setTimeout(function () {c && c.onError(a);});} }, \"SubUserStatusOutput\");}, b.prototype.setUserStatusListener = function (b, c) {a.RongIMClient.userStatusListener = c;var d = b.userIds || [];d.length && a.RongIMClient._dataAccessProvider.subscribeUserStatus(d);}, b.prototype.clearListeners = function () {}, b.prototype.setServerInfo = function (a) {}, b.prototype.getUnreadMentionedMessages = function (a, b) {return null;}, b.prototype.setConversationHidden = function (a, b, c) {}, b.prototype.setMessageExtra = function (a, b, c) {setTimeout(function () {c.onSuccess(!0);});}, b.prototype.setMessageReceivedStatus = function (a, b, c) {setTimeout(function () {c.onSuccess(!0);});}, b.prototype.setMessageSentStatus = function (a, b, c) {setTimeout(function () {c.onSuccess(!0);});}, b.prototype.getAllConversations = function (a) {setTimeout(function () {a.onSuccess([]);});}, b.prototype.getConversationByContent = function (a, b) {setTimeout(function () {b.onSuccess([]);});}, b.prototype.getMessagesFromConversation = function (a, b, c, d) {setTimeout(function () {d.onSuccess([]);});}, b.prototype.searchConversationByContent = function (a, b, c) {setTimeout(function () {b.onSuccess([]);});}, b.prototype.searchMessageByContent = function (a, b, c, d, e, f, g) {setTimeout(function () {g.onSuccess([]);});}, b.prototype.getDelaTime = function () {return a.RongIMClient._memoryStore.deltaTime;}, b.prototype.getCurrentConnectionStatus = function () {var b = a.Bridge._client || {},c = b.channel || {},d = a.ConnectionStatus.CONNECTION_CLOSED;return \"number\" == typeof c.connectionStatus && (d = c.connectionStatus), d;}, b.prototype.getAgoraDynamicKey = function (b, c, d) {var e = new a.RongIMClient.Protobuf.VoipDynamicInput();e.setEngineType(b), e.setChannelName(c), a.RongIMClient.bridge.queryMsg(32, a.MessageUtil.ArrayForm(e.toArrayBuffer()), a.Bridge._client.userId, { onSuccess: function onSuccess(a) {setTimeout(function () {d.onSuccess(a);});}, onError: function onError(a) {setTimeout(function () {d.onError(a);});} }, \"VoipDynamicOutput\");}, b.prototype.setDeviceInfo = function (a) {}, b.prototype.setEnvironment = function (a) {}, b.prototype.clearData = function () {return !0;}, b.prototype.getPublicServiceProfile = function (b, c, d) {var e = a.RongIMClient._memoryStore.publicServiceMap.get(b, c);setTimeout(function () {d.onSuccess(e);});}, b.prototype.getRemotePublicServiceList = function (b, c) {if (a.RongIMClient._memoryStore.depend.openMp) {var d = new a.RongIMClient.Protobuf.PullMpInput();c ? d.setTime(c) : d.setTime(0), d.setMpid(\"\"), a.RongIMClient.bridge.queryMsg(28, a.MessageUtil.ArrayForm(d.toArrayBuffer()), a.Bridge._client.userId, { onSuccess: function onSuccess(c) {a.RongIMClient._memoryStore.publicServiceMap.publicServiceList.length = 0, a.RongIMClient._memoryStore.publicServiceMap.publicServiceList = c, setTimeout(function () {b && b.onSuccess(c);});}, onError: function onError(a) {setTimeout(function () {b && b.onError(a);});} }, \"PullMpOutput\");}}, b.prototype.getRTCUserInfoList = function (b, c) {var d = new a.RongIMClient.Protobuf.RtcQueryListInput();d.setOrder(2), a.RongIMClient.bridge.queryMsg(\"rtcUData\", a.MessageUtil.ArrayForm(d.toArrayBuffer()), b.id, { onSuccess: function onSuccess(b) {var d = {},e = b.list;a.RongUtil.forEach(e, function (b) {var c = b.userId,e = {};a.RongUtil.forEach(b.userData, function (a) {var b = a.key,c = a.value;e[b] = c;}), d[c] = e;}), c.onSuccess(d);}, onError: function onError(a) {c.onError(a);} }, \"RtcUserListOutput\");}, b.prototype.getRTCUserList = function (b, c) {var d = new a.RongIMClient.Protobuf.RtcQueryListInput();d.setOrder(2), a.RongIMClient.bridge.queryMsg(\"rtcUList\", a.MessageUtil.ArrayForm(d.toArrayBuffer()), b.id, { onSuccess: function onSuccess(a) {c.onSuccess({ users: a.list });}, onError: function onError(a) {c.onError(a);} }, \"RtcUserListOutput\");}, b.prototype.setRTCUserInfo = function (b, c, d) {var e = new a.RongIMClient.Protobuf.RtcValueInfo();e.setKey(c.key), e.setValue(c.value), a.RongIMClient.bridge.queryMsg(\"rtcUPut\", a.MessageUtil.ArrayForm(e.toArrayBuffer()), b.id, { onSuccess: function onSuccess() {d.onSuccess(!0);}, onError: function onError(a) {d.onError(a);} });}, b.prototype.removeRTCUserInfo = function (b, c, d) {var e = new a.RongIMClient.Protobuf.RtcKeyDeleteInput(),f = c.keys || [];a.RongUtil.isArray(f) || (f = [f]), e.setKey(f), a.RongIMClient.bridge.queryMsg(\"rtcUDel\", a.MessageUtil.ArrayForm(e.toArrayBuffer()), b.id, { onSuccess: function onSuccess() {d.onSuccess(!0);}, onError: function onError(a) {d.onError(a);} });}, b.prototype.getRTCRoomInfo = function (b, c) {var d = new a.RongIMClient.Protobuf.RtcQueryListInput();d.setOrder(2), a.RongIMClient.bridge.queryMsg(\"rtcRInfo\", a.MessageUtil.ArrayForm(d.toArrayBuffer()), b.id, { onSuccess: function onSuccess(b) {var d = { id: b.roomId, total: b.userCount };a.RongUtil.forEach(b.roomData, function (a) {d[a.key] = a.value;}), c.onSuccess(d);}, onError: function onError(a) {c.onError(a);} }, \"RtcRoomInfoOutput\");}, b.prototype.setRTCRoomInfo = function (b, c, d) {var e = new a.RongIMClient.Protobuf.RtcValueInfo();e.setKey(c.key), e.setValue(c.value), a.RongIMClient.bridge.queryMsg(\"rtcRPut\", a.MessageUtil.ArrayForm(e.toArrayBuffer()), b.id, { onSuccess: function onSuccess() {d.onSuccess(!0);}, onError: function onError(a) {d.onError(a);} });}, b.prototype.removeRTCRoomInfo = function (b, c, d) {var e = new a.RongIMClient.Protobuf.RtcKeyDeleteInput(),f = c.keys || [];a.RongUtil.isArray(f) || (f = [f]), e.setKey(f), a.RongIMClient.bridge.queryMsg(\"rtcRDel\", a.MessageUtil.ArrayForm(e.toArrayBuffer()), b.id, { onSuccess: function onSuccess() {d.onSuccess(!0);}, onError: function onError(a) {d.onError(a);} });}, b.prototype.joinRTCRoom = function (b, c) {var d = new a.RongIMClient.Protobuf.RtcInput();d.setNothing(b.mode), a.RongIMClient.bridge.queryMsg(\"rtcRJoin_data\", a.MessageUtil.ArrayForm(d.toArrayBuffer()), b.id, { onSuccess: function onSuccess(b) {var d = {},e = b.list,f = b.token;a.RongUtil.forEach(e, function (b) {var c = b.userId,e = {};a.RongUtil.forEach(b.userData, function (a) {var b = a.key,c = a.value;e[b] = c;}), d[c] = e;}), c.onSuccess({ users: d, token: f });}, onError: function onError(a) {c.onError(a);} }, \"RtcUserListOutput\");}, b.prototype.quitRTCRoom = function (b, c) {var d = new a.RongIMClient.Protobuf.SetUserStatusInput();a.RongIMClient.bridge.queryMsg(\"rtcRExit\", a.MessageUtil.ArrayForm(d.toArrayBuffer()), b.id, { onSuccess: function onSuccess() {c.onSuccess(!0);}, onError: function onError(a) {c.onError(a);} });}, b.prototype.RTCPing = function (b, c) {var d = new a.RongIMClient.Protobuf.RtcInput();a.RongIMClient.bridge.queryMsg(\"rtcPing\", a.MessageUtil.ArrayForm(d.toArrayBuffer()), b.id, c);}, b.prototype.setRTCData = function (b, c, d, e, f, g, h) {var i = new a.RongIMClient.Protobuf.RtcSetDataInput();i.setInterior(e), i.setTarget(f), i.setKey(c), i.setValue(d), h = h || {};var j = h.name,k = h.content;j && i.setObjectName(j), k && (a.RongUtil.isString(k) || (k = JSON.stringify(k)), i.setContent(k)), a.RongIMClient.bridge.queryMsg(\"rtcSetData\", a.MessageUtil.ArrayForm(i.toArrayBuffer()), b, g, \"RtcOutput\");}, b.prototype.getRTCData = function (b, c, d, e, f) {var g = new a.RongIMClient.Protobuf.RtcDataInput();g.setInterior(d), g.setTarget(e), g.setKey(c), a.RongIMClient.bridge.queryMsg(\"rtcQryData\", a.MessageUtil.ArrayForm(g.toArrayBuffer()), b, { onSuccess: function onSuccess(b) {var c = {},d = b.outInfo;a.RongUtil.forEach(d, function (a) {c[a.key] = a.value;}), f.onSuccess(c);}, onError: f.onError }, \"RtcQryOutput\");}, b.prototype.removeRTCData = function (b, c, d, e, f, g) {var h = new a.RongIMClient.Protobuf.RtcDataInput();h.setInterior(d), h.setTarget(e), h.setKey(c), g = g || {};var i = g.name,j = g.content;i && h.setObjectName(i), j && (a.RongUtil.isString(j) || (j = JSON.stringify(j)), h.setContent(j)), a.RongIMClient.bridge.queryMsg(\"rtcDelData\", a.MessageUtil.ArrayForm(h.toArrayBuffer()), b, f, \"RtcOutput\");}, b.prototype.setRTCUserData = function (b, c, d, e, f, g) {this.setRTCData(b, c, d, e, a.RTCAPIType.PERSON, f, g);}, b.prototype.getRTCUserData = function (b, c, d, e, f) {this.getRTCData(b, c, d, a.RTCAPIType.PERSON, e);}, b.prototype.removeRTCUserData = function (b, c, d, e, f) {this.removeRTCData(b, c, d, a.RTCAPIType.PERSON, e, f);}, b.prototype.setRTCRoomData = function (b, c, d, e, f, g) {this.setRTCData(b, c, d, e, a.RTCAPIType.ROOM, f, g);}, b.prototype.getRTCRoomData = function (b, c, d, e, f) {this.getRTCData(b, c, d, a.RTCAPIType.ROOM, e);}, b.prototype.removeRTCRoomData = function (b, c, d, e, f) {this.removeRTCData(b, c, d, a.RTCAPIType.ROOM, e, f);}, b.prototype.getNavi = function () {var b = a.RongIMClient._storageProvider.getItem(\"fullnavi\") || \"{}\";return JSON.parse(b);}, b.prototype.getRTCToken = function (b, c) {var d = new a.RongIMClient.Protobuf.RtcInput();a.RongIMClient.bridge.queryMsg(\"rtcToken\", a.MessageUtil.ArrayForm(d.toArrayBuffer()), b.id, { onSuccess: function onSuccess(a) {c.onSuccess(a);}, onError: function onError(a) {c.onError(a);} }, \"RtcTokenOutput\");}, b;}();a.ServerDataProvider = b;}(RongIMLib || (RongIMLib = {}));var RongIMLib;!function (a) {var b = function () {function b(a) {this.version = \"2.8.27\", this.userId = \"\", this.useConsole = !1, this.appKey = \"\", this.token = \"\", this.addon = a;}return b.prototype.init = function (a, b) {this.appKey = a, this.useConsole && __f__(\"log\", \"init\", \" at rongyunIM\\\\rongyun.js:6\"), b = b || {}, b.version = this.version;var c = this.addon.initWithAppkey(a, b.dbPath, b);return c && (c = JSON.parse(c)), this.addon.registerMessageType(\"RC:VcMsg\", 3), this.addon.registerMessageType(\"RC:ImgTextMsg\", 3), this.addon.registerMessageType(\"RC:FileMsg\", 3), this.addon.registerMessageType(\"RC:LBSMsg\", 3), this.addon.registerMessageType(\"RC:PSImgTxtMsg\", 3), this.addon.registerMessageType(\"RC:PSMultiImgTxtMsg\", 3), this.addon.registerMessageType(\"RCJrmf:RpMsg\", 3), this.addon.registerMessageType(\"RCJrmf:RpOpendMsg\", 1), this.addon.registerMessageType(\"RC:GrpNtf\", 1), this.addon.registerMessageType(\"RC:DizNtf\", 0), this.addon.registerMessageType(\"RC:InfoNtf\", 0), this.addon.registerMessageType(\"RC:ContactNtf\", 0), this.addon.registerMessageType(\"RC:ProfileNtf\", 0), this.addon.registerMessageType(\"RC:CmdNtf\", 0), this.addon.registerMessageType(\"RC:CmdMsg\", 0), this.addon.registerMessageType(\"RC:TypSts\", 0), this.addon.registerMessageType(\"RC:CsChaR\", 0), this.addon.registerMessageType(\"RC:CsHsR\", 0), this.addon.registerMessageType(\"RC:CsEnd\", 0), this.addon.registerMessageType(\"RC:CsSp\", 0), this.addon.registerMessageType(\"RC:CsUpdate\", 0), this.addon.registerMessageType(\"RC:CsContact\", 0), this.addon.registerMessageType(\"RC:ReadNtf\", 0), this.addon.registerMessageType(\"RC:VCAccept\", 0), this.addon.registerMessageType(\"RC:VCRinging\", 0), this.addon.registerMessageType(\"RC:VCSummary\", 0), this.addon.registerMessageType(\"RC:VCHangup\", 0), this.addon.registerMessageType(\"RC:VCInvite\", 0), this.addon.registerMessageType(\"RC:VCModifyMedia\", 0), this.addon.registerMessageType(\"RC:VCModifyMem\", 0), this.addon.registerMessageType(\"RC:PSCmd\", 0), this.addon.registerMessageType(\"RC:RcCmd\", 0), this.addon.registerMessageType(\"RC:SRSMsg\", 0), this.addon.registerMessageType(\"RC:RRReqMsg\", 0), this.addon.registerMessageType(\"RC:RRRspMsg\", 0), c;}, b.prototype.connect = function (b, c, d, e) {this.useConsole && __f__(\"log\", \"connect\", \" at rongyunIM\\\\rongyun.js:6\"), this.userId = d, this.connectCallback = c, a.Bridge._client = { userId: d }, e = e || {};var f = !!e.openMp,g = !!e.openUS;e.type && this.addon.setEnvironment(!0), this.addon.connectWithToken(b, d, e.serverList, f, g);}, b.prototype.setServerInfo = function (a) {\"setServerInfo\" in this.addon && this.addon.setServerInfo(a.navi);}, b.prototype.logout = function () {this.useConsole && __f__(\"log\", \"logout\", \" at rongyunIM\\\\rongyun.js:6\"), this.disconnect();}, b.prototype.disconnect = function () {this.useConsole && __f__(\"log\", \"disconnect\", \" at rongyunIM\\\\rongyun.js:6\"), this.addon.disconnect(!0);}, b.prototype.clearListeners = function () {this.addon.setOnReceiveStatusListener(), this.addon.setConnectionStatusListener(), this.addon.setOnReceiveMessageListener();}, b.prototype.clearData = function () {return this.useConsole && __f__(\"log\", \"clearData\", \" at rongyunIM\\\\rongyun.js:6\"), this.addon.clearData();}, b.prototype.setConnectionStatusListener = function (b) {var c = this;c.connectListener = b, this.useConsole && __f__(\"log\", \"setConnectionStatusListener\", \" at rongyunIM\\\\rongyun.js:6\"), c.addon && c.addon.setConnectionStatusListener(function (d) {switch (d) {\n            case 10:setTimeout(function () {b.onChanged(a.ConnectionStatus.CONNECTING);});break;case 31004:setTimeout(function () {c.connectCallback.onTokenIncorrect();});break;case 1:case 8:case 9:case 11:case 12:case 31011:case 3e4:case 30002:setTimeout(function () {b.onChanged(a.ConnectionStatus.DISCONNECTED);});break;case 0:case 33005:setTimeout(function () {c.connectCallback.onSuccess(c.userId), b.onChanged(a.ConnectionStatus.CONNECTED);});break;case 6:setTimeout(function () {b.onChanged(a.ConnectionStatus.KICKED_OFFLINE_BY_OTHER_CLIENT);});break;default:setTimeout(function () {b.onChanged(d);});}});}, b.prototype.setOnReceiveMessageListener = function (b) {var c = this;c.messageListener = b, this.useConsole && __f__(\"log\", \"setOnReceiveMessageListener\", \" at rongyunIM\\\\rongyun.js:7\"), c.addon && c.addon.setOnReceiveMessageListener(function (d, e, f, g) {var h = c.buildMessage(d);h.offLineMessage = f, setTimeout(function () {[\"AcceptMessage\", \"RingingMessage\", \"HungupMessage\", \"InviteMessage\", \"MediaModifyMessage\", \"MemberModifyMessage\"].indexOf(h.messageType) > -1 ? a.RongIMClient._voipProvider && a.RongIMClient._voipProvider.onReceived(h) : b.onReceived(h, e, g);});});}, b.prototype.sendTypingStatusMessage = function (b, c, d, e) {var f = this;this.useConsole && __f__(\"log\", \"sendTypingStatusMessage\", \" at rongyunIM\\\\rongyun.js:7\"), d in a.RongIMClient.MessageParams && f.sendMessage(b, c, a.TypingStatusMessage.obtain(a.RongIMClient.MessageParams[d].objectName, \"\"), { onSuccess: function onSuccess() {setTimeout(function () {e.onSuccess();});}, onError: function onError(a) {setTimeout(function () {e.onError(a, null);});}, onBefore: function onBefore() {} });}, b.prototype.setMessageStatus = function (a, b, c, d, e) {this.addon.updateMessageReceiptStatus(a, b, c), e.onSuccess(!0);}, b.prototype.sendTextMessage = function (b, c, d, e) {var f = a.TextMessage.obtain(d);this.useConsole && __f__(\"log\", \"sendTextMessage\", \" at rongyunIM\\\\rongyun.js:7\"), this.sendMessage(b, c, f, e);}, b.prototype.getRemoteHistoryMessages = function (b, c, d, e, f, g) {try {var h = this;h.useConsole && __f__(\"log\", \"getRemoteHistoryMessages\", \" at rongyunIM\\\\rongyun.js:7\"), h.addon.getRemoteHistoryMessages(b, c, d || 0, e, function (b, c) {var d = b ? JSON.parse(b).list : [],e = [];d.reverse();for (var g = 0, i = d.length; g < i; g++) {var j = h.buildMessage(d[g].obj);j.sentStatus = a.SentStatus.READ, e[g] = j;}f.onSuccess(e, !!c);}, function (a) {f.onError(a);});} catch (i) {f.onError(i);}}, b.prototype.getRemoteConversationList = function (a, b, c, d) {try {this.useConsole && __f__(\"log\", \"getRemoteConversationList\", \" at rongyunIM\\\\rongyun.js:7\");var e = b || [1, 2, 3, 4, 5, 6, 7, 8],f = this.addon.getConversationList(e),g = JSON.parse(f).list,h = [],i = this,j = 0;g.reverse(), d = \"boolean\" == typeof d && d;for (var k = 0, l = g.length; k < l; k++) {var m = g[k].obj,n = JSON.parse(m);if (\"\" != n) {if (1 == n.isHidden && d) continue;h[j] = i.buildConversation(m), j++;}}h.reverse();var o = h.length;c = c || o, o > c && (h.length = c), a.onSuccess(h);} catch (p) {a.onError(p);}}, b.prototype.removeConversation = function (b, c, d) {try {this.useConsole && __f__(\"log\", \"removeConversation\", \" at rongyunIM\\\\rongyun.js:7\"), this.addon.removeConversation(b, c);for (var e = a.RongIMClient._memoryStore.conversationList, f = e.length, g = 0; g < f; g++) {if (e[g].conversationType == b && c == e[g].targetId) {e.splice(g, 1);break;}}d.onSuccess(!0);} catch (h) {d.onError(h);}}, b.prototype.joinChatRoom = function (a, b, c) {this.useConsole && __f__(\"log\", \"joinChatRoom\", \" at rongyunIM\\\\rongyun.js:7\"), this.addon.joinChatRoom(a, b, function () {c.onSuccess();}, function (a) {c.onError(a);});}, b.prototype.quitChatRoom = function (a, b) {this.useConsole && __f__(\"log\", \"quitChatRoom\", \" at rongyunIM\\\\rongyun.js:7\"), this.addon.quitChatRoom(a, function () {b.onSuccess();}, function (a) {b.onError(a);});}, b.prototype.addToBlacklist = function (a, b) {this.useConsole && __f__(\"log\", \"addToBlacklist\", \" at rongyunIM\\\\rongyun.js:7\"), this.addon.addToBlacklist(a, function () {b.onSuccess();}, function (a) {b.onError(a);});}, b.prototype.getBlacklist = function (a) {this.useConsole && __f__(\"log\", \"getBlacklist\", \" at rongyunIM\\\\rongyun.js:7\"), this.addon.getBlacklist(function (b) {a.onSuccess(b);}, function (b) {a.onError(b);});}, b.prototype.getBlacklistStatus = function (a, b) {this.useConsole && __f__(\"log\", \"getBlacklistStatus\", \" at rongyunIM\\\\rongyun.js:7\"), this.addon.getBlacklistStatus(a, function (a) {b.onSuccess(a);}, function (a) {b.onError(a);});}, b.prototype.removeFromBlacklist = function (a, b) {this.useConsole && __f__(\"log\", \"removeFromBlacklist\", \" at rongyunIM\\\\rongyun.js:7\"), this.addon.removeFromBlacklist(a, function () {b.onSuccess();}, function (a) {b.onError(a);});}, b.prototype.sendMessage = function (b, c, d, e, f, g, h, i, j) {var k = this,l = [];k.useConsole && __f__(\"log\", \"sendMessage\", \" at rongyunIM\\\\rongyun.js:7\"), j = j || {};var m = b == a.ConversationType.DISCUSSION || b == a.ConversationType.GROUP;if (m && d.messageName == a.RongIMClient.MessageType.ReadReceiptResponseMessage) {l = [];var n = d;if (n.receiptMessageDic) {var o = [];for (var p in n.receiptMessageDic) {o.push(p);}l = o;}}m && d.messageName == a.RongIMClient.MessageType.SyncReadStatusMessage && (l = [], l.push(k.userId));var q = j.userIds;m && q && (l = q);var r = k.addon.sendMessage(b, c, a.RongIMClient.MessageParams[d.messageName].objectName, d.encode(), g || \"\", h || \"\", function (a) {}, function (b, c) {var d = k.buildMessage(b),f = a.ErrorCode.SENSITIVE_REPLACE;if (c == f) return e.onError(f, d);e.onSuccess(d);}, function (a, b) {e.onError(b, k.buildMessage(a));}, l, f),s = JSON.parse(r);e.onBefore && e.onBefore(s.messageId), a.MessageIdHandler.messageId = s.messageId;}, b.prototype.registerMessageType = function (b, c, d, e, f) {this.useConsole && __f__(\"log\", \"registerMessageType\", \" at rongyunIM\\\\rongyun.js:7\"), this.addon.registerMessageType(c, d.getMessageTag(), f);var g = a.ModelUtil.modleCreate(e, b);a.RongIMClient.RegisterMessage[b] = g, a.RongIMClient.RegisterMessage[b].messageName = b, registerMessageTypeMapping[c] = b, a.RongIMClient.MessageType[b] = b, a.RongIMClient.MessageParams[b] = { objectName: c, msgTag: d }, typeMapping[c] = b;}, b.prototype.registerMessageTypes = function (b) {var c = [],d = function d(a) {var b = [];for (var c in a) {b.push(c);}return b;};for (var e in b) {var f = b[e],g = f.proto,h = d(g),i = f.flag || 3,j = a.MessageTag.getTagByStatus(i);i = new a.MessageTag(j.isCounted, j.isPersited), c.push({ type: e, name: f.name, flag: i, protos: h });}for (var k = function k(b) {var c = b.type,d = b.name,e = b.flag,f = b.protos;a.RongIMClient.registerMessageType(c, d, e, f);}, l = 0, m = c.length; l < m; l++) {var f = c[l];k(f);}}, b.prototype.addMessage = function (b, c, d, e) {this.useConsole && __f__(\"log\", \"addMessage\", \" at rongyunIM\\\\rongyun.js:7\");var f = d.direction,g = this.addon.insertMessage(b, c, d.senderUserId, d.objectName, JSON.stringify(d.content), function () {e.onSuccess(h.buildMessage(g));}, function () {e.onError(a.ErrorCode.MSG_INSERT_ERROR);}, f),h = this;}, b.prototype.removeMessage = function (a, b, c, d) {}, b.prototype.removeLocalMessage = function (a, b, c, d) {try {this.useConsole && __f__(\"log\", \"removeLocalMessage\", \" at rongyunIM\\\\rongyun.js:7\"), this.addon.deleteMessages(c), d.onSuccess(!0);} catch (e) {d.onError(e);}}, b.prototype.getMessage = function (a, b) {try {this.useConsole && __f__(\"log\", \"getMessage\", \" at rongyunIM\\\\rongyun.js:7\");var c = this.buildMessage(this.addon.getMessage(a));b.onSuccess(c);} catch (d) {b.onError(d);}}, b.prototype.clearMessages = function (a, b, c) {try {this.useConsole && __f__(\"log\", \"clearMessages\", \" at rongyunIM\\\\rongyun.js:7\"), this.addon.clearMessages(a, b), c.onSuccess(!0);} catch (d) {c.onError(d);}}, b.prototype.setUnreadCount = function (a, b, c) {}, b.prototype.getConversation = function (a, b, c) {try {this.useConsole && __f__(\"log\", \"getConversation\", \" at rongyunIM\\\\rongyun.js:7\");var d = this.addon.getConversation(a, b);c.onSuccess(this.buildConversation(d));} catch (e) {c.onError(e);}}, b.prototype.getConversationList = function (a, b, c, d) {this.useConsole && __f__(\"log\", \"getConversationList\", \" at rongyunIM\\\\rongyun.js:7\"), this.getRemoteConversationList(a, b, c, d);}, b.prototype.clearCache = function () {var b = a.RongIMClient._memoryStore || {};b.conversationList = [], b.isSyncRemoteConverList;}, b.prototype.clearConversations = function (a, b) {try {this.useConsole && __f__(\"log\", \"clearConversations\", \" at rongyunIM\\\\rongyun.js:7\"), this.addon.clearConversations(), b.onSuccess(!0);} catch (c) {b.onError(c);}}, b.prototype.setMessageContent = function (a, b, c) {b = JSON.stringify(b), this.addon.setMessageContent(a, b, c);}, b.prototype.setMessageSearchField = function (a, b, c) {b = JSON.stringify(b), this.addon.setMessageContent(a, b, c);}, b.prototype.getHistoryMessages = function (b, c, d, e, f, g, h) {if (this.useConsole && __f__(\"log\", \"getHistoryMessages\", \" at rongyunIM\\\\rongyun.js:7\"), e <= 0) return void f.onError(a.ErrorCode.TIMEOUT);g = g || \"\", h = void 0 === h || h;try {var i = this.addon.getHistoryMessages(b, c, d || 0, e, g, h),j = i ? JSON.parse(i).list : [],k = [],l = this;j.reverse();for (var m = 0, n = j.length; m < n; m++) {var o = l.buildMessage(j[m].obj);k[m] = o;}f.onSuccess(k, n == e);} catch (p) {f.onError(p);}}, b.prototype.clearRemoteHistoryMessages = function (b, c) {var d = b.conversationType,e = b.targetId,f = b.timestamp;return { 1: !0, 2: !0, 3: !0, 5: !0, 6: !0 }[d] ? \"number\" != typeof f ? void c.onError(a.ErrorCode.CLEAR_HIS_TIME_ERROR) : void this.addon.clearRemoteHistoryMessages(+d, e, f, function () {c.onSuccess(!0);}, function (b) {1 == b && (b = a.ErrorCode.CLEAR_HIS_ERROR), c.onError(b);}) : void c.onError(a.ErrorCode.CLEAR_HIS_TYPE_ERROR);}, b.prototype.clearHistoryMessages = function (b, c) {var d = +b.conversationType,e = b.targetId;try {this.addon.clearMessages(d, e);c.onSuccess(!0);} catch (f) {__f__(\"log\", f, \" at rongyunIM\\\\rongyun.js:7\"), c.onError(a.ErrorCode.CLEAR_HIS_ERROR);}}, b.prototype.getTotalUnreadCount = function (a, b) {try {var c;this.useConsole && __f__(\"log\", \"getTotalUnreadCount\", \" at rongyunIM\\\\rongyun.js:7\"), c = b ? this.addon.getTotalUnreadCount(b) : this.addon.getTotalUnreadCount(), a.onSuccess(c);} catch (d) {a.onError(d);}}, b.prototype.getConversationUnreadCount = function (a, b) {this.useConsole && __f__(\"log\", \"getConversationUnreadCount\", \" at rongyunIM\\\\rongyun.js:7\"), this.getTotalUnreadCount(b, a);}, b.prototype.getUnreadCount = function (a, b, c) {try {this.useConsole && __f__(\"log\", \"getUnreadCount\", \" at rongyunIM\\\\rongyun.js:7\");var d = this.addon.getUnreadCount(a, b);c.onSuccess(d);} catch (e) {c.onError(e);}}, b.prototype.clearUnreadCount = function (a, b, c) {try {this.useConsole && __f__(\"log\", \"clearUnreadCount\", \" at rongyunIM\\\\rongyun.js:7\");this.addon.clearUnreadCount(a, b);c.onSuccess(!0);} catch (d) {c.onError(d);}}, b.prototype.clearTotalUnreadCount = function (a) {this.useConsole && __f__(\"log\", \"clearTotalUnreadCount\", \" at rongyunIM\\\\rongyun.js:7\");}, b.prototype.clearUnreadCountByTimestamp = function (a, b, c, d) {try {this.useConsole && __f__(\"log\", \"clearUnreadCountByTimestamp\", \" at rongyunIM\\\\rongyun.js:7\");this.addon.clearUnreadCountByTimestamp(a, b, c);d.onSuccess(!0);} catch (e) {d.onError(e);}}, b.prototype.setConversationToTop = function (a, b, c, d) {try {this.useConsole && __f__(\"log\", \"setConversationToTop\", \" at rongyunIM\\\\rongyun.js:7\"), this.addon.setConversationToTop(a, b, c), d.onSuccess(!0);} catch (e) {d.onError(e);}}, b.prototype.setConversationHidden = function (a, b, c) {this.addon.setConversationHidden(a, b, c);}, b.prototype.setMessageReceivedStatus = function (a, b, c) {try {this.useConsole && __f__(\"log\", \"setMessageReceivedStatus\", \" at rongyunIM\\\\rongyun.js:7\"), this.addon.setMessageReceivedStatus(a, b), c.onSuccess(!0);} catch (d) {c.onError(d);}}, b.prototype.setMessageSentStatus = function (a, b, c) {try {this.useConsole && __f__(\"log\", \"setMessageSentStatus\", \" at rongyunIM\\\\rongyun.js:7\"), this.addon.setMessageSentStatus(a, b), c.onSuccess(!0);} catch (d) {c.onError(d);}}, b.prototype.getFileToken = function (a, b) {this.useConsole && __f__(\"log\", \"getFileToken\", \" at rongyunIM\\\\rongyun.js:7\"), this.addon.getUploadToken(a, function (a) {b.onSuccess({ token: a });}, function (a) {b.onError(a);});}, b.prototype.getFileUrl = function (a, b, c, d) {this.useConsole && __f__(\"log\", \"getFileUrl\", \" at rongyunIM\\\\rongyun.js:7\"), this.addon.getDownloadUrl(a, b, c, function (a) {d.onSuccess({ downloadUrl: a });}, function (a) {d.onError(a);});}, b.prototype.searchConversationByContent = function (a, b, c) {var d = [];d = void 0 === c ? [1, 2, 3, 4, 5, 6, 7] : c;try {this.useConsole && __f__(\"log\", \"searchConversationByContent\", \" at rongyunIM\\\\rongyun.js:7\");var e = this.addon.searchConversationByContent(d, a),f = JSON.parse(e).list,g = [],h = this;f.reverse();for (var i = 0, j = f.length; i < j; i++) {g[i] = h.buildConversation(f[i].obj);}b.onSuccess(g);} catch (k) {b.onError(k);}}, b.prototype.searchMessageByContent = function (a, b, c, d, e, f, g) {var h = this;try {this.useConsole && __f__(\"log\", \"searchMessageByContent\", \" at rongyunIM\\\\rongyun.js:7\"), this.addon.searchMessageByContent(a, b, c, d, e, f, function (a, b) {var c = a ? JSON.parse(a).list : [],d = [];c.reverse();for (var e = 0, f = c.length; e < f; e++) {d[e] = h.buildMessage(c[e].obj);}g.onSuccess(d, b);});} catch (i) {g.onError(i);}}, b.prototype.getChatRoomInfo = function (a, b, c, d) {this.useConsole && __f__(\"log\", \"getChatRoomInfo\", \" at rongyunIM\\\\rongyun.js:7\"), this.addon.getChatroomInfo(a, b, c, function (a, b) {var c = a ? JSON.parse(a).list : [],e = { userInfos: [], userTotalNums: b };if (c.length > 0) for (var f = 0, g = c.length; f < g; f++) {e.userInfos.push(JSON.parse(c[f].obj));}d.onSuccess(e);}, function (a) {d.onError(a);});}, b.prototype.setChatroomHisMessageTimestamp = function (a, b) {}, b.prototype.getChatRoomHistoryMessages = function (a, b, c, d) {}, b.prototype.getDelaTime = function () {return this.addon.getDeltaTime();}, b.prototype.getUserStatus = function (b, c) {this.addon.getUserStatus(b, function (b) {var d = a.RongInnerTools.convertUserStatus({ status: b, userId: \"\" });c.onSuccess(d);}, function (a) {c.onError(a);});}, b.prototype.setUserStatus = function (a, b) {this.addon.setUserStatus(a, function () {b.onSuccess(!0);}, function (a) {b.onError(a);});}, b.prototype.subscribeUserStatus = function (a, b) {this.addon.subscribeUserStatus(a, function () {b && b.onSuccess(!0);}, function (a) {b && b.onError(a);});}, b.prototype.setUserStatusListener = function (b, c) {this.addon.setOnReceiveStatusListener(function (b, c) {var d = a.RongInnerTools.convertUserStatus({ userId: b, status: c });a.RongIMClient.userStatusObserver.notify({ key: b, entity: d });});var d = b.userIds || [];d.length && a.RongIMClient._dataAccessProvider.subscribeUserStatus(d);}, b.prototype.getUnreadMentionedMessages = function (a, b) {for (var c = this, d = JSON.parse(c.addon.getUnreadMentionedMessages(a, b)).list, e = 0, f = d.length; e < f; e++) {var g = JSON.parse(d[e].obj);g.content = JSON.parse(g.content), d[e] = g;}return d;}, b.prototype.hasRemoteUnreadMessages = function (a, b) {b.onSuccess(!1);}, b.prototype.sendRecallMessage = function (a, b) {var c = this;c.addon.recallMessage(\"RC:RcCmd\", JSON.stringify(a), a.push || \"\", function () {a.objectName = \"RC:RcCmd\", b.onSuccess(c.buildMessage(JSON.stringify(a)));}, function (a) {b.onError(a);});}, b.prototype.updateMessage = function (a, b) {}, b.prototype.updateMessages = function (a, b, c, d, e) {}, b.prototype.reconnect = function (a) {}, b.prototype.sendReceiptResponse = function (a, b, c) {}, b.prototype.setMessageExtra = function (a, b, c) {}, b.prototype.addMemberToDiscussion = function (a, b, c) {}, b.prototype.createDiscussion = function (a, b, c) {}, b.prototype.getDiscussion = function (a, b) {}, b.prototype.quitDiscussion = function (a, b) {}, b.prototype.removeMemberFromDiscussion = function (a, b, c) {}, b.prototype.setDiscussionInviteStatus = function (a, b, c) {}, b.prototype.setDiscussionName = function (a, b, c) {}, b.prototype.setEnvironment = function (a) {this.addon.setEnvironment(a);}, b.prototype.addConversation = function (a, b) {}, b.prototype.updateConversation = function (a) {return null;}, b.prototype.getConversationNotificationStatus = function (b, c) {var d = b.conversationType,e = b.targetId,f = a.RongIMClient._memoryStore.notification,g = d + \"_\" + e,h = f[g];if (\"number\" == typeof h) return void c.onSuccess(h);this.addon.getConversationNotificationStatus(d, e, function (a) {f[g] = a, c.onSuccess(a);}, function (a) {c.onError(a);});}, b.prototype.setConversationNotificationStatus = function (b, c) {var d = b.conversationType,e = b.targetId,f = b.status;a.RongIMClient._memoryStore.notification[d + \"_\" + e] = f;var g = !!f;this.addon.setConversationNotificationStatus(d, e, g, function () {c.onSuccess(f);}, function (a) {c.onError(a);});}, b.prototype.getCurrentConnectionStatus = function () {return this.addon.getConnectionStatus();}, b.prototype.getAgoraDynamicKey = function (a, b, c) {this.addon.getVoIPKey(a, b, \"\", function (a) {c.onSuccess(a);}, function (a) {c.onError(a);});}, b.prototype.getPublicServiceProfile = function (b, c, d) {var e = a.RongIMClient._memoryStore.publicServiceMap.get(b, c);d.onSuccess(e);}, b.prototype.setDeviceInfo = function (a) {var b = a.id || \"\";this.addon.setDeviceId(b);}, b.prototype.getRemotePublicServiceList = function (b, c) {var d = [],e = this.addon.getAccounts(),f = function f(a) {var b = { hasFollowed: !1, isGlobal: !1, menu: null };if (!a.obj) {var c = { error: a };throw new Error(\"å…¬ä¼—è´¦å·æ•°æ®æ ¼å¼é”™è¯¯: \" + JSON.stringify(c));}var d = JSON.parse(a.obj),e = { aType: \"conversationType\", aId: \"publicServiceId\", aName: \"introduction\", aUri: \"portraitUri\", follow: \"hasFollowed\", isGlobal: \"isGlobal\" };for (var f in d) {var g = d[f];if (\"aExtra\" == f) {var h = JSON.parse(g);b.hasFollowed = h.follow, b.isGlobal = h.isGlobal, b.menu = h.menu;}var i = e[f];i && (b[i] = g);}return b;};if (e) {e = JSON.parse(e);for (var g = e.list, h = 0, i = g.length; h < i; h++) {var j = g[h];j = f(j), d.push(j);}}d.length > 0 && (a.RongIMClient._memoryStore.publicServiceMap.publicServiceList.length = 0, a.RongIMClient._memoryStore.publicServiceMap.publicServiceList = d), b.onSuccess(a.RongIMClient._memoryStore.publicServiceMap.publicServiceList);}, b.prototype.buildMessage = function (b) {var c = new a.Message(),d = JSON.parse(b);c.conversationType = d.conversationType, c.targetId = d.targetId, c.messageDirection = d.direction, c.senderUserId = d.senderUserId, d.direction == a.MessageDirection.RECEIVE ? c.receivedStatus = d.status : d.direction == a.MessageDirection.SEND && (c.sentStatus = d.status), c.sentTime = d.sentTime, c.objectName = d.objectName;var e = d.content ? JSON.parse(d.content) : d.content,f = typeMapping[d.objectName] || registerMessageTypeMapping[d.objectName];return e && (e.messageName = f), c.content = e, c.messageId = d.messageId, c.messageUId = d.messageUid, c.messageType = f, c;}, b.prototype.buildConversation = function (b) {if (\"\" === b) return null;var c = new a.Conversation(),d = JSON.parse(b),e = d.lastestMsg ? this.buildMessage(d.lastestMsg) : {};c.conversationTitle = d.title, c.conversationType = d.conversationType, c.draft = d.draft, c.isTop = d.isTop, c.isHidden = d.isHidden, e.conversationType = d.conversationType, e.targetId = d.targetId, c.latestMessage = e, c.latestMessageId = e.messageId, c.latestMessage.messageType = typeMapping[e.objectName] || registerMessageTypeMapping[e.objectName], c.objectName = e.objectName, c.receivedStatus = a.ReceivedStatus.READ, c.sentTime = e.sentTime, c.senderUserId = e.senderUserId, c.sentStatus = e.status, c.targetId = d.targetId, c.unreadMessageCount = d.unreadCount, c.hasUnreadMention = d.m_hasUnreadMention;var f = this.getUnreadMentionedMessages(d.conversationType, d.targetId);if (f.length > 0) {var g = f.pop();c.mentionedMsg = { uid: g.messageUid, time: g.sentTime, mentionedInfo: g.content.mentionedInfo, sendUserId: g.senderUserId };}return c;}, b.prototype.getRTCUserInfoList = function (a, b) {}, b.prototype.setRTCUserInfo = function (a, b, c) {}, b.prototype.removeRTCUserInfo = function (a, b, c) {}, b.prototype.getRTCUserList = function (a, b) {}, b.prototype.getRTCRoomInfo = function (a, b) {}, b.prototype.setRTCRoomInfo = function (a, b, c) {}, b.prototype.removeRTCRoomInfo = function (a, b, c) {}, b.prototype.joinRTCRoom = function (a, b) {}, b.prototype.quitRTCRoom = function (a, b) {}, b.prototype.RTCPing = function (a, b) {}, b.prototype.setRTCUserData = function (a, b, c, d, e, f) {}, b.prototype.getRTCUserData = function (a, b, c, d, e) {}, b.prototype.removeRTCUserData = function (a, b, c, d, e) {}, b.prototype.setRTCRoomData = function (a, b, c, d, e, f) {}, b.prototype.getRTCRoomData = function (a, b, c, d, e) {}, b.prototype.removeRTCRoomData = function (a, b, c, d, e) {}, b.prototype.getNavi = function () {}, b.prototype.getRTCToken = function (a, b) {}, b;}();a.VCDataProvider = b;}(RongIMLib || (RongIMLib = {}));var RongIMLib;!function (a) {var b = function () {function a() {this._memeoryStore = {}, this.prefix = \"rong_\";}return a.prototype.setItem = function (a, b) {this._memeoryStore[a] = decodeURIComponent(b);}, a.prototype.getItem = function (a) {return this._memeoryStore[a];}, a.prototype.removeItem = function (a) {this.getItem(a) && delete this._memeoryStore[a];}, a.prototype.getItemKey = function (a) {var b = this,c = null,d = new RegExp(a + \"\\\\w+\");for (var e in b._memeoryStore) {e.match(d) && (c = e);}return c;}, a.prototype.getItemKeyList = function (a) {var b = this.prefix,c = this,d = [],e = new RegExp(a + \"\\\\w+\");for (var f in c._memeoryStore) {f.match(e) && (f = f.substring(b.length), d.push(f));}return d;}, a.prototype.clearItem = function () {var a = this;for (var b in a._memeoryStore) {delete a._memeoryStore[b];}}, a.prototype.onOutOfQuota = function () {return 4096;}, a;}();a.MemeoryProvider = b;}(RongIMLib || (RongIMLib = {}));var RongIMLib;!function (a) {var b = function () {function b() {this.prefix = \"rong_\", this._host = \"\";var b = new Date(),c = b.getMonth() + 1,d = b.getFullYear() + \"/\" + (1 == c.toString().length ? \"0\" + c : c) + \"/\" + b.getDate(),e = new Date(d).getTime();for (var f in localStorage) {if (f.lastIndexOf(\"RECEIVED\") > -1) {var g = JSON.parse(localStorage.getItem(f));for (var h in g) {e - g[h].dealtime > 0 && delete g[h];}a.RongUtil.isEmpty(g) ? localStorage.removeItem(f) : localStorage.setItem(f, JSON.stringify(g));}if (f.lastIndexOf(\"SENT\") > -1) {e - JSON.parse(localStorage.getItem(f)).dealtime > 0 && localStorage.removeItem(f);}}}return b.prototype.setItem = function (a, b) {a && (-1 == a.indexOf(this.prefix) && (a = this.prefix + a), localStorage.setItem(a, b));}, b.prototype.getItem = function (a) {return a ? (-1 == a.indexOf(this.prefix) && (a = this.prefix + a), localStorage.getItem(a || \"\")) : \"\";}, b.prototype.getItemKey = function (a) {var b = \"\",c = this.prefix + a;for (var d in localStorage) {if (0 == d.indexOf(c)) {b = d;break;}}return b;}, b.prototype.getItemKeyList = function (a) {var b = [],c = this.prefix,d = c + a;for (var e in localStorage) {0 == e.indexOf(d) && (e = e.substring(c.length), b.push(e));}return b;}, b.prototype.removeItem = function (a) {a && (-1 == a.indexOf(this.prefix) && (a = this.prefix + a), localStorage.removeItem(a.toString()));}, b.prototype.clearItem = function () {var a = this;for (var b in localStorage) {b.indexOf(a.prefix) > -1 && a.removeItem(b);}}, b.prototype.onOutOfQuota = function () {return JSON.stringify(localStorage).length;}, b;}();a.LocalStorageProvider = b;}(RongIMLib || (RongIMLib = {}));var RongIMLib;!function (a) {var b = function () {function a() {this.opersistName = \"RongIMLib\", this.keyManager = \"RongUserDataKeyManager\", this._host = \"\", this.prefix = \"rong_\", this.oPersist = document.createElement(\"div\"), this.oPersist.style.display = \"none\", this.oPersist.style.behavior = \"url('#default#userData')\", document.body.appendChild(this.oPersist), this.oPersist.load(this.opersistName);}return a.prototype.setItem = function (a, b) {a && -1 == a.indexOf(this.prefix) && (a = this.prefix + a), this.oPersist.setAttribute(a, b);var c = this.getItem(this.keyManager);c ? -1 == c.indexOf(a) && (c += \",\" + a) : c = a, this.oPersist.setAttribute(this.prefix + this.keyManager, c), this.oPersist.save(this.opersistName);}, a.prototype.getItem = function (a) {return a && -1 == a.indexOf(this.prefix) && (a = this.prefix + a), a ? this.oPersist.getAttribute(a) : a;}, a.prototype.removeItem = function (a) {a && -1 == a.indexOf(this.prefix) && (a = this.prefix + a), this.oPersist.removeAttribute(a), this.oPersist.save(this.opersistName);for (var b = this.getItem(this.keyManager), c = b && b.split(\",\") || [], d = 0, e = c.length; d < e; d++) {c[d] == a && c.splice(d, 1);}this.oPersist.setAttribute(this.prefix + this.keyManager, c.join(\",\")), this.oPersist.save(this.opersistName);}, a.prototype.getItemKey = function (a) {var b = null,c = this.getItem(this.keyManager),d = c && c.split(\",\") || [],e = this.prefix + a;if (d.length) for (var f = 0, g = d.length; f < g; f++) {if (d[f] && 0 == d[f].indexOf(e)) {b = d[f];break;}}return b;}, a.prototype.getItemKeyList = function (a) {var b = [],c = this.getItem(this.keyManager),d = c && c.split(\",\") || [],e = this.prefix,f = e + a;if (d.length) for (var g = 0, h = d.length; g < h; g++) {if (d[g] && 0 == d[g].indexOf(f)) {var i = d[g];i = i.substring(e.length), b.push(d[g]);}}return b;}, a.prototype.clearItem = function () {var a = this.getItem(this.keyManager),b = [],c = this;if (a && (b = a.split(\",\")), b.length) {for (var d = 0, e = b.length; d < e; d++) {b[d] && c.removeItem(b[d]);}c.removeItem(c.keyManager);}}, a.prototype.onOutOfQuota = function () {return 10485760;}, a;}();a.UserDataProvider = b;}(RongIMLib || (RongIMLib = {}));var RongIMLib;!function (a) {var b = function () {function b(b) {if (this.script = document.createElement(\"script\"), this.head = document.getElementsByTagName(\"head\")[0], \"WebSocket\" in window && \"ArrayBuffer\" in window && 3 === WebSocket.prototype.CLOSED && !a.RongIMClient._memoryStore.depend.isPolling) {if (a.Transportations._TransportType = a.Socket.WEBSOCKET, !a.RongIMClient.Protobuf) {var c = a.RongIMClient._memoryStore.depend.protobuf,d = this.script;d.src = c, this.head.appendChild(d), d.onload = d.onreadystatechange = function () {if (!(this.readyState && \"loaded\" != this.readyState && \"complete\" != this.readyState || (d.onload = d.onreadystatechange = null, b && b(), b))) {var c = a.RongIMClient._memoryStore.token,e = a.RongIMClient._memoryStore.callback;c && a.RongIMClient.connect(c, e);}};}} else a.Transportations._TransportType = \"xhr-polling\", a.RongIMClient.Protobuf = Polling;}return b;}();a.FeatureDectector = b;}(RongIMLib || (RongIMLib = {}));var RongIMLib;!function (RongIMLib) {var FeaturePatcher = function () {function FeaturePatcher() {}return FeaturePatcher.prototype.patchAll = function () {this.patchJSON(), this.patchForEach();}, FeaturePatcher.prototype.patchForEach = function () {Array.forEach || (Array.forEach = function (a, b) {for (var c = 0; c < a.length; c++) {b.call(a, a[c], c, a);}});}, FeaturePatcher.prototype.patchJSON = function () {window.JSON || (window.JSON = function () {function JSON() {}return JSON.parse = function (sJSON) {return eval(\"(\" + sJSON + \")\");}, JSON.stringify = function (a) {return this.str(\"\", { \"\": a });}, JSON.str = function (a, b) {var c,d,e,f,g,h = b[a],i = this;switch (h && \"object\" == typeof h && \"function\" == typeof h.toJSON && (h = h.toJSON(a)), typeof h) {case \"string\":return i.quote(h);case \"number\":return isFinite(h) ? String(h) : \"null\";case \"boolean\":case \"null\":return String(h);case \"object\":if (!h) return \"null\";if (g = [], \"[object Array]\" === Object.prototype.toString.apply(h)) {for (f = h.length, c = 0; c < f; c += 1) {g[c] = i.str(c, h) || \"null\";}return e = 0 === g.length ? \"[]\" : \"[\" + g.join(\",\") + \"]\";}for (d in h) {Object.prototype.hasOwnProperty.call(h, d) && (e = i.str(d, h)) && g.push(i.quote(d) + \":\" + e);}return e = 0 === g.length ? \"{}\" : \"{\" + g.join(\",\") + \"}\";}}, JSON.quote = function (a) {var b = this;return b.rx_escapable.lastIndex = 0, b.rx_escapable.test(a) ? '\"' + a.replace(b.rx_escapable, function (a) {var c = b.meta[a];return \"string\" == typeof c ? c : \"\\\\u\" + (\"0000\" + a.charCodeAt(0).toString(16)).slice(-4);}) + '\"' : '\"' + a + '\"';}, JSON.rx_escapable = new RegExp(\"[\\\\\\\"\\\\\\\\\\\"\\0-\\x1F\\x7F-\\xC2\\u0178\\xC2\\xAD\\xD8\\u20AC-\\xD8\\u201E\\xDC\\x8F\\xE1\\u017E\\xB4\\xE1\\u017E\\xB5\\xE2\\u20AC\\u0152-\\xE2\\u20AC\\x8F\\u2028-\\xE2\\u20AC\\xAF\\xE2\\x81 -\\xE2\\x81\\xAF\\uFEFF\\xEF\\xBF\\xB0-\\xEF\\xBF\\xBF]\", \"g\"), JSON.meta = { \"\\b\": \"\\\\b\", \"\\t\": \"\\\\t\", \"\\n\": \"\\\\n\", \"\\f\": \"\\\\f\", \"\\r\": \"\\\\r\", '\"': '\\\\\"', \"''\": \"\\\\''\", \"\\\\\": \"\\\\\\\\\" }, JSON;}());}, FeaturePatcher;}();RongIMLib.FeaturePatcher = FeaturePatcher;}(RongIMLib || (RongIMLib = {}));var RongIMLib;!function (a) {!function () {function a() {}a.prototype.load = function (a, b, c) {var d = document.createElement(\"script\");d.async = !0, b && (d.addEventListener ? d.addEventListener(\"load\", function (a) {var c = a.target || a.srcElement;b(c.src);}, !1) : d.readyState && (d.onreadystatechange = function (a) {var c = a.srcElement;b(c.src);})), c && (d.onerror = function (a) {var b = a.target || a.srcElement;c(b.src);}), (document.head || document.getElementsByTagName(\"head\")[0]).appendChild(d), d.src = a;};}();}(RongIMLib || (RongIMLib = {}));var RongIMLib;return function (a) {var b = function () {function a() {this.publicServiceList = [];}return a.prototype.get = function (a, b) {for (var c = 0, d = this.publicServiceList.length; c < d; c++) {if (this.publicServiceList[c].conversationType == a && b == this.publicServiceList[c].publicServiceId) return this.publicServiceList[c];}}, a.prototype.add = function (a) {for (var b = !0, c = this, d = 0, e = this.publicServiceList.length; d < e; d++) {if (c.publicServiceList[d].conversationType == a.conversationType && a.publicServiceId == c.publicServiceList[d].publicServiceId) {this.publicServiceList.unshift(this.publicServiceList.splice(d, 1)[0]), b = !1;break;}}b && this.publicServiceList.unshift(a);}, a.prototype.replace = function (a) {for (var b = this, c = 0, d = this.publicServiceList.length; c < d; c++) {if (b.publicServiceList[c].conversationType == a.conversationType && a.publicServiceId == b.publicServiceList[c].publicServiceId) {b.publicServiceList.splice(c, 1, a);break;}}}, a.prototype.remove = function (a, b) {for (var c = this, d = 0, e = this.publicServiceList.length; d < e; d++) {if (c.publicServiceList[d].conversationType == a && b == c.publicServiceList[d].publicServiceId) {this.publicServiceList.splice(d, 1);break;}}}, a;}();a.PublicServiceMap = b;var c = function () {function a() {this.conversationList = [];}return a.prototype.get = function (a, b) {for (var c = 0, d = this.conversationList.length; c < d; c++) {if (this.conversationList[c].conversationType == a && this.conversationList[c].targetId == b) return this.conversationList[c];}return null;}, a.prototype.add = function (a) {for (var b = !0, c = 0, d = this.conversationList.length; c < d; c++) {if (this.conversationList[c].conversationType === a.conversationType && this.conversationList[c].targetId === a.targetId) {this.conversationList.unshift(this.conversationList.splice(c, 1)[0]), b = !1;break;}}b && this.conversationList.unshift(a);}, a.prototype.replace = function (a) {for (var b = 0, c = this.conversationList.length; b < c; b++) {if (this.conversationList[b].conversationType === a.conversationType && this.conversationList[b].targetId === a.targetId) {this.conversationList.splice(b, 1, a);break;}}}, a.prototype.remove = function (a) {for (var b = 0, c = this.conversationList.length; b < c; b++) {if (this.conversationList[b].conversationType === a.conversationType && this.conversationList[b].targetId === a.targetId) {this.conversationList.splice(b, 1);break;}}}, a;}();a.ConversationMap = c;var d = function () {function b() {}return b.getInstance = function () {return b._instance || (b._instance = new b()), b._instance;}, b.prototype.logger = function (b, c, d) {a.RongIMClient.logger({ code: b, funcName: c, msg: d });}, b.prototype.check = function (b, c, d, e) {if (a.RongIMClient._dataAccessProvider || d) {for (var f = 0, g = e.length; f < g; f++) {if (!new RegExp(this.getType(e[f])).test(b[f])) {var h = \"ç¬¬\" + (f + 1) + \"ä¸ªå‚æ•°é”™è¯¯, é”™è¯¯ç±»åž‹ï¼š\" + this.getType(e[f]) + \" [\" + b[f] + \"] -> ä½ç½®:\" + c;this.logger(\"-3\", c, h);}}} else {var h = \"è¯¥å‚æ•°ä¸æ­£ç¡®æˆ–å°šæœªå®žä¾‹åŒ–RongIMClient -> ä½ç½®:\" + c;this.logger(\"-4\", c, h);}}, b.prototype.getType = function (a) {var b = Object.prototype.toString.call(a).toLowerCase();return b.slice(8, b.length - 1);}, b.prototype.checkCookieDisable = function () {document.cookie = \"checkCookie=1\";var a = document.cookie.match(new RegExp(\"(^| )checkCookie=([^;]*)(;|$)\")),b = !1;return a || (b = !0), document.cookie = \"checkCookie=1;expires=Thu, 01-Jan-1970 00:00:01 GMT\", b;}, b;}();a.CheckParam = d;var e = function () {function a(a) {this.map = {}, this.keys = [], this.limit = a || 10;}return a.prototype.set = function (a, b) {this.map[a] = b;}, a.prototype.get = function (a) {return this.map[a] || 0;}, a.prototype.remove = function (a) {delete this.map[a];}, a;}();a.LimitableMap = e;var f = function () {function a() {this.cache = {};}return a.prototype.set = function (a, b) {this.cache[a] = b;}, a.prototype.get = function (a) {return this.cache[a];}, a.prototype.remove = function (a) {delete this.cache[a];}, a;}();a.MemoryCache = f;var g = function () {function a(a) {var b = this;b.xmlhttp = null, b.options = a;var c = \"undefined\" != typeof XMLHttpRequest && \"withCredentials\" in new XMLHttpRequest();\"undefined\" != typeof XMLHttpRequest && c ? b.xmlhttp = new XMLHttpRequest() : \"undefined\" != typeof XDomainRequest ? b.xmlhttp = new XDomainRequest() : b.xmlhttp = new ActiveXObject(\"Microsoft.XMLHTTP\");}return a.prototype.send = function (a) {var b = this;b.options.url || (b.options.url = \"http://upload.qiniu.com/putb64/-1\"), b.xmlhttp.onreadystatechange = function () {4 == b.xmlhttp.readyState && (b.options.type ? a() : a(JSON.parse(b.xmlhttp.responseText.replace(/'/g, '\"'))));}, b.xmlhttp.open(\"POST\", b.options.url, !0), b.xmlhttp.withCredentials = !1, \"setRequestHeader\" in b.xmlhttp && (b.options.type ? b.xmlhttp.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded; charset=utf-8\") : (b.xmlhttp.setRequestHeader(\"Content-type\", \"application/octet-stream\"), b.xmlhttp.setRequestHeader(\"Authorization\", \"UpToken \" + b.options.token))), b.xmlhttp.send(b.options.type ? \"appKey=\" + b.options.appKey + \"&deviceId=\" + b.options.deviceId + \"&timestamp=\" + b.options.timestamp + \"&deviceInfo=\" + b.options.deviceInfo + \"&privateInfo=\" + JSON.stringify(b.options.privateInfo) : b.options.base64);}, a;}();a.RongAjax = g;var h = function () {function a() {}return a.noop = function () {}, a.isEmpty = function (a) {var b = !0;for (var c in a) {b = !1;break;}return b;}, a.MD5 = function (a, b, c) {return md5(a, b, c);}, a.isObject = function (a) {return \"[object Object]\" == Object.prototype.toString.call(a);}, a.isArray = function (a) {return \"[object Array]\" == Object.prototype.toString.call(a);}, a.isString = function (a) {return \"[object String]\" == Object.prototype.toString.call(a);}, a.isFunction = function (a) {return \"[object Function]\" == Object.prototype.toString.call(a);}, a.isUndefined = function (a) {return \"[object Undefined]\" == Object.prototype.toString.call(a);}, a.isEqual = function (a, b) {return a === b;}, a.indexOf = function (a, b) {for (var c = -1, d = 0; d < a.length; d++) {if (b === a[d]) {c = d;break;}}return c;}, a.stringFormat = function (a, b) {for (var c = 0, d = b.length; c < d; c++) {var e = b[c],f = new RegExp(\"\\\\{\" + c + \"\\\\}\", \"g\");a = a.replace(f, e);}return a;}, a.tplEngine = function (a, b, c) {function d(b) {return a.replace(c || /{([^}]+)}/g, function (a, c) {return \"\\\\\" == a.charAt(0) ? a.slice(1) : void 0 != b[c] ? b[c] : \"{\" + c + \"}\";});}\"[object Array]\" !== Object.prototype.toString.call(b) && (b = [b]);for (var e = [], f = 0, g = b.length; f < g; f++) {e.push(d(b[f]));}return e.join(\"\");}, a.forEach = function (b, c) {c = c || a.noop;var d = function d() {for (var a in b) {b.hasOwnProperty(a) && c(b[a], a, b);}},e = function e() {for (var a = 0, d = b.length; a < d; a++) {c(b[a], a);}};a.isObject(b) && d(), a.isArray(b) && e();}, a.extend = function (b, c, d, e) {return a.forEach(b, function (a, b) {var d = b in c;e && d && (c[b] = a), d || (c[b] = a);}), c;}, a.createXHR = function () {var a = { XMLHttpRequest: function (_XMLHttpRequest) {function XMLHttpRequest() {return _XMLHttpRequest.apply(this, arguments);}XMLHttpRequest.toString = function () {return _XMLHttpRequest.toString();};return XMLHttpRequest;}(function () {return new XMLHttpRequest();}), XDomainRequest: function (_XDomainRequest) {function XDomainRequest() {return _XDomainRequest.apply(this, arguments);}XDomainRequest.toString = function () {return _XDomainRequest.toString();};return XDomainRequest;}(function () {return new XDomainRequest();}), ActiveXObject: function (_ActiveXObject) {function ActiveXObject() {return _ActiveXObject.apply(this, arguments);}ActiveXObject.toString = function () {return _ActiveXObject.toString();};return ActiveXObject;}(function () {return new ActiveXObject(\"Microsoft.XMLHTTP\");}) },b = \"function\" == typeof XMLHttpRequest,c = \"function\" == typeof XDomainRequest;return a[b ? \"XMLHttpRequest\" : c ? \"XDomainRequest\" : \"ActiveXObject\"]();}, a.request = function (b) {var c = b.url,d = b.success,e = b.error,f = b.method || \"GET\",g = a.createXHR();return g.onreadystatechange = function () {\n          if (4 == g.readyState) {var a = g.status;200 == a ? d(g.responseText) : e(a, g.responseText);}}, g.open(f, c, !0), g.send(null), g;}, a.formatProtoclPath = function (b) {var c = b.path,d = b.protocol,e = b.tmpl || \"{0}{1}\",f = b.sub,g = \"://\",h = c.indexOf(g);(h > -1 && (h += g.length, c = c.substring(h)), f) && (h = c.indexOf(\"/\")) > -1 && (c = c.substr(0, h));return a.stringFormat(e, [d, c]);}, a.supportLocalStorage = function () {var a = !1;if (\"object\" == typeof localStorage) try {var b = \"RC_TMP_KEY\",c = \"RC_TMP_VAL\";localStorage.setItem(b, c);localStorage.getItem(b) == c && (a = !0);} catch (d) {__f__(\"log\", \"localStorage is disabled.\", \" at rongyunIM\\\\rongyun.js:8\");}return a;}, a.rename = function (b, c) {var d = a.isObject(b);d && (b = [b]), b = JSON.parse(JSON.stringify(b));var e = function e(a, b, d) {delete d[b], b = c[b], d[b] = a;};return a.forEach(b, function (b) {a.forEach(b, function (b, d, f) {(d in c ? e : a.noop)(b, d, f);});}), d ? b[0] : b;}, a.some = function (a, b) {for (var c = !1, d = 0, e = a.length; d < e; d++) {if (b(a[d])) {c = !0;break;}}return c;}, a.keys = function (a) {var b = [];for (var c in a) {b.push(c);}return b;}, a.isNumber = function (a) {return \"[object Number]\" == Object.prototype.toString.call(a);}, a.getTimestamp = function () {return new Date().getTime();}, a;}();a.RongUtil = h;var i = function () {function a() {this.watchers = {};}return a.prototype.genUId = function (a) {return [a, new Date().getTime()].join(\"_\");}, a.prototype.watch = function (a) {var b = this,c = a.key,d = a.multiple;c = h.isArray(c) ? c : [c];var e = a.func;h.forEach(c, function (a) {a = d ? b.genUId(a) : a, b.watchers[a] = e;});}, a.prototype.notify = function (a) {var b = this,c = a.key,d = a.entity;for (var e in b.watchers) {0 == e.indexOf(c) && b.watchers[e](d);}}, a.prototype.remove = function () {}, a;}();a.RongObserver = i;var j = function () {function a(a) {this.timeout = 0, this.timers = [], this.timeout = a.timeout;}return a.prototype.resume = function (a) {var b = setTimeout(a, this.timeout);this.timers.push(b);}, a.prototype.pause = function () {h.forEach(this.timers, function (a) {clearTimeout(a);});}, a;}();a.Timer = j;var k = function () {function a(a) {this.items = [], this.index = 0, this.onwheel = function () {}, this.items = a.items, this.onwheel = a.onwheel;}return a.prototype.get = function () {var a = this,b = a.items,c = a.index,d = c >= b.length;return d && a.onwheel(), d ? 0 : c;}, a.prototype.add = function () {this.index += 1;}, a;}();a.IndexTools = k;var l = function () {function a() {}return a.getUId = function (a) {return md5(a).slice(8, 16);}, a;}();a.InnerUtil = l;}(RongIMLib || (RongIMLib = {})), RongIMLib;});\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/vue-cli-plugin-uni/lib/format-log.js */ 21)[\"default\"]))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVuaS1hcHA6Ly8vcm9uZ3l1bklNL3Jvbmd5dW4uanMiXSwibmFtZXMiOlsiYSIsImIiLCJtb2R1bGUiLCJleHBvcnRzIiwid2luZG93IiwiUG9sbGluZyIsIlNldFVzZXJTdGF0dXNJbnB1dCIsInNldFN0YXR1cyIsInN0YXR1cyIsInRvQXJyYXlCdWZmZXIiLCJTZXRVc2VyU3RhdHVzT3V0cHV0Iiwic2V0Tm90aGluZyIsIm5vdGhpbmciLCJHZXRVc2VyU3RhdHVzSW5wdXQiLCJHZXRVc2VyU3RhdHVzT3V0cHV0Iiwic2V0U3ViVXNlcklkIiwic3ViVXNlcklkIiwiVm9pcER5bmFtaWNJbnB1dCIsInNldEVuZ2luZVR5cGUiLCJlbmdpbmVUeXBlIiwic2V0Q2hhbm5lbE5hbWUiLCJjaGFubmVsTmFtZSIsInNldENoYW5uZWxFeHRyYSIsImNoYW5uZWxFeHRyYSIsIlZvaXBEeW5hbWljT3V0cHV0Iiwic2V0RHluYW1pY0tleSIsImR5bmFtaWNLZXkiLCJTdWJVc2VyU3RhdHVzSW5wdXQiLCJzZXRVc2VyaWQiLCJ1c2VyaWQiLCJTdWJVc2VyU3RhdHVzT3V0cHV0IiwiQ2xlYW5IaXNNc2dJbnB1dCIsInNldFRhcmdldElkIiwidGFyZ2V0SWQiLCJzZXREYXRhVGltZSIsImRhdGFUaW1lIiwic2V0Q29udmVyc2F0aW9uVHlwZSIsImNvbnZlcnNhdGlvblR5cGUiLCJEZWxldGVNc2dJbnB1dCIsInNldFR5cGUiLCJ0eXBlIiwic2V0Q29udmVyc2F0aW9uSWQiLCJjb252ZXJzYXRpb25JZCIsInNldE1zZ3MiLCJtc2dzIiwiRGVsZXRlTXNnIiwic2V0TXNnSWQiLCJtc2dJZCIsInNldE1zZ0RhdGFUaW1lIiwibXNnRGF0YVRpbWUiLCJzZXREaXJlY3QiLCJkaXJlY3QiLCJEZWxldGVNc2dPdXRwdXQiLCJTZWFyY2hNcElucHV0Iiwic2V0SWQiLCJpZCIsIlNlYXJjaE1wT3V0cHV0Iiwic2V0SW5mbyIsImluZm8iLCJNcEluZm8iLCJzZXRNcGlkIiwibXBpZCIsInNldE5hbWUiLCJuYW1lIiwic2V0VGltZSIsInRpbWUiLCJzZXRQb3J0cmFpdFVyaSIsInBvcnRyYWl0VXJsIiwic2V0RXh0cmEiLCJleHRyYSIsIlB1bGxNcElucHV0IiwiUHVsbE1wT3V0cHV0IiwiTVBGb2xsb3dJbnB1dCIsIk1QRm9sbG93T3V0cHV0IiwiTm90aWZ5TXNnIiwic2V0Q2hybUlkIiwiY2hybUlkIiwiU3luY1JlcXVlc3RNc2ciLCJzZXRTeW5jVGltZSIsInN5bmNUaW1lIiwic2V0SXNwb2xsaW5nIiwiaXNwb2xsaW5nIiwic2V0SXN3ZWIiLCJpc3dlYiIsInNldElzUHVsbFNlbmQiLCJpc1B1bGxTZW5kIiwic2V0U2VuZEJveFN5bmNUaW1lIiwic2VuZEJveFN5bmNUaW1lIiwiVXBTdHJlYW1NZXNzYWdlIiwic2V0U2Vzc2lvbklkIiwic2Vzc2lvbklkIiwic2V0Q2xhc3NuYW1lIiwiY2xhc3NuYW1lIiwic2V0Q29udGVudCIsImNvbnRlbnQiLCJzZXRQdXNoVGV4dCIsInB1c2hUZXh0Iiwic2V0VXNlcklkIiwidXNlcklkIiwic2V0QXBwRGF0YSIsImFwcERhdGEiLCJEb3duU3RyZWFtTWVzc2FnZXMiLCJzZXRMaXN0IiwibGlzdCIsInNldEZpbmlzaGVkIiwiZmluaXNoZWQiLCJEb3duU3RyZWFtTWVzc2FnZSIsInNldEZyb21Vc2VySWQiLCJmcm9tVXNlcklkIiwic2V0R3JvdXBJZCIsImdyb3VwSWQiLCJDcmVhdGVEaXNjdXNzaW9uSW5wdXQiLCJDcmVhdGVEaXNjdXNzaW9uT3V0cHV0IiwiQ2hhbm5lbEludml0YXRpb25JbnB1dCIsInNldFVzZXJzIiwidXNlcnMiLCJMZWF2ZUNoYW5uZWxJbnB1dCIsIlF1ZXJ5Q2hhdHJvb21JbmZvSW5wdXQiLCJzZXRDb3VudCIsImNvdW50Iiwic2V0T3JkZXIiLCJvcmRlciIsIlF1ZXJ5Q2hhdHJvb21JbmZvT3V0cHV0Iiwic2V0VXNlclRvdGFsTnVtcyIsInVzZXJUb3RhbE51bXMiLCJzZXRVc2VySW5mb3MiLCJ1c2VySW5mb3MiLCJDaGFubmVsRXZpY3Rpb25JbnB1dCIsInNldFVzZXIiLCJ1c2VyIiwiUmVuYW1lQ2hhbm5lbElucHV0IiwiQ2hhbm5lbEluZm9JbnB1dCIsIkNoYW5uZWxJbmZvT3V0cHV0Iiwic2V0Q2hhbm5lbElkIiwiY2hhbm5lbElkIiwic2V0QWRtaW5Vc2VySWQiLCJhZG1pblVzZXJJZCIsInNldEZpcnN0VGVuVXNlcklkcyIsImZpcnN0VGVuVXNlcklkcyIsInNldE9wZW5TdGF0dXMiLCJvcGVuU3RhdHVzIiwiQ2hhbm5lbEluZm9zSW5wdXQiLCJzZXRQYWdlIiwicGFnZSIsInNldE51bWJlciIsIm51bWJlciIsIkNoYW5uZWxJbmZvc091dHB1dCIsInNldENoYW5uZWxzIiwiY2hhbm5lbHMiLCJzZXRUb3RhbCIsInRvdGFsIiwiTWVtYmVySW5mbyIsInNldFVzZXJOYW1lIiwidXNlck5hbWUiLCJzZXRVc2VyUG9ydHJhaXQiLCJ1c2VyUG9ydHJhaXQiLCJzZXRFeHRlbnNpb24iLCJleHRlbnNpb24iLCJHcm91cE1lbWJlcnNJbnB1dCIsIkdyb3VwTWVtYmVyc091dHB1dCIsInNldE1lbWJlcnMiLCJtZW1iZXJzIiwiR2V0VXNlckluZm9JbnB1dCIsIkdldFVzZXJJbmZvT3V0cHV0IiwiR2V0U2Vzc2lvbklkSW5wdXQiLCJHZXRTZXNzaW9uSWRPdXRwdXQiLCJHZXRRTnVwVG9rZW5JbnB1dCIsIkdldFFOdXBUb2tlbk91dHB1dCIsInNldERlYWRsaW5lIiwiZGVhZGxpbmUiLCJzZXRUb2tlbiIsInRva2VuIiwiR2V0UU5kb3dubG9hZFVybElucHV0Iiwic2V0S2V5Iiwia2V5Iiwic2V0RmlsZU5hbWUiLCJmaWxlTmFtZSIsIkdldFFOZG93bmxvYWRVcmxPdXRwdXQiLCJzZXREb3dubG9hZFVybCIsImRvd25sb2FkVXJsIiwiQWRkMkJsYWNrTGlzdElucHV0IiwiUmVtb3ZlRnJvbUJsYWNrTGlzdElucHV0IiwiUXVlcnlCbGFja0xpc3RJbnB1dCIsIlF1ZXJ5QmxhY2tMaXN0T3V0cHV0Iiwic2V0VXNlcklkcyIsInVzZXJJZHMiLCJCbGFja0xpc3RTdGF0dXNJbnB1dCIsIkJsb2NrUHVzaElucHV0Iiwic2V0QmxvY2tlZUlkIiwiYmxvY2tlZUlkIiwiTW9kaWZ5UGVybWlzc2lvbklucHV0IiwiR3JvdXBJbnB1dCIsInNldEdyb3VwSW5mbyIsImMiLCJkIiwibGVuZ3RoIiwicHVzaCIsImdldENvbnRlbnQiLCJncm91cEluZm8iLCJHcm91cE91dHB1dCIsIkdyb3VwSW5mbyIsIkdyb3VwSGFzaElucHV0Iiwic2V0R3JvdXBIYXNoQ29kZSIsImdyb3VwSGFzaENvZGUiLCJHcm91cEhhc2hPdXRwdXQiLCJzZXRSZXN1bHQiLCJyZXN1bHQiLCJDaHJtSW5wdXQiLCJDaHJtT3V0cHV0IiwiQ2hybVB1bGxNc2ciLCJSZWxhdGlvbnNJbnB1dCIsInNldE1zZyIsIm1zZyIsIlJlbGF0aW9uc091dHB1dCIsIlJlbGF0aW9uSW5mbyIsIkhpc3RvcnlNZXNzYWdlSW5wdXQiLCJzZXRTaXplIiwic2l6ZSIsIkhpc3RvcnlNZXNzYWdlc091cHV0Iiwic2V0SGFzTXNnIiwiaGFzTXNnIiwiSGlzdG9yeU1zZ0lucHV0IiwiSGlzdG9yeU1zZ091cHV0IiwiZiIsImRlY29kZSIsImJhY2siLCJ2YWwiLCJKU09OIiwicGFyc2UiLCJldmFsIiwiaSIsImNoYXJBdCIsInRvVXBwZXJDYXNlIiwic2xpY2UiLCJtZDUiLCJlIiwiZyIsImgiLCJqIiwiayIsImwiLCJtIiwibiIsIm8iLCJwIiwiU3RyaW5nIiwiZnJvbUNoYXJDb2RlIiwiY2hhckNvZGVBdCIsImNvbmNhdCIsInVuZXNjYXBlIiwiZW5jb2RlVVJJQ29tcG9uZW50IiwicSIsInIiLCJzIiwiUm9uZ0lNTGliIiwiQUxMIiwiUEFSVCIsIk1lbnRpb25lZFR5cGUiLCJDVVNUT01FUl9TRVJWSUNFIiwiUkVDQUxMIiwiTWV0aG9kVHlwZSIsIklOX0JMQUNLX0xJU1QiLCJOT1RfSU5fQkxBQ0tfTElTVCIsIkJsYWNrbGlzdFN0YXR1cyIsIlhIUl9QT0xMSU5HIiwiV0VCU09DS0VUIiwiSFRUUCIsIkhUVFBTIiwiQ29ubmVjdGlvbkNoYW5uZWwiLCJPTkxZX1JPQk9UIiwiT05MWV9IVU1BTiIsIlJPQk9UX0ZJUlNUIiwiSFVNQU5fRklSU1QiLCJDdXN0b21lclR5cGUiLCJOT05FIiwiU1FRVUVOQ0UiLCJSRVZFUlNFIiwiR2V0Q2hhdFJvb21UeXBlIiwiQ09OTkVDVEVEIiwiQ09OTkVDVElORyIsIkRJU0NPTk5FQ1RFRCIsIktJQ0tFRF9PRkZMSU5FX0JZX09USEVSX0NMSUVOVCIsIldFQlNPQ0tFVF9VTkFWQUlMQUJMRSIsIk5FVFdPUktfVU5BVkFJTEFCTEUiLCJET01BSU5fSU5DT1JSRUNUIiwiQVBQS0VZX0lTX0ZBS0UiLCJDT05ORUNUSU9OX0NMT1NFRCIsIlVMVFJBTElNSVQiLCJSRVFVRVNUX05BVkkiLCJSRVNQT05TRV9OQVZJIiwiUkVTUE9OU0VfTkFWSV9FUlJPUiIsIlJFU1BPTlNFX05BVklfVElNRU9VVCIsIkNvbm5lY3Rpb25TdGF0dXMiLCJET19OT1RfRElTVFVSQiIsIk5PVElGWSIsIkNvbnZlcnNhdGlvbk5vdGlmaWNhdGlvblN0YXR1cyIsIlBSSVZBVEUiLCJESVNDVVNTSU9OIiwiR1JPVVAiLCJDSEFUUk9PTSIsIlNZU1RFTSIsIkFQUF9QVUJMSUNfU0VSVklDRSIsIlBVQkxJQ19TRVJWSUNFIiwiQ29udmVyc2F0aW9uVHlwZSIsIk9QRU5FRCIsIkNMT1NFRCIsIkRpc2N1c3Npb25JbnZpdGVTdGF0dXMiLCJSRUNBTExfTUVTU0FHRSIsIlNFTkRfRlJFUVVFTkNZX1RPT19GQVNUIiwiUkNfTVNHX1VOQVVUSE9SSVpFRCIsIlJDX0RJU0NVU1NJT05fR1JPVVBfSURfSU5WQUxJRCIsIkZPUkJJRERFTl9JTl9HUk9VUCIsIk5PVF9JTl9ESVNDVVNTSU9OIiwiTk9UX0lOX0dST1VQIiwiTk9UX0lOX0NIQVRST09NIiwiRk9SQklEREVOX0lOX0NIQVRST09NIiwiUkNfQ0hBVFJPT01fVVNFUl9LSUNLRUQiLCJSQ19DSEFUUk9PTV9OT1RfRVhJU1QiLCJSQ19DSEFUUk9PTV9JU19GVUxMIiwiUkNfQ0hBVFJPT01fUEFUQU1FVEVSX0lOVkFMSUQiLCJDSEFUUk9PTV9HRVRfSElTVE9SWU1TR19FUlJPUiIsIkNIQVRST09NX05PVF9PUEVOX0hJU1RPUllNU0dfU1RPUkUiLCJTRU5TSVRJVkVfU0hJRUxEIiwiU0VOU0lUSVZFX1JFUExBQ0UiLCJUSU1FT1VUIiwiVU5LTk9XTiIsIkpPSU5fSU5fRElTQ1VTU0lPTiIsIkNSRUFURV9ESVNDVVNTSU9OIiwiSU5WSVRFX0RJQ1VTU0lPTiIsIkdFVF9VU0VSSU5GT19FUlJPUiIsIlJFSkVDVEVEX0JZX0JMQUNLTElTVCIsIlJDX05FVF9DSEFOTkVMX0lOVkFMSUQiLCJSQ19ORVRfVU5BVkFJTEFCTEUiLCJSQ19NU0dfUkVTUF9USU1FT1VUIiwiUkNfSFRUUF9TRU5EX0ZBSUwiLCJSQ19IVFRQX1JFUV9USU1FT1VUIiwiUkNfSFRUUF9SRUNWX0ZBSUwiLCJSQ19OQVZJX1JFU09VUkNFX0VSUk9SIiwiUkNfTk9ERV9OT1RfRk9VTkQiLCJSQ19ET01BSU5fTk9UX1JFU09MVkUiLCJSQ19TT0NLRVRfTk9UX0NSRUFURUQiLCJSQ19TT0NLRVRfRElTQ09OTkVDVEVEIiwiUkNfUElOR19TRU5EX0ZBSUwiLCJSQ19QT05HX1JFQ1ZfRkFJTCIsIlJDX01TR19TRU5EX0ZBSUwiLCJSQ19DT05OX0FDS19USU1FT1VUIiwiUkNfQ09OTl9QUk9UT19WRVJTSU9OX0VSUk9SIiwiUkNfQ09OTl9JRF9SRUpFQ1QiLCJSQ19DT05OX1NFUlZFUl9VTkFWQUlMQUJMRSIsIlJDX0NPTk5fVVNFUl9PUl9QQVNTV0RfRVJST1IiLCJSQ19DT05OX05PVF9BVVRIUk9SSVpFRCIsIlJDX0NPTk5fUkVESVJFQ1RFRCIsIlJDX0NPTk5fUEFDS0FHRV9OQU1FX0lOVkFMSUQiLCJSQ19DT05OX0FQUF9CTE9DS0VEX09SX0RFTEVURUQiLCJSQ19DT05OX1VTRVJfQkxPQ0tFRCIsIlJDX0RJU0NPTk5fS0lDSyIsIlJDX0RJU0NPTk5fRVhDRVBUSU9OIiwiUkNfUVVFUllfQUNLX05PX0RBVEEiLCJSQ19NU0dfREFUQV9JTkNPTVBMRVRFIiwiQklaX0VSUk9SX0NMSUVOVF9OT1RfSU5JVCIsIkJJWl9FUlJPUl9EQVRBQkFTRV9FUlJPUiIsIkJJWl9FUlJPUl9JTlZBTElEX1BBUkFNRVRFUiIsIkJJWl9FUlJPUl9OT19DSEFOTkVMIiwiQklaX0VSUk9SX1JFQ09OTkVDVF9TVUNDRVNTIiwiQklaX0VSUk9SX0NPTk5FQ1RJTkciLCJNU0dfUk9BTUlOR19TRVJWSUNFX1VOQVZBSUxBQkxFIiwiTVNHX0lOU0VSVF9FUlJPUiIsIk1TR19ERUxfRVJST1IiLCJDT05WRVJfUkVNT1ZFX0VSUk9SIiwiQ09OVkVSX0dFVExJU1RfRVJST1IiLCJDT05WRVJfU0VUT1BfRVJST1IiLCJDT05WRVJfVE9UQUxfVU5SRUFEX0VSUk9SIiwiQ09OVkVSX1RZUEVfVU5SRUFEX0VSUk9SIiwiQ09OVkVSX0lEX1RZUEVfVU5SRUFEX0VSUk9SIiwiQ09OVkVSX0NMRUFSX0VSUk9SIiwiQ0xFQVJfSElTX0VSUk9SIiwiQ0xFQVJfSElTX1RZUEVfRVJST1IiLCJDTEVBUl9ISVNfVElNRV9FUlJPUiIsIkNPTlZFUl9HRVRfRVJST1IiLCJHUk9VUF9TWU5DX0VSUk9SIiwiR1JPVVBfTUFUQ0hfRVJST1IiLCJDSEFUUk9PTV9JRF9JU05VTEwiLCJDSEFSVE9PTV9KT0lOX0VSUk9SIiwiQ0hBVFJPT01fSElTTUVTU0FHRV9FUlJPUiIsIkJMQUNLX0FERF9FUlJPUiIsIkJMQUNLX0dFVFNUQVRVU19FUlJPUiIsIkJMQUNLX1JFTU9WRV9FUlJPUiIsIkRSQUZfR0VUX0VSUk9SIiwiRFJBRl9TQVZFX0VSUk9SIiwiRFJBRl9SRU1PVkVfRVJST1IiLCJTVUJTQ1JJQkVfRVJST1IiLCJRTlRLTl9GSUxFVFlQRV9FUlJPUiIsIlFOVEtOX0dFVF9FUlJPUiIsIkNPT0tJRV9FTkFCTEUiLCJHRVRfTUVTU0FHRV9CWV9JRF9FUlJPUiIsIkhBVk5PREVWSUNFSUQiLCJERVZJQ0VJRElTSEFWRSIsIlNVQ0NFU1MiLCJGRUlMRCIsIlZPSVBJU05VTEwiLCJOT0VOR0lORVRZUEUiLCJOVUxMQ0hBTk5FTE5BTUUiLCJWT0lQRFlBTk1JQ0VSUk9SIiwiTk9WT0lQIiwiSU5URVJOQUxFUlJST1IiLCJWT0lQQ0xPU0UiLCJDTE9TRV9CRUZPUkVfT1BFTiIsIkFMUkVBRFlfSU5fVVNFIiwiSU5WQUxJRF9DSEFOTkVMX05BTUUiLCJWSURFT19DT05UQUlORVJfSVNfTlVMTCIsIkRFTEVURV9NRVNTQUdFX0lEX0lTX05VTEwiLCJDQU5DRUwiLCJSRUpFQ1QiLCJIQU5HVVAiLCJCVVNZTElORSIsIk5PX1JFU1BPTlNFIiwiRU5HSU5FX1VOX1NVUFBPUlRFRCIsIk5FVFdPUktfRVJST1IiLCJSRU1PVEVfQ0FOQ0VMIiwiUkVNT1RFX1JFSkVDVCIsIlJFTU9URV9IQU5HVVAiLCJSRU1PVEVfQlVTWUxJTkUiLCJSRU1PVEVfTk9fUkVTUE9OU0UiLCJSRU1PVEVfRU5HSU5FX1VOX1NVUFBPUlRFRCIsIlJFTU9URV9ORVRXT1JLX0VSUk9SIiwiVk9JUF9OT1RfQVZBTElBQkxFIiwiRXJyb3JDb2RlIiwiTUVESUFfQVVESU8iLCJNRURJQV9WRURJTyIsIlZvSVBNZWRpYVR5cGUiLCJJTUFHRSIsIkFVRElPIiwiVklERU8iLCJGSUxFIiwiTWVkaWFUeXBlIiwiU0VORCIsIlJFQ0VJVkUiLCJNZXNzYWdlRGlyZWN0aW9uIiwiRmlsZVR5cGUiLCJSQ19SRUFMX1RJTUVfTE9DQVRJT05fTk9UX0lOSVQiLCJSQ19SRUFMX1RJTUVfTE9DQVRJT05fU1VDQ0VTUyIsIlJDX1JFQUxfVElNRV9MT0NBVElPTl9HUFNfRElTQUJMRUQiLCJSQ19SRUFMX1RJTUVfTE9DQVRJT05fQ09OVkVSU0FUSU9OX05PVF9TVVBQT1JUIiwiUkNfUkVBTF9USU1FX0xPQ0FUSU9OX0lTX09OX0dPSU5HIiwiUkNfUkVBTF9USU1FX0xPQ0FUSU9OX0VYQ0VFRF9NQVhfUEFSVElDSVBBTlQiLCJSQ19SRUFMX1RJTUVfTE9DQVRJT05fSk9JTl9GQUlMVVJFIiwiUkNfUkVBTF9USU1FX0xPQ0FUSU9OX1NUQVJUX0ZBSUxVUkUiLCJSQ19SRUFMX1RJTUVfTE9DQVRJT05fTkVUV09SS19VTkFWQUlMQUJMRSIsIlJlYWxUaW1lTG9jYXRpb25FcnJvckNvZGUiLCJSQ19SRUFMX1RJTUVfTE9DQVRJT05fU1RBVFVTX0lETEUiLCJSQ19SRUFMX1RJTUVfTE9DQVRJT05fU1RBVFVTX0lOQ09NSU5HIiwiUkNfUkVBTF9USU1FX0xPQ0FUSU9OX1NUQVRVU19PVVRHT0lORyIsIlJDX1JFQUxfVElNRV9MT0NBVElPTl9TVEFUVVNfQ09OTkVDVEVEIiwiUmVhbFRpbWVMb2NhdGlvblN0YXR1cyIsIlJFQUQiLCJMSVNURU5FRCIsIkRPV05MT0FERUQiLCJSRVRSSUVWRUQiLCJVTlJFQUQiLCJSZWNlaXZlZFN0YXR1cyIsIlJlYWRTdGF0dXMiLCJFWEFDVCIsIkZVWlpZIiwiU2VhcmNoVHlwZSIsIlNFTkRJTkciLCJGQUlMRUQiLCJTRU5UIiwiUkVDRUlWRUQiLCJERVNUUk9ZRUQiLCJTZW50U3RhdHVzIiwiQUNDRVBURUQiLCJVTkFDQ0VQVEFCTEVfUFJPVE9DT0xfVkVSU0lPTiIsIklERU5USUZJRVJfUkVKRUNURUQiLCJTRVJWRVJfVU5BVkFJTEFCTEUiLCJUT0tFTl9JTkNPUlJFQ1QiLCJOT1RfQVVUSE9SSVpFRCIsIlJFRElSRUNUIiwiUEFDS0FHRV9FUlJPUiIsIkFQUF9CTE9DS19PUl9ERUxFVEUiLCJCTE9DSyIsIlRPS0VOX0VYUElSRSIsIkRFVklDRV9FUlJPUiIsIkNvbm5lY3Rpb25TdGF0ZSIsIlJPT00iLCJQRVJTT04iLCJSVENBUElUeXBlIiwiZ2V0SW5zdGFuY2UiLCJfaW5zdGFuY2UiLCJFcnJvciIsInNob3dFcnJvciIsImNvbnNvbGUiLCJlcnJvciIsInN0cmluZ2lmeSIsImxvZ2dlciIsImNvZGUiLCJMb2dGYWN0b3J5IiwiZnVuY05hbWUiLCJfbWVtb3J5U3RvcmUiLCJkZXBlbmQiLCJsb2dDYWxsYmFjayIsIm9uU3VjY2VzcyIsIm9uRXJyb3IiLCJsb2dTZW5kQ2FsbGJhY2siLCJvbkJlZm9yZSIsImluaXQiLCJzZGtJbmZvIiwibG9jYXRpb24iLCJwcm90b2NvbCIsIldlYlNvY2tldCIsIk9QRU4iLCJkb2N1bWVudCIsImRvY3VtZW50RWxlbWVudCIsImFkZEJlaGF2aW9yIiwiUm9uZ1V0aWwiLCJzdXBwb3J0TG9jYWxTdG9yYWdlIiwiX3N0b3JhZ2VQcm92aWRlciIsIkxvY2FsU3RvcmFnZVByb3ZpZGVyIiwiVXNlckRhdGFQcm92aWRlciIsIk1lbWVvcnlQcm92aWRlciIsImdldEl0ZW0iLCJzZXJ2ZXJTdG9yZSIsImluZGV4IiwiYXBpIiwiZm9yRWFjaCIsInN0cmluZ0Zvcm1hdCIsInBhdGgiLCJ0bXBsIiwic3ViIiwiZm9ybWF0UHJvdG9jbFBhdGgiLCJuYXZpZ2F0ZXJzIiwibmF2aSIsImlzRXF1YWwiLCJwcm90b2J1ZiIsImV4dGVuZCIsImlzUG9sbGluZyIsIndzU2NoZW1lIiwib3Blbk1wIiwic25pZmZlclRpbWUiLCJuYXZpVGltZW91dCIsIm1heE5hdmlSZXRyeSIsImlzRnVuY3Rpb24iLCJQcm90b2J1ZiIsInVzZXJTdGF0dXNPYnNlcnZlciIsIlJvbmdPYnNlcnZlciIsIkZlYXR1cmVQYXRjaGVyIiwicGF0Y2hBbGwiLCJjYWxsYmFjayIsImxhc3RSZWFkVGltZSIsIkxpbWl0YWJsZU1hcCIsImhpc3RvcnlNZXNzYWdlTGltaXQiLCJNZW1vcnlDYWNoZSIsImNvbnZlcnNhdGlvbkxpc3QiLCJhcHBLZXkiLCJwdWJsaWNTZXJ2aWNlTWFwIiwiUHVibGljU2VydmljZU1hcCIsInByb3ZpZGVyVHlwZSIsImRlbHRhVGltZSIsImZpbHRlck1lc3NhZ2VzIiwiaXNTeW5jUmVtb3RlQ29udmVyTGlzdCIsIm90aGVyRGV2aWNlIiwiY3VzdFN0b3JlIiwiY29udmVyU3RvcmUiLCJsYXRlc3RNZXNzYWdlIiwiY29ubmVjdEFja1RpbWUiLCJ2b2lwU3RhdGVneSIsImlzRmlyc3RQaW5nTXNnIiwibGlzdGVuZXJMaXN0Iiwibm90aWZpY2F0aW9uIiwiT2JqZWN0IiwicHJvdG90eXBlIiwidG9TdHJpbmciLCJjYWxsIiwiX2RhdGFBY2Nlc3NQcm92aWRlciIsIlNlcnZlckRhdGFQcm92aWRlciIsImFwcENhbGxiYWNrIiwic2V0U2VydmVySW5mbyIsIk1lc3NhZ2VQYXJhbXMiLCJUZXh0TWVzc2FnZSIsIm9iamVjdE5hbWUiLCJtc2dUYWciLCJNZXNzYWdlVGFnIiwiSW1hZ2VNZXNzYWdlIiwiRGlzY3Vzc2lvbk5vdGlmaWNhdGlvbk1lc3NhZ2UiLCJWb2ljZU1lc3NhZ2UiLCJSaWNoQ29udGVudE1lc3NhZ2UiLCJGaWxlTWVzc2FnZSIsIkhRVm9pY2VNZXNzYWdlIiwiSGFuZHNoYWtlTWVzc2FnZSIsIlVua25vd25NZXNzYWdlIiwiTG9jYXRpb25NZXNzYWdlIiwiSW5mb3JtYXRpb25Ob3RpZmljYXRpb25NZXNzYWdlIiwiQ29udGFjdE5vdGlmaWNhdGlvbk1lc3NhZ2UiLCJQcm9maWxlTm90aWZpY2F0aW9uTWVzc2FnZSIsIkNvbW1hbmROb3RpZmljYXRpb25NZXNzYWdlIiwiUHVibGljU2VydmljZVJpY2hDb250ZW50TWVzc2FnZSIsIlB1YmxpY1NlcnZpY2VNdWx0aVJpY2hDb250ZW50TWVzc2FnZSIsIkpybWZSZWRQYWNrZXRNZXNzYWdlIiwiSnJtZlJlZFBhY2tldE9wZW5lZE1lc3NhZ2UiLCJHcm91cE5vdGlmaWNhdGlvbk1lc3NhZ2UiLCJDb21tYW5kTWVzc2FnZSIsIlR5cGluZ1N0YXR1c01lc3NhZ2UiLCJQdWJsaWNTZXJ2aWNlQ29tbWFuZE1lc3NhZ2UiLCJSZWNhbGxDb21tYW5kTWVzc2FnZSIsIlN5bmNSZWFkU3RhdHVzTWVzc2FnZSIsIlJlYWRSZWNlaXB0UmVxdWVzdE1lc3NhZ2UiLCJSZWFkUmVjZWlwdFJlc3BvbnNlTWVzc2FnZSIsIkNoYW5nZU1vZGVSZXNwb25zZU1lc3NhZ2UiLCJDaGFuZ2VNb2RlTWVzc2FnZSIsIkV2YWx1YXRlTWVzc2FnZSIsIkN1c3RvbWVyQ29udGFjdCIsIkhhbmRTaGFrZU1lc3NhZ2UiLCJIYW5kU2hha2VSZXNwb25zZU1lc3NhZ2UiLCJTdXNwZW5kTWVzc2FnZSIsIlRlcm1pbmF0ZU1lc3NhZ2UiLCJDdXN0b21lclN0YXR1c1VwZGF0ZU1lc3NhZ2UiLCJSZWFkUmVjZWlwdE1lc3NhZ2UiLCJBY2NlcHRNZXNzYWdlIiwiUmluZ2luZ01lc3NhZ2UiLCJTdW1tYXJ5TWVzc2FnZSIsIkh1bmd1cE1lc3NhZ2UiLCJJbnZpdGVNZXNzYWdlIiwiTWVkaWFNb2RpZnlNZXNzYWdlIiwiTWVtYmVyTW9kaWZ5TWVzc2FnZSIsIk1lc3NhZ2VUeXBlIiwiZGVzYyIsImluaXRBcHAiLCJhcHBrZXkiLCJkYXRhQWNjZXNzUHJvdmlkZXIiLCJvcHRzIiwiY29ubmVjdCIsIkNoZWNrUGFyYW0iLCJjaGVjayIsImFyZ3VtZW50cyIsIm9uVG9rZW5JbmNvcnJlY3QiLCJyZWNvbm5lY3QiLCJyZWdpc3Rlck1lc3NhZ2VUeXBlIiwiUmVnaXN0ZXJNZXNzYWdlIiwibWVzc2FnZU5hbWUiLCJyZWdpc3Rlck1lc3NhZ2VUeXBlcyIsInNldENvbm5lY3Rpb25TdGF0dXNMaXN0ZW5lciIsInN0YXR1c1dhdGNoIiwic3RhdHVzTGlzdGVuZXJzIiwic2V0T25SZWNlaXZlTWVzc2FnZUxpc3RlbmVyIiwibG9nb3V0IiwiZGlzY29ubmVjdCIsInN0YXJ0Q3VzdG9tU2VydmljZSIsIlJvbmdJTUNsaWVudCIsImlzSW5pdCIsInNlbmRNZXNzYWdlIiwiaXNCbGFjayIsInN0b3BDdXN0b21lU2VydmljZSIsInNpZCIsInVpZCIsInBpZCIsInNlbmRDdXN0TWVzc2FnZSIsInNldFRpbWVvdXQiLCJzd2l0Y2hUb0h1bWFuTW9kZSIsImV2YWx1YXRlUmVib3RDdXN0b21TZXJ2aWNlIiwiaXNSb2JvdFJlc29sdmVkIiwic3VnZXN0IiwiZXZhbHVhdGVIdW1hbkN1c3RvbVNlcnZpY2UiLCJodW1hblZhbHVlIiwiZ2V0Q3VycmVudENvbm5lY3Rpb25TdGF0dXMiLCJnZXRDb25uZWN0aW9uQ2hhbm5lbCIsIlRyYW5zcG9ydGF0aW9ucyIsIl9UcmFuc3BvcnRUeXBlIiwiU29ja2V0IiwiZ2V0U3RvcmFnZVByb3ZpZGVyIiwic2V0RmlsdGVyTWVzc2FnZXMiLCJnZXRBZ29yYUR5bmFtaWNLZXkiLCJnZXRDdXJyZW50VXNlcklkIiwiQnJpZGdlIiwiX2NsaWVudCIsImdldERlbHRhVGltZSIsImdldERlbGFUaW1lIiwiZ2V0TWVzc2FnZSIsImRlbGV0ZUxvY2FsTWVzc2FnZXMiLCJyZW1vdmVMb2NhbE1lc3NhZ2UiLCJ1cGRhdGVNZXNzYWdlIiwiY2xlYXJEYXRhIiwiY2xlYXJNZXNzYWdlcyIsImNsZWFyTWVzc2FnZXNVbnJlYWRTdGF0dXMiLCJ1cGRhdGVNZXNzYWdlcyIsImRlbGV0ZVJlbW90ZU1lc3NhZ2VzIiwiZGVsZXRlTWVzc2FnZXMiLCJyZW1vdmVNZXNzYWdlIiwic2VuZExvY2FsTWVzc2FnZSIsInNlbmRSZWNlaXB0UmVzcG9uc2UiLCJzZW5kVHlwaW5nU3RhdHVzTWVzc2FnZSIsInNlbmRTdGF0dXNNZXNzYWdlIiwic2VuZFRleHRNZXNzYWdlIiwic2VuZFJlY2FsbE1lc3NhZ2UiLCJzZW5kZXJVc2VySWQiLCJpbnNlcnRNZXNzYWdlIiwiYWRkTWVzc2FnZSIsInNldE1lc3NhZ2VDb250ZW50Iiwic2V0TWVzc2FnZVNlYXJjaEZpZWxkIiwiZ2V0SGlzdG9yeU1lc3NhZ2VzIiwidmFsdWVPZiIsImdldFJlbW90ZUhpc3RvcnlNZXNzYWdlcyIsImVycm9yQ29kZSIsImNsZWFySGlzdG9yeU1lc3NhZ2VzIiwiY2xlYXJSZW1vdGVIaXN0b3J5TWVzc2FnZXMiLCJoYXNSZW1vdGVVbnJlYWRNZXNzYWdlcyIsImdldFRvdGFsVW5yZWFkQ291bnQiLCJnZXRDb252ZXJzYXRpb25VbnJlYWRDb3VudCIsImdldFVucmVhZENvdW50Iiwic2V0VW5yZWFkQ291bnQiLCJjbGVhclVucmVhZENvdW50QnlUaW1lc3RhbXAiLCJjbGVhclVucmVhZENvdW50IiwiY2xlYXJUb3RhbFVucmVhZENvdW50IiwiY2xlYXJMb2NhbFN0b3JhZ2UiLCJjbGVhckl0ZW0iLCJzZXRNZXNzYWdlRXh0cmEiLCJzZXRNZXNzYWdlUmVjZWl2ZWRTdGF0dXMiLCJzZXRNZXNzYWdlU3RhdHVzIiwic2V0TWVzc2FnZVNlbnRTdGF0dXMiLCJjbGVhclRleHRNZXNzYWdlRHJhZnQiLCJnZXRUZXh0TWVzc2FnZURyYWZ0Iiwic2F2ZVRleHRNZXNzYWdlRHJhZnQiLCJzZWFyY2hDb252ZXJzYXRpb25CeUNvbnRlbnQiLCJzZWFyY2hNZXNzYWdlQnlDb250ZW50IiwiY2xlYXJDYWNoZSIsImNsZWFyQ29udmVyc2F0aW9ucyIsImdldENvbnZlcnNhdGlvbiIsInBvdHRpbmdDb252ZXJzYXRpb24iLCJDb252ZXJzYXRpb24iLCJNZXNzYWdlVXRpbCIsIm1lc3NhZ2VQYXJzZXIiLCJsYXRlc3RNZXNzYWdlSWQiLCJtZXNzYWdlSWQiLCJyZWNlaXZlZFN0YXR1cyIsInJlY2VpdmVkVGltZSIsInJlY2VpdmVUaW1lIiwic2VudFN0YXR1cyIsInNlbnRUaW1lIiwibWVudGlvbmVkTXNnIiwidW5yZWFkTWVzc2FnZUNvdW50IiwiTnVtYmVyIiwiZ2V0RGlzY3Vzc2lvbiIsImNvbnZlcnNhdGlvblRpdGxlIiwiYWRkQ29udmVyc2F0aW9uIiwic29ydENvbnZlcnNhdGlvbkxpc3QiLCJpc1RvcCIsInNwbGljZSIsImdldENvbnZlcnNhdGlvbkxpc3QiLCJnZXRSZW1vdGVDb252ZXJzYXRpb25MaXN0IiwidXBkYXRlQ29udmVyc2F0aW9uIiwiY3JlYXRlQ29udmVyc2F0aW9uIiwicmVtb3ZlQ29udmVyc2F0aW9uIiwic2V0Q29udmVyc2F0aW9uSGlkZGVuIiwic2V0Q29udmVyc2F0aW9uVG9Ub3AiLCJnZXRDb252ZXJzYXRpb25Ob3RpZmljYXRpb25TdGF0dXMiLCJzZXRDb252ZXJzYXRpb25Ob3RpZmljYXRpb25TdGF0dXMiLCJnZXROb3RpZmljYXRpb25RdWlldEhvdXJzIiwicmVtb3ZlTm90aWZpY2F0aW9uUXVpZXRIb3VycyIsInNldE5vdGlmaWNhdGlvblF1aWV0SG91cnMiLCJhZGRNZW1iZXJUb0Rpc2N1c3Npb24iLCJjcmVhdGVEaXNjdXNzaW9uIiwicXVpdERpc2N1c3Npb24iLCJyZW1vdmVNZW1iZXJGcm9tRGlzY3Vzc2lvbiIsInNldERpc2N1c3Npb25JbnZpdGVTdGF0dXMiLCJzZXREaXNjdXNzaW9uTmFtZSIsImpvaW5DaGF0Um9vbSIsInNldERldmljZUluZm8iLCJzZXRDaGF0cm9vbUhpc01lc3NhZ2VUaW1lc3RhbXAiLCJnZXRDaGF0Um9vbUhpc3RvcnlNZXNzYWdlcyIsImdldENoYXRSb29tSW5mbyIsInF1aXRDaGF0Um9vbSIsImdldFJlbW90ZVB1YmxpY1NlcnZpY2VMaXN0IiwiZ2V0UHVibGljU2VydmljZUxpc3QiLCJnZXRQdWJsaWNTZXJ2aWNlUHJvZmlsZSIsInBvdHRpbmdQdWJsaWNTZWFyY2hUeXBlIiwic2VhcmNoUHVibGljU2VydmljZSIsImJyaWRnZSIsInF1ZXJ5TXNnIiwiQXJyYXlGb3JtIiwic2VhcmNoUHVibGljU2VydmljZUJ5VHlwZSIsInN1YnNjcmliZVB1YmxpY1NlcnZpY2UiLCJ1bnN1YnNjcmliZVB1YmxpY1NlcnZpY2UiLCJyZW1vdmUiLCJhZGRUb0JsYWNrbGlzdCIsImdldEJsYWNrbGlzdCIsImdldEJsYWNrbGlzdFN0YXR1cyIsInJlbW92ZUZyb21CbGFja2xpc3QiLCJnZXRGaWxlVG9rZW4iLCJnZXRGaWxlVXJsIiwiYWRkUmVhbFRpbWVMb2NhdGlvbkxpc3RlbmVyIiwiZ2V0UmVhbFRpbWVMb2NhdGlvbiIsImdldFJlYWxUaW1lTG9jYXRpb25DdXJyZW50U3RhdGUiLCJnZXRSZWFsVGltZUxvY2F0aW9uUGFydGljaXBhbnRzIiwiam9pblJlYWxUaW1lTG9jYXRpb24iLCJxdWl0UmVhbFRpbWVMb2NhdGlvbiIsInN0YXJ0UmVhbFRpbWVMb2NhdGlvbiIsInVwZGF0ZVJlYWxUaW1lTG9jYXRpb25TdGF0dXMiLCJzdGFydENhbGwiLCJfdm9pcFByb3ZpZGVyIiwiam9pbkNhbGwiLCJodW5ndXBDYWxsIiwiY2hhbmdlTWVkaWFUeXBlIiwiZ2V0VW5yZWFkTWVudGlvbmVkTWVzc2FnZXMiLCJjbGVhckxpc3RlbmVycyIsImdldFVzZXJTdGF0dXMiLCJzZXRVc2VyU3RhdHVzIiwic2V0VXNlclN0YXR1c0xpc3RlbmVyIiwibXVsdGlwbGUiLCJ3YXRjaCIsImZ1bmMiLCJtZXNzYWdlV2F0Y2giLCJSVENMaXN0ZW5lciIsImdldFJUQ1VzZXJJbmZvTGlzdCIsImdldFJUQ1VzZXJMaXN0Iiwic2V0UlRDVXNlckluZm8iLCJyZW1vdmVSVENVc2VySW5mbyIsImdldFJUQ1Jvb21JbmZvIiwic2V0UlRDUm9vbUluZm8iLCJyZW1vdmVSVENSb29tSW5mbyIsImpvaW5SVENSb29tIiwicXVpdFJUQ1Jvb20iLCJSVENQaW5nIiwic2V0UlRDVXNlckRhdGEiLCJnZXRSVENVc2VyRGF0YSIsInJlbW92ZVJUQ1VzZXJEYXRhIiwic2V0UlRDUm9vbURhdGEiLCJnZXRSVENSb29tRGF0YSIsInJlbW92ZVJUQ1Jvb21EYXRhIiwiZ2V0TmF2aSIsImdldFJUQ1Rva2VuIiwiZ2V0QXBwSW5mbyIsImN1cnJlbnRTZXJ2ZXIiLCJpc1B1bGxGaW5pc2hlZCIsInN5bmNNc2dRdWV1ZSIsImlzTm90UHVsbE1zZyIsInNka3ZlciIsIm90aGVyRGV2aWNlTG9naW5Db3VudCIsImlzRmlyc3RDb25uZWN0IiwidXNlclN0YXR1c0xpc3RlbmVyIiwiQVRfTU9TVF9PTkNFIiwiQVRfTEVBU1RfT05DRSIsIkVYQUNUTFlfT05DRSIsIkRFRkFVTFQiLCJRb3MiLCJDT05ORUNUIiwiQ09OTkFDSyIsIlBVQkxJU0giLCJQVUJBQ0siLCJRVUVSWSIsIlFVRVJZQUNLIiwiUVVFUllDT04iLCJTVUJTQ1JJQkUiLCJTVUJBQ0siLCJVTlNVQlNDUklCRSIsIlVOU1VCQUNLIiwiUElOR1JFUSIsIlBJTkdSRVNQIiwiRElTQ09OTkVDVCIsIlR5cGUiLCJjb25uZWN0aW9uU3RhdHVzIiwiYXBwSWQiLCJzZGtWZXIiLCJhcGlWZXIiLCJzZWxmIiwic29ja2V0IiwiY3JlYXRlU2VydmVyIiwidXJsIiwidHBsRW5naW5lIiwiaG9zdCIsIk5hdmlnYXRpb24iLCJFbmRwb2ludCIsIndzIiwiVGltZXIiLCJ0aW1lb3V0IiwiY2xlYXJUaW1lb3V0IiwiYWJvcnQiLCJwYXVzZSIsImRldGVjdENNUCIsInN1Y2Nlc3MiLCJmYWlsIiwibWF0Y2giLCJzZXJ2ZXIiLCJyYW5kb20iLCJnZXRUaW1lc3RhbXAiLCJyZXN1bWUiLCJjbGVhciIsImZpcmUiLCJjb21ldCIsIl9Db25uZWN0aW9uU3RhdHVzTGlzdGVuZXIiLCJvbiIsImluZGV4T2YiLCJzZXRJdGVtIiwib25DaGFuZ2VkIiwiY2xlYXJIZWFydGJlYXQiLCJjaGFuZ2VDb25uZWN0VHlwZSIsImhhbmRsZXIiLCJoYW5kbGVNZXNzYWdlIiwiRmVhdHVyZURlY3RlY3RvciIsIndyaXRlQW5kRmx1c2giLCJzZW5kIiwiTWVzc2FnZUlkSGFuZGxlciIsImNsZWFyTWVzc2FnZUlkIiwicmVjb25uZWN0T2JqIiwiQ2hhbm5lbCIsIl9ldmVudHMiLCJjaGVja1RyYW5zcG9ydCIsIkZ1bmN0aW9uIiwiY3VycmVudFVSTCIsImNyZWF0ZVRyYW5zcG9ydCIsImdldFRyYW5zcG9ydCIsIlBvbGxpbmdUcmFuc3BvcnRhdGlvbiIsIlNvY2tldFRyYW5zcG9ydGF0aW9uIiwiX2VuY29kZSIsIm9uTWVzc2FnZSIsInJlbW92ZUV2ZW50IiwiZ2V0TWVzc2FnZUlkIiwiZ2V0SGVhZGVyRmxhZyIsInRlc3QiLCJfbmFtZSIsImdldFRvcGljIiwiZ2V0VGFyZ2V0SWQiLCJkYXRhIiwiZ2V0RGF0YSIsInRpbWVvdXRNaWxsaXMiLCJ0aW1lb3V0XyIsIk1hdGgiLCJmbG9vciIsImNoYW5uZWwiLCJoZWFydGJlYXQiLCJwdWxsTXNnSGVhcmJlYXQiLCJjaGF0cm9vbUlkIiwiU3luY1RpbWVRdWV1ZSIsImNhY2hlTWVzc2FnZUlkcyIsInN0YXRlIiwicmVzdW1lVGltZXIiLCJwYXVzZVRpbWVyIiwic2V0Q29ubmVjdENhbGxiYWNrIiwia2VlcExpdmUiLCJjaGVja1NvY2tldCIsIlBpbmdSZXFNZXNzYWdlIiwic2V0SW50ZXJ2YWwiLCJjbGVhckludGVydmFsIiwicHVibGlzaE1lc3NhZ2UiLCJtZXNzYWdlSWRQbHVzIiwiUHVibGlzaE1lc3NhZ2UiLCJzZXRNZXNzYWdlSWQiLCJzZXRRb3MiLCJwdXRDYWxsYmFjayIsIlB1Ymxpc2hDYWxsYmFjayIsInF1ZXJ5TWVzc2FnZSIsInVzZXJJbmZvTWFwcGluZyIsIlF1ZXJ5TWVzc2FnZSIsIlF1ZXJ5Q2FsbGJhY2siLCJpbnZva2UiLCJzaGlmdCIsIlN5bmNUaW1lVXRpbCIsImdldCIsInNlbnQiLCJyZWNlaXZlZCIsInB1bGx0aW1lIiwiaW50NjRUb1RpbWVzdGFtcCIsInNldCIsInQiLCJ1IiwidiIsImRpcmVjdGlvbiIsInciLCJvblJlY2VpdmVkIiwiX19pbml0IiwiQ2xpZW50Iiwic2V0TGlzdGVuZXIiLCJfUmVjZWl2ZU1lc3NhZ2VMaXN0ZW5lciIsInB1Yk1zZyIsIm1hcCIsImNvbm5lY3RDYWxsYmFjayIsIl9vblJlY2VpdmVkIiwic3luY01zZ01hcCIsIkNhbGxiYWNrIiwiTWVzc2FnZSIsIkNvbm5lY3RBY2siLCJSb25nSW5uZXJUb29scyIsImNvbnZlcnRVc2VyU3RhdHVzIiwibm90aWZ5IiwiZW50aXR5Iiwic3Vic3RyIiwiRGF0ZSIsIm1lc3NhZ2VVSWQiLCJnZXRNZXNzYWdlVUlkIiwibWVzc2FnZVR5cGUiLCJnZXRNZXNzYWdlVGFnIiwibWVzc2FnZURpcmVjdGlvbiIsIm1lbnRpb25lZEluZm8iLCJnZXRUaW1lIiwic2VuZFVzZXJJZCIsIm5vdGlmaWNhdGlvblN0YXR1cyIsIngiLCJzZXJ2aWNlVHlwZSIsIm5vdEF1dG9DaGEiLCJ5IiwieiIsImdldE1vbnRoIiwiQSIsImdldEZ1bGxZZWFyIiwiZ2V0RGF0ZSIsIkIiLCJDIiwiZGVhbHRpbWUiLCJEIiwiRSIsInVJZHMiLCJpc1Jlc3BvbnNlIiwiRiIsIkciLCJIIiwiSSIsIkoiLCJyZWNlaXB0TWVzc2FnZURpYyIsInJlY2VpcHRSZXNwb25zZSIsIksiLCJMIiwiTSIsIk4iLCJPIiwiUCIsInByb2Nlc3MiLCJnZXRTdGF0dXMiLCJnZXRVc2VySWQiLCJnZXRTeW5jTXNnIiwiZ2V0UW9zIiwiUHViQWNrTWVzc2FnZSIsIlF1ZXJ5Q29uTWVzc2FnZSIsInRpbWVzdGFtcCIsIk1lc3NhZ2VIYW5kbGVyIiwiX19leHRlbmRzIiwiY29uc3RydWN0b3IiLCJoYXNPd25Qcm9wZXJ0eSIsImNyZWF0ZSIsInJlYWRUaW1lT3V0IiwiTWVzc2FnZUNhbGxiYWNrIiwicHVibGljU2VydmljZUxpc3QiLCJwb3R0aW5nUHJvZmlsZSIsInByb2ZpbGUiLCJQdWJsaWNTZXJ2aWNlUHJvZmlsZSIsImlzR2xvYmFsIiwiaW50cm9kdWN0aW9uIiwibWVudSIsImhhc0ZvbGxvd2VkIiwiZm9sbG93IiwicHVibGljU2VydmljZUlkIiwicG9ydHJhaXRVcmkiLCJtYXBwaW5nIiwiVXNlckluZm8iLCJEaXNjdXNzaW9uIiwiY3JlYXRvcklkIiwibWVtYmVySWRMaXN0IiwiaXNPcGVuIiwiQXJyYXkiLCJDYWxsYmFja01hcHBpbmciLCJfY2IiLCJfdGltZW91dCIsInNldFNlbnRTdGF0dXMiLCJyZXF1ZXN0TmF2aSIsIl9zdGF0dXMiLCJyZW1vdmVJdGVtIiwiZ2V0TmF2aVN1Y2Nlc3MiLCJiYWNrdXBTZXJ2ZXIiLCJzcGxpdCIsIklubmVyVXRpbCIsImdldFVJZCIsInZvaXBDYWxsSW5mbyIsInN0cmF0ZWd5IiwiSW5kZXhUb29scyIsIml0ZW1zIiwib253aGVlbCIsImFkZCIsInJlcXVlc3QiLCJyZXBsYWNlIiwibGFzdEluZGV4T2YiLCJsZW5ndGhTaXplIiwiSGVhZGVyIiwiX2hlYWRlciIsInJlYWQiLCJyZWFkTWVzc2FnZSIsIndyaXRlIiwiQmluYXJ5SGVscGVyIiwiY29udmVydFN0cmVhbSIsIl9oZWFkZXJDb2RlIiwid3JpdGVNZXNzYWdlIiwiZW5jb2RlIiwiZ2V0TGVuZ3RoU2l6ZSIsInRvQnl0ZXMiLCJnZXRCeXRlc0FycmF5IiwiaXNSZXRhaW5lZCIsInJldGFpbiIsInNldFJldGFpbmVkIiwicW9zIiwic2V0RHVwIiwiZHVwIiwiaXNEdXAiLCJnZXRUeXBlIiwibWVzc2FnZUxlbmd0aCIsImRpc2Nvbm5lY3RTdGF0dXMiLCJCYXNlTWVzc2FnZSIsIkNPTk5FQ1RfSEVBREVSX1NJWkUiLCJwcm90b2NvbElkIiwiYmluYXJ5SGVscGVyIiwicHJvdG9jb2xWZXJzaW9uIiwiY2xpZW50SWQiLCJjbGVhblNlc3Npb24iLCJrZWVwQWxpdmUiLCJ0b01RdHRTdHJpbmciLCJ3aWxsVG9waWMiLCJ3aWxsIiwicmVhZFVURiIsInJlYWRCeXRlIiwiaGFzQXBwSWQiLCJoYXNUb2tlbiIsInJldGFpbldpbGwiLCJ3aWxsUW9zIiwiaGFzV2lsbCIsIndyaXRlVVRGIiwid3JpdGVDaGFyIiwiQ29ubmVjdE1lc3NhZ2UiLCJNRVNTQUdFX0xFTkdUSCIsInJlYWRMb25nIiwic2V0VGltZXN0YW1wIiwidGltZXN0cmFwIiwiQ29ubkFja01lc3NhZ2UiLCJEaXNjb25uZWN0TWVzc2FnZSIsIlBpbmdSZXNwTWVzc2FnZSIsInBhcnNlSW50IiwiUmV0cnlhYmxlTWVzc2FnZSIsIm1zZ0xlbiIsImRhdGUiLCJtaWxsaXNlY29uZCIsInJlYWRJbnQiLCJzZXRNZXNzYWdlVUlkIiwic3luY01zZyIsInRvcGljIiwiYXBwbHkiLCJzZXRUb3BpYyIsInNldERhdGEiLCJzZXREYXRlIiwic2V0U3luY01zZyIsIlF1ZXJ5QWNrTWVzc2FnZSIsIm91dCIsIk1lc3NhZ2VPdXRwdXRTdHJlYW0iLCJmbGFncyIsImhlYWRlckNvZGUiLCJfaW4iLCJoZWFkZXIiLCJJbiIsIk1lc3NhZ2VJbnB1dFN0cmVhbSIsInBvc2l0aW9uIiwid3JpdGVuIiwicG9vbExlbiIsInBvb2wiLCJyZWFkVGltZXN0YW1wIiwic3Vic3RyaW5nIiwic3ViYXJyYXkiLCJ0b0xvd2VyQ2FzZSIsInRvQ29tcGxlbWVudHMiLCJSb25nSU1TdHJlYW0iLCJjb25uZWN0ZWQiLCJpc0Nsb3NlIiwicXVldWUiLCJlbXB0eSIsIl9zb2NrZXQiLCJiaW5hcnlUeXBlIiwiYWRkRXZlbnQiLCJJbnQ4QXJyYXkiLCJidWZmZXIiLCJvbkRhdGEiLCJpc0FycmF5IiwiQXJyYXlGb3JtSW5wdXQiLCJvbkNsb3NlIiwib25vcGVuIiwiZG9RdWV1ZSIsIm9ubWVzc2FnZSIsIm9uZXJyb3IiLCJvbmNsb3NlIiwicmVhZHlTdGF0ZSIsImNsb3NlIiwiZ2V0UmVxdWVzdCIsInJlcXVlc3RGYWN0b3J5IiwiWG1sSHR0cFJlcXVlc3QiLCJtdWx0aXBhcnQiLCJvcGVuIiwic2V0UmVxdWVzdEhlYWRlciIsInhociIsIm9ubG9hZCIsInJlc3BvbnNlVGV4dCIsIm9ucmVhZHlzdGF0ZWNoYW5nZSIsInNlbmR4aHIiLCJYTUxIdHRwUmVxdWVzdCIsIlhEb21haW5SZXF1ZXN0IiwiQWN0aXZlWE9iamVjdCIsInR5cGVNYXBwaW5nIiwicmVnaXN0ZXJNZXNzYWdlVHlwZU1hcHBpbmciLCJIaXN0b3J5TXNnVHlwZSIsIiRnZXRLZXkiLCJjaGVja1N0b3JhZ2VTaXplIiwibG9jYWxTdG9yYWdlIiwiZ2V0Rmlyc3RLZXkiLCJpc0VtcHR5IiwiVWludDhBcnJheSIsIm1heCIsImxvdyIsImhpZ2giLCJSZWdFeHAiLCJvZmZsaW5lTXNnIiwibWVzc2FnZSIsImRlIiwiaXNVc2VEZWYiLCJvZmZzZXQiLCJsaW1pdCIsImV4Iiwic3RyIiwiZGF0ZVRpbWUiLCJzZWxmVXNlcklkIiwiaXNTZWxmU2VuZCIsImlzU2VsZlRvU2VsZiIsIm9mZkxpbmVNZXNzYWdlIiwibWV0aG9kIiwiaGVhZGVycyIsImJvZHkiLCJzaWduIiwiY29udmVyTnVtIiwibXNnTnVtIiwiaXNNc2dTdGFydCIsImlzQ29udlN0YXJ0IiwicmVuYW1lIiwidXMiLCJvYnRhaW4iLCJNZXNzYWdlQ29udGVudCIsIk5vdGlmaWNhdGlvbk1lc3NhZ2UiLCJTdGF0dXNNZXNzYWdlIiwibW9kZWxDbG9uZSIsIm1vZGxlQ3JlYXRlIiwiTW9kZWxVdGlsIiwiQ3VzdG9tZXJTdGF0dXNNZXNzYWdlIiwic2VydmljZVN0YXR1cyIsInJlcXVlc3RJbmZvIiwidXNlckluZm8iLCJuaWNrTmFtZSIsInJvdXRpbmdJbmZvIiwic291cmNlIiwic3VnZ2VzdCIsImlzcmVzb2x2ZSIsIklzVHlwaW5nU3RhdHVzTWVzc2FnZSIsIm9wZXJhdGlvbiIsInRhcmdldFVzZXJJZCIsInNvdXJjZVVzZXJJZCIsIkNPTlRBQ1RfT1BFUkFUSU9OX0FDQ0VQVF9SRVNQT05TRSIsIkNPTlRBQ1RfT1BFUkFUSU9OX1JFSkVDVF9SRVNQT05TRSIsIkNPTlRBQ1RfT1BFUkFUSU9OX1JFUVVFU1QiLCJpc0hhc1JlY2VpdmVkIiwib3BlcmF0b3JVc2VySWQiLCJ0eXBpbmdDb250ZW50VHlwZSIsImxhc3RNZXNzYWdlU2VuZFRpbWUiLCJkdXJhdGlvbiIsImltYWdlVXJpIiwibGF0aXR1ZGUiLCJsb25naXR1ZGUiLCJwb2kiLCJ0aXRsZSIsIm1lbnVJdGVtIiwiY29tbWFuZCIsInJpY2hDb250ZW50TWVzc2FnZXMiLCJyaWNoQ29udGVudE1lc3NhZ2UiLCJmaWxlVXJsIiwibG9jYWxQYXRoIiwicmVtb3RlVXJsIiwibWVkaWFJZCIsImNhbGxJZCIsIm1lZGlhVHlwZSIsIm1vZGUiLCJzdWJJbmZvIiwiY2FsbGVyIiwiaW52aXRlciIsInN0YXJ0VGltZSIsImNvbm5lY3RlZFRpbWUiLCJyZWFzb24iLCJjaGFubmVsSW5mbyIsImludml0ZVVzZXJJZHMiLCJvYnNlcnZlclVzZXJJZHMiLCJtb2RpZnlNZW1UeXBlIiwiZXhpc3RlZE1lbWJlclN0YXR1c0xpc3QiLCJleGlzdGVkVXNlclBvZmlsZXMiLCJJZCIsIktleSIsIkNoYW5uZWxJbmZvIiwicGxhdGZvcm0iLCJvbmxpbmUiLCJVc2VyU3RhdHVzIiwiTWVudGlvbmVkSW5mbyIsIkRlbGV0ZU1lc3NhZ2UiLCJDdXN0b21TZXJ2aWNlQ29uZmlnIiwiQ3VzdG9tU2VydmljZVNlc3Npb24iLCJkcmFmdCIsInNlbmRlclVzZXJOYW1lIiwic2VuZGVyUG9ydHJhaXRVcmkiLCJpc0hpZGRlbiIsImhhc1VucmVhZE1lbnRpb24iLCJfcmVhZFRpbWUiLCJzZXRUb3AiLCJHcm91cCIsImlzTG9jYWxNZXNzYWdlIiwiaXNDb3VudGVkIiwiaXNQZXJzaXRlZCIsImdldFRhZ0J5U3RhdHVzIiwic3VuTWVudUl0ZW1zIiwiUHVibGljU2VydmljZU1lbnVJdGVtIiwiVXNlciIsIlJvb20iLCJmb3JjZSIsImF1dG8iLCJzdGVwIiwiZG9uZSIsInJhdGUiLCJjdXN0b20iLCJqb2luIiwiaXNOdW1iZXIiLCJoYXNNb3JlIiwicmV2ZXJzZSIsIlJDQ2FsbGJhY2siLCJwYXJlbnROb2RlIiwicmVtb3ZlQ2hpbGQiLCJjcmVhdGVFbGVtZW50Iiwic3JjIiwiYXBwZW5kQ2hpbGQiLCJmaWx0ZXJDb252ZXJzYXRpb25zIiwia2V5cyIsInByb3RvIiwiZmxhZyIsInByb3RvcyIsInVuc2hpZnQiLCJvYmplY3RuYW1lIiwiZ2V0SXRlbUtleUxpc3QiLCJjbGVhbk1lbnRpb25lZHMiLCJzdWJzY3JpYmVVc2VyU3RhdHVzIiwiZ2V0QWxsQ29udmVyc2F0aW9ucyIsImdldENvbnZlcnNhdGlvbkJ5Q29udGVudCIsImdldE1lc3NhZ2VzRnJvbUNvbnZlcnNhdGlvbiIsInNldEVudmlyb25tZW50IiwiUnRjUXVlcnlMaXN0SW5wdXQiLCJ1c2VyRGF0YSIsInZhbHVlIiwiUnRjVmFsdWVJbmZvIiwic2V0VmFsdWUiLCJSdGNLZXlEZWxldGVJbnB1dCIsInJvb21JZCIsInVzZXJDb3VudCIsInJvb21EYXRhIiwiUnRjSW5wdXQiLCJzZXRSVENEYXRhIiwiUnRjU2V0RGF0YUlucHV0Iiwic2V0SW50ZXJpb3IiLCJzZXRUYXJnZXQiLCJzZXRPYmplY3ROYW1lIiwiaXNTdHJpbmciLCJnZXRSVENEYXRhIiwiUnRjRGF0YUlucHV0Iiwib3V0SW5mbyIsInJlbW92ZVJUQ0RhdGEiLCJ2ZXJzaW9uIiwidXNlQ29uc29sZSIsImFkZG9uIiwiaW5pdFdpdGhBcHBrZXkiLCJkYlBhdGgiLCJvcGVuVVMiLCJjb25uZWN0V2l0aFRva2VuIiwic2VydmVyTGlzdCIsInNldE9uUmVjZWl2ZVN0YXR1c0xpc3RlbmVyIiwiY29ubmVjdExpc3RlbmVyIiwibWVzc2FnZUxpc3RlbmVyIiwiYnVpbGRNZXNzYWdlIiwidXBkYXRlTWVzc2FnZVJlY2VpcHRTdGF0dXMiLCJvYmoiLCJidWlsZENvbnZlcnNhdGlvbiIsImdldFVwbG9hZFRva2VuIiwiZ2V0RG93bmxvYWRVcmwiLCJnZXRDaGF0cm9vbUluZm8iLCJyZWNhbGxNZXNzYWdlIiwiZ2V0Q29ubmVjdGlvblN0YXR1cyIsImdldFZvSVBLZXkiLCJzZXREZXZpY2VJZCIsImdldEFjY291bnRzIiwiYVR5cGUiLCJhSWQiLCJhTmFtZSIsImFVcmkiLCJtZXNzYWdlVWlkIiwibGFzdGVzdE1zZyIsInVucmVhZENvdW50IiwibV9oYXNVbnJlYWRNZW50aW9uIiwicG9wIiwiVkNEYXRhUHJvdmlkZXIiLCJfbWVtZW9yeVN0b3JlIiwicHJlZml4IiwiZGVjb2RlVVJJQ29tcG9uZW50IiwiZ2V0SXRlbUtleSIsIm9uT3V0T2ZRdW90YSIsIl9ob3N0Iiwib3BlcnNpc3ROYW1lIiwia2V5TWFuYWdlciIsIm9QZXJzaXN0Iiwic3R5bGUiLCJkaXNwbGF5IiwiYmVoYXZpb3IiLCJsb2FkIiwic2V0QXR0cmlidXRlIiwic2F2ZSIsImdldEF0dHJpYnV0ZSIsInJlbW92ZUF0dHJpYnV0ZSIsInNjcmlwdCIsImhlYWQiLCJnZXRFbGVtZW50c0J5VGFnTmFtZSIsInBhdGNoSlNPTiIsInBhdGNoRm9yRWFjaCIsInNKU09OIiwidG9KU09OIiwicXVvdGUiLCJpc0Zpbml0ZSIsInJ4X2VzY2FwYWJsZSIsImxhc3RJbmRleCIsIm1ldGEiLCJhc3luYyIsImFkZEV2ZW50TGlzdGVuZXIiLCJ0YXJnZXQiLCJzcmNFbGVtZW50IiwiQ29udmVyc2F0aW9uTWFwIiwiY2hlY2tDb29raWVEaXNhYmxlIiwiY29va2llIiwiY2FjaGUiLCJ4bWxodHRwIiwib3B0aW9ucyIsIndpdGhDcmVkZW50aWFscyIsImRldmljZUlkIiwiZGV2aWNlSW5mbyIsInByaXZhdGVJbmZvIiwiYmFzZTY0IiwiUm9uZ0FqYXgiLCJub29wIiwiTUQ1IiwiaXNPYmplY3QiLCJpc1VuZGVmaW5lZCIsImNyZWF0ZVhIUiIsInNvbWUiLCJ3YXRjaGVycyIsImdlblVJZCIsInRpbWVycyJdLCJtYXBwaW5ncyI6IjZDQUFBLENBQUMsVUFBU0EsQ0FBVCxFQUFXQyxDQUFYLEVBQWEsQ0FBQyxJQUFHLElBQUgsRUFBd0RDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFlRixDQUFDLEVBQWhCLENBQXhELEtBQWdGLHNCQUFpTixDQUEvUyxDQUFnVEcsTUFBaFQsRUFBdVQsWUFBVSxDQUFDLElBQUlDLE9BQU8sR0FBQyxFQUFDQyxrQkFBa0IsRUFBQyw4QkFBVSxDQUFDLElBQUlOLENBQUMsR0FBQyxFQUFOLENBQVMsS0FBS08sU0FBTCxHQUFlLFVBQVNOLENBQVQsRUFBVyxDQUFDRCxDQUFDLENBQUNRLE1BQUYsR0FBU1AsQ0FBVCxDQUFXLENBQXRDLEVBQXVDLEtBQUtRLGFBQUwsR0FBbUIsWUFBVSxDQUFDLE9BQU9ULENBQVAsQ0FBUyxDQUE5RSxDQUErRSxDQUF2SCxFQUF3SFUsbUJBQW1CLEVBQUMsK0JBQVUsQ0FBQyxJQUFJVixDQUFDLEdBQUMsRUFBTixDQUFTLEtBQUtXLFVBQUwsR0FBZ0IsVUFBU1YsQ0FBVCxFQUFXLENBQUNELENBQUMsQ0FBQ1ksT0FBRixHQUFVWCxDQUFWLENBQVksQ0FBeEMsRUFBeUMsS0FBS1EsYUFBTCxHQUFtQixZQUFVLENBQUMsT0FBT1QsQ0FBUCxDQUFTLENBQWhGLENBQWlGLENBQWpQLEVBQWtQYSxrQkFBa0IsRUFBQyw4QkFBVSxDQUFDLElBQUliLENBQUMsR0FBQyxFQUFOLENBQVMsS0FBS1csVUFBTCxHQUFnQixVQUFTVixDQUFULEVBQVcsQ0FBQ0QsQ0FBQyxDQUFDWSxPQUFGLEdBQVVYLENBQVYsQ0FBWSxDQUF4QyxFQUF5QyxLQUFLUSxhQUFMLEdBQW1CLFlBQVUsQ0FBQyxPQUFPVCxDQUFQLENBQVMsQ0FBaEYsQ0FBaUYsQ0FBMVcsRUFBMldjLG1CQUFtQixFQUFDLCtCQUFVLENBQUMsSUFBSWQsQ0FB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LEVBQU4sQ0FBMkZBLENBQUMsQ0FBQ3lpQyxTQUFGLEdBQVl6ekIsQ0FBWixDQUFjLENBRGtqdEIsQ0FDamp0QmMsU0FBUyxLQUFHQSxTQUFTLEdBQUMsRUFBYixDQUR3aXRCLEdBQ3RodEJBLFNBRCtndEIsQ0FDcmd0QixDQVA1dUUsQ0FBRCxDIiwiZmlsZSI6IjIzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiIWZ1bmN0aW9uKGEsYil7aWYoXCJvYmplY3RcIj09dHlwZW9mIGV4cG9ydHMmJlwidW5kZWZpbmVkXCIhPXR5cGVvZiBtb2R1bGUpbW9kdWxlLmV4cG9ydHM9YigpO2Vsc2UgaWYoXCJmdW5jdGlvblwiPT10eXBlb2YgZGVmaW5lJiYoZGVmaW5lLmFtZHx8ZGVmaW5lLmNtZCkpZGVmaW5lKGIpO2Vsc2V7dmFyIGM9YigpLGQ9Yy5Sb25nSU1DbGllbnQsZT0hIWEuUm9uZ0lNTGliO2lmKGUpe3ZhciBmPVJvbmdJTUxpYi5Sb25nSU1DbGllbnR8fHt9O2Zvcih2YXIgZyBpbiBmKWRbZ109ZltnXX1hLlJvbmdJTUxpYj1jLGEuUm9uZ0lNQ2xpZW50PWR9fSh3aW5kb3csZnVuY3Rpb24oKXt2YXIgUG9sbGluZz17U2V0VXNlclN0YXR1c0lucHV0OmZ1bmN0aW9uKCl7dmFyIGE9e307dGhpcy5zZXRTdGF0dXM9ZnVuY3Rpb24oYil7YS5zdGF0dXM9Yn0sdGhpcy50b0FycmF5QnVmZmVyPWZ1bmN0aW9uKCl7cmV0dXJuIGF9fSxTZXRVc2VyU3RhdHVzT3V0cHV0OmZ1bmN0aW9uKCl7dmFyIGE9e307dGhpcy5zZXROb3RoaW5nPWZ1bmN0aW9uKGIpe2Eubm90aGluZz1ifSx0aGlzLnRvQXJyYXlCdWZmZXI9ZnVuY3Rpb24oKXtyZXR1cm4gYX19LEdldFVzZXJTdGF0dXNJbnB1dDpmdW5jdGlvbigpe3ZhciBhPXt9O3RoaXMuc2V0Tm90aGluZz1mdW5jdGlvbihiKXthLm5vdGhpbmc9Yn0sdGhpcy50b0FycmF5QnVmZmVyPWZ1bmN0aW9uKCl7cmV0dXJuIGF9fSxHZXRVc2VyU3RhdHVzT3V0cHV0OmZ1bmN0aW9uKCl7dmFyIGE9e307dGhpcy5zZXRTdGF0dXM9ZnVuY3Rpb24oYil7YS5zdGF0dXM9Yn0sdGhpcy5zZXRTdWJVc2VySWQ9ZnVuY3Rpb24oYil7YS5zdWJVc2VySWQ9Yn0sdGhpcy50b0FycmF5QnVmZmVyPWZ1bmN0aW9uKCl7cmV0dXJuIGF9fSxWb2lwRHluYW1pY0lucHV0OmZ1bmN0aW9uKCl7dmFyIGE9e307dGhpcy5zZXRFbmdpbmVUeXBlPWZ1bmN0aW9uKGIpe2EuZW5naW5lVHlwZT1ifSx0aGlzLnNldENoYW5uZWxOYW1lPWZ1bmN0aW9uKGIpe2EuY2hhbm5lbE5hbWU9Yn0sdGhpcy5zZXRDaGFubmVsRXh0cmE9ZnVuY3Rpb24oYil7YS5jaGFubmVsRXh0cmE9Yn0sdGhpcy50b0FycmF5QnVmZmVyPWZ1bmN0aW9uKCl7cmV0dXJuIGF9fSxWb2lwRHluYW1pY091dHB1dDpmdW5jdGlvbigpe3ZhciBhPXt9O3RoaXMuc2V0RHluYW1pY0tleT1mdW5jdGlvbihiKXthLmR5bmFtaWNLZXk9Yn0sdGhpcy50b0FycmF5QnVmZmVyPWZ1bmN0aW9uKCl7cmV0dXJuIGF9fSxTdWJVc2VyU3RhdHVzSW5wdXQ6ZnVuY3Rpb24oKXt2YXIgYT17fTt0aGlzLnNldFVzZXJpZD1mdW5jdGlvbihiKXthLnVzZXJpZD1ifSx0aGlzLnRvQXJyYXlCdWZmZXI9ZnVuY3Rpb24oKXtyZXR1cm4gYX19LFN1YlVzZXJTdGF0dXNPdXRwdXQ6ZnVuY3Rpb24oKXt2YXIgYT17fTt0aGlzLnNldE5vdGhpbmc9ZnVuY3Rpb24oYil7YS5ub3RoaW5nPWJ9LHRoaXMudG9BcnJheUJ1ZmZlcj1mdW5jdGlvbigpe3JldHVybiBhfX0sQ2xlYW5IaXNNc2dJbnB1dDpmdW5jdGlvbigpe3ZhciBhPXt9O3RoaXMuc2V0VGFyZ2V0SWQ9ZnVuY3Rpb24oYil7YS50YXJnZXRJZD1ifSx0aGlzLnNldERhdGFUaW1lPWZ1bmN0aW9uKGIpe2EuZGF0YVRpbWU9Yn0sdGhpcy5zZXRDb252ZXJzYXRpb25UeXBlPWZ1bmN0aW9uKGIpe2EuY29udmVyc2F0aW9uVHlwZT1ifSx0aGlzLnRvQXJyYXlCdWZmZXI9ZnVuY3Rpb24oKXtyZXR1cm4gYX19LERlbGV0ZU1zZ0lucHV0OmZ1bmN0aW9uKCl7dmFyIGE9e307dGhpcy5zZXRUeXBlPWZ1bmN0aW9uKGIpe2EudHlwZT1ifSx0aGlzLnNldENvbnZlcnNhdGlvbklkPWZ1bmN0aW9uKGIpe2EuY29udmVyc2F0aW9uSWQ9Yn0sdGhpcy5zZXRNc2dzPWZ1bmN0aW9uKGIpe2EubXNncz1ifSx0aGlzLnRvQXJyYXlCdWZmZXI9ZnVuY3Rpb24oKXtyZXR1cm4gYX19LERlbGV0ZU1zZzpmdW5jdGlvbigpe3ZhciBhPXt9O3RoaXMuc2V0TXNnSWQ9ZnVuY3Rpb24oYil7YS5tc2dJZD1ifSx0aGlzLnNldE1zZ0RhdGFUaW1lPWZ1bmN0aW9uKGIpe2EubXNnRGF0YVRpbWU9Yn0sdGhpcy5zZXREaXJlY3Q9ZnVuY3Rpb24oYil7YS5kaXJlY3Q9Yn0sdGhpcy50b0FycmF5QnVmZmVyPWZ1bmN0aW9uKCl7cmV0dXJuIGF9fSxEZWxldGVNc2dPdXRwdXQ6ZnVuY3Rpb24oKXt2YXIgYT17fTt0aGlzLnNldE5vdGhpbmc9ZnVuY3Rpb24oYil7YS5ub3RoaW5nPWJ9LHRoaXMudG9BcnJheUJ1ZmZlcj1mdW5jdGlvbigpe3JldHVybiBhfX0sU2VhcmNoTXBJbnB1dDpmdW5jdGlvbigpe3ZhciBhPXt9O3RoaXMuc2V0VHlwZT1mdW5jdGlvbihiKXthLnR5cGU9Yn0sdGhpcy5zZXRJZD1mdW5jdGlvbihiKXthLmlkPWJ9LHRoaXMudG9BcnJheUJ1ZmZlcj1mdW5jdGlvbigpe3JldHVybiBhfX0sU2VhcmNoTXBPdXRwdXQ6ZnVuY3Rpb24oKXt2YXIgYT17fTt0aGlzLnNldE5vdGhpbmc9ZnVuY3Rpb24oYil7YS5ub3RoaW5nPWJ9LHRoaXMuc2V0SW5mbz1mdW5jdGlvbihiKXthLmluZm89Yn0sdGhpcy50b0FycmF5QnVmZmVyPWZ1bmN0aW9uKCl7cmV0dXJuIGF9fSxNcEluZm86ZnVuY3Rpb24oKXt2YXIgYT17fTt0aGlzLnNldE1waWQ9ZnVuY3Rpb24oYil7YS5tcGlkPWJ9LHRoaXMuc2V0TmFtZT1mdW5jdGlvbihiKXthLm5hbWU9Yn0sdGhpcy5zZXRUeXBlPWZ1bmN0aW9uKGIpe2EudHlwZT1ifSx0aGlzLnNldFRpbWU9ZnVuY3Rpb24oYil7YS50aW1lPWJ9LHRoaXMuc2V0UG9ydHJhaXRVcmk9ZnVuY3Rpb24oYil7YS5wb3J0cmFpdFVybD1ifSx0aGlzLnNldEV4dHJhPWZ1bmN0aW9uKGIpe2EuZXh0cmE9Yn0sdGhpcy50b0FycmF5QnVmZmVyPWZ1bmN0aW9uKCl7cmV0dXJuIGF9fSxQdWxsTXBJbnB1dDpmdW5jdGlvbigpe3ZhciBhPXt9O3RoaXMuc2V0TXBpZD1mdW5jdGlvbihiKXthLm1waWQ9Yn0sdGhpcy5zZXRUaW1lPWZ1bmN0aW9uKGIpe2EudGltZT1ifSx0aGlzLnRvQXJyYXlCdWZmZXI9ZnVuY3Rpb24oKXtyZXR1cm4gYX19LFB1bGxNcE91dHB1dDpmdW5jdGlvbigpe3ZhciBhPXt9O3RoaXMuc2V0U3RhdHVzPWZ1bmN0aW9uKGIpe2Euc3RhdHVzPWJ9LHRoaXMuc2V0SW5mbz1mdW5jdGlvbihiKXthLmluZm89Yn0sdGhpcy50b0FycmF5QnVmZmVyPWZ1bmN0aW9uKCl7cmV0dXJuIGF9fSxNUEZvbGxvd0lucHV0OmZ1bmN0aW9uKCl7dmFyIGE9e307dGhpcy5zZXRJZD1mdW5jdGlvbihiKXthLmlkPWJ9LHRoaXMudG9BcnJheUJ1ZmZlcj1mdW5jdGlvbigpe3JldHVybiBhfX0sTVBGb2xsb3dPdXRwdXQ6ZnVuY3Rpb24oKXt2YXIgYT17fTt0aGlzLnNldE5vdGhpbmc9ZnVuY3Rpb24oYil7YS5ub3RoaW5nPWJ9LHRoaXMuc2V0SW5mbz1mdW5jdGlvbihiKXthLmluZm89Yn0sdGhpcy50b0FycmF5QnVmZmVyPWZ1bmN0aW9uKCl7cmV0dXJuIGF9fSxOb3RpZnlNc2c6ZnVuY3Rpb24oKXt2YXIgYT17fTt0aGlzLnNldFR5cGU9ZnVuY3Rpb24oYil7YS50eXBlPWJ9LHRoaXMuc2V0VGltZT1mdW5jdGlvbihiKXthLnRpbWU9Yn0sdGhpcy5zZXRDaHJtSWQ9ZnVuY3Rpb24oYil7YS5jaHJtSWQ9Yn0sdGhpcy50b0FycmF5QnVmZmVyPWZ1bmN0aW9uKCl7cmV0dXJuIGF9fSxTeW5jUmVxdWVzdE1zZzpmdW5jdGlvbigpe3ZhciBhPXt9O3RoaXMuc2V0U3luY1RpbWU9ZnVuY3Rpb24oYil7YS5zeW5jVGltZT1ifHwwfSx0aGlzLnNldElzcG9sbGluZz1mdW5jdGlvbihiKXthLmlzcG9sbGluZz0hIWJ9LHRoaXMuc2V0SXN3ZWI9ZnVuY3Rpb24oYil7YS5pc3dlYj0hIWJ9LHRoaXMuc2V0SXNQdWxsU2VuZD1mdW5jdGlvbihiKXthLmlzUHVsbFNlbmQ9ISFifSx0aGlzLnNldFNlbmRCb3hTeW5jVGltZT1mdW5jdGlvbihiKXthLnNlbmRCb3hTeW5jVGltZT1ifSx0aGlzLnRvQXJyYXlCdWZmZXI9ZnVuY3Rpb24oKXtyZXR1cm4gYX19LFVwU3RyZWFtTWVzc2FnZTpmdW5jdGlvbigpe3ZhciBhPXt9O3RoaXMuc2V0U2Vzc2lvbklkPWZ1bmN0aW9uKGIpe2Euc2Vzc2lvbklkPWJ9LHRoaXMuc2V0Q2xhc3NuYW1lPWZ1bmN0aW9uKGIpe2EuY2xhc3NuYW1lPWJ9LHRoaXMuc2V0Q29udGVudD1mdW5jdGlvbihiKXtiJiYoYS5jb250ZW50PWIpfSx0aGlzLnNldFB1c2hUZXh0PWZ1bmN0aW9uKGIpe2EucHVzaFRleHQ9Yn0sdGhpcy5zZXRVc2VySWQ9ZnVuY3Rpb24oYil7YS51c2VySWQ9Yn0sdGhpcy5zZXRBcHBEYXRhPWZ1bmN0aW9uKGIpe2EuYXBwRGF0YT1ifSx0aGlzLnRvQXJyYXlCdWZmZXI9ZnVuY3Rpb24oKXtyZXR1cm4gYX19LERvd25TdHJlYW1NZXNzYWdlczpmdW5jdGlvbigpe3ZhciBhPXt9O3RoaXMuc2V0TGlzdD1mdW5jdGlvbihiKXthLmxpc3Q9Yn0sdGhpcy5zZXRTeW5jVGltZT1mdW5jdGlvbihiKXthLnN5bmNUaW1lPWJ9LHRoaXMuc2V0RmluaXNoZWQ9ZnVuY3Rpb24oYil7YS5maW5pc2hlZD1ifSx0aGlzLnRvQXJyYXlCdWZmZXI9ZnVuY3Rpb24oKXtyZXR1cm4gYX19LERvd25TdHJlYW1NZXNzYWdlOmZ1bmN0aW9uKCl7dmFyIGE9e307dGhpcy5zZXRGcm9tVXNlcklkPWZ1bmN0aW9uKGIpe2EuZnJvbVVzZXJJZD1ifSx0aGlzLnNldFR5cGU9ZnVuY3Rpb24oYil7YS50eXBlPWJ9LHRoaXMuc2V0R3JvdXBJZD1mdW5jdGlvbihiKXthLmdyb3VwSWQ9Yn0sdGhpcy5zZXRDbGFzc25hbWU9ZnVuY3Rpb24oYil7YS5jbGFzc25hbWU9Yn0sdGhpcy5zZXRDb250ZW50PWZ1bmN0aW9uKGIpe2ImJihhLmNvbnRlbnQ9Yil9LHRoaXMuc2V0RGF0YVRpbWU9ZnVuY3Rpb24oYil7YS5kYXRhVGltZT1ifSx0aGlzLnNldFN0YXR1cz1mdW5jdGlvbihiKXthLnN0YXR1cz1ifSx0aGlzLnNldE1zZ0lkPWZ1bmN0aW9uKGIpe2EubXNnSWQ9Yn0sdGhpcy50b0FycmF5QnVmZmVyPWZ1bmN0aW9uKCl7cmV0dXJuIGF9fSxDcmVhdGVEaXNjdXNzaW9uSW5wdXQ6ZnVuY3Rpb24oKXt2YXIgYT17fTt0aGlzLnNldE5hbWU9ZnVuY3Rpb24oYil7YS5uYW1lPWJ9LHRoaXMudG9BcnJheUJ1ZmZlcj1mdW5jdGlvbigpe3JldHVybiBhfX0sQ3JlYXRlRGlzY3Vzc2lvbk91dHB1dDpmdW5jdGlvbigpe3ZhciBhPXt9O3RoaXMuc2V0SWQ9ZnVuY3Rpb24oYil7YS5pZD1ifSx0aGlzLnRvQXJyYXlCdWZmZXI9ZnVuY3Rpb24oKXtyZXR1cm4gYX19LENoYW5uZWxJbnZpdGF0aW9uSW5wdXQ6ZnVuY3Rpb24oKXt2YXIgYT17fTt0aGlzLnNldFVzZXJzPWZ1bmN0aW9uKGIpe2EudXNlcnM9Yn0sdGhpcy50b0FycmF5QnVmZmVyPWZ1bmN0aW9uKCl7cmV0dXJuIGF9fSxMZWF2ZUNoYW5uZWxJbnB1dDpmdW5jdGlvbigpe3ZhciBhPXt9O3RoaXMuc2V0Tm90aGluZz1mdW5jdGlvbihiKXthLm5vdGhpbmc9Yn0sdGhpcy50b0FycmF5QnVmZmVyPWZ1bmN0aW9uKCl7cmV0dXJuIGF9fSxRdWVyeUNoYXRyb29tSW5mb0lucHV0OmZ1bmN0aW9uKCl7dmFyIGE9e307dGhpcy5zZXRDb3VudD1mdW5jdGlvbihiKXthLmNvdW50PWJ9LHRoaXMuc2V0T3JkZXI9ZnVuY3Rpb24oYil7YS5vcmRlcj1ifSx0aGlzLnRvQXJyYXlCdWZmZXI9ZnVuY3Rpb24oKXtyZXR1cm4gYX19LFF1ZXJ5Q2hhdHJvb21JbmZvT3V0cHV0OmZ1bmN0aW9uKCl7dmFyIGE9e307dGhpcy5zZXRVc2VyVG90YWxOdW1zPWZ1bmN0aW9uKGIpe2EudXNlclRvdGFsTnVtcz1ifSx0aGlzLnNldFVzZXJJbmZvcz1mdW5jdGlvbihiKXthLnVzZXJJbmZvcz1ifSx0aGlzLnRvQXJyYXlCdWZmZXI9ZnVuY3Rpb24oKXtyZXR1cm4gYX19LENoYW5uZWxFdmljdGlvbklucHV0OmZ1bmN0aW9uKCl7dmFyIGE9e307dGhpcy5zZXRVc2VyPWZ1bmN0aW9uKGIpe2EudXNlcj1ifSx0aGlzLnRvQXJyYXlCdWZmZXI9ZnVuY3Rpb24oKXtyZXR1cm4gYX19LFJlbmFtZUNoYW5uZWxJbnB1dDpmdW5jdGlvbigpe3ZhciBhPXt9O3RoaXMuc2V0TmFtZT1mdW5jdGlvbihiKXthLm5hbWU9Yn0sdGhpcy50b0FycmF5QnVmZmVyPWZ1bmN0aW9uKCl7cmV0dXJuIGF9fSxDaGFubmVsSW5mb0lucHV0OmZ1bmN0aW9uKCl7dmFyIGE9e307dGhpcy5zZXROb3RoaW5nPWZ1bmN0aW9uKGIpe2Eubm90aGluZz1ifSx0aGlzLnRvQXJyYXlCdWZmZXI9ZnVuY3Rpb24oKXtyZXR1cm4gYX19LENoYW5uZWxJbmZvT3V0cHV0OmZ1bmN0aW9uKCl7dmFyIGE9e307dGhpcy5zZXRUeXBlPWZ1bmN0aW9uKGIpe2EudHlwZT1ifSx0aGlzLnNldENoYW5uZWxJZD1mdW5jdGlvbihiKXthLmNoYW5uZWxJZD1ifSx0aGlzLnNldENoYW5uZWxOYW1lPWZ1bmN0aW9uKGIpe2EuY2hhbm5lbE5hbWU9Yn0sdGhpcy5zZXRBZG1pblVzZXJJZD1mdW5jdGlvbihiKXthLmFkbWluVXNlcklkPWJ9LHRoaXMuc2V0Rmlyc3RUZW5Vc2VySWRzPWZ1bmN0aW9uKGIpe2EuZmlyc3RUZW5Vc2VySWRzPWJ9LHRoaXMuc2V0T3BlblN0YXR1cz1mdW5jdGlvbihiKXthLm9wZW5TdGF0dXM9Yn0sdGhpcy50b0FycmF5QnVmZmVyPWZ1bmN0aW9uKCl7cmV0dXJuIGF9fSxDaGFubmVsSW5mb3NJbnB1dDpmdW5jdGlvbigpe3ZhciBhPXt9O3RoaXMuc2V0UGFnZT1mdW5jdGlvbihiKXthLnBhZ2U9Yn0sdGhpcy5zZXROdW1iZXI9ZnVuY3Rpb24oYil7YS5udW1iZXI9Yn0sdGhpcy50b0FycmF5QnVmZmVyPWZ1bmN0aW9uKCl7cmV0dXJuIGF9fSxDaGFubmVsSW5mb3NPdXRwdXQ6ZnVuY3Rpb24oKXt2YXIgYT17fTt0aGlzLnNldENoYW5uZWxzPWZ1bmN0aW9uKGIpe2EuY2hhbm5lbHM9Yn0sdGhpcy5zZXRUb3RhbD1mdW5jdGlvbihiKXthLnRvdGFsPWJ9LHRoaXMudG9BcnJheUJ1ZmZlcj1mdW5jdGlvbigpe3JldHVybiBhfX0sTWVtYmVySW5mbzpmdW5jdGlvbigpe3ZhciBhPXt9O3RoaXMuc2V0VXNlcklkPWZ1bmN0aW9uKGIpe2EudXNlcklkPWJ9LHRoaXMuc2V0VXNlck5hbWU9ZnVuY3Rpb24oYil7YS51c2VyTmFtZT1ifSx0aGlzLnNldFVzZXJQb3J0cmFpdD1mdW5jdGlvbihiKXthLnVzZXJQb3J0cmFpdD1ifSx0aGlzLnNldEV4dGVuc2lvbj1mdW5jdGlvbihiKXthLmV4dGVuc2lvbj1ifSx0aGlzLnRvQXJyYXlCdWZmZXI9ZnVuY3Rpb24oKXtyZXR1cm4gYX19LEdyb3VwTWVtYmVyc0lucHV0OmZ1bmN0aW9uKCl7dmFyIGE9e307dGhpcy5zZXRQYWdlPWZ1bmN0aW9uKGIpe2EucGFnZT1ifSx0aGlzLnNldE51bWJlcj1mdW5jdGlvbihiKXthLm51bWJlcj1ifSx0aGlzLnRvQXJyYXlCdWZmZXI9ZnVuY3Rpb24oKXtyZXR1cm4gYX19LEdyb3VwTWVtYmVyc091dHB1dDpmdW5jdGlvbigpe3ZhciBhPXt9O3RoaXMuc2V0TWVtYmVycz1mdW5jdGlvbihiKXthLm1lbWJlcnM9Yn0sdGhpcy5zZXRUb3RhbD1mdW5jdGlvbihiKXthLnRvdGFsPWJ9LHRoaXMudG9BcnJheUJ1ZmZlcj1mdW5jdGlvbigpe3JldHVybiBhfX0sR2V0VXNlckluZm9JbnB1dDpmdW5jdGlvbigpe3ZhciBhPXt9O3RoaXMuc2V0Tm90aGluZz1mdW5jdGlvbihiKXthLm5vdGhpbmc9Yn0sdGhpcy50b0FycmF5QnVmZmVyPWZ1bmN0aW9uKCl7cmV0dXJuIGF9fSxHZXRVc2VySW5mb091dHB1dDpmdW5jdGlvbigpe3ZhciBhPXt9O3RoaXMuc2V0VXNlcklkPWZ1bmN0aW9uKGIpe2EudXNlcklkPWJ9LHRoaXMuc2V0VXNlck5hbWU9ZnVuY3Rpb24oYil7YS51c2VyTmFtZT1ifSx0aGlzLnNldFVzZXJQb3J0cmFpdD1mdW5jdGlvbihiKXthLnVzZXJQb3J0cmFpdD1ifSx0aGlzLnRvQXJyYXlCdWZmZXI9ZnVuY3Rpb24oKXtyZXR1cm4gYX19LEdldFNlc3Npb25JZElucHV0OmZ1bmN0aW9uKCl7dmFyIGE9e307dGhpcy5zZXROb3RoaW5nPWZ1bmN0aW9uKGIpe2Eubm90aGluZz1ifSx0aGlzLnRvQXJyYXlCdWZmZXI9ZnVuY3Rpb24oKXtyZXR1cm4gYX19LEdldFNlc3Npb25JZE91dHB1dDpmdW5jdGlvbigpe3ZhciBhPXt9O3RoaXMuc2V0U2Vzc2lvbklkPWZ1bmN0aW9uKGIpe2Euc2Vzc2lvbklkPWJ9LHRoaXMudG9BcnJheUJ1ZmZlcj1mdW5jdGlvbigpe3JldHVybiBhfX0sR2V0UU51cFRva2VuSW5wdXQ6ZnVuY3Rpb24oKXt2YXIgYT17fTt0aGlzLnNldFR5cGU9ZnVuY3Rpb24oYil7YS50eXBlPWJ9LHRoaXMudG9BcnJheUJ1ZmZlcj1mdW5jdGlvbigpe3JldHVybiBhfX0sR2V0UU51cFRva2VuT3V0cHV0OmZ1bmN0aW9uKCl7dmFyIGE9e307dGhpcy5zZXREZWFkbGluZT1mdW5jdGlvbihiKXthLmRlYWRsaW5lPWJ9LHRoaXMuc2V0VG9rZW49ZnVuY3Rpb24oYil7YS50b2tlbj1ifSx0aGlzLnRvQXJyYXlCdWZmZXI9ZnVuY3Rpb24oKXtyZXR1cm4gYX19LEdldFFOZG93bmxvYWRVcmxJbnB1dDpmdW5jdGlvbigpe3ZhciBhPXt9O3RoaXMuc2V0VHlwZT1mdW5jdGlvbihiKXthLnR5cGU9Yn0sdGhpcy5zZXRLZXk9ZnVuY3Rpb24oYil7YS5rZXk9Yn0sdGhpcy5zZXRGaWxlTmFtZT1mdW5jdGlvbihiKXthLmZpbGVOYW1lPWJ9LHRoaXMudG9BcnJheUJ1ZmZlcj1mdW5jdGlvbigpe3JldHVybiBhfX0sR2V0UU5kb3dubG9hZFVybE91dHB1dDpmdW5jdGlvbigpe3ZhciBhPXt9O3RoaXMuc2V0RG93bmxvYWRVcmw9ZnVuY3Rpb24oYil7YS5kb3dubG9hZFVybD1ifSx0aGlzLnRvQXJyYXlCdWZmZXI9ZnVuY3Rpb24oKXtyZXR1cm4gYX19LEFkZDJCbGFja0xpc3RJbnB1dDpmdW5jdGlvbigpe3ZhciBhPXt9O3RoaXMuc2V0VXNlcklkPWZ1bmN0aW9uKGIpe2EudXNlcklkPWJ9LHRoaXMudG9BcnJheUJ1ZmZlcj1mdW5jdGlvbigpe3JldHVybiBhfX0sUmVtb3ZlRnJvbUJsYWNrTGlzdElucHV0OmZ1bmN0aW9uKCl7dmFyIGE9e307dGhpcy5zZXRVc2VySWQ9ZnVuY3Rpb24oYil7YS51c2VySWQ9Yn0sdGhpcy50b0FycmF5QnVmZmVyPWZ1bmN0aW9uKCl7cmV0dXJuIGF9fSxRdWVyeUJsYWNrTGlzdElucHV0OmZ1bmN0aW9uKCl7dmFyIGE9e307dGhpcy5zZXROb3RoaW5nPWZ1bmN0aW9uKGIpe2Eubm90aGluZz1ifSx0aGlzLnRvQXJyYXlCdWZmZXI9ZnVuY3Rpb24oKXtyZXR1cm4gYX19LFF1ZXJ5QmxhY2tMaXN0T3V0cHV0OmZ1bmN0aW9uKCl7dmFyIGE9e307dGhpcy5zZXRVc2VySWRzPWZ1bmN0aW9uKGIpe2EudXNlcklkcz1ifSx0aGlzLnRvQXJyYXlCdWZmZXI9ZnVuY3Rpb24oKXtyZXR1cm4gYX19LEJsYWNrTGlzdFN0YXR1c0lucHV0OmZ1bmN0aW9uKCl7dmFyIGE9e307dGhpcy5zZXRVc2VySWQ9ZnVuY3Rpb24oYil7YS51c2VySWQ9Yn0sdGhpcy50b0FycmF5QnVmZmVyPWZ1bmN0aW9uKCl7cmV0dXJuIGF9fSxCbG9ja1B1c2hJbnB1dDpmdW5jdGlvbigpe3ZhciBhPXt9O3RoaXMuc2V0QmxvY2tlZUlkPWZ1bmN0aW9uKGIpe2EuYmxvY2tlZUlkPWJ9LHRoaXMudG9BcnJheUJ1ZmZlcj1mdW5jdGlvbigpe3JldHVybiBhfX0sTW9kaWZ5UGVybWlzc2lvbklucHV0OmZ1bmN0aW9uKCl7dmFyIGE9e307dGhpcy5zZXRPcGVuU3RhdHVzPWZ1bmN0aW9uKGIpe2Eub3BlblN0YXR1cz1ifSx0aGlzLnRvQXJyYXlCdWZmZXI9ZnVuY3Rpb24oKXtyZXR1cm4gYX19LEdyb3VwSW5wdXQ6ZnVuY3Rpb24oKXt2YXIgYT17fTt0aGlzLnNldEdyb3VwSW5mbz1mdW5jdGlvbihiKXtmb3IodmFyIGM9MCxkPVtdO2M8Yi5sZW5ndGg7YysrKWQucHVzaCh7aWQ6YltjXS5nZXRDb250ZW50KCkuaWQsbmFtZTpiW2NdLmdldENvbnRlbnQoKS5uYW1lfSk7YS5ncm91cEluZm89ZH0sdGhpcy50b0FycmF5QnVmZmVyPWZ1bmN0aW9uKCl7cmV0dXJuIGF9fSxHcm91cE91dHB1dDpmdW5jdGlvbigpe3ZhciBhPXt9O3RoaXMuc2V0Tm90aGluZz1mdW5jdGlvbihiKXthLm5vdGhpbmc9Yn0sdGhpcy50b0FycmF5QnVmZmVyPWZ1bmN0aW9uKCl7cmV0dXJuIGF9fSxHcm91cEluZm86ZnVuY3Rpb24oKXt2YXIgYT17fTt0aGlzLnNldElkPWZ1bmN0aW9uKGIpe2EuaWQ9Yn0sdGhpcy5zZXROYW1lPWZ1bmN0aW9uKGIpe2EubmFtZT1ifSx0aGlzLmdldENvbnRlbnQ9ZnVuY3Rpb24oKXtyZXR1cm4gYX0sdGhpcy50b0FycmF5QnVmZmVyPWZ1bmN0aW9uKCl7cmV0dXJuIGF9fSxHcm91cEhhc2hJbnB1dDpmdW5jdGlvbigpe3ZhciBhPXt9O3RoaXMuc2V0VXNlcklkPWZ1bmN0aW9uKGIpe2EudXNlcklkPWJ9LHRoaXMuc2V0R3JvdXBIYXNoQ29kZT1mdW5jdGlvbihiKXthLmdyb3VwSGFzaENvZGU9Yn0sdGhpcy50b0FycmF5QnVmZmVyPWZ1bmN0aW9uKCl7cmV0dXJuIGF9fSxHcm91cEhhc2hPdXRwdXQ6ZnVuY3Rpb24oKXt2YXIgYT17fTt0aGlzLnNldFJlc3VsdD1mdW5jdGlvbihiKXthLnJlc3VsdD1ifSx0aGlzLnRvQXJyYXlCdWZmZXI9ZnVuY3Rpb24oKXtyZXR1cm4gYX19LENocm1JbnB1dDpmdW5jdGlvbigpe3ZhciBhPXt9O3RoaXMuc2V0Tm90aGluZz1mdW5jdGlvbihiKXthLm5vdGhpbmc9Yn0sdGhpcy50b0FycmF5QnVmZmVyPWZ1bmN0aW9uKCl7cmV0dXJuIGF9fSxDaHJtT3V0cHV0OmZ1bmN0aW9uKCl7dmFyIGE9e307dGhpcy5zZXROb3RoaW5nPWZ1bmN0aW9uKGIpe2Eubm90aGluZz1ifSx0aGlzLnRvQXJyYXlCdWZmZXI9ZnVuY3Rpb24oKXtyZXR1cm4gYX19LENocm1QdWxsTXNnOmZ1bmN0aW9uKCl7dmFyIGE9e307dGhpcy5zZXRTeW5jVGltZT1mdW5jdGlvbihiKXthLnN5bmNUaW1lPWJ9LHRoaXMuc2V0Q291bnQ9ZnVuY3Rpb24oYil7YS5jb3VudD1ifSx0aGlzLnRvQXJyYXlCdWZmZXI9ZnVuY3Rpb24oKXtyZXR1cm4gYX19LFJlbGF0aW9uc0lucHV0OmZ1bmN0aW9uKCl7dmFyIGE9e307dGhpcy5zZXRUeXBlPWZ1bmN0aW9uKGIpe2EudHlwZT1ifSx0aGlzLnNldE1zZz1mdW5jdGlvbihiKXthLm1zZz1ifSx0aGlzLnNldENvdW50PWZ1bmN0aW9uKGIpe2EuY291bnQ9Yn0sdGhpcy50b0FycmF5QnVmZmVyPWZ1bmN0aW9uKCl7cmV0dXJuIGF9fSxSZWxhdGlvbnNPdXRwdXQ6ZnVuY3Rpb24oKXt2YXIgYT17fTt0aGlzLnNldEluZm89ZnVuY3Rpb24oYil7YS5pbmZvPWJ9LHRoaXMudG9BcnJheUJ1ZmZlcj1mdW5jdGlvbigpe3JldHVybiBhfX0sUmVsYXRpb25JbmZvOmZ1bmN0aW9uKCl7dmFyIGE9e307dGhpcy5zZXRUeXBlPWZ1bmN0aW9uKGIpe2EudHlwZT1ifSx0aGlzLnNldFVzZXJJZD1mdW5jdGlvbihiKXthLnVzZXJJZD1ifSx0aGlzLnNldE1zZz1mdW5jdGlvbihiKXthLm1zZz1ifSx0aGlzLnRvQXJyYXlCdWZmZXI9ZnVuY3Rpb24oKXtyZXR1cm4gYX19LEhpc3RvcnlNZXNzYWdlSW5wdXQ6ZnVuY3Rpb24oKXt2YXIgYT17fTt0aGlzLnNldFRhcmdldElkPWZ1bmN0aW9uKGIpe2EudGFyZ2V0SWQ9Yn0sdGhpcy5zZXREYXRhVGltZT1mdW5jdGlvbihiKXthLmRhdGFUaW1lPWJ9LHRoaXMuc2V0U2l6ZT1mdW5jdGlvbihiKXthLnNpemU9Yn0sdGhpcy50b0FycmF5QnVmZmVyPWZ1bmN0aW9uKCl7cmV0dXJuIGF9fSxIaXN0b3J5TWVzc2FnZXNPdXB1dDpmdW5jdGlvbigpe3ZhciBhPXt9O3RoaXMuc2V0TGlzdD1mdW5jdGlvbihiKXthLmxpc3Q9Yn0sdGhpcy5zZXRTeW5jVGltZT1mdW5jdGlvbihiKXthLnN5bmNUaW1lPWJ9LHRoaXMuc2V0SGFzTXNnPWZ1bmN0aW9uKGIpe2EuaGFzTXNnPWJ9LHRoaXMudG9BcnJheUJ1ZmZlcj1mdW5jdGlvbigpe3JldHVybiBhfX0sSGlzdG9yeU1zZ0lucHV0OmZ1bmN0aW9uKCl7dmFyIGE9e307dGhpcy5zZXRUYXJnZXRJZD1mdW5jdGlvbihiKXthLnRhcmdldElkPWJ9LHRoaXMuc2V0VGltZT1mdW5jdGlvbihiKXthLnRpbWU9Yn0sdGhpcy5zZXRDb3VudD1mdW5jdGlvbihiKXthLmNvdW50PWJ9LHRoaXMuc2V0T3JkZXI9ZnVuY3Rpb24oYil7YS5vcmRlcj1ifSx0aGlzLnRvQXJyYXlCdWZmZXI9ZnVuY3Rpb24oKXtyZXR1cm4gYX19LEhpc3RvcnlNc2dPdXB1dDpmdW5jdGlvbigpe3ZhciBhPXt9O3RoaXMuc2V0TGlzdD1mdW5jdGlvbihiKXthLmxpc3Q9Yn0sdGhpcy5zZXRTeW5jVGltZT1mdW5jdGlvbihiKXthLnN5bmNUaW1lPWJ9LHRoaXMuc2V0SGFzTXNnPWZ1bmN0aW9uKGIpe2EuaGFzTXNnPWJ9LHRoaXMudG9BcnJheUJ1ZmZlcj1mdW5jdGlvbigpe3JldHVybiBhfX19O2Zvcih2YXIgZiBpbiBQb2xsaW5nKVBvbGxpbmdbZl0uZGVjb2RlPWZ1bmN0aW9uKGIpe3ZhciBiYWNrPXt9LHZhbD1KU09OLnBhcnNlKGIpfHxldmFsKFwiKFwiK2IrXCIpXCIpO2Zvcih2YXIgaSBpbiB2YWwpYmFja1tpXT12YWxbaV0sYmFja1tcImdldFwiK2kuY2hhckF0KDApLnRvVXBwZXJDYXNlKCkraS5zbGljZSgxKV09ZnVuY3Rpb24oKXtyZXR1cm4gdmFsW2ldfTtyZXR1cm4gYmFja307dmFyIG1kNT1mdW5jdGlvbigpe1widXNlIHN0cmljdFwiO2Z1bmN0aW9uIGEoYSxiKXt2YXIgYz0oNjU1MzUmYSkrKDY1NTM1JmIpO3JldHVybihhPj4xNikrKGI+PjE2KSsoYz4+MTYpPDwxNnw2NTUzNSZjfWZ1bmN0aW9uIGIoYSxiKXtyZXR1cm4gYTw8YnxhPj4+MzItYn1mdW5jdGlvbiBjKGMsZCxlLGYsZyxoKXtyZXR1cm4gYShiKGEoYShkLGMpLGEoZixoKSksZyksZSl9ZnVuY3Rpb24gZChhLGIsZCxlLGYsZyxoKXtyZXR1cm4gYyhiJmR8fmImZSxhLGIsZixnLGgpfWZ1bmN0aW9uIGUoYSxiLGQsZSxmLGcsaCl7cmV0dXJuIGMoYiZlfGQmfmUsYSxiLGYsZyxoKX1mdW5jdGlvbiBmKGEsYixkLGUsZixnLGgpe3JldHVybiBjKGJeZF5lLGEsYixmLGcsaCl9ZnVuY3Rpb24gZyhhLGIsZCxlLGYsZyxoKXtyZXR1cm4gYyhkXihifH5lKSxhLGIsZixnLGgpfWZ1bmN0aW9uIGgoYixjKXtiW2M+PjVdfD0xMjg8PGMlMzIsYlsxNCsoYys2ND4+Pjk8PDQpXT1jO3ZhciBoLGksaixrLGwsbT0xNzMyNTg0MTkzLG49LTI3MTczMzg3OSxvPS0xNzMyNTg0MTk0LHA9MjcxNzMzODc4O2ZvcihoPTA7aDxiLmxlbmd0aDtoKz0xNilpPW0saj1uLGs9byxsPXAsbT1kKG0sbixvLHAsYltoXSw3LC02ODA4NzY5MzYpLHA9ZChwLG0sbixvLGJbaCsxXSwxMiwtMzg5NTY0NTg2KSxvPWQobyxwLG0sbixiW2grMl0sMTcsNjA2MTA1ODE5KSxuPWQobixvLHAsbSxiW2grM10sMjIsLTEwNDQ1MjUzMzApLG09ZChtLG4sbyxwLGJbaCs0XSw3LC0xNzY0MTg4OTcpLHA9ZChwLG0sbixvLGJbaCs1XSwxMiwxMjAwMDgwNDI2KSxvPWQobyxwLG0sbixiW2grNl0sMTcsLTE0NzMyMzEzNDEpLG49ZChuLG8scCxtLGJbaCs3XSwyMiwtNDU3MDU5ODMpLG09ZChtLG4sbyxwLGJbaCs4XSw3LDE3NzAwMzU0MTYpLHA9ZChwLG0sbixvLGJbaCs5XSwxMiwtMTk1ODQxNDQxNyksbz1kKG8scCxtLG4sYltoKzEwXSwxNywtNDIwNjMpLG49ZChuLG8scCxtLGJbaCsxMV0sMjIsLTE5OTA0MDQxNjIpLG09ZChtLG4sbyxwLGJbaCsxMl0sNywxODA0NjAzNjgyKSxwPWQocCxtLG4sbyxiW2grMTNdLDEyLC00MDM0MTEwMSksbz1kKG8scCxtLG4sYltoKzE0XSwxNywtMTUwMjAwMjI5MCksbj1kKG4sbyxwLG0sYltoKzE1XSwyMiwxMjM2NTM1MzI5KSxtPWUobSxuLG8scCxiW2grMV0sNSwtMTY1Nzk2NTEwKSxwPWUocCxtLG4sbyxiW2grNl0sOSwtMTA2OTUwMTYzMiksbz1lKG8scCxtLG4sYltoKzExXSwxNCw2NDM3MTc3MTMpLG49ZShuLG8scCxtLGJbaF0sMjAsLTM3Mzg5NzMwMiksbT1lKG0sbixvLHAsYltoKzVdLDUsLTcwMTU1ODY5MSkscD1lKHAsbSxuLG8sYltoKzEwXSw5LDM4MDE2MDgzKSxvPWUobyxwLG0sbixiW2grMTVdLDE0LC02NjA0NzgzMzUpLG49ZShuLG8scCxtLGJbaCs0XSwyMCwtNDA1NTM3ODQ4KSxtPWUobSxuLG8scCxiW2grOV0sNSw1Njg0NDY0MzgpLHA9ZShwLG0sbixvLGJbaCsxNF0sOSwtMTAxOTgwMzY5MCksbz1lKG8scCxtLG4sYltoKzNdLDE0LC0xODczNjM5NjEpLG49ZShuLG8scCxtLGJbaCs4XSwyMCwxMTYzNTMxNTAxKSxtPWUobSxuLG8scCxiW2grMTNdLDUsLTE0NDQ2ODE0NjcpLHA9ZShwLG0sbixvLGJbaCsyXSw5LC01MTQwMzc4NCksbz1lKG8scCxtLG4sYltoKzddLDE0LDE3MzUzMjg0NzMpLG49ZShuLG8scCxtLGJbaCsxMl0sMjAsLTE5MjY2MDc3MzQpLG09ZihtLG4sbyxwLGJbaCs1XSw0LC0zNzg1NTgpLHA9ZihwLG0sbixvLGJbaCs4XSwxMSwtMjAyMjU3NDQ2Myksbz1mKG8scCxtLG4sYltoKzExXSwxNiwxODM5MDMwNTYyKSxuPWYobixvLHAsbSxiW2grMTRdLDIzLC0zNTMwOTU1NiksbT1mKG0sbixvLHAsYltoKzFdLDQsLTE1MzA5OTIwNjApLHA9ZihwLG0sbixvLGJbaCs0XSwxMSwxMjcyODkzMzUzKSxvPWYobyxwLG0sbixiW2grN10sMTYsLTE1NTQ5NzYzMiksbj1mKG4sbyxwLG0sYltoKzEwXSwyMywtMTA5NDczMDY0MCksbT1mKG0sbixvLHAsYltoKzEzXSw0LDY4MTI3OTE3NCkscD1mKHAsbSxuLG8sYltoXSwxMSwtMzU4NTM3MjIyKSxvPWYobyxwLG0sbixiW2grM10sMTYsLTcyMjUyMTk3OSksbj1mKG4sbyxwLG0sYltoKzZdLDIzLDc2MDI5MTg5KSxtPWYobSxuLG8scCxiW2grOV0sNCwtNjQwMzY0NDg3KSxwPWYocCxtLG4sbyxiW2grMTJdLDExLC00MjE4MTU4MzUpLG89ZihvLHAsbSxuLGJbaCsxNV0sMTYsNTMwNzQyNTIwKSxuPWYobixvLHAsbSxiW2grMl0sMjMsLTk5NTMzODY1MSksbT1nKG0sbixvLHAsYltoXSw2LC0xOTg2MzA4NDQpLHA9ZyhwLG0sbixvLGJbaCs3XSwxMCwxMTI2ODkxNDE1KSxvPWcobyxwLG0sbixiW2grMTRdLDE1LC0xNDE2MzU0OTA1KSxuPWcobixvLHAsbSxiW2grNV0sMjEsLTU3NDM0MDU1KSxtPWcobSxuLG8scCxiW2grMTJdLDYsMTcwMDQ4NTU3MSkscD1nKHAsbSxuLG8sYltoKzNdLDEwLC0xODk0OTg2NjA2KSxvPWcobyxwLG0sbixiW2grMTBdLDE1LC0xMDUxNTIzKSxuPWcobixvLHAsbSxiW2grMV0sMjEsLTIwNTQ5MjI3OTkpLG09ZyhtLG4sbyxwLGJbaCs4XSw2LDE4NzMzMTMzNTkpLHA9ZyhwLG0sbixvLGJbaCsxNV0sMTAsLTMwNjExNzQ0KSxvPWcobyxwLG0sbixiW2grNl0sMTUsLTE1NjAxOTgzODApLG49ZyhuLG8scCxtLGJbaCsxM10sMjEsMTMwOTE1MTY0OSksbT1nKG0sbixvLHAsYltoKzRdLDYsLTE0NTUyMzA3MCkscD1nKHAsbSxuLG8sYltoKzExXSwxMCwtMTEyMDIxMDM3OSksbz1nKG8scCxtLG4sYltoKzJdLDE1LDcxODc4NzI1OSksbj1nKG4sbyxwLG0sYltoKzldLDIxLC0zNDM0ODU1NTEpLG09YShtLGkpLG49YShuLGopLG89YShvLGspLHA9YShwLGwpO3JldHVyblttLG4sbyxwXX1mdW5jdGlvbiBpKGEpe3ZhciBiLGM9XCJcIjtmb3IoYj0wO2I8MzIqYS5sZW5ndGg7Yis9OCljKz1TdHJpbmcuZnJvbUNoYXJDb2RlKGFbYj4+NV0+Pj5iJTMyJjI1NSk7cmV0dXJuIGN9ZnVuY3Rpb24gaihhKXt2YXIgYixjPVtdO2ZvcihjWyhhLmxlbmd0aD4+MiktMV09dm9pZCAwLGI9MDtiPGMubGVuZ3RoO2IrPTEpY1tiXT0wO2ZvcihiPTA7Yjw4KmEubGVuZ3RoO2IrPTgpY1tiPj41XXw9KDI1NSZhLmNoYXJDb2RlQXQoYi84KSk8PGIlMzI7cmV0dXJuIGN9ZnVuY3Rpb24gayhhKXtyZXR1cm4gaShoKGooYSksOCphLmxlbmd0aCkpfWZ1bmN0aW9uIGwoYSxiKXt2YXIgYyxkLGU9aihhKSxmPVtdLGc9W107Zm9yKGZbMTVdPWdbMTVdPXZvaWQgMCxlLmxlbmd0aD4xNiYmKGU9aChlLDgqYS5sZW5ndGgpKSxjPTA7YzwxNjtjKz0xKWZbY109OTA5NTIyNDg2XmVbY10sZ1tjXT0xNTQ5NTU2ODI4XmVbY107cmV0dXJuIGQ9aChmLmNvbmNhdChqKGIpKSw1MTIrOCpiLmxlbmd0aCksaShoKGcuY29uY2F0KGQpLDY0MCkpfWZ1bmN0aW9uIG0oYSl7dmFyIGIsYyxkPVwiMDEyMzQ1Njc4OWFiY2RlZlwiLGU9XCJcIjtmb3IoYz0wO2M8YS5sZW5ndGg7Yys9MSliPWEuY2hhckNvZGVBdChjKSxlKz1kLmNoYXJBdChiPj4+NCYxNSkrZC5jaGFyQXQoMTUmYik7cmV0dXJuIGV9ZnVuY3Rpb24gbihhKXtyZXR1cm4gdW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KGEpKX1mdW5jdGlvbiBvKGEpe3JldHVybiBrKG4oYSkpfWZ1bmN0aW9uIHAoYSl7cmV0dXJuIG0obyhhKSl9ZnVuY3Rpb24gcShhLGIpe3JldHVybiBsKG4oYSksbihiKSl9ZnVuY3Rpb24gcihhLGIpe3JldHVybiBtKHEoYSxiKSl9ZnVuY3Rpb24gcyhhLGIsYyl7cmV0dXJuIGI/Yz9xKGIsYSk6cihiLGEpOmM/byhhKTpwKGEpfXJldHVybiBzfSgpLFJvbmdJTUxpYjshZnVuY3Rpb24oYSl7IWZ1bmN0aW9uKGEpe2FbYS5BTEw9MV09XCJBTExcIixhW2EuUEFSVD0yXT1cIlBBUlRcIn0oYS5NZW50aW9uZWRUeXBlfHwoYS5NZW50aW9uZWRUeXBlPXt9KSk7YS5NZW50aW9uZWRUeXBlOyFmdW5jdGlvbihhKXthW2EuQ1VTVE9NRVJfU0VSVklDRT0xXT1cIkNVU1RPTUVSX1NFUlZJQ0VcIixhW2EuUkVDQUxMPTJdPVwiUkVDQUxMXCJ9KGEuTWV0aG9kVHlwZXx8KGEuTWV0aG9kVHlwZT17fSkpO2EuTWV0aG9kVHlwZTshZnVuY3Rpb24oYSl7YVthLklOX0JMQUNLX0xJU1Q9MF09XCJJTl9CTEFDS19MSVNUXCIsYVthLk5PVF9JTl9CTEFDS19MSVNUPTFdPVwiTk9UX0lOX0JMQUNLX0xJU1RcIn0oYS5CbGFja2xpc3RTdGF0dXN8fChhLkJsYWNrbGlzdFN0YXR1cz17fSkpO2EuQmxhY2tsaXN0U3RhdHVzOyFmdW5jdGlvbihhKXthW2EuWEhSX1BPTExJTkc9MF09XCJYSFJfUE9MTElOR1wiLGFbYS5XRUJTT0NLRVQ9MV09XCJXRUJTT0NLRVRcIixhW2EuSFRUUD0wXT1cIkhUVFBcIixhW2EuSFRUUFM9MV09XCJIVFRQU1wifShhLkNvbm5lY3Rpb25DaGFubmVsfHwoYS5Db25uZWN0aW9uQ2hhbm5lbD17fSkpO2EuQ29ubmVjdGlvbkNoYW5uZWw7IWZ1bmN0aW9uKGEpe2FbYS5PTkxZX1JPQk9UPTFdPVwiT05MWV9ST0JPVFwiLGFbYS5PTkxZX0hVTUFOPTJdPVwiT05MWV9IVU1BTlwiLGFbYS5ST0JPVF9GSVJTVD0zXT1cIlJPQk9UX0ZJUlNUXCIsYVthLkhVTUFOX0ZJUlNUPTRdPVwiSFVNQU5fRklSU1RcIn0oYS5DdXN0b21lclR5cGV8fChhLkN1c3RvbWVyVHlwZT17fSkpO2EuQ3VzdG9tZXJUeXBlOyFmdW5jdGlvbihhKXthW2EuTk9ORT0wXT1cIk5PTkVcIixhW2EuU1FRVUVOQ0U9MV09XCJTUVFVRU5DRVwiLGFbYS5SRVZFUlNFPTJdPVwiUkVWRVJTRVwifShhLkdldENoYXRSb29tVHlwZXx8KGEuR2V0Q2hhdFJvb21UeXBlPXt9KSk7YS5HZXRDaGF0Um9vbVR5cGU7IWZ1bmN0aW9uKGEpe2FbYS5DT05ORUNURUQ9MF09XCJDT05ORUNURURcIixhW2EuQ09OTkVDVElORz0xXT1cIkNPTk5FQ1RJTkdcIixhW2EuRElTQ09OTkVDVEVEPTJdPVwiRElTQ09OTkVDVEVEXCIsYVthLktJQ0tFRF9PRkZMSU5FX0JZX09USEVSX0NMSUVOVD02XT1cIktJQ0tFRF9PRkZMSU5FX0JZX09USEVSX0NMSUVOVFwiLGFbYS5XRUJTT0NLRVRfVU5BVkFJTEFCTEU9N109XCJXRUJTT0NLRVRfVU5BVkFJTEFCTEVcIixhW2EuTkVUV09SS19VTkFWQUlMQUJMRT0zXT1cIk5FVFdPUktfVU5BVkFJTEFCTEVcIixhW2EuRE9NQUlOX0lOQ09SUkVDVD0xMl09XCJET01BSU5fSU5DT1JSRUNUXCIsYVthLkFQUEtFWV9JU19GQUtFPTIwXT1cIkFQUEtFWV9JU19GQUtFXCIsYVthLkNPTk5FQ1RJT05fQ0xPU0VEPTRdPVwiQ09OTkVDVElPTl9DTE9TRURcIixhW2EuVUxUUkFMSU1JVD0xMTAxXT1cIlVMVFJBTElNSVRcIixhW2EuUkVRVUVTVF9OQVZJPTIwMV09XCJSRVFVRVNUX05BVklcIixhW2EuUkVTUE9OU0VfTkFWST0yMDJdPVwiUkVTUE9OU0VfTkFWSVwiLGFbYS5SRVNQT05TRV9OQVZJX0VSUk9SPTIwM109XCJSRVNQT05TRV9OQVZJX0VSUk9SXCIsYVthLlJFU1BPTlNFX05BVklfVElNRU9VVD0yMDRdPVwiUkVTUE9OU0VfTkFWSV9USU1FT1VUXCJ9KGEuQ29ubmVjdGlvblN0YXR1c3x8KGEuQ29ubmVjdGlvblN0YXR1cz17fSkpO2EuQ29ubmVjdGlvblN0YXR1czshZnVuY3Rpb24oYSl7YVthLkRPX05PVF9ESVNUVVJCPTBdPVwiRE9fTk9UX0RJU1RVUkJcIixhW2EuTk9USUZZPTFdPVwiTk9USUZZXCJ9KGEuQ29udmVyc2F0aW9uTm90aWZpY2F0aW9uU3RhdHVzfHwoYS5Db252ZXJzYXRpb25Ob3RpZmljYXRpb25TdGF0dXM9e30pKTthLkNvbnZlcnNhdGlvbk5vdGlmaWNhdGlvblN0YXR1czshZnVuY3Rpb24oYSl7YVthLk5PTkU9MF09XCJOT05FXCIsYVthLlBSSVZBVEU9MV09XCJQUklWQVRFXCIsYVthLkRJU0NVU1NJT049Ml09XCJESVNDVVNTSU9OXCIsYVthLkdST1VQPTNdPVwiR1JPVVBcIixhW2EuQ0hBVFJPT009NF09XCJDSEFUUk9PTVwiLGFbYS5DVVNUT01FUl9TRVJWSUNFPTVdPVwiQ1VTVE9NRVJfU0VSVklDRVwiLGFbYS5TWVNURU09Nl09XCJTWVNURU1cIixhW2EuQVBQX1BVQkxJQ19TRVJWSUNFPTddPVwiQVBQX1BVQkxJQ19TRVJWSUNFXCIsYVthLlBVQkxJQ19TRVJWSUNFPThdPVwiUFVCTElDX1NFUlZJQ0VcIn0oYS5Db252ZXJzYXRpb25UeXBlfHwoYS5Db252ZXJzYXRpb25UeXBlPXt9KSk7YS5Db252ZXJzYXRpb25UeXBlOyFmdW5jdGlvbihhKXthW2EuT1BFTkVEPTBdPVwiT1BFTkVEXCIsYVthLkNMT1NFRD0xXT1cIkNMT1NFRFwifShhLkRpc2N1c3Npb25JbnZpdGVTdGF0dXN8fChhLkRpc2N1c3Npb25JbnZpdGVTdGF0dXM9e30pKTthLkRpc2N1c3Npb25JbnZpdGVTdGF0dXM7IWZ1bmN0aW9uKGEpe2FbYS5SRUNBTExfTUVTU0FHRT0yNTEwMV09XCJSRUNBTExfTUVTU0FHRVwiLGFbYS5TRU5EX0ZSRVFVRU5DWV9UT09fRkFTVD0yMDYwNF09XCJTRU5EX0ZSRVFVRU5DWV9UT09fRkFTVFwiLGFbYS5SQ19NU0dfVU5BVVRIT1JJWkVEPTIwNDA2XT1cIlJDX01TR19VTkFVVEhPUklaRURcIixhW2EuUkNfRElTQ1VTU0lPTl9HUk9VUF9JRF9JTlZBTElEPTIwNDA3XT1cIlJDX0RJU0NVU1NJT05fR1JPVVBfSURfSU5WQUxJRFwiLGFbYS5GT1JCSURERU5fSU5fR1JPVVA9MjI0MDhdPVwiRk9SQklEREVOX0lOX0dST1VQXCIsYVthLk5PVF9JTl9ESVNDVVNTSU9OPTIxNDA2XT1cIk5PVF9JTl9ESVNDVVNTSU9OXCIsYVthLk5PVF9JTl9HUk9VUD0yMjQwNl09XCJOT1RfSU5fR1JPVVBcIixhW2EuTk9UX0lOX0NIQVRST09NPTIzNDA2XT1cIk5PVF9JTl9DSEFUUk9PTVwiLGFbYS5GT1JCSURERU5fSU5fQ0hBVFJPT009MjM0MDhdPVwiRk9SQklEREVOX0lOX0NIQVRST09NXCIsYVthLlJDX0NIQVRST09NX1VTRVJfS0lDS0VEPTIzNDA5XT1cIlJDX0NIQVRST09NX1VTRVJfS0lDS0VEXCIsYVthLlJDX0NIQVRST09NX05PVF9FWElTVD0yMzQxMF09XCJSQ19DSEFUUk9PTV9OT1RfRVhJU1RcIixhW2EuUkNfQ0hBVFJPT01fSVNfRlVMTD0yMzQxMV09XCJSQ19DSEFUUk9PTV9JU19GVUxMXCIsYVthLlJDX0NIQVRST09NX1BBVEFNRVRFUl9JTlZBTElEPTIzNDEyXT1cIlJDX0NIQVRST09NX1BBVEFNRVRFUl9JTlZBTElEXCIsYVthLkNIQVRST09NX0dFVF9ISVNUT1JZTVNHX0VSUk9SPTIzNDEzXT1cIkNIQVRST09NX0dFVF9ISVNUT1JZTVNHX0VSUk9SXCIsYVthLkNIQVRST09NX05PVF9PUEVOX0hJU1RPUllNU0dfU1RPUkU9MjM0MTRdPVwiQ0hBVFJPT01fTk9UX09QRU5fSElTVE9SWU1TR19TVE9SRVwiLGFbYS5TRU5TSVRJVkVfU0hJRUxEPTIxNTAxXT1cIlNFTlNJVElWRV9TSElFTERcIixhW2EuU0VOU0lUSVZFX1JFUExBQ0U9MjE1MDJdPVwiU0VOU0lUSVZFX1JFUExBQ0VcIixhW2EuVElNRU9VVD0tMV09XCJUSU1FT1VUXCIsYVthLlVOS05PV049LTJdPVwiVU5LTk9XTlwiLGFbYS5KT0lOX0lOX0RJU0NVU1NJT049MjE0MDddPVwiSk9JTl9JTl9ESVNDVVNTSU9OXCIsYVthLkNSRUFURV9ESVNDVVNTSU9OPTIxNDA4XT1cIkNSRUFURV9ESVNDVVNTSU9OXCIsYVthLklOVklURV9ESUNVU1NJT049MjE0MDldPVwiSU5WSVRFX0RJQ1VTU0lPTlwiLGFbYS5HRVRfVVNFUklORk9fRVJST1I9MjM0MDddPVwiR0VUX1VTRVJJTkZPX0VSUk9SXCIsYVthLlJFSkVDVEVEX0JZX0JMQUNLTElTVD00MDVdPVwiUkVKRUNURURfQllfQkxBQ0tMSVNUXCIsYVthLlJDX05FVF9DSEFOTkVMX0lOVkFMSUQ9MzAwMDFdPVwiUkNfTkVUX0NIQU5ORUxfSU5WQUxJRFwiLGFbYS5SQ19ORVRfVU5BVkFJTEFCTEU9MzAwMDJdPVwiUkNfTkVUX1VOQVZBSUxBQkxFXCIsYVthLlJDX01TR19SRVNQX1RJTUVPVVQ9MzAwMDNdPVwiUkNfTVNHX1JFU1BfVElNRU9VVFwiLGFbYS5SQ19IVFRQX1NFTkRfRkFJTD0zMDAwNF09XCJSQ19IVFRQX1NFTkRfRkFJTFwiLGFbYS5SQ19IVFRQX1JFUV9USU1FT1VUPTMwMDA1XT1cIlJDX0hUVFBfUkVRX1RJTUVPVVRcIixhW2EuUkNfSFRUUF9SRUNWX0ZBSUw9MzAwMDZdPVwiUkNfSFRUUF9SRUNWX0ZBSUxcIixhW2EuUkNfTkFWSV9SRVNPVVJDRV9FUlJPUj0zMDAwN109XCJSQ19OQVZJX1JFU09VUkNFX0VSUk9SXCIsYVthLlJDX05PREVfTk9UX0ZPVU5EPTMwMDA4XT1cIlJDX05PREVfTk9UX0ZPVU5EXCIsYVthLlJDX0RPTUFJTl9OT1RfUkVTT0xWRT0zMDAwOV09XCJSQ19ET01BSU5fTk9UX1JFU09MVkVcIixhW2EuUkNfU09DS0VUX05PVF9DUkVBVEVEPTMwMDEwXT1cIlJDX1NPQ0tFVF9OT1RfQ1JFQVRFRFwiLGFbYS5SQ19TT0NLRVRfRElTQ09OTkVDVEVEPTMwMDExXT1cIlJDX1NPQ0tFVF9ESVNDT05ORUNURURcIixhW2EuUkNfUElOR19TRU5EX0ZBSUw9MzAwMTJdPVwiUkNfUElOR19TRU5EX0ZBSUxcIixhW2EuUkNfUE9OR19SRUNWX0ZBSUw9MzAwMTNdPVwiUkNfUE9OR19SRUNWX0ZBSUxcIixhW2EuUkNfTVNHX1NFTkRfRkFJTD0zMDAxNF09XCJSQ19NU0dfU0VORF9GQUlMXCIsYVthLlJDX0NPTk5fQUNLX1RJTUVPVVQ9MzFlM109XCJSQ19DT05OX0FDS19USU1FT1VUXCIsYVthLlJDX0NPTk5fUFJPVE9fVkVSU0lPTl9FUlJPUj0zMTAwMV09XCJSQ19DT05OX1BST1RPX1ZFUlNJT05fRVJST1JcIixhW2EuUkNfQ09OTl9JRF9SRUpFQ1Q9MzEwMDJdPVwiUkNfQ09OTl9JRF9SRUpFQ1RcIixhW2EuUkNfQ09OTl9TRVJWRVJfVU5BVkFJTEFCTEU9MzEwMDNdPVwiUkNfQ09OTl9TRVJWRVJfVU5BVkFJTEFCTEVcIixhW2EuUkNfQ09OTl9VU0VSX09SX1BBU1NXRF9FUlJPUj0zMTAwNF09XCJSQ19DT05OX1VTRVJfT1JfUEFTU1dEX0VSUk9SXCIsYVthLlJDX0NPTk5fTk9UX0FVVEhST1JJWkVEPTMxMDA1XT1cIlJDX0NPTk5fTk9UX0FVVEhST1JJWkVEXCIsYVthLlJDX0NPTk5fUkVESVJFQ1RFRD0zMTAwNl09XCJSQ19DT05OX1JFRElSRUNURURcIixhW2EuUkNfQ09OTl9QQUNLQUdFX05BTUVfSU5WQUxJRD0zMTAwN109XCJSQ19DT05OX1BBQ0tBR0VfTkFNRV9JTlZBTElEXCIsYVthLlJDX0NPTk5fQVBQX0JMT0NLRURfT1JfREVMRVRFRD0zMTAwOF09XCJSQ19DT05OX0FQUF9CTE9DS0VEX09SX0RFTEVURURcIixhW2EuUkNfQ09OTl9VU0VSX0JMT0NLRUQ9MzEwMDldPVwiUkNfQ09OTl9VU0VSX0JMT0NLRURcIixhW2EuUkNfRElTQ09OTl9LSUNLPTMxMDEwXT1cIlJDX0RJU0NPTk5fS0lDS1wiLGFbYS5SQ19ESVNDT05OX0VYQ0VQVElPTj0zMTAxMV09XCJSQ19ESVNDT05OX0VYQ0VQVElPTlwiLGFbYS5SQ19RVUVSWV9BQ0tfTk9fREFUQT0zMjAwMV09XCJSQ19RVUVSWV9BQ0tfTk9fREFUQVwiLGFbYS5SQ19NU0dfREFUQV9JTkNPTVBMRVRFPTMyMDAyXT1cIlJDX01TR19EQVRBX0lOQ09NUExFVEVcIixhW2EuQklaX0VSUk9SX0NMSUVOVF9OT1RfSU5JVD0zMzAwMV09XCJCSVpfRVJST1JfQ0xJRU5UX05PVF9JTklUXCIsYVthLkJJWl9FUlJPUl9EQVRBQkFTRV9FUlJPUj0zMzAwMl09XCJCSVpfRVJST1JfREFUQUJBU0VfRVJST1JcIixhW2EuQklaX0VSUk9SX0lOVkFMSURfUEFSQU1FVEVSPTMzMDAzXT1cIkJJWl9FUlJPUl9JTlZBTElEX1BBUkFNRVRFUlwiLGFbYS5CSVpfRVJST1JfTk9fQ0hBTk5FTD0zMzAwNF09XCJCSVpfRVJST1JfTk9fQ0hBTk5FTFwiLGFbYS5CSVpfRVJST1JfUkVDT05ORUNUX1NVQ0NFU1M9MzMwMDVdPVwiQklaX0VSUk9SX1JFQ09OTkVDVF9TVUNDRVNTXCIsYVthLkJJWl9FUlJPUl9DT05ORUNUSU5HPTMzMDA2XT1cIkJJWl9FUlJPUl9DT05ORUNUSU5HXCIsYVthLk1TR19ST0FNSU5HX1NFUlZJQ0VfVU5BVkFJTEFCTEU9MzMwMDddPVwiTVNHX1JPQU1JTkdfU0VSVklDRV9VTkFWQUlMQUJMRVwiLGFbYS5NU0dfSU5TRVJUX0VSUk9SPTMzMDA4XT1cIk1TR19JTlNFUlRfRVJST1JcIixhW2EuTVNHX0RFTF9FUlJPUj0zMzAwOV09XCJNU0dfREVMX0VSUk9SXCIsYVthLkNPTlZFUl9SRU1PVkVfRVJST1I9MzQwMDFdPVwiQ09OVkVSX1JFTU9WRV9FUlJPUlwiLGFbYS5DT05WRVJfR0VUTElTVF9FUlJPUj0zNDAwMl09XCJDT05WRVJfR0VUTElTVF9FUlJPUlwiLGFbYS5DT05WRVJfU0VUT1BfRVJST1I9MzQwMDNdPVwiQ09OVkVSX1NFVE9QX0VSUk9SXCIsYVthLkNPTlZFUl9UT1RBTF9VTlJFQURfRVJST1I9MzQwMDRdPVwiQ09OVkVSX1RPVEFMX1VOUkVBRF9FUlJPUlwiLGFbYS5DT05WRVJfVFlQRV9VTlJFQURfRVJST1I9MzQwMDVdPVwiQ09OVkVSX1RZUEVfVU5SRUFEX0VSUk9SXCIsYVthLkNPTlZFUl9JRF9UWVBFX1VOUkVBRF9FUlJPUj0zNDAwNl09XCJDT05WRVJfSURfVFlQRV9VTlJFQURfRVJST1JcIixhW2EuQ09OVkVSX0NMRUFSX0VSUk9SPTM0MDA3XT1cIkNPTlZFUl9DTEVBUl9FUlJPUlwiLGFbYS5DTEVBUl9ISVNfRVJST1I9MzQwMTBdPVwiQ0xFQVJfSElTX0VSUk9SXCIsYVthLkNMRUFSX0hJU19UWVBFX0VSUk9SPTM0MDA4XT1cIkNMRUFSX0hJU19UWVBFX0VSUk9SXCIsYVthLkNMRUFSX0hJU19USU1FX0VSUk9SPTM0MDExXT1cIkNMRUFSX0hJU19USU1FX0VSUk9SXCIsYVthLkNPTlZFUl9HRVRfRVJST1I9MzQwMDldPVwiQ09OVkVSX0dFVF9FUlJPUlwiLGFbYS5HUk9VUF9TWU5DX0VSUk9SPTM1MDAxXT1cIkdST1VQX1NZTkNfRVJST1JcIixhW2EuR1JPVVBfTUFUQ0hfRVJST1I9MzUwMDJdPVwiR1JPVVBfTUFUQ0hfRVJST1JcIixhW2EuQ0hBVFJPT01fSURfSVNOVUxMPTM2MDAxXT1cIkNIQVRST09NX0lEX0lTTlVMTFwiLGFbYS5DSEFSVE9PTV9KT0lOX0VSUk9SPTM2MDAyXT1cIkNIQVJUT09NX0pPSU5fRVJST1JcIixhW2EuQ0hBVFJPT01fSElTTUVTU0FHRV9FUlJPUj0zNjAwM109XCJDSEFUUk9PTV9ISVNNRVNTQUdFX0VSUk9SXCIsYVthLkJMQUNLX0FERF9FUlJPUj0zNzAwMV09XCJCTEFDS19BRERfRVJST1JcIixhW2EuQkxBQ0tfR0VUU1RBVFVTX0VSUk9SPTM3MDAyXT1cIkJMQUNLX0dFVFNUQVRVU19FUlJPUlwiLGFbYS5CTEFDS19SRU1PVkVfRVJST1I9MzcwMDNdPVwiQkxBQ0tfUkVNT1ZFX0VSUk9SXCIsYVthLkRSQUZfR0VUX0VSUk9SPTM4MDAxXT1cIkRSQUZfR0VUX0VSUk9SXCIsYVthLkRSQUZfU0FWRV9FUlJPUj0zODAwMl09XCJEUkFGX1NBVkVfRVJST1JcIixhW2EuRFJBRl9SRU1PVkVfRVJST1I9MzgwMDNdPVwiRFJBRl9SRU1PVkVfRVJST1JcIixhW2EuU1VCU0NSSUJFX0VSUk9SPTM5MDAxXT1cIlNVQlNDUklCRV9FUlJPUlwiLGFbYS5RTlRLTl9GSUxFVFlQRV9FUlJPUj00MTAwMV09XCJRTlRLTl9GSUxFVFlQRV9FUlJPUlwiLGFbYS5RTlRLTl9HRVRfRVJST1I9NDEwMDJdPVwiUU5US05fR0VUX0VSUk9SXCIsYVthLkNPT0tJRV9FTkFCTEU9NTEwMDFdPVwiQ09PS0lFX0VOQUJMRVwiLGFbYS5HRVRfTUVTU0FHRV9CWV9JRF9FUlJPUj02MTAwMV09XCJHRVRfTUVTU0FHRV9CWV9JRF9FUlJPUlwiLGFbYS5IQVZOT0RFVklDRUlEPTI0MDAxXT1cIkhBVk5PREVWSUNFSURcIixhW2EuREVWSUNFSURJU0hBVkU9MjQwMDJdPVwiREVWSUNFSURJU0hBVkVcIixhW2EuU1VDQ0VTUz0wXT1cIlNVQ0NFU1NcIixhW2EuRkVJTEQ9MjQwMDldPVwiRkVJTERcIixhW2EuVk9JUElTTlVMTD0yNDAxM109XCJWT0lQSVNOVUxMXCIsYVthLk5PRU5HSU5FVFlQRT0yNDAxMF09XCJOT0VOR0lORVRZUEVcIixhW2EuTlVMTENIQU5ORUxOQU1FPTI0MDExXT1cIk5VTExDSEFOTkVMTkFNRVwiLGFbYS5WT0lQRFlBTk1JQ0VSUk9SPTI0MDEyXT1cIlZPSVBEWUFOTUlDRVJST1JcIixhW2EuTk9WT0lQPTI0MDE0XT1cIk5PVk9JUFwiLGFbYS5JTlRFUk5BTEVSUlJPUj0yNDAxNV09XCJJTlRFUk5BTEVSUlJPUlwiLGFbYS5WT0lQQ0xPU0U9MjQwMTZdPVwiVk9JUENMT1NFXCIsYVthLkNMT1NFX0JFRk9SRV9PUEVOPTUxMDAxXT1cIkNMT1NFX0JFRk9SRV9PUEVOXCIsYVthLkFMUkVBRFlfSU5fVVNFPTUxMDAyXT1cIkFMUkVBRFlfSU5fVVNFXCIsYVthLklOVkFMSURfQ0hBTk5FTF9OQU1FPTUxMDAzXT1cIklOVkFMSURfQ0hBTk5FTF9OQU1FXCIsYVthLlZJREVPX0NPTlRBSU5FUl9JU19OVUxMPTUxMDA0XT1cIlZJREVPX0NPTlRBSU5FUl9JU19OVUxMXCIsYVthLkRFTEVURV9NRVNTQUdFX0lEX0lTX05VTEw9NjEwMDFdPVwiREVMRVRFX01FU1NBR0VfSURfSVNfTlVMTFwiLGFbYS5DQU5DRUw9MV09XCJDQU5DRUxcIixhW2EuUkVKRUNUPTJdPVwiUkVKRUNUXCIsYVthLkhBTkdVUD0zXT1cIkhBTkdVUFwiLGFbYS5CVVNZTElORT00XT1cIkJVU1lMSU5FXCIsYVthLk5PX1JFU1BPTlNFPTVdPVwiTk9fUkVTUE9OU0VcIixhW2EuRU5HSU5FX1VOX1NVUFBPUlRFRD02XT1cIkVOR0lORV9VTl9TVVBQT1JURURcIixhW2EuTkVUV09SS19FUlJPUj03XT1cIk5FVFdPUktfRVJST1JcIixhW2EuUkVNT1RFX0NBTkNFTD0xMV09XCJSRU1PVEVfQ0FOQ0VMXCIsYVthLlJFTU9URV9SRUpFQ1Q9MTJdPVwiUkVNT1RFX1JFSkVDVFwiLGFbYS5SRU1PVEVfSEFOR1VQPTEzXT1cIlJFTU9URV9IQU5HVVBcIixhW2EuUkVNT1RFX0JVU1lMSU5FPTE0XT1cIlJFTU9URV9CVVNZTElORVwiLGFbYS5SRU1PVEVfTk9fUkVTUE9OU0U9MTVdPVwiUkVNT1RFX05PX1JFU1BPTlNFXCIsYVthLlJFTU9URV9FTkdJTkVfVU5fU1VQUE9SVEVEPTE2XT1cIlJFTU9URV9FTkdJTkVfVU5fU1VQUE9SVEVEXCIsYVthLlJFTU9URV9ORVRXT1JLX0VSUk9SPTE3XT1cIlJFTU9URV9ORVRXT1JLX0VSUk9SXCIsYVthLlZPSVBfTk9UX0FWQUxJQUJMRT0xOF09XCJWT0lQX05PVF9BVkFMSUFCTEVcIn0oYS5FcnJvckNvZGV8fChhLkVycm9yQ29kZT17fSkpO2EuRXJyb3JDb2RlOyFmdW5jdGlvbihhKXthW2EuTUVESUFfQVVESU89MV09XCJNRURJQV9BVURJT1wiLGFbYS5NRURJQV9WRURJTz0yXT1cIk1FRElBX1ZFRElPXCJ9KGEuVm9JUE1lZGlhVHlwZXx8KGEuVm9JUE1lZGlhVHlwZT17fSkpO2EuVm9JUE1lZGlhVHlwZTshZnVuY3Rpb24oYSl7YVthLklNQUdFPTFdPVwiSU1BR0VcIixhW2EuQVVESU89Ml09XCJBVURJT1wiLGFbYS5WSURFTz0zXT1cIlZJREVPXCIsYVthLkZJTEU9MTAwXT1cIkZJTEVcIn0oYS5NZWRpYVR5cGV8fChhLk1lZGlhVHlwZT17fSkpO2EuTWVkaWFUeXBlOyFmdW5jdGlvbihhKXthW2EuU0VORD0xXT1cIlNFTkRcIixhW2EuUkVDRUlWRT0yXT1cIlJFQ0VJVkVcIn0oYS5NZXNzYWdlRGlyZWN0aW9ufHwoYS5NZXNzYWdlRGlyZWN0aW9uPXt9KSk7YS5NZXNzYWdlRGlyZWN0aW9uOyFmdW5jdGlvbihhKXthW2EuSU1BR0U9MV09XCJJTUFHRVwiLGFbYS5BVURJTz0yXT1cIkFVRElPXCIsYVthLlZJREVPPTNdPVwiVklERU9cIixhW2EuRklMRT00XT1cIkZJTEVcIn0oYS5GaWxlVHlwZXx8KGEuRmlsZVR5cGU9e30pKTthLkZpbGVUeXBlOyFmdW5jdGlvbihhKXthW2EuUkNfUkVBTF9USU1FX0xPQ0FUSU9OX05PVF9JTklUPS0xXT1cIlJDX1JFQUxfVElNRV9MT0NBVElPTl9OT1RfSU5JVFwiLGFbYS5SQ19SRUFMX1RJTUVfTE9DQVRJT05fU1VDQ0VTUz0wXT1cIlJDX1JFQUxfVElNRV9MT0NBVElPTl9TVUNDRVNTXCIsYVthLlJDX1JFQUxfVElNRV9MT0NBVElPTl9HUFNfRElTQUJMRUQ9MV09XCJSQ19SRUFMX1RJTUVfTE9DQVRJT05fR1BTX0RJU0FCTEVEXCIsYVthLlJDX1JFQUxfVElNRV9MT0NBVElPTl9DT05WRVJTQVRJT05fTk9UX1NVUFBPUlQ9Ml09XCJSQ19SRUFMX1RJTUVfTE9DQVRJT05fQ09OVkVSU0FUSU9OX05PVF9TVVBQT1JUXCIsYVthLlJDX1JFQUxfVElNRV9MT0NBVElPTl9JU19PTl9HT0lORz0zXT1cIlJDX1JFQUxfVElNRV9MT0NBVElPTl9JU19PTl9HT0lOR1wiLGFbYS5SQ19SRUFMX1RJTUVfTE9DQVRJT05fRVhDRUVEX01BWF9QQVJUSUNJUEFOVD00XT1cIlJDX1JFQUxfVElNRV9MT0NBVElPTl9FWENFRURfTUFYX1BBUlRJQ0lQQU5UXCIsYVthLlJDX1JFQUxfVElNRV9MT0NBVElPTl9KT0lOX0ZBSUxVUkU9NV09XCJSQ19SRUFMX1RJTUVfTE9DQVRJT05fSk9JTl9GQUlMVVJFXCIsYVthLlJDX1JFQUxfVElNRV9MT0NBVElPTl9TVEFSVF9GQUlMVVJFPTZdPVwiUkNfUkVBTF9USU1FX0xPQ0FUSU9OX1NUQVJUX0ZBSUxVUkVcIixhW2EuUkNfUkVBTF9USU1FX0xPQ0FUSU9OX05FVFdPUktfVU5BVkFJTEFCTEU9N109XCJSQ19SRUFMX1RJTUVfTE9DQVRJT05fTkVUV09SS19VTkFWQUlMQUJMRVwifShhLlJlYWxUaW1lTG9jYXRpb25FcnJvckNvZGV8fChhLlJlYWxUaW1lTG9jYXRpb25FcnJvckNvZGU9e30pKTthLlJlYWxUaW1lTG9jYXRpb25FcnJvckNvZGU7IWZ1bmN0aW9uKGEpe2FbYS5SQ19SRUFMX1RJTUVfTE9DQVRJT05fU1RBVFVTX0lETEU9MF09XCJSQ19SRUFMX1RJTUVfTE9DQVRJT05fU1RBVFVTX0lETEVcIixhW2EuUkNfUkVBTF9USU1FX0xPQ0FUSU9OX1NUQVRVU19JTkNPTUlORz0xXT1cIlJDX1JFQUxfVElNRV9MT0NBVElPTl9TVEFUVVNfSU5DT01JTkdcIixhW2EuUkNfUkVBTF9USU1FX0xPQ0FUSU9OX1NUQVRVU19PVVRHT0lORz0yXT1cIlJDX1JFQUxfVElNRV9MT0NBVElPTl9TVEFUVVNfT1VUR09JTkdcIixhW2EuUkNfUkVBTF9USU1FX0xPQ0FUSU9OX1NUQVRVU19DT05ORUNURUQ9M109XCJSQ19SRUFMX1RJTUVfTE9DQVRJT05fU1RBVFVTX0NPTk5FQ1RFRFwifShhLlJlYWxUaW1lTG9jYXRpb25TdGF0dXN8fChhLlJlYWxUaW1lTG9jYXRpb25TdGF0dXM9e30pKTthLlJlYWxUaW1lTG9jYXRpb25TdGF0dXM7IWZ1bmN0aW9uKGEpe2FbYS5SRUFEPTFdPVwiUkVBRFwiLGFbYS5MSVNURU5FRD0yXT1cIkxJU1RFTkVEXCIsYVthLkRPV05MT0FERUQ9NF09XCJET1dOTE9BREVEXCIsYVthLlJFVFJJRVZFRD04XT1cIlJFVFJJRVZFRFwiLGFbYS5VTlJFQUQ9MF09XCJVTlJFQURcIn0oYS5SZWNlaXZlZFN0YXR1c3x8KGEuUmVjZWl2ZWRTdGF0dXM9e30pKTthLlJlY2VpdmVkU3RhdHVzOyFmdW5jdGlvbihhKXthW2EuUkVBRD0xXT1cIlJFQURcIixhW2EuTElTVEVORUQ9Ml09XCJMSVNURU5FRFwiLGFbYS5ET1dOTE9BREVEPTRdPVwiRE9XTkxPQURFRFwiLGFbYS5SRVRSSUVWRUQ9OF09XCJSRVRSSUVWRURcIixhW2EuVU5SRUFEPTBdPVwiVU5SRUFEXCJ9KGEuUmVhZFN0YXR1c3x8KGEuUmVhZFN0YXR1cz17fSkpO2EuUmVhZFN0YXR1czshZnVuY3Rpb24oYSl7YVthLkVYQUNUPTBdPVwiRVhBQ1RcIixhW2EuRlVaWlk9MV09XCJGVVpaWVwifShhLlNlYXJjaFR5cGV8fChhLlNlYXJjaFR5cGU9e30pKTthLlNlYXJjaFR5cGU7IWZ1bmN0aW9uKGEpe2FbYS5TRU5ESU5HPTEwXT1cIlNFTkRJTkdcIixhW2EuRkFJTEVEPTIwXT1cIkZBSUxFRFwiLGFbYS5TRU5UPTMwXT1cIlNFTlRcIixhW2EuUkVDRUlWRUQ9NDBdPVwiUkVDRUlWRURcIixhW2EuUkVBRD01MF09XCJSRUFEXCIsYVthLkRFU1RST1lFRD02MF09XCJERVNUUk9ZRURcIn0oYS5TZW50U3RhdHVzfHwoYS5TZW50U3RhdHVzPXt9KSk7YS5TZW50U3RhdHVzOyFmdW5jdGlvbihhKXthW2EuQUNDRVBURUQ9MF09XCJBQ0NFUFRFRFwiLGFbYS5VTkFDQ0VQVEFCTEVfUFJPVE9DT0xfVkVSU0lPTj0xXT1cIlVOQUNDRVBUQUJMRV9QUk9UT0NPTF9WRVJTSU9OXCIsYVthLklERU5USUZJRVJfUkVKRUNURUQ9Ml09XCJJREVOVElGSUVSX1JFSkVDVEVEXCIsYVthLlNFUlZFUl9VTkFWQUlMQUJMRT0zXT1cIlNFUlZFUl9VTkFWQUlMQUJMRVwiLGFbYS5UT0tFTl9JTkNPUlJFQ1Q9NF09XCJUT0tFTl9JTkNPUlJFQ1RcIixhW2EuTk9UX0FVVEhPUklaRUQ9NV09XCJOT1RfQVVUSE9SSVpFRFwiLGFbYS5SRURJUkVDVD02XT1cIlJFRElSRUNUXCIsYVthLlBBQ0tBR0VfRVJST1I9N109XCJQQUNLQUdFX0VSUk9SXCIsYVthLkFQUF9CTE9DS19PUl9ERUxFVEU9OF09XCJBUFBfQkxPQ0tfT1JfREVMRVRFXCIsYVthLkJMT0NLPTldPVwiQkxPQ0tcIixhW2EuVE9LRU5fRVhQSVJFPTEwXT1cIlRPS0VOX0VYUElSRVwiLGFbYS5ERVZJQ0VfRVJST1I9MTFdPVwiREVWSUNFX0VSUk9SXCJ9KGEuQ29ubmVjdGlvblN0YXRlfHwoYS5Db25uZWN0aW9uU3RhdGU9e30pKTthLkNvbm5lY3Rpb25TdGF0ZTshZnVuY3Rpb24oYSl7YVthLlJPT009MV09XCJST09NXCIsYVthLlBFUlNPTj0yXT1cIlBFUlNPTlwifShhLlJUQ0FQSVR5cGV8fChhLlJUQ0FQSVR5cGU9e30pKTthLlJUQ0FQSVR5cGV9KFJvbmdJTUxpYnx8KFJvbmdJTUxpYj17fSkpO3ZhciBSb25nSU1MaWI7IWZ1bmN0aW9uKGEpe3ZhciBiPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gYigpe31yZXR1cm4gYi5nZXRJbnN0YW5jZT1mdW5jdGlvbigpe2lmKCFiLl9pbnN0YW5jZSl0aHJvdyBuZXcgRXJyb3IoXCJSb25nSU1DbGllbnQgaXMgbm90IGluaXRpYWxpemVkLiBDYWxsIC5pbml0KCkgbWV0aG9kIGZpcnN0LlwiKTtyZXR1cm4gYi5faW5zdGFuY2V9LGIuc2hvd0Vycm9yPWZ1bmN0aW9uKGEpe2NvbnNvbGUmJmNvbnNvbGUuZXJyb3ImJmNvbnNvbGUuZXJyb3IoSlNPTi5zdHJpbmdpZnkoYSkpfSxiLmxvZ2dlcj1mdW5jdGlvbihhKXt2YXIgYz1hLmNvZGUsZD1iLkxvZ0ZhY3RvcnlbY118fGE7ZC5mdW5jTmFtZT1hLmZ1bmNOYW1lLGQubXNnPWEubXNnfHxkLm1zZyxiLl9tZW1vcnlTdG9yZS5kZXBlbmQuc2hvd0Vycm9yJiZiLnNob3dFcnJvcihkKX0sYi5sb2dDYWxsYmFjaz1mdW5jdGlvbihhLGMpe3JldHVybntvblN1Y2Nlc3M6YS5vblN1Y2Nlc3Msb25FcnJvcjpmdW5jdGlvbihkKXtiLmxvZ2dlcih7Y29kZTpkLGZ1bmNOYW1lOmN9KSxhLm9uRXJyb3IoZCl9fX0sYi5sb2dTZW5kQ2FsbGJhY2s9ZnVuY3Rpb24oYSxjKXtyZXR1cm57b25TdWNjZXNzOmEub25TdWNjZXNzLG9uRXJyb3I6ZnVuY3Rpb24oZCxlKXtiLmxvZ2dlcih7Y29kZTpkLGZ1bmNOYW1lOmN9KSxhLm9uRXJyb3IoZCxlKX0sb25CZWZvcmU6YS5vbkJlZm9yZX19LGIuaW5pdD1mdW5jdGlvbihjLGQsZSxmKXtpZihiLl9pbnN0YW5jZSlyZXR1cm4gYi5fbWVtb3J5U3RvcmUuc2RrSW5mbztiLl9pbnN0YW5jZT1uZXcgYixlPWV8fHt9O3ZhciBnPVwiaHR0cDovL1wiLGg9XCJ3czovL1wiO1wiaHR0cHM6XCI9PWxvY2F0aW9uLnByb3RvY29sJiYoaD1cIndzczovL1wiLGc9XCJodHRwczovL1wiKTt2YXIgaT0hMTtcImZ1bmN0aW9uXCIhPXR5cGVvZiBXZWJTb2NrZXQmJihpPSEwKTt2YXIgaj1mdW5jdGlvbigpe3ZhciBhPXR5cGVvZiBXZWJTb2NrZXQsYj1cIm51bWJlclwiPT10eXBlb2YgV2ViU29ja2V0Lk9QRU47cmV0dXJuIGEmJmJ9O1wib2JqZWN0XCI9PXR5cGVvZiBXZWJTb2NrZXQmJmooKSYmKGk9ITEpO3ZhciBrPWZ1bmN0aW9uKCl7cmV0dXJuIGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5hZGRCZWhhdmlvcn07YS5Sb25nVXRpbC5zdXBwb3J0TG9jYWxTdG9yYWdlKCk/Yi5fc3RvcmFnZVByb3ZpZGVyPW5ldyBhLkxvY2FsU3RvcmFnZVByb3ZpZGVyOmsoKT9iLl9zdG9yYWdlUHJvdmlkZXI9bmV3IGEuVXNlckRhdGFQcm92aWRlcjpiLl9zdG9yYWdlUHJvdmlkZXI9bmV3IGEuTWVtZW9yeVByb3ZpZGVyO3ZhciBsPWIuX3N0b3JhZ2VQcm92aWRlci5nZXRJdGVtKFwic2VydmVySW5kZXhcIik7Yi5zZXJ2ZXJTdG9yZS5pbmRleD1sfHwwO3ZhciBtPVwiezB9ezF9XCIsbj17YXBpOlwiYXBpLmNuLnJvbmdodWIuY29tXCJ9O2EuUm9uZ1V0aWwuZm9yRWFjaChuLGZ1bmN0aW9uKGIsYyl7bltjXT1hLlJvbmdVdGlsLnN0cmluZ0Zvcm1hdChtLFtnLGJdKX0pLGEuUm9uZ1V0aWwuZm9yRWFjaChuLGZ1bmN0aW9uKGIsYyl7dmFyIGQ9YyBpbiBlLGY9e3BhdGg6ZVtjXSx0bXBsOm0scHJvdG9jb2w6ZyxzdWI6ITB9O2I9ZD9hLlJvbmdVdGlsLmZvcm1hdFByb3RvY2xQYXRoKGYpOmIsZVtjXT1ifSk7dmFyIG89ZS5uYXZpZ2F0ZXJzfHxbXTtlLm5hdmkmJihvPVtlLm5hdmldKSwhZS5uYXZpJiZhLlJvbmdVdGlsLmlzRXF1YWwoby5sZW5ndGgsMCkmJihvPVtcIm5hdi5jbi5yb25naHViLmNvbVwiLFwibmF2Mi1jbi5yb25naHViLmNvbVwiXSksYS5Sb25nVXRpbC5mb3JFYWNoKG8sZnVuY3Rpb24oYixjKXt2YXIgZD17cGF0aDpiLHRtcGw6bSxwcm90b2NvbDpnLHN1YjohMH07Yj1hLlJvbmdVdGlsLmZvcm1hdFByb3RvY2xQYXRoKGQpLG9bY109Yn0pO3ZhciBwPXtwcm90b2J1ZjpcImNkbi5yb25naHViLmNvbS9wcm90b2J1Zi0yLjMuNS5taW4uanNcIn07YS5Sb25nVXRpbC5mb3JFYWNoKHAsZnVuY3Rpb24oYixjKXtwW2NdPWEuUm9uZ1V0aWwuc3RyaW5nRm9ybWF0KG0sW2csYl0pfSksYS5Sb25nVXRpbC5leHRlbmQocCxlKTt2YXIgcT17aXNQb2xsaW5nOmksd3NTY2hlbWU6aCxwcm90b2NvbDpnLHNob3dFcnJvcjohMCxvcGVuTXA6ITAsc25pZmZlclRpbWU6MmUzLG5hdmlUaW1lb3V0OjVlMyxuYXZpZ2F0ZXJzOm8sbWF4TmF2aVJldHJ5OjEwfTtkZWxldGUgZS5uYXZpZ2F0ZXJzLGEuUm9uZ1V0aWwuZXh0ZW5kKHEsZSksYS5Sb25nVXRpbC5pc0Z1bmN0aW9uKGUucHJvdG9idWYpJiYoYi5Qcm90b2J1Zj1lLnByb3RvYnVmKSxiLnVzZXJTdGF0dXNPYnNlcnZlcj1uZXcgYS5Sb25nT2JzZXJ2ZXIsKG5ldyBhLkZlYXR1cmVQYXRjaGVyKS5wYXRjaEFsbCgpO3ZhciByPXt0b2tlbjpcIlwiLGNhbGxiYWNrOm51bGwsbGFzdFJlYWRUaW1lOm5ldyBhLkxpbWl0YWJsZU1hcCxoaXN0b3J5TWVzc2FnZUxpbWl0Om5ldyBhLk1lbW9yeUNhY2hlLGNvbnZlcnNhdGlvbkxpc3Q6W10sYXBwS2V5OmMscHVibGljU2VydmljZU1hcDpuZXcgYS5QdWJsaWNTZXJ2aWNlTWFwLHByb3ZpZGVyVHlwZToxLGRlbHRhVGltZTowLGZpbHRlck1lc3NhZ2VzOltdLGlzU3luY1JlbW90ZUNvbnZlckxpc3Q6ITAsb3RoZXJEZXZpY2U6ITEsY3VzdFN0b3JlOnt9LGNvbnZlclN0b3JlOntsYXRlc3RNZXNzYWdlOnt9fSxjb25uZWN0QWNrVGltZTowLHZvaXBTdGF0ZWd5OjAsaXNGaXJzdFBpbmdNc2c6ITAsZGVwZW5kOmUsbGlzdGVuZXJMaXN0OmIuX21lbW9yeVN0b3JlLmxpc3RlbmVyTGlzdCxub3RpZmljYXRpb246e319O2IuX21lbW9yeVN0b3JlPXIsZCYmXCJbb2JqZWN0IE9iamVjdF1cIj09T2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGQpP2IuX2RhdGFBY2Nlc3NQcm92aWRlcj1kOmIuX2RhdGFBY2Nlc3NQcm92aWRlcj1uZXcgYS5TZXJ2ZXJEYXRhUHJvdmlkZXIsZS5hcHBDYWxsYmFjaz1mO3ZhciBzPWIuX2RhdGFBY2Nlc3NQcm92aWRlci5pbml0KGMsZSk7cmV0dXJuIGIuX21lbW9yeVN0b3JlLnNka0luZm89cyxiLl9kYXRhQWNjZXNzUHJvdmlkZXIuc2V0U2VydmVySW5mbyh7bmF2aTpsb2NhdGlvbi5wcm90b2NvbCtlLm5hdmkrXCIvbmF2aS54bWxcIn0pLGIuTWVzc2FnZVBhcmFtcz17VGV4dE1lc3NhZ2U6e29iamVjdE5hbWU6XCJSQzpUeHRNc2dcIixtc2dUYWc6bmV3IGEuTWVzc2FnZVRhZyghMCwhMCl9LEltYWdlTWVzc2FnZTp7b2JqZWN0TmFtZTpcIlJDOkltZ01zZ1wiLG1zZ1RhZzpuZXcgYS5NZXNzYWdlVGFnKCEwLCEwKX0sRGlzY3Vzc2lvbk5vdGlmaWNhdGlvbk1lc3NhZ2U6e29iamVjdE5hbWU6XCJSQzpEaXpOdGZcIixtc2dUYWc6bmV3IGEuTWVzc2FnZVRhZyghMSwhMCl9LFZvaWNlTWVzc2FnZTp7b2JqZWN0TmFtZTpcIlJDOlZjTXNnXCIsbXNnVGFnOm5ldyBhLk1lc3NhZ2VUYWcoITAsITApfSxSaWNoQ29udGVudE1lc3NhZ2U6e29iamVjdE5hbWU6XCJSQzpJbWdUZXh0TXNnXCIsbXNnVGFnOm5ldyBhLk1lc3NhZ2VUYWcoITAsITApfSxGaWxlTWVzc2FnZTp7b2JqZWN0TmFtZTpcIlJDOkZpbGVNc2dcIixtc2dUYWc6bmV3IGEuTWVzc2FnZVRhZyghMCwhMCl9LEhRVm9pY2VNZXNzYWdlOntvYmplY3ROYW1lOlwiUkM6SFFWQ01zZ1wiLG1zZ1RhZzpuZXcgYS5NZXNzYWdlVGFnKCEwLCEwKX0sSGFuZHNoYWtlTWVzc2FnZTp7b2JqZWN0TmFtZTpcIlwiLG1zZ1RhZzpuZXcgYS5NZXNzYWdlVGFnKCEwLCEwKX0sVW5rbm93bk1lc3NhZ2U6e29iamVjdE5hbWU6XCJcIixtc2dUYWc6bmV3IGEuTWVzc2FnZVRhZyghMCwhMCl9LExvY2F0aW9uTWVzc2FnZTp7b2JqZWN0TmFtZTpcIlJDOkxCU01zZ1wiLG1zZ1RhZzpuZXcgYS5NZXNzYWdlVGFnKCEwLCEwKX0sSW5mb3JtYXRpb25Ob3RpZmljYXRpb25NZXNzYWdlOntvYmplY3ROYW1lOlwiUkM6SW5mb050ZlwiLG1zZ1RhZzpuZXcgYS5NZXNzYWdlVGFnKCExLCEwKX0sQ29udGFjdE5vdGlmaWNhdGlvbk1lc3NhZ2U6e29iamVjdE5hbWU6XCJSQzpDb250YWN0TnRmXCIsbXNnVGFnOm5ldyBhLk1lc3NhZ2VUYWcoITEsITApfSxQcm9maWxlTm90aWZpY2F0aW9uTWVzc2FnZTp7b2JqZWN0TmFtZTpcIlJDOlByb2ZpbGVOdGZcIixtc2dUYWc6bmV3IGEuTWVzc2FnZVRhZyghMSwhMCl9LENvbW1hbmROb3RpZmljYXRpb25NZXNzYWdlOntvYmplY3ROYW1lOlwiUkM6Q21kTnRmXCIsbXNnVGFnOm5ldyBhLk1lc3NhZ2VUYWcoITAsITApfSxQdWJsaWNTZXJ2aWNlUmljaENvbnRlbnRNZXNzYWdlOntvYmplY3ROYW1lOlwiUkM6UFNJbWdUeHRNc2dcIixtc2dUYWc6bmV3IGEuTWVzc2FnZVRhZyghMCwhMCl9LFB1YmxpY1NlcnZpY2VNdWx0aVJpY2hDb250ZW50TWVzc2FnZTp7b2JqZWN0TmFtZTpcIlJDOlBTTXVsdGlJbWdUeHRNc2dcIixtc2dUYWc6bmV3IGEuTWVzc2FnZVRhZyghMCwhMCl9LEpybWZSZWRQYWNrZXRNZXNzYWdlOntvYmplY3ROYW1lOlwiUkNKcm1mOlJwTXNnXCIsbXNnVGFnOm5ldyBhLk1lc3NhZ2VUYWcoITAsITApfSxKcm1mUmVkUGFja2V0T3BlbmVkTWVzc2FnZTp7b2JqZWN0TmFtZTpcIlJDSnJtZjpScE9wZW5kTXNnXCIsbXNnVGFnOm5ldyBhLk1lc3NhZ2VUYWcoITAsITApfSxHcm91cE5vdGlmaWNhdGlvbk1lc3NhZ2U6e29iamVjdE5hbWU6XCJSQzpHcnBOdGZcIixtc2dUYWc6bmV3IGEuTWVzc2FnZVRhZyghMSwhMCl9LENvbW1hbmRNZXNzYWdlOntvYmplY3ROYW1lOlwiUkM6Q21kTXNnXCIsbXNnVGFnOm5ldyBhLk1lc3NhZ2VUYWcoITEsITEpfSxUeXBpbmdTdGF0dXNNZXNzYWdlOntvYmplY3ROYW1lOlwiUkM6VHlwU3RzXCIsbXNnVGFnOm5ldyBhLk1lc3NhZ2VUYWcoITEsITEpfSxQdWJsaWNTZXJ2aWNlQ29tbWFuZE1lc3NhZ2U6e29iamVjdE5hbWU6XCJSQzpQU0NtZFwiLFxyXG5tc2dUYWc6bmV3IGEuTWVzc2FnZVRhZyghMSwhMSl9LFJlY2FsbENvbW1hbmRNZXNzYWdlOntvYmplY3ROYW1lOlwiUkM6UmNDbWRcIixtc2dUYWc6bmV3IGEuTWVzc2FnZVRhZyghMSwhMCl9LFN5bmNSZWFkU3RhdHVzTWVzc2FnZTp7b2JqZWN0TmFtZTpcIlJDOlNSU01zZ1wiLG1zZ1RhZzpuZXcgYS5NZXNzYWdlVGFnKCExLCExKX0sUmVhZFJlY2VpcHRSZXF1ZXN0TWVzc2FnZTp7b2JqZWN0TmFtZTpcIlJDOlJSUmVxTXNnXCIsbXNnVGFnOm5ldyBhLk1lc3NhZ2VUYWcoITEsITEpfSxSZWFkUmVjZWlwdFJlc3BvbnNlTWVzc2FnZTp7b2JqZWN0TmFtZTpcIlJDOlJSUnNwTXNnXCIsbXNnVGFnOm5ldyBhLk1lc3NhZ2VUYWcoITEsITEpfSxDaGFuZ2VNb2RlUmVzcG9uc2VNZXNzYWdlOntvYmplY3ROYW1lOlwiUkM6Q3NDaGFSXCIsbXNnVGFnOm5ldyBhLk1lc3NhZ2VUYWcoITEsITEpfSxDaGFuZ2VNb2RlTWVzc2FnZTp7b2JqZWN0TmFtZTpcIlJDOkNTQ2hhXCIsbXNnVGFnOm5ldyBhLk1lc3NhZ2VUYWcoITEsITEpfSxFdmFsdWF0ZU1lc3NhZ2U6e29iamVjdE5hbWU6XCJSQzpDc0V2YVwiLG1zZ1RhZzpuZXcgYS5NZXNzYWdlVGFnKCExLCExKX0sQ3VzdG9tZXJDb250YWN0OntvYmplY3ROYW1lOlwiUkM6Q3NDb250YWN0XCIsbXNnVGFnOm5ldyBhLk1lc3NhZ2VUYWcoITEsITEpfSxIYW5kU2hha2VNZXNzYWdlOntvYmplY3ROYW1lOlwiUkM6Q3NIc1wiLG1zZ1RhZzpuZXcgYS5NZXNzYWdlVGFnKCExLCExKX0sSGFuZFNoYWtlUmVzcG9uc2VNZXNzYWdlOntvYmplY3ROYW1lOlwiUkM6Q3NIc1JcIixtc2dUYWc6bmV3IGEuTWVzc2FnZVRhZyghMSwhMSl9LFN1c3BlbmRNZXNzYWdlOntvYmplY3ROYW1lOlwiUkM6Q3NTcFwiLG1zZ1RhZzpuZXcgYS5NZXNzYWdlVGFnKCExLCExKX0sVGVybWluYXRlTWVzc2FnZTp7b2JqZWN0TmFtZTpcIlJDOkNzRW5kXCIsbXNnVGFnOm5ldyBhLk1lc3NhZ2VUYWcoITEsITEpfSxDdXN0b21lclN0YXR1c1VwZGF0ZU1lc3NhZ2U6e29iamVjdE5hbWU6XCJSQzpDc1VwZGF0ZVwiLG1zZ1RhZzpuZXcgYS5NZXNzYWdlVGFnKCExLCExKX0sUmVhZFJlY2VpcHRNZXNzYWdlOntvYmplY3ROYW1lOlwiUkM6UmVhZE50ZlwiLG1zZ1RhZzpuZXcgYS5NZXNzYWdlVGFnKCExLCExKX19LGIuTWVzc2FnZVBhcmFtcy5BY2NlcHRNZXNzYWdlPXtvYmplY3ROYW1lOlwiUkM6VkNBY2NlcHRcIixtc2dUYWc6bmV3IGEuTWVzc2FnZVRhZyghMSwhMSl9LGIuTWVzc2FnZVBhcmFtcy5SaW5naW5nTWVzc2FnZT17b2JqZWN0TmFtZTpcIlJDOlZDUmluZ2luZ1wiLG1zZ1RhZzpuZXcgYS5NZXNzYWdlVGFnKCExLCExKX0sYi5NZXNzYWdlUGFyYW1zLlN1bW1hcnlNZXNzYWdlPXtvYmplY3ROYW1lOlwiUkM6VkNTdW1tYXJ5XCIsbXNnVGFnOm5ldyBhLk1lc3NhZ2VUYWcoITEsITEpfSxiLk1lc3NhZ2VQYXJhbXMuSHVuZ3VwTWVzc2FnZT17b2JqZWN0TmFtZTpcIlJDOlZDSGFuZ3VwXCIsbXNnVGFnOm5ldyBhLk1lc3NhZ2VUYWcoITEsITEpfSxiLk1lc3NhZ2VQYXJhbXMuSW52aXRlTWVzc2FnZT17b2JqZWN0TmFtZTpcIlJDOlZDSW52aXRlXCIsbXNnVGFnOm5ldyBhLk1lc3NhZ2VUYWcoITEsITEpfSxiLk1lc3NhZ2VQYXJhbXMuTWVkaWFNb2RpZnlNZXNzYWdlPXtvYmplY3ROYW1lOlwiUkM6VkNNb2RpZnlNZWRpYVwiLG1zZ1RhZzpuZXcgYS5NZXNzYWdlVGFnKCExLCExKX0sYi5NZXNzYWdlUGFyYW1zLk1lbWJlck1vZGlmeU1lc3NhZ2U9e29iamVjdE5hbWU6XCJSQzpWQ01vZGlmeU1lbVwiLG1zZ1RhZzpuZXcgYS5NZXNzYWdlVGFnKCExLCExKX0sYi5NZXNzYWdlVHlwZT17VGV4dE1lc3NhZ2U6XCJUZXh0TWVzc2FnZVwiLEltYWdlTWVzc2FnZTpcIkltYWdlTWVzc2FnZVwiLERpc2N1c3Npb25Ob3RpZmljYXRpb25NZXNzYWdlOlwiRGlzY3Vzc2lvbk5vdGlmaWNhdGlvbk1lc3NhZ2VcIixWb2ljZU1lc3NhZ2U6XCJWb2ljZU1lc3NhZ2VcIixSaWNoQ29udGVudE1lc3NhZ2U6XCJSaWNoQ29udGVudE1lc3NhZ2VcIixIYW5kc2hha2VNZXNzYWdlOlwiSGFuZHNoYWtlTWVzc2FnZVwiLFVua25vd25NZXNzYWdlOlwiVW5rbm93bk1lc3NhZ2VcIixMb2NhdGlvbk1lc3NhZ2U6XCJMb2NhdGlvbk1lc3NhZ2VcIixJbmZvcm1hdGlvbk5vdGlmaWNhdGlvbk1lc3NhZ2U6XCJJbmZvcm1hdGlvbk5vdGlmaWNhdGlvbk1lc3NhZ2VcIixDb250YWN0Tm90aWZpY2F0aW9uTWVzc2FnZTpcIkNvbnRhY3ROb3RpZmljYXRpb25NZXNzYWdlXCIsUHJvZmlsZU5vdGlmaWNhdGlvbk1lc3NhZ2U6XCJQcm9maWxlTm90aWZpY2F0aW9uTWVzc2FnZVwiLENvbW1hbmROb3RpZmljYXRpb25NZXNzYWdlOlwiQ29tbWFuZE5vdGlmaWNhdGlvbk1lc3NhZ2VcIixDb21tYW5kTWVzc2FnZTpcIkNvbW1hbmRNZXNzYWdlXCIsVHlwaW5nU3RhdHVzTWVzc2FnZTpcIlR5cGluZ1N0YXR1c01lc3NhZ2VcIixDaGFuZ2VNb2RlUmVzcG9uc2VNZXNzYWdlOlwiQ2hhbmdlTW9kZVJlc3BvbnNlTWVzc2FnZVwiLENoYW5nZU1vZGVNZXNzYWdlOlwiQ2hhbmdlTW9kZU1lc3NhZ2VcIixFdmFsdWF0ZU1lc3NhZ2U6XCJFdmFsdWF0ZU1lc3NhZ2VcIixIYW5kU2hha2VNZXNzYWdlOlwiSGFuZFNoYWtlTWVzc2FnZVwiLEhhbmRTaGFrZVJlc3BvbnNlTWVzc2FnZTpcIkhhbmRTaGFrZVJlc3BvbnNlTWVzc2FnZVwiLFN1c3BlbmRNZXNzYWdlOlwiU3VzcGVuZE1lc3NhZ2VcIixUZXJtaW5hdGVNZXNzYWdlOlwiVGVybWluYXRlTWVzc2FnZVwiLEN1c3RvbWVyQ29udGFjdDpcIkN1c3RvbWVyQ29udGFjdFwiLEN1c3RvbWVyU3RhdHVzVXBkYXRlTWVzc2FnZTpcIkN1c3RvbWVyU3RhdHVzVXBkYXRlTWVzc2FnZVwiLFN5bmNSZWFkU3RhdHVzTWVzc2FnZTpcIlN5bmNSZWFkU3RhdHVzTWVzc2FnZVwiLFJlYWRSZWNlaXB0UmVxdWVzdE1lc3NhZ2U6XCJSZWFkUmVjZWlwdFJlcXVlc3RNZXNzYWdlXCIsUmVhZFJlY2VpcHRSZXNwb25zZU1lc3NhZ2U6XCJSZWFkUmVjZWlwdFJlc3BvbnNlTWVzc2FnZVwiLEZpbGVNZXNzYWdlOlwiRmlsZU1lc3NhZ2VcIixIUVZvaWNlTWVzc2FnZTpcIkhRVm9pY2VNZXNzYWdlXCIsQWNjZXB0TWVzc2FnZTpcIkFjY2VwdE1lc3NhZ2VcIixSaW5naW5nTWVzc2FnZTpcIlJpbmdpbmdNZXNzYWdlXCIsU3VtbWFyeU1lc3NhZ2U6XCJTdW1tYXJ5TWVzc2FnZVwiLEh1bmd1cE1lc3NhZ2U6XCJIdW5ndXBNZXNzYWdlXCIsSW52aXRlTWVzc2FnZTpcIkludml0ZU1lc3NhZ2VcIixNZWRpYU1vZGlmeU1lc3NhZ2U6XCJNZWRpYU1vZGlmeU1lc3NhZ2VcIixNZW1iZXJNb2RpZnlNZXNzYWdlOlwiTWVtYmVyTW9kaWZ5TWVzc2FnZVwiLEpybWZSZWRQYWNrZXRNZXNzYWdlOlwiSnJtZlJlZFBhY2tldE1lc3NhZ2VcIixKcm1mUmVkUGFja2V0T3BlbmVkTWVzc2FnZTpcIkpybWZSZWRQYWNrZXRPcGVuZWRNZXNzYWdlXCIsR3JvdXBOb3RpZmljYXRpb25NZXNzYWdlOlwiR3JvdXBOb3RpZmljYXRpb25NZXNzYWdlXCIsUHVibGljU2VydmljZVJpY2hDb250ZW50TWVzc2FnZTpcIlB1YmxpY1NlcnZpY2VSaWNoQ29udGVudE1lc3NhZ2VcIixQdWJsaWNTZXJ2aWNlTXVsdGlSaWNoQ29udGVudE1lc3NhZ2U6XCJQdWJsaWNTZXJ2aWNlTXVsdGlSaWNoQ29udGVudE1lc3NhZ2VcIixQdWJsaWNTZXJ2aWNlQ29tbWFuZE1lc3NhZ2U6XCJQdWJsaWNTZXJ2aWNlQ29tbWFuZE1lc3NhZ2VcIixSZWNhbGxDb21tYW5kTWVzc2FnZTpcIlJlY2FsbENvbW1hbmRNZXNzYWdlXCIsUmVhZFJlY2VpcHRNZXNzYWdlOlwiUmVhZFJlY2VpcHRNZXNzYWdlXCJ9LGIuTG9nRmFjdG9yeT17XCItMVwiOntjb2RlOlwiLTFcIixtc2c6XCLDpsWTwo3DpcWgwqHDpeKEosKow6jCtuKApsOm4oCUwrZcIn0sXCItMlwiOntjb2RlOlwiLTJcIixtc2c6XCLDpsWTwqrDp8W4wqXDpcW9xbjDpeKAuiDDpcKkwrHDqMK0wqVcIn0sXCItM1wiOntjb2RlOlwiLTNcIixtc2c6XCLDpcKP4oCaw6bigKLCsMOp4oCd4oSiw6jCr8KvXCJ9LFwiLTRcIjp7Y29kZTpcIi00XCIsbXNnOlwiw6XCj+KAmsOm4oCiwrDDpMK4wo3DpsKtwqPDp8Khwq7DpsuG4oCTw6XCsMWhw6bFk8Kqw6XCrsW+w6TCvuKAucOlxZLigJNcIn0sMjUxMDE6e2NvZGU6XCIyNTEwMVwiLG1zZzpcIsOm4oCZwqTDpeKAusW+w6bCtsuGw6bCgcKvw6XCj+KAmsOm4oCiwrDDqeKAneKEosOowq/Cr1wiLGRlc2M6XCLDqMKvwrfDpsKj4oKsw6bFuMKlw6bigJnCpMOl4oC6xb7DpsK2y4bDpsKBwq/DpcKP4oCaw6bigKLCsCBodHRwczovL3JvbmdjbG91ZC5naXRodWIuaW8vd2Vic2RrLWRlbW8vYXBpLXRlc3QuaHRtbFwifSwyNTEwMjp7Y29kZTpcIjI1MTAxXCIsbXNnOlwiw6XCj8Kqw6jGksK9w6bigJnCpMOl4oC6xb7DqOKAocKqw6XCj+KAmMOlwo/igJjDqeKCrMKBw6fFoeKAnsOmwrbLhsOmwoHCr1wifSwyMDYwNDp7Y29kZTpcIjIwNjA0XCIsbXNnOlwiw6XCj+KAmMOp4oKswoHDqcKi4oCYw6fFveKAocOowr/igKHDpcK/wqtcIixkZXNjOlwiaHR0cHM6Ly9kZXZlbG9wZXIucm9uZ2Nsb3VkLmNuL3RpY2tldC9pbmZvLzlRM0w2dlJLZDFjTFM3cnljQT09P3R5cGU9MVwifSwyMDQwNjp7Y29kZTpcIjIwNDA2XCIsbXNnOlwiw6jCosKrw6fCpsKBw6jCqOKCrFwifSwyMzQwNzp7Y29kZTpcIjIzNDA3XCIsbXNnOlwiw6jFvcK3w6XCj+KAk8On4oCdwqjDpsuGwrfDpcKkwrHDqMK0wqVcIn0sMjA0MDc6e2NvZGU6XCIyMDQwN1wiLG1zZzpcIsOnwr7CpMOnwrvigJ5JZMOm4oCUIMOm4oCiy4ZcIn0sMjI0MDg6e2NvZGU6XCIyMjQwOFwiLG1zZzpcIsOnwr7CpMOnwrvigJ7DqMKiwqvDp8KmwoHDqMKo4oKsXCJ9LDIyNDA2Ontjb2RlOlwiMjI0MDZcIixtc2c6XCLDpMK4wo3DpcWTwqjDp8K+wqTDp8K74oCeXCJ9LDM1MDAxOntjb2RlOlwiMzUwMDFcIixtc2c6XCLDp8K+wqTDp8K74oCew6XCkMWSw6bCrcKlw6XCvOKAmsOlwrjCuFwifSwzNTAwMjp7Y29kZTpcIjM1MDAyXCIsbXNnOlwiw6XFksK5w6nigKbCjcOnwr7CpMOkwr/CocOmwoHCr8OlwrzigJrDpcK4wrhcIn0sMjE0MDY6e2NvZGU6XCIyMTQwNlwiLG1zZzpcIsOkwrjCjcOlxZPCqMOowq7CqMOowq7CusOnwrvigJ5cIn0sMjE0MDc6e2NvZGU6XCIyMTQwN1wiLG1zZzpcIsOlxaAgw6XigKbCpcOowq7CqMOowq7CusOlwqTCscOowrTCpVwifSwyMTQwODp7Y29kZTpcIjIxNDA4XCIsbXNnOlwiw6XLhuKAusOlwrvCusOowq7CqMOowq7CusOnwrvigJ7DpcKkwrHDqMK0wqVcIn0sMjE0MDk6e2NvZGU6XCIyMTQwOVwiLG1zZzpcIsOowq7CvsOnwr3CrsOowq7CqMOowq7CusOnwrvigJ7DqeKAmuKCrMOowq/Ct8OnxaDCtsOm4oKswoHDpcKkwrHDqMK0wqVcIn0sMjM0MDY6e2NvZGU6XCIyMzQwNlwiLG1zZzpcIsOkwrjCjcOlxZPCqMOowoHFoMOlwqTCqcOlwq7CpFwifSwyMzQwODp7Y29kZTpcIjIzNDA4XCIsbXNnOlwiw6jCgcWgw6XCpMKpw6XCrsKkw6jCosKrw6fCpsKBw6jCqOKCrFwifSwyMzQwOTp7Y29kZTpcIjIzNDA5XCIsbXNnOlwiw6jCgcWgw6XCpMKpw6XCrsKkw6TCuMKtw6bLhsKQw6XigJjLnMOowqLCq8OowrjCosOl4oChwrpcIn0sMjM0MTA6e2NvZGU6XCIyMzQxMFwiLG1zZzpcIsOowoHFoMOlwqTCqcOlwq7CpMOkwrjCjcOlwq3LnMOlxZPCqFwifSwyMzQxMTp7Y29kZTpcIjIzNDExXCIsbXNnOlwiw6jCgcWgw6XCpMKpw6XCrsKkw6bLhsKQw6XigJjLnMOlwrfCssOmwrvCoVwifSwyMzQxMjp7Y29kZTpcIjIzNDEyXCIsbXNnOlwiw6jFvcK3w6XCj+KAk8OowoHFoMOlwqTCqcOlwq7CpMOkwr/CocOmwoHCr8Olwo/igJrDpuKAosKww6bigJQgw6bigKLLhlwifSwyMzQxMzp7Y29kZTpcIjIzNDEzXCIsbXNnOlwiw6jCgcWgw6XCpMKpw6XCrsKkw6XCvOKAmsOlwrjCuFwifSwyMzQxNDp7Y29kZTpcIjIzNDE0XCIsbXNnOlwiw6bCssKhw6bFk+KAsMOm4oCw4oCcw6XCvOKCrMOowoHFoMOlwqTCqcOlwq7CpMOmwrbLhsOmwoHCr8Olwq3LnMOl4oCawqhcIn0sMzYwMDE6e2NvZGU6XCIzNjAwMVwiLG1zZzpcIsOlxaAgw6XigKbCpcOowoHFoMOlwqTCqcOlwq7CpElkw6TCuMK6w6fCqcK6XCJ9LDM2MDAyOntjb2RlOlwiMzYwMDJcIixtc2c6XCLDpcWgIMOl4oCmwqXDqMKBxaDDpcKkwqnDpcKuwqTDpcKkwrHDqMK0wqVcIn0sMzYwMDM6e2NvZGU6XCIzNjAwM1wiLG1zZzpcIsOm4oC54oCww6XCj+KAk8OowoHFoMOlwqTCqcOlwq7CpMOlxb3igKDDpcKPwrLDpsK2y4bDpsKBwq/DpcKkwrHDqMK0wqVcIn0sMjQwMDE6e2NvZGU6XCIyNDAwMVwiLG1zZzpcIsOmwrLCocOmxZPigLDDpsKzwqjDpeKAoMWSRGV2aXZlSWQgw6TCucW4w6XCsMKxw6bLnMKvw6figJ3CqMOmy4bCt8OmwrLCocOmxZPigLDDp+KEosK7w6nihKLigKBcIn0sMjQwMDI6e2NvZGU6XCIyNDAwMlwiLG1zZzpcIsOn4oCdwqjDpsuGwrfDpcK3wrLDp8K7wo/DpcKty5zDpcWTwqhcIn0sMDp7Y29kZTpcIjBcIixtc2c6XCLDpsuGwpDDpcWgxbhcIn0sMjQwMDk6e2NvZGU6XCIyNDAwOVwiLG1zZzpcIsOmwrLCocOmxZPigLDDpcKvwrnDpcK64oCdw6fFoeKAnsOn4oCdwqjDpsuGwrfDpsuG4oCTdG9rZW5cIn0sMjQwMTM6e2NvZGU6XCIyNDAxM1wiLG1zZzpcInZvaXDDpMK4wrrDp8KpwrpcIn0sMjQwMTA6e2NvZGU6XCIyNDAxMFwiLG1zZzpcIsOkwrjCjcOm4oCdwq/DpsWSwoHDp8Wh4oCeVm9pcMOlwrzigKLDpuKAnMW9XCJ9LDI0MDExOntjb2RlOlwiMjQwMTFcIixtc2c6XCJjaGFubmVsTmFtZSDDpsucwq/Dp8KpwrpcIn0sMjQwMTI6e2NvZGU6XCIyNDAxMlwiLG1zZzpcIsOn4oCdxbjDpsuGwpBWb2lwa2V5w6XCpMKxw6jCtMKlXCJ9LDI0MDE0Ontjb2RlOlwiMjQwMTRcIixtc2c6XCLDpsKywqHDpsWT4oCww6nigKbCjcOnwr3CrnZvaXBcIn0sMjQwMTU6e2NvZGU6XCIyNDAxNVwiLG1zZzpcIsOmxZPCjcOlxaDCocOl4oSiwqjDpeKAoOKApsOpxpLCqMOp4oCd4oSiw6jCr8KvXCJ9LDI0MDE2Ontjb2RlOlwiMjQwMTZcIixtc2c6XCJWT0lQIGNsb3NlXCJ9LDMwMDAxOntjb2RlOlwiMzAwMDFcIixtc2c6XCLDqeKCrMWhw6TCv8Khw6jCv+KAocOnwqjigLnDpMK4wq3Dr8K8xZLDpcK94oCcw6XigLDCjVNvY2tldMOkwrjCjcOlwq3LnMOlxZPCqFwifSwzMDAwMjp7Y29kZTpcIjMwMDAyXCIsbXNnOlwiU29ja2V0w6jCv8W+w6bFvcKlw6TCuMKNw6XCj8Kvw6figJ3CqFwifSwzMDAwMzp7Y29kZTpcIjMwMDAzXCIsbXNnOlwiw6nigqzFocOkwr/CocOowrbigKbDpuKAlMK2XCJ9LDMwMDA0Ontjb2RlOlwiMzAwMDRcIixtc2c6XCLDpcKvwrzDqMuGwqrDpuKAnMKNw6TCvcWTw6bigJTCtsOvwrzFkkh0dHDDqMKvwrfDpsKx4oCaw6XCpMKxw6jCtMKlXCJ9LDMwMDA1Ontjb2RlOlwiMzAwMDVcIixtc2c6XCJIVFRQw6jCr8K3w6bCseKAmsOlwqTCscOowrTCpVwifSwzMDAwNjp7Y29kZTpcIjMwMDA2XCIsbXNnOlwiSFRUUMOmxb3CpcOm4oCdwrbDpcKkwrHDqMK0wqVcIn0sMzAwMDc6e2NvZGU6XCIzMDAwN1wiLG1zZzpcIsOlwq/CvMOoy4bCqsOowrXigJ7DpsK6wpDDqeKAneKEosOowq/Cr1wifSwzMDAwODp7Y29kZTpcIjMwMDA4XCIsbXNnOlwiw6bCssKhw6bFk+KAsMOmxZPigLDDpuKAosuGw6bigKLCsMOmwo3CrlwifSwzMDAwOTp7Y29kZTpcIjMwMDA5XCIsbXNnOlwiw6TCuMKNw6XCrcucw6XFk8Kow6bFk+KAsMOm4oCiy4YgSVAgw6XFk8Kww6XCneKCrFwifSwzMDAxMDp7Y29kZTpcIjMwMDEwXCIsbXNnOlwiw6XLhuKAusOlwrvCuiBTb2NrZXQgw6XCpMKxw6jCtMKlXCJ9LDMwMDExOntjb2RlOlwiMzAwMTFcIixtc2c6XCIgU29ja2V0IMOowqLCq8Om4oCTwq3DpcK84oKsXCJ9LDMwMDEyOntjb2RlOlwiMzAwMTJcIixtc2c6XCJQSU5HIMOm4oCcwo3DpMK9xZPDpcKkwrHDqMK0wqVcIn0sMzAwMTM6e2NvZGU6XCIzMDAxM1wiLG1zZzpcIlBJTkcgw6jCtuKApsOm4oCUwrZcIn0sMzAwMTQ6e2NvZGU6XCIzMDAxNFwiLG1zZzpcIsOmwrbLhsOmwoHCr8Olwo/igJjDqeKCrMKBw6XCpMKxw6jCtMKlXCJ9LDMwMDE2Ontjb2RlOlwiMzAwMTZcIixtc2c6XCLDpsK2y4bDpsKBwq/DpcKkwqfDpcKwwo/DqMK24oCmw6nihKLCkMOvwrzFksOmxZPigqzDpcKkwqcgMTI4IEtCXCJ9LDMxMDAwOntjb2RlOlwiMzEwMDBcIixtc2c6XCLDpcKBxaEgY29ubmVjdCDDqMK/xb7DpsW9wqXDpuKAlMK2w6/CvMWSw6bigJ3CtsOly4bCsMOnxaHigJ4gQUNLIMOowrbigKbDpuKAlMK2XCJ9LDMxMDAxOntjb2RlOlwiMzEwMDFcIixtc2c6XCLDpcKP4oCaw6bigKLCsMOp4oCd4oSiw6jCr8KvXCJ9LDMxMDAyOntjb2RlOlwiMzEwMDJcIixtc2c6XCLDpcKP4oCaw6bigKLCsMOp4oCd4oSiw6jCr8Kvw6/CvMWSQXBwIElkIMOp4oCd4oSiw6jCr8KvXCJ9LDMxMDAzOntjb2RlOlwiMzEwMDNcIixtc2c6XCLDpsWTwo3DpcWgwqHDpeKEosKow6TCuMKNw6XCj8Kvw6figJ3CqFwifSwzMTAwNDp7Y29kZTpcIjMxMDA0XCIsbXNnOlwiVG9rZW4gw6nigJ3ihKLDqMKvwq9cIn0sMzEwMDU6e2NvZGU6XCIzMTAwNVwiLG1zZzpcIkFwcCBJZCDDpMK4xb0gVG9rZW4gw6TCuMKNw6XFksK5w6nigKbCjVwifSwzMTAwNjp7Y29kZTpcIjMxMDA2XCIsbXNnOlwiw6nigKHCjcOlwq7FocOlwpDigJjDr8K8xZLDpcWTwrDDpcKd4oKsw6nigJ3ihKLDqMKvwq9cIn0sMzEwMDc6e2NvZGU6XCIzMTAwN1wiLG1zZzpcIk5BTUUgw6TCuMW9w6XCkMW9w6XCj8Kww6bCs8Kow6XigKDFksOkwr/CocOmwoHCr8OkwrjCjcOkwrjigqzDqOKAocK0XCJ9LDMxMDA4Ontjb2RlOlwiMzEwMDhcIixtc2c6XCJBUFAgw6jCosKrw6XCscKPw6jigJ3CvcOj4oKswoHDpcuGIMOp4oSiwqTDpsuG4oCTw6TCuMKNw6XCrcucw6XFk8KoXCJ9LDMxMDA5Ontjb2RlOlwiMzEwMDlcIixtc2c6XCLDp+KAncKow6bLhsK3w6jCosKrw6XCscKPw6jigJ3CvVwifSwzMTAxMDp7Y29kZTpcIjMxMDEwXCIsbXNnOlwiRGlzY29ubmVjdMOvwrzFksOn4oCdwrHDpsWTwo3DpcWgwqHDpeKEosKow6jCv+KAncOl4oC6xb7Dr8K8xZLDpsKv4oCdw6XCpuKAmsOn4oCdwqjDpsuGwrfDpMK64oCZw6jCuMKiXCJ9LDMxMDExOntjb2RlOlwiMzEwMTFcIixtc2c6XCJEaXNjb25uZWN0w6/CvMWSw6figJ3CscOmxZPCjcOlxaDCocOl4oSiwqjDqMK/4oCdw6XigLrFvsOvwrzFksOmwq/igJ3DpcKm4oCaw6figJ3CqMOmy4bCt8OkwrrigJnDqMK4wqJcIn0sMzIwMDE6e2NvZGU6XCIzMjAwMVwiLG1zZzpcIsOlwo3Cj8Oowq7CrsOlwrHigJrDpeKAoOKApsOpxpLCqMOp4oCd4oSiw6jCr8Kvw6PigqzigJpxdWVyecOvwrzFksOkwrjFoMOkwrwgw6TCuOKAucOowr3CvcOowr/igKHDp8Ko4oC5w6TCuMKtw6bigKLCsMOmwo3CrsOp4oCd4oSiw6jCr8KvXCJ9LDMyMDAyOntjb2RlOlwiMzIwMDJcIixtc2c6XCLDpcKNwo/DqMKuwq7DpcKx4oCaw6XigKDigKbDqcaSwqjDqeKAneKEosOowq/Cr1wifSwzMzAwMTp7Y29kZTpcIjMzMDAxXCIsbXNnOlwiw6bFk8Kqw6jCsMaSw6figJ3CqCBpbml0IMOly4bCncOlwqfigLnDpcWS4oCTw6XigKHCvcOm4oCiwrBcIn0sMzMwMDI6e2NvZGU6XCIzMzAwMlwiLG1zZzpcIsOm4oCiwrDDpsKNwq7DpcK64oCcw6XLhsKdw6XCp+KAucOlxZLigJPDpcKkwrHDqMK0wqVcIn0sMzMwMDM6e2NvZGU6XCIzMzAwM1wiLG1zZzpcIsOkwrwgw6XigKbCpcOlwo/igJrDpuKAosKww6bigJQgw6bigKLLhlwifSwzMzAwNDp7Y29kZTpcIjMzMDA0XCIsbXNnOlwiw6nigqzFocOpwoHigJzDpuKAlCDDpuKAosuGXCJ9LDMzMDA1Ontjb2RlOlwiMzMwMDVcIixtc2c6XCLDqeKAocKNw6bigJPCsMOowr/FvsOmxb3CpcOmy4bCkMOlxaDFuFwifSwzMzAwNjp7Y29kZTpcIjMzMDA2XCIsbXNnOlwiw6jCv8W+w6bFvcKlw6TCuMKtw6/CvMWSw6XigKDCjcOowrDGksOn4oCdwqggY29ubmVjdCDDqMKiwqvDpuKAueKAmcOnwrvCnVwifSwzMzAwNzp7Y29kZTpcIjMzMDA3XCIsbXNnOlwiw6bCtsuGw6bCgcKvw6bCvMKrw6bCuMK4w6bFk8KNw6XFoMKhw6bFk8Kqw6XCvOKCrMOp4oKsxaFcIn0sMzMwMDg6e2NvZGU6XCIzMzAwOFwiLG1zZzpcIsOmwrbLhsOmwoHCr8OmwrfCu8OlxaAgw6XCpMKxw6jCtMKlXCJ9LDMzMDA5Ontjb2RlOlwiMzMwMDlcIixtc2c6XCLDpsK2y4bDpsKBwq/DpcuGIMOp4oSiwqTDpcKkwrHDqMK0wqVcIn0sMzQwMDE6e2NvZGU6XCIzNDAwMVwiLG1zZzpcIsOly4Ygw6nihKLCpMOkwrzFocOowq/CncOlwqTCscOowrTCpVwifSwzNDAwMjp7Y29kZTpcIjM0MDAyXCIsbXNnOlwiw6bigLnigLDDpcKP4oCTw6XFveKAoMOlwo/CssOmwrbLhsOmwoHCr8OlwqTCscOowrTCpVwifSwzNDAwMzp7Y29kZTpcIjM0MDAzXCIsbXNnOlwiw6TCvMWhw6jCr8Kdw6bFkuKAocOlwq7FocOlwrzigJrDpcK4wrhcIn0sMzQwMDQ6e2NvZGU6XCIzNDAwNFwiLG1zZzpcIsOoxb3Ct8Olwo/igJPDpMK8xaHDqMKvwp3DpsWTwqrDqMKvwrvDpsK2y4bDpsKBwq/DpuKCrMK7w6bigKLCsMOlwqTCscOowrTCpVwifSwzNDAwNTp7Y29kZTpcIjM0MDA1XCIsbXNnOlwiw6jFvcK3w6XCj+KAk8OmxZLigKHDpcKuxaHDpMK8xaHDqMKvwp3Dp8KxwrvDpcW+4oC5w6bFk8Kqw6jCr8K7w6bCtsuGw6bCgcKvw6bigKLCsMOlwrzigJrDpcK4wrhcIn0sMzQwMDY6e2NvZGU6XCIzNDAwNlwiLG1zZzpcIsOoxb3Ct8Olwo/igJPDpsWS4oChw6XCrsWhw6figJ3CqMOmy4bCt0lEJsOkwrzFocOowq/CncOnwrHCu8Olxb7igLnDpsWTwqrDqMKvwrvDpsK2y4bDpsKBwq/DpuKAosKww6XCvOKAmsOlwrjCuFwifSwzNDAwNzp7Y29kZTpcIjM0MDA3XCIsbXNnOlwiw6bCuOKApsOp4oSiwqTDpMK8xaHDqMKvwp3DpsK2y4bDpsKBwq/DpcK84oCaw6XCuMK4XCJ9LDM0MDA4Ontjb2RlOlwiMzQwMDhcIixtc2c6XCLDqMW9wrfDpcKP4oCTw6TCvMWhw6jCr8Kdw6bCtsuGw6bCgcKvw6XCvOKAmsOlwrjCuFwifSwzNDAwOTp7Y29kZTpcIjM0MDA5XCIsbXNnOlwiw6bCuOKApsOp4oSiwqTDpcW94oCgw6XCj8Kyw6bCtsuGw6bCgcKvw6TCvMWhw6jCr8Kdw6fCscK7w6XFvuKAucOkwrjCjcOmwq3Co8OnwqHCrlwifSwzNDAxMDp7Y29kZTpcIjM0MDEwXCIsbXNnOlwiw6bCuOKApsOp4oSiwqTDpcW94oCgw6XCj8Kyw6bCtsuGw6bCgcKvw6XCpMKxw6jCtMKlw6/CvMWSw6jCr8K3w6bCo+KCrMOmxbjCpcOkwrwgw6XigKbCpcOlwo/igJrDpuKAosKwXCJ9LDM3MDAxOntjb2RlOlwiMzcwMDFcIixtc2c6XCLDpcWgIMOl4oCmwqXDqcK74oCYw6XCkMKNw6XCjeKAosOlwrzigJrDpcK4wrhcIn0sMzcwMDI6e2NvZGU6XCIzNzAwMlwiLG1zZzpcIsOoxb3Ct8Olwr7igJTDpsWS4oChw6XCrsWhw6TCusK6w6XigJjLnMOl4oCgwo3DqcK74oCYw6XCkMKNw6XCjeKAosOkwrjCrcOnxaHigJ7Dp8WgwrbDpuKCrMKBw6XCvOKAmsOlwrjCuFwifSwzNzAwMzp7Y29kZTpcIjM3MDAzXCIsbXNnOlwiw6fCp8K7w6nihKLCpMOpwrvigJjDpcKQwo3DpcKN4oCiw6XCvOKAmsOlwrjCuFwifSw0MDU6e2NvZGU6XCI0MDVcIixtc2c6XCLDpcWTwqjDqcK74oCYw6XCkMKNw6XCjeKAosOkwrjCrVwifSwzODAwMTp7Y29kZTpcIjM4MDAxXCIsbXNnOlwiw6jFvcK3w6XCj+KAk8Oowo3igLDDp8Kowr/DpcKkwrHDqMK0wqVcIn0sMzgwMDI6e2NvZGU6XCIzODAwMlwiLG1zZzpcIsOkwr/CncOlwq3LnMOowo3igLDDp8Kowr/DpcKkwrHDqMK0wqVcIn0sMzgwMDM6e2NvZGU6XCIzODAwM1wiLG1zZzpcIsOly4Ygw6nihKLCpMOowo3igLDDp8Kowr/DpcKkwrHDqMK0wqVcIn0sMzkwMDE6e2NvZGU6XCIzOTAwMVwiLG1zZzpcIsOl4oCmwrPDpsKzwqjDpeKApsKsw6TCvOKAlMOlwo/Ct8OlwqTCscOowrTCpVwifSw0MTAwMTp7Y29kZTpcIjQxMDAxXCIsbXNnOlwiw6bigJPigKHDpMK7wrbDp8KxwrvDpcW+4oC5w6nigJ3ihKLDqMKvwq9cIn0sNDEwMDI6e2NvZGU6XCI0MTAwMlwiLG1zZzpcIsOoxb3Ct8Olwo/igJPDpMK4xpLDp+KAsOKAunRva2Vuw6XCpMKxw6jCtMKlXCJ9LDUxMDAxOntjb2RlOlwiNTEwMDFcIixtc2c6XCLDpsWTwqrDpcKu4oCww6jCo+KApsOmy4bigJPDpsWTwqrDpcKQwq/DpcWgwqjDpsKP4oCZw6TCu8K2XCJ9LDUxMDAyOntjb2RlOlwiNTEwMDJcIixtc2c6XCLDqMKn4oCgw6nCouKAmMOlwrfCssOnwrvCj8Olwq3LnMOlxZPCqFwifSw1MTAwMzp7Y29kZTpcIjUxMDAzXCIsbXNnOlwiw6bigJQgw6bigKLLhsOnxaHigJ5jaGFubmVsTmFtZVwifSw1MTAwNDp7Y29kZTpcIjUxMDA0XCIsbXNnOlwiw6jCp+KAoMOpwqLigJjDpeKAoOKApsOlwq7CucOkwrjCusOnwqnCulwifSw2MTAwMTp7Y29kZTpcIjYxMDAxXCIsbXNnOlwiw6XLhiDDqeKEosKkw6bCtsuGw6bCgcKvw6bigKLCsMOnwrvigJ7DqeKAosK/w6XCusKmw6TCuMK6IDBcIn19LHN9LGIuaW5pdEFwcD1mdW5jdGlvbihhLGMpe2IuaW5pdChhLmFwcGtleSxhLmRhdGFBY2Nlc3NQcm92aWRlcixhLm9wdHMsZnVuY3Rpb24oKXt2YXIgYT1iLl9pbnN0YW5jZTtjKG51bGwsYSl9KX0sYi5jb25uZWN0PWZ1bmN0aW9uKGMsZCxlLGYpe2EuQ2hlY2tQYXJhbS5nZXRJbnN0YW5jZSgpLmNoZWNrKFtcInN0cmluZ1wiLFwib2JqZWN0XCIsXCJzdHJpbmd8bnVsbHxvYmplY3R8Z2xvYmFsfHVuZGVmaW5lZFwiLFwib2JqZWN0fG51bGx8Z2xvYmFsfHVuZGVmaW5lZFwiXSxcImNvbm5lY3RcIiwhMCxhcmd1bWVudHMpO3ZhciBnPXtvblN1Y2Nlc3M6ZC5vblN1Y2Nlc3Msb25Ub2tlbkluY29ycmVjdDpkLm9uVG9rZW5JbmNvcnJlY3Qsb25FcnJvcjpmdW5jdGlvbihhKXtiLmxvZ2dlcih7Y29kZTphLGZ1bmNOYW1lOlwiY29ubmVjdFwifSksZC5vbkVycm9yKGEpfX07Yi5fZGF0YUFjY2Vzc1Byb3ZpZGVyLmNvbm5lY3QoYyxnLGUsZil9LGIucmVjb25uZWN0PWZ1bmN0aW9uKGEsYyl7dmFyIGQ9e29uU3VjY2VzczphLm9uU3VjY2VzcyxvblRva2VuSW5jb3JyZWN0OmEub25Ub2tlbkluY29ycmVjdCxvbkVycm9yOmZ1bmN0aW9uKGMpe2IubG9nZ2VyKHtjb2RlOmMsZnVuY05hbWU6XCJjb25uZWN0XCJ9KSxhLm9uRXJyb3IoYyl9fTtiLl9kYXRhQWNjZXNzUHJvdmlkZXIucmVjb25uZWN0KGQsYyl9LGIucmVnaXN0ZXJNZXNzYWdlVHlwZT1mdW5jdGlvbihhLGMsZCxlLGYpe2IuX2RhdGFBY2Nlc3NQcm92aWRlci5yZWdpc3Rlck1lc3NhZ2VUeXBlKGEsYyxkLGUsZiksYi5SZWdpc3Rlck1lc3NhZ2VbYV0ubWVzc2FnZU5hbWU9YSxiLk1lc3NhZ2VUeXBlW2FdPWEsYi5NZXNzYWdlUGFyYW1zW2FdPXtvYmplY3ROYW1lOmMsbXNnVGFnOmR9fSxiLnByb3RvdHlwZS5yZWdpc3Rlck1lc3NhZ2VUeXBlcz1mdW5jdGlvbihhKXthPWF8fHt9LGIuX2RhdGFBY2Nlc3NQcm92aWRlci5yZWdpc3Rlck1lc3NhZ2VUeXBlcyhhKX0sYi5zZXRDb25uZWN0aW9uU3RhdHVzTGlzdGVuZXI9ZnVuY3Rpb24oYSl7Yi5fZGF0YUFjY2Vzc1Byb3ZpZGVyP2IuX2RhdGFBY2Nlc3NQcm92aWRlci5zZXRDb25uZWN0aW9uU3RhdHVzTGlzdGVuZXIoYSk6Yi5fbWVtb3J5U3RvcmUubGlzdGVuZXJMaXN0LnB1c2goYSl9LGIuc3RhdHVzV2F0Y2g9ZnVuY3Rpb24oYSl7XCJmdW5jdGlvblwiPT10eXBlb2YgYSYmYi5zdGF0dXNMaXN0ZW5lcnMucHVzaChhKX0sYi5zZXRPblJlY2VpdmVNZXNzYWdlTGlzdGVuZXI9ZnVuY3Rpb24oYSl7Yi5fZGF0YUFjY2Vzc1Byb3ZpZGVyP2IuX2RhdGFBY2Nlc3NQcm92aWRlci5zZXRPblJlY2VpdmVNZXNzYWdlTGlzdGVuZXIoYSk6Yi5fbWVtb3J5U3RvcmUubGlzdGVuZXJMaXN0LnB1c2goYSl9LGIucHJvdG90eXBlLmxvZ291dD1mdW5jdGlvbigpe2IuX2RhdGFBY2Nlc3NQcm92aWRlci5sb2dvdXQoKX0sYi5wcm90b3R5cGUuZGlzY29ubmVjdD1mdW5jdGlvbigpe2IuX2RhdGFBY2Nlc3NQcm92aWRlci5kaXNjb25uZWN0KCl9LGIucHJvdG90eXBlLnN0YXJ0Q3VzdG9tU2VydmljZT1mdW5jdGlvbihjLGQsZSl7aWYoYyYmZCl7dmFyIGY9bmV3IGEuSGFuZFNoYWtlTWVzc2FnZShlKSxnPXRoaXM7YS5Sb25nSU1DbGllbnQuX21lbW9yeVN0b3JlLmN1c3RTdG9yZS5pc0luaXQ9ITAsYi5nZXRJbnN0YW5jZSgpLnNlbmRNZXNzYWdlKGEuQ29udmVyc2F0aW9uVHlwZS5DVVNUT01FUl9TRVJWSUNFLGMsZix7b25TdWNjZXNzOmZ1bmN0aW9uKGEpe2EuaXNCbGFjaz8oZC5vbkVycm9yKCksZy5zdG9wQ3VzdG9tZVNlcnZpY2UoYyx7b25TdWNjZXNzOmZ1bmN0aW9uKCl7fSxvbkVycm9yOmZ1bmN0aW9uKCl7fX0pKTpkLm9uU3VjY2VzcygpfSxvbkVycm9yOmZ1bmN0aW9uKCl7ZC5vbkVycm9yKCl9LG9uQmVmb3JlOmZ1bmN0aW9uKCl7fX0pfX0sYi5wcm90b3R5cGUuc3RvcEN1c3RvbWVTZXJ2aWNlPWZ1bmN0aW9uKGMsZCl7aWYoYyYmZCl7dmFyIGU9Yi5fbWVtb3J5U3RvcmUuY3VzdFN0b3JlW2NdO2lmKGUpe3ZhciBmPW5ldyBhLlN1c3BlbmRNZXNzYWdlKHtzaWQ6ZS5zaWQsdWlkOmUudWlkLHBpZDplLnBpZH0pO3RoaXMuc2VuZEN1c3RNZXNzYWdlKGMsZix7b25TdWNjZXNzOmZ1bmN0aW9uKCl7c2V0VGltZW91dChmdW5jdGlvbigpe2Qub25TdWNjZXNzKCl9KX0sb25FcnJvcjpmdW5jdGlvbigpe3NldFRpbWVvdXQoZnVuY3Rpb24oKXtkLm9uRXJyb3IoKX0pfX0pfX19LGIucHJvdG90eXBlLnN3aXRjaFRvSHVtYW5Nb2RlPWZ1bmN0aW9uKGMsZCl7aWYoYyYmZCl7dmFyIGU9Yi5fbWVtb3J5U3RvcmUuY3VzdFN0b3JlW2NdO2lmKGUpe3ZhciBmPW5ldyBhLkNoYW5nZU1vZGVNZXNzYWdlKHtzaWQ6ZS5zaWQsdWlkOmUudWlkLHBpZDplLnBpZH0pO3RoaXMuc2VuZEN1c3RNZXNzYWdlKGMsZixkKX19fSxiLnByb3RvdHlwZS5ldmFsdWF0ZVJlYm90Q3VzdG9tU2VydmljZT1mdW5jdGlvbihjLGQsZSxmKXtpZihjJiZmKXt2YXIgZz1iLl9tZW1vcnlTdG9yZS5jdXN0U3RvcmVbY107aWYoZyl7dmFyIGg9bmV3IGEuRXZhbHVhdGVNZXNzYWdlKHtzaWQ6Zy5zaWQsdWlkOmcudWlkLHBpZDpnLnBpZCxpc1JvYm90UmVzb2x2ZWQ6ZCxzdWdlc3Q6ZSx0eXBlOjB9KTt0aGlzLnNlbmRDdXN0TWVzc2FnZShjLGgsZil9fX0sYi5wcm90b3R5cGUuZXZhbHVhdGVIdW1hbkN1c3RvbVNlcnZpY2U9ZnVuY3Rpb24oYyxkLGUsZil7aWYoYyYmZil7dmFyIGc9Yi5fbWVtb3J5U3RvcmUuY3VzdFN0b3JlW2NdO2lmKGcpe3ZhciBoPW5ldyBhLkV2YWx1YXRlTWVzc2FnZSh7c2lkOmcuc2lkLHVpZDpnLnVpZCxwaWQ6Zy5waWQsaHVtYW5WYWx1ZTpkLHN1Z2VzdDplLHR5cGU6MX0pO3RoaXMuc2VuZEN1c3RNZXNzYWdlKGMsaCxmKX19fSxiLnByb3RvdHlwZS5zZW5kQ3VzdE1lc3NhZ2U9ZnVuY3Rpb24oYyxkLGUpe2IuZ2V0SW5zdGFuY2UoKS5zZW5kTWVzc2FnZShhLkNvbnZlcnNhdGlvblR5cGUuQ1VTVE9NRVJfU0VSVklDRSxjLGQse29uU3VjY2VzczpmdW5jdGlvbihhKXtlLm9uU3VjY2VzcygpfSxvbkVycm9yOmZ1bmN0aW9uKCl7ZS5vbkVycm9yKCl9LG9uQmVmb3JlOmZ1bmN0aW9uKCl7fX0pfSxiLnByb3RvdHlwZS5nZXRDdXJyZW50Q29ubmVjdGlvblN0YXR1cz1mdW5jdGlvbigpe3JldHVybiBiLl9kYXRhQWNjZXNzUHJvdmlkZXIuZ2V0Q3VycmVudENvbm5lY3Rpb25TdGF0dXMoKX0sYi5wcm90b3R5cGUuZ2V0Q29ubmVjdGlvbkNoYW5uZWw9ZnVuY3Rpb24oKXtyZXR1cm4gYS5UcmFuc3BvcnRhdGlvbnMuX1RyYW5zcG9ydFR5cGU9PWEuU29ja2V0LlhIUl9QT0xMSU5HP2EuQ29ubmVjdGlvbkNoYW5uZWwuWEhSX1BPTExJTkc6YS5UcmFuc3BvcnRhdGlvbnMuX1RyYW5zcG9ydFR5cGU9PWEuU29ja2V0LldFQlNPQ0tFVD9hLkNvbm5lY3Rpb25DaGFubmVsLldFQlNPQ0tFVDp2b2lkIDB9LGIucHJvdG90eXBlLmdldFN0b3JhZ2VQcm92aWRlcj1mdW5jdGlvbigpe3JldHVybiAxPT1iLl9tZW1vcnlTdG9yZS5wcm92aWRlclR5cGU/XCJTZXJ2ZXJEYXRhUHJvdmlkZXJcIjpcIk90aGVyRGF0YVByb3ZpZGVyXCJ9LGIucHJvdG90eXBlLnNldEZpbHRlck1lc3NhZ2VzPWZ1bmN0aW9uKGEpe1wiW29iamVjdCBBcnJheV1cIj09T2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGEpJiYoYi5fbWVtb3J5U3RvcmUuZmlsdGVyTWVzc2FnZXM9YSl9LGIucHJvdG90eXBlLmdldEFnb3JhRHluYW1pY0tleT1mdW5jdGlvbihhLGMsZCl7Yi5fZGF0YUFjY2Vzc1Byb3ZpZGVyLmdldEFnb3JhRHluYW1pY0tleShhLGMsZCl9LGIucHJvdG90eXBlLmdldEN1cnJlbnRVc2VySWQ9ZnVuY3Rpb24oKXtyZXR1cm4gYS5CcmlkZ2UuX2NsaWVudC51c2VySWR9LGIucHJvdG90eXBlLmdldERlbHRhVGltZT1mdW5jdGlvbigpe3JldHVybiBiLl9kYXRhQWNjZXNzUHJvdmlkZXIuZ2V0RGVsYVRpbWUoKX0sYi5wcm90b3R5cGUuZ2V0TWVzc2FnZT1mdW5jdGlvbihhLGMpe2IuX2RhdGFBY2Nlc3NQcm92aWRlci5nZXRNZXNzYWdlKGEsYi5sb2dDYWxsYmFjayhjLFwiZ2V0TWVzc2FnZVwiKSl9LGIucHJvdG90eXBlLmRlbGV0ZUxvY2FsTWVzc2FnZXM9ZnVuY3Rpb24oYSxjLGQsZSl7Yi5fZGF0YUFjY2Vzc1Byb3ZpZGVyLnJlbW92ZUxvY2FsTWVzc2FnZShhLGMsZCxiLmxvZ0NhbGxiYWNrKGUsXCJkZWxldGVMb2NhbE1lc3NhZ2VzXCIpKX0sYi5wcm90b3R5cGUudXBkYXRlTWVzc2FnZT1mdW5jdGlvbihhLGMpe2IuX2RhdGFBY2Nlc3NQcm92aWRlci51cGRhdGVNZXNzYWdlKGEsYi5sb2dDYWxsYmFjayhjLFwidXBkYXRlTWVzc2FnZVwiKSl9LGIucHJvdG90eXBlLmNsZWFyRGF0YT1mdW5jdGlvbigpe3JldHVybiBiLl9kYXRhQWNjZXNzUHJvdmlkZXIuY2xlYXJEYXRhKCl9LGIucHJvdG90eXBlLmNsZWFyTWVzc2FnZXM9ZnVuY3Rpb24oYSxjLGQpe2IuX2RhdGFBY2Nlc3NQcm92aWRlci5jbGVhck1lc3NhZ2VzKGEsYyx7b25TdWNjZXNzOmZ1bmN0aW9uKGEpe3NldFRpbWVvdXQoZnVuY3Rpb24oKXtkLm9uU3VjY2VzcyhhKX0pfSxvbkVycm9yOmZ1bmN0aW9uKGEpe3NldFRpbWVvdXQoZnVuY3Rpb24oKXtiLmxvZ2dlcih7Y29kZTphLGZ1bmNOYW1lOlwiY2xlYXJNZXNzYWdlc1wifSksZC5vbkVycm9yKGEpfSl9fSl9LGIucHJvdG90eXBlLmNsZWFyTWVzc2FnZXNVbnJlYWRTdGF0dXM9ZnVuY3Rpb24oYSxjLGQpe2IuX2RhdGFBY2Nlc3NQcm92aWRlci51cGRhdGVNZXNzYWdlcyhhLGMsXCJyZWFkU3RhdHVzXCIsbnVsbCx7b25TdWNjZXNzOmZ1bmN0aW9uKGEpe3NldFRpbWVvdXQoZnVuY3Rpb24oKXtkLm9uU3VjY2VzcyhhKX0pfSxvbkVycm9yOmZ1bmN0aW9uKGEpe3NldFRpbWVvdXQoZnVuY3Rpb24oKXtiLmxvZ2dlcih7Y29kZTphLGZ1bmNOYW1lOlwiY2xlYXJNZXNzYWdlc1VucmVhZFN0YXR1c1wifSksZC5vbkVycm9yKGEpfSl9fSl9LGIucHJvdG90eXBlLmRlbGV0ZVJlbW90ZU1lc3NhZ2VzPWZ1bmN0aW9uKGMsZCxlLGYpe2lmKGEuQ2hlY2tQYXJhbS5nZXRJbnN0YW5jZSgpLmNoZWNrKFtcIm51bWJlclwiLFwic3RyaW5nfG51bWJlclwiLFwiYXJyYXlcIixcIm9iamVjdFwiXSxcImRlbGV0ZVJlbW90ZU1lc3NhZ2VzXCIsITEsYXJndW1lbnRzKSwwPT1lLmxlbmd0aCl7dmFyIGc9YS5FcnJvckNvZGUuREVMRVRFX01FU1NBR0VfSURfSVNfTlVMTDtyZXR1cm4gYi5sb2dnZXIoe2NvZGU6ZyxmdW5jTmFtZTpcImRlbGV0ZVJlbW90ZU1lc3NhZ2VzXCJ9KSx2b2lkIGYub25FcnJvcihhLkVycm9yQ29kZS5ERUxFVEVfTUVTU0FHRV9JRF9JU19OVUxMKX1lLmxlbmd0aD4xMDAmJihlLmxlbmd0aD0xMDApLGYub25TdWNjZXNzKCEwKX0sYi5wcm90b3R5cGUuZGVsZXRlTWVzc2FnZXM9ZnVuY3Rpb24oYSxjLGQsZSl7Yi5fZGF0YUFjY2Vzc1Byb3ZpZGVyLnJlbW92ZU1lc3NhZ2UoYSxjLGQse29uU3VjY2VzczpmdW5jdGlvbihhKXtzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7ZS5vblN1Y2Nlc3MoYSl9KX0sb25FcnJvcjpmdW5jdGlvbihhKXtzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7Yi5sb2dnZXIoe2NvZGU6YSxmdW5jTmFtZTpcImRlbGV0ZU1lc3NhZ2VzXCJ9KSxlLm9uRXJyb3IoYSl9KX19KX0sYi5wcm90b3R5cGUuc2VuZExvY2FsTWVzc2FnZT1mdW5jdGlvbihjLGQpe2EuQ2hlY2tQYXJhbS5nZXRJbnN0YW5jZSgpLmNoZWNrKFtcIm9iamVjdFwiLFwib2JqZWN0XCJdLFwic2VuZExvY2FsTWVzc2FnZVwiLCExLGFyZ3VtZW50cyksYi5fZGF0YUFjY2Vzc1Byb3ZpZGVyLnVwZGF0ZU1lc3NhZ2UoYyksdGhpcy5zZW5kTWVzc2FnZShjLmNvbnZlcnNhdGlvblR5cGUsYy50YXJnZXRJZCxjLmNvbnRlbnQsYi5sb2dTZW5kQ2FsbGJhY2soZCxcInNlbmRMb2NhbE1lc3NhZ2VcIikpfSxiLnByb3RvdHlwZS5zZW5kTWVzc2FnZT1mdW5jdGlvbihjLGQsZSxmLGcsaCxpLGosayl7YS5DaGVja1BhcmFtLmdldEluc3RhbmNlKCkuY2hlY2soW1wibnVtYmVyXCIsXCJzdHJpbmd8bnVtYmVyXCIsXCJvYmplY3RcIixcIm9iamVjdFwiLFwidW5kZWZpbmVkfG9iamVjdHxudWxsfGdsb2JhbHxib29sZWFuXCIsXCJ1bmRlZmluZWR8b2JqZWN0fG51bGx8Z2xvYmFsfHN0cmluZ1wiLFwidW5kZWZpbmVkfG9iamVjdHxudWxsfGdsb2JhbHxzdHJpbmdcIixcInVuZGVmaW5lZHxvYmplY3R8bnVsbHxnbG9iYWx8bnVtYmVyXCIsXCJ1bmRlZmluZWR8b2JqZWN0fG51bGx8Z2xvYmFsXCJdLFwic2VuZE1lc3NhZ2VcIiwhMSxhcmd1bWVudHMpLGIuX2RhdGFBY2Nlc3NQcm92aWRlci5zZW5kTWVzc2FnZShjLGQsZSxiLmxvZ1NlbmRDYWxsYmFjayhmLFwic2VuZE1lc3NhZ2VcIiksZyxoLGksaixrKX0sYi5wcm90b3R5cGUuc2VuZFJlY2VpcHRSZXNwb25zZT1mdW5jdGlvbihhLGMsZCl7Yi5fZGF0YUFjY2Vzc1Byb3ZpZGVyLnNlbmRSZWNlaXB0UmVzcG9uc2UoYSxjLGIubG9nU2VuZENhbGxiYWNrKGQsXCJzZW5kUmVjZWlwdFJlc3BvbnNlXCIpKX0sYi5wcm90b3R5cGUuc2VuZFR5cGluZ1N0YXR1c01lc3NhZ2U9ZnVuY3Rpb24oYSxjLGQsZSl7Yi5fZGF0YUFjY2Vzc1Byb3ZpZGVyLnNlbmRUeXBpbmdTdGF0dXNNZXNzYWdlKGEsYyxkLGIubG9nU2VuZENhbGxiYWNrKGUsXCJzZW5kVHlwaW5nU3RhdHVzTWVzc2FnZVwiKSl9LGIucHJvdG90eXBlLnNlbmRTdGF0dXNNZXNzYWdlPWZ1bmN0aW9uKGEsYixjKXt0aHJvdyBuZXcgRXJyb3IoXCJOb3QgaW1wbGVtZW50ZWQgeWV0XCIpfSxiLnByb3RvdHlwZS5zZW5kVGV4dE1lc3NhZ2U9ZnVuY3Rpb24oYSxjLGQsZSl7Yi5fZGF0YUFjY2Vzc1Byb3ZpZGVyLnNlbmRUZXh0TWVzc2FnZShhLGMsZCxiLmxvZ1NlbmRDYWxsYmFjayhlLFwic2VuZFRleHRNZXNzYWdlXCIpKX0sYi5wcm90b3R5cGUuc2VuZFJlY2FsbE1lc3NhZ2U9ZnVuY3Rpb24oYyxkKXt2YXIgZT1iLmxvZ1NlbmRDYWxsYmFjayhkLFwic2VuZFJlY2FsbE1lc3NhZ2VcIik7aWYoYy5zZW5kZXJVc2VySWQhPWEuQnJpZGdlLl9jbGllbnQudXNlcklkKXt2YXIgZT1iLmxvZ1NlbmRDYWxsYmFjayhkLFwic2VuZFJlY2FsbE1lc3NhZ2VcIik7cmV0dXJuIHZvaWQgZS5vbkVycm9yKGEuRXJyb3JDb2RlLlJFQ0FMTF9NRVNTQUdFLGMpfWIuX2RhdGFBY2Nlc3NQcm92aWRlci5zZW5kUmVjYWxsTWVzc2FnZShjLGUpfSxiLnByb3RvdHlwZS5pbnNlcnRNZXNzYWdlPWZ1bmN0aW9uKGEsYyxkLGUpe2IuX2RhdGFBY2Nlc3NQcm92aWRlci5hZGRNZXNzYWdlKGEsYyxkLGIubG9nQ2FsbGJhY2soZSxcImluc2VydE1lc3NhZ2VcIikpfSxiLnByb3RvdHlwZS5zZXRNZXNzYWdlQ29udGVudD1mdW5jdGlvbihhLGMsZCl7Yi5fZGF0YUFjY2Vzc1Byb3ZpZGVyLnNldE1lc3NhZ2VDb250ZW50KGEsYyxkKX0sYi5wcm90b3R5cGUuc2V0TWVzc2FnZVNlYXJjaEZpZWxkPWZ1bmN0aW9uKGEsYyxkKXtiLl9kYXRhQWNjZXNzUHJvdmlkZXIuc2V0TWVzc2FnZUNvbnRlbnQoYSxjLGQpfSxiLnByb3RvdHlwZS5nZXRIaXN0b3J5TWVzc2FnZXM9ZnVuY3Rpb24oYyxkLGUsZixnLGgsaSl7aWYoYS5DaGVja1BhcmFtLmdldEluc3RhbmNlKCkuY2hlY2soW1wibnVtYmVyXCIsXCJzdHJpbmd8bnVtYmVyXCIsXCJudW1iZXJ8bnVsbHxnbG9iYWx8b2JqZWN0XCIsXCJudW1iZXJcIixcIm9iamVjdFwiLFwidW5kZWZpbmVkfG9iamVjdHxudWxsfGdsb2JhbHxzdHJpbmdcIixcIm51bWJlcnxudWxsfGdsb2JhbHxvYmplY3RcIl0sXCJnZXRIaXN0b3J5TWVzc2FnZXNcIiwhMSxhcmd1bWVudHMpLGY+MjApdGhyb3cgbmV3IEVycm9yKFwiSGlzdHJveU1lc3NhZ2UgY291bnQgbXVzdCBiZSBsZXNzIHRoYW4gb3IgZXF1YWwgdG8gMjAhXCIpO2lmKGMudmFsdWVPZigpPDApdGhyb3cgbmV3IEVycm9yKFwiQ29udmVyc2F0aW9uVHlwZSBtdXN0IGJlIGdyZWF0ZXIgdGhhbiAtMVwiKTtiLl9kYXRhQWNjZXNzUHJvdmlkZXIuZ2V0SGlzdG9yeU1lc3NhZ2VzKGMsZCxlLGYsYi5sb2dDYWxsYmFjayhnLFwiZ2V0SGlzdG9yeU1lc3NhZ2VzXCIpLGgsaSl9LGIucHJvdG90eXBlLmdldFJlbW90ZUhpc3RvcnlNZXNzYWdlcz1mdW5jdGlvbihjLGQsZSxmLGcsaCl7YS5DaGVja1BhcmFtLmdldEluc3RhbmNlKCkuY2hlY2soW1wibnVtYmVyXCIsXCJzdHJpbmd8bnVtYmVyXCIsXCJudW1iZXJ8bnVsbHxnbG9iYWx8b2JqZWN0XCIsXCJudW1iZXJcIixcIm9iamVjdFwiLFwidW5kZWZpbmVkfG51bGx8Z2xvYmFsfG9iamVjdFwiXSxcImdldFJlbW90ZUhpc3RvcnlNZXNzYWdlc1wiLCExLGFyZ3VtZW50cyk7dmFyIGk9e2Vycm9yQ29kZTphLkVycm9yQ29kZS5SQ19DT05OX1BST1RPX1ZFUlNJT05fRVJST1IsZnVuY05hbWU6XCJnZXRSZW1vdGVIaXN0b3J5TWVzc2FnZXNcIn07cmV0dXJuIGY+MjA/KGIubG9nZ2VyKGkpLHZvaWQgZy5vbkVycm9yKGEuRXJyb3JDb2RlLlJDX0NPTk5fUFJPVE9fVkVSU0lPTl9FUlJPUikpOmMudmFsdWVPZigpPDA/KGIubG9nZ2VyKGkpLHZvaWQgZy5vbkVycm9yKGEuRXJyb3JDb2RlLlJDX0NPTk5fUFJPVE9fVkVSU0lPTl9FUlJPUikpOnZvaWQgYi5fZGF0YUFjY2Vzc1Byb3ZpZGVyLmdldFJlbW90ZUhpc3RvcnlNZXNzYWdlcyhjLGQsZSxmLGIubG9nQ2FsbGJhY2soZyxcImdldFJlbW90ZUhpc3RvcnlNZXNzYWdlc1wiKSxoKX0sYi5wcm90b3R5cGUuY2xlYXJIaXN0b3J5TWVzc2FnZXM9ZnVuY3Rpb24oYSxjKXtiLl9kYXRhQWNjZXNzUHJvdmlkZXIuY2xlYXJIaXN0b3J5TWVzc2FnZXMoYSxjKX0sYi5wcm90b3R5cGUuY2xlYXJSZW1vdGVIaXN0b3J5TWVzc2FnZXM9ZnVuY3Rpb24oYSxjKXtiLl9kYXRhQWNjZXNzUHJvdmlkZXIuY2xlYXJSZW1vdGVIaXN0b3J5TWVzc2FnZXMoYSxiLmxvZ0NhbGxiYWNrKGMsXCJjbGVhclJlbW90ZUhpc3RvcnlNZXNzYWdlc1wiKSl9LGIucHJvdG90eXBlLmhhc1JlbW90ZVVucmVhZE1lc3NhZ2VzPWZ1bmN0aW9uKGEsYyl7Yi5fZGF0YUFjY2Vzc1Byb3ZpZGVyLmhhc1JlbW90ZVVucmVhZE1lc3NhZ2VzKGEsYi5sb2dDYWxsYmFjayhjLFwiaGFzUmVtb3RlVW5yZWFkTWVzc2FnZXNcIikpfSxiLnByb3RvdHlwZS5nZXRUb3RhbFVucmVhZENvdW50PWZ1bmN0aW9uKGEsYyl7Yi5fZGF0YUFjY2Vzc1Byb3ZpZGVyLmdldFRvdGFsVW5yZWFkQ291bnQoe29uU3VjY2VzczpmdW5jdGlvbihiKXtzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7YS5vblN1Y2Nlc3MoYil9KX0sb25FcnJvcjpmdW5jdGlvbihjKXtzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7Yi5sb2dnZXIoe2NvZGU6YyxmdW5jTmFtZTpcImdldFRvdGFsVW5yZWFkQ291bnRcIn0pLGEub25FcnJvcihjKX0pfX0sYyl9LGIucHJvdG90eXBlLmdldENvbnZlcnNhdGlvblVucmVhZENvdW50PWZ1bmN0aW9uKGEsYyl7Yi5fZGF0YUFjY2Vzc1Byb3ZpZGVyLmdldENvbnZlcnNhdGlvblVucmVhZENvdW50KGEse29uU3VjY2VzczpmdW5jdGlvbihhKXtzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7Yy5vblN1Y2Nlc3MoYSl9KX0sb25FcnJvcjpmdW5jdGlvbihhKXtzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7Yi5sb2dnZXIoe2NvZGU6YSxmdW5jTmFtZTpcImdldENvbnZlcnNhdGlvblVucmVhZENvdW50XCJ9KSxjLm9uRXJyb3IoYSl9KX19KX0sYi5wcm90b3R5cGUuZ2V0VW5yZWFkQ291bnQ9ZnVuY3Rpb24oYSxjLGQpe2IuX2RhdGFBY2Nlc3NQcm92aWRlci5nZXRVbnJlYWRDb3VudChhLGMse29uU3VjY2VzczpmdW5jdGlvbihhKXtzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7ZC5vblN1Y2Nlc3MoYSl9KX0sb25FcnJvcjpmdW5jdGlvbihhKXtzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7Yi5sb2dnZXIoe2NvZGU6YSxmdW5jTmFtZTpcImdldFVucmVhZENvdW50XCJ9KSxkLm9uRXJyb3IoYSl9KX19KX0sYi5wcm90b3R5cGUuc2V0VW5yZWFkQ291bnQ9ZnVuY3Rpb24oYyxkLGUpe2EuQ2hlY2tQYXJhbS5nZXRJbnN0YW5jZSgpLmNoZWNrKFtcIm51bWJlclwiLFwic3RyaW5nXCIsXCJudW1iZXJcIl0sXCJzZXRVbnJlYWRDb3VudFwiLCExLGFyZ3VtZW50cyksYi5fZGF0YUFjY2Vzc1Byb3ZpZGVyLnNldFVucmVhZENvdW50KGMsZCxlKX0sYi5wcm90b3R5cGUuY2xlYXJVbnJlYWRDb3VudEJ5VGltZXN0YW1wPWZ1bmN0aW9uKGEsYyxkLGUpe2IuX2RhdGFBY2Nlc3NQcm92aWRlci5jbGVhclVucmVhZENvdW50QnlUaW1lc3RhbXAoYSxjLGQsYi5sb2dDYWxsYmFjayhlLFwiY2xlYXJVbnJlYWRDb3VudEJ5VGltZXN0YW1wXCIpKX0sYi5wcm90b3R5cGUuY2xlYXJVbnJlYWRDb3VudD1mdW5jdGlvbihhLGMsZCl7Yi5fZGF0YUFjY2Vzc1Byb3ZpZGVyLmNsZWFyVW5yZWFkQ291bnQoYSxjLHtvblN1Y2Nlc3M6ZnVuY3Rpb24oYSl7c2V0VGltZW91dChmdW5jdGlvbigpe2Qub25TdWNjZXNzKGEpfSl9LG9uRXJyb3I6ZnVuY3Rpb24oYSl7c2V0VGltZW91dChmdW5jdGlvbigpe2IubG9nZ2VyKHtjb2RlOmEsZnVuY05hbWU6XCJjbGVhclVucmVhZENvdW50XCJ9KSxkLm9uRXJyb3IoYSl9KX19KX0sYi5wcm90b3R5cGUuY2xlYXJUb3RhbFVucmVhZENvdW50PWZ1bmN0aW9uKGEpe2IuX2RhdGFBY2Nlc3NQcm92aWRlci5jbGVhclRvdGFsVW5yZWFkQ291bnQoe29uU3VjY2VzczpmdW5jdGlvbihiKXthLm9uU3VjY2VzcyhiKX0sb25FcnJvcjpmdW5jdGlvbihjKXtzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7Yi5sb2dnZXIoe2NvZGU6YyxmdW5jTmFtZTpcImNsZWFyVG90YWxVbnJlYWRDb3VudFwifSksYS5vbkVycm9yKGMpfSl9fSl9LGIucHJvdG90eXBlLmNsZWFyTG9jYWxTdG9yYWdlPWZ1bmN0aW9uKGEpe2IuX3N0b3JhZ2VQcm92aWRlci5jbGVhckl0ZW0oKSxhKCl9LGIucHJvdG90eXBlLnNldE1lc3NhZ2VFeHRyYT1mdW5jdGlvbihhLGMsZCl7Yi5fZGF0YUFjY2Vzc1Byb3ZpZGVyLnNldE1lc3NhZ2VFeHRyYShhLGMse29uU3VjY2VzczpmdW5jdGlvbihhKXtzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7ZC5vblN1Y2Nlc3MoYSl9KX0sb25FcnJvcjpmdW5jdGlvbihhKXtzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7Yi5sb2dnZXIoe2NvZGU6YSxmdW5jTmFtZTpcInNldE1lc3NhZ2VFeHRyYVwifSksZC5vbkVycm9yKGEpfSl9fSl9LGIucHJvdG90eXBlLnNldE1lc3NhZ2VSZWNlaXZlZFN0YXR1cz1mdW5jdGlvbihhLGMsZCl7Yi5fZGF0YUFjY2Vzc1Byb3ZpZGVyLnNldE1lc3NhZ2VSZWNlaXZlZFN0YXR1cyhhLGMse29uU3VjY2VzczpmdW5jdGlvbihhKXtzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7ZC5vblN1Y2Nlc3MoYSl9KX0sb25FcnJvcjpmdW5jdGlvbihhKXtzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7Yi5sb2dnZXIoe2NvZGU6YSxmdW5jTmFtZTpcInNldE1lc3NhZ2VSZWNlaXZlZFN0YXR1c1wifSksZC5vbkVycm9yKGEpfSl9fSl9LGIucHJvdG90eXBlLnNldE1lc3NhZ2VTdGF0dXM9ZnVuY3Rpb24oYSxjLGQsZSxmKXtiLl9kYXRhQWNjZXNzUHJvdmlkZXIuc2V0TWVzc2FnZVN0YXR1cyhhLGMsZCxlLGIubG9nQ2FsbGJhY2soZixcInNldE1lc3NhZ2VTdGF0dXNcIikpfSxiLnByb3RvdHlwZS5zZXRNZXNzYWdlU2VudFN0YXR1cz1mdW5jdGlvbihhLGMsZCl7Yi5fZGF0YUFjY2Vzc1Byb3ZpZGVyLnNldE1lc3NhZ2VTZW50U3RhdHVzKGEsYyx7b25TdWNjZXNzOmZ1bmN0aW9uKGEpe3NldFRpbWVvdXQoZnVuY3Rpb24oKXtkLm9uU3VjY2VzcyhhKX0pfSxvbkVycm9yOmZ1bmN0aW9uKGEpe3NldFRpbWVvdXQoZnVuY3Rpb24oKXtiLmxvZ2dlcih7Y29kZTphLGZ1bmNOYW1lOlwic2V0TWVzc2FnZVNlbnRTdGF0dXNcIn0pLGQub25FcnJvcihhKX0pfX0pfSxiLnByb3RvdHlwZS5jbGVhclRleHRNZXNzYWdlRHJhZnQ9ZnVuY3Rpb24oYyxkKXthLkNoZWNrUGFyYW0uZ2V0SW5zdGFuY2UoKS5jaGVjayhbXCJudW1iZXJcIixcInN0cmluZ3xudW1iZXJcIixcIm9iamVjdFwiXSxcImNsZWFyVGV4dE1lc3NhZ2VEcmFmdFwiLCExLGFyZ3VtZW50cyk7dmFyIGU9XCJkYXJmX1wiK2MrXCJfXCIrZDtyZXR1cm4gZGVsZXRlIGIuX21lbW9yeVN0b3JlW2VdLCEwfSxiLnByb3RvdHlwZS5nZXRUZXh0TWVzc2FnZURyYWZ0PWZ1bmN0aW9uKGMsZCl7aWYoYS5DaGVja1BhcmFtLmdldEluc3RhbmNlKCkuY2hlY2soW1wibnVtYmVyXCIsXCJzdHJpbmd8bnVtYmVyXCIsXCJvYmplY3RcIl0sXCJnZXRUZXh0TWVzc2FnZURyYWZ0XCIsITEsYXJndW1lbnRzKSxcIlwiPT1kfHxjPDApdGhyb3cgbmV3IEVycm9yKFwicGFyYW1zIGVycm9yIDogXCIrYS5FcnJvckNvZGUuRFJBRl9HRVRfRVJST1IpO3ZhciBlPVwiZGFyZl9cIitjK1wiX1wiK2Q7cmV0dXJuIGIuX21lbW9yeVN0b3JlW2VdfSxiLnByb3RvdHlwZS5zYXZlVGV4dE1lc3NhZ2VEcmFmdD1mdW5jdGlvbihjLGQsZSl7YS5DaGVja1BhcmFtLmdldEluc3RhbmNlKCkuY2hlY2soW1wibnVtYmVyXCIsXCJzdHJpbmd8bnVtYmVyXCIsXCJzdHJpbmdcIixcIm9iamVjdFwiXSxcInNhdmVUZXh0TWVzc2FnZURyYWZ0XCIsITEsYXJndW1lbnRzKTt2YXIgZj1cImRhcmZfXCIrYytcIl9cIitkO3JldHVybiBiLl9tZW1vcnlTdG9yZVtmXT1lLCEwfSxiLnByb3RvdHlwZS5zZWFyY2hDb252ZXJzYXRpb25CeUNvbnRlbnQ9ZnVuY3Rpb24oYSxjLGQpe2IuX2RhdGFBY2Nlc3NQcm92aWRlci5zZWFyY2hDb252ZXJzYXRpb25CeUNvbnRlbnQoYSxiLmxvZ0NhbGxiYWNrKGMsXCJzZWFyY2hDb252ZXJzYXRpb25CeUNvbnRlbnRcIiksZCl9LGIucHJvdG90eXBlLnNlYXJjaE1lc3NhZ2VCeUNvbnRlbnQ9ZnVuY3Rpb24oYSxjLGQsZSxmLGcsaCl7Yi5fZGF0YUFjY2Vzc1Byb3ZpZGVyLnNlYXJjaE1lc3NhZ2VCeUNvbnRlbnQoYSxjLGQsZSxmLGcsYi5sb2dDYWxsYmFjayhoLFwic2VhcmNoTWVzc2FnZUJ5Q29udGVudFwiKSl9LGIucHJvdG90eXBlLmNsZWFyQ2FjaGU9ZnVuY3Rpb24oKXtiLl9kYXRhQWNjZXNzUHJvdmlkZXIuY2xlYXJDYWNoZSgpfSxiLnByb3RvdHlwZS5jbGVhckNvbnZlcnNhdGlvbnM9ZnVuY3Rpb24oYyl7Zm9yKHZhciBkPVtdLGU9MTtlPGFyZ3VtZW50cy5sZW5ndGg7ZSsrKWRbZS0xXT1hcmd1bWVudHNbZV07MD09ZC5sZW5ndGgmJihkPVthLkNvbnZlcnNhdGlvblR5cGUuQ0hBVFJPT00sYS5Db252ZXJzYXRpb25UeXBlLkNVU1RPTUVSX1NFUlZJQ0UsYS5Db252ZXJzYXRpb25UeXBlLkRJU0NVU1NJT04sYS5Db252ZXJzYXRpb25UeXBlLkdST1VQLGEuQ29udmVyc2F0aW9uVHlwZS5QUklWQVRFLGEuQ29udmVyc2F0aW9uVHlwZS5TWVNURU0sYS5Db252ZXJzYXRpb25UeXBlLlBVQkxJQ19TRVJWSUNFLGEuQ29udmVyc2F0aW9uVHlwZS5BUFBfUFVCTElDX1NFUlZJQ0VdKSxiLl9kYXRhQWNjZXNzUHJvdmlkZXIuY2xlYXJDb252ZXJzYXRpb25zKGQse29uU3VjY2VzczpmdW5jdGlvbihhKXtzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7Yy5vblN1Y2Nlc3MoYSl9KX0sb25FcnJvcjpmdW5jdGlvbihhKXtzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7Yi5sb2dnZXIoe2NvZGU6YSxmdW5jTmFtZTpcImNsZWFyQ29udmVyc2F0aW9uc1wifSksYy5vbkVycm9yKGEpfSl9fSl9LGIucHJvdG90eXBlLmdldENvbnZlcnNhdGlvbj1mdW5jdGlvbihjLGQsZSl7YS5DaGVja1BhcmFtLmdldEluc3RhbmNlKCkuY2hlY2soW1wibnVtYmVyXCIsXCJzdHJpbmd8bnVtYmVyXCIsXCJvYmplY3RcIl0sXCJnZXRDb252ZXJzYXRpb25cIiwhMSxhcmd1bWVudHMpLGIuX2RhdGFBY2Nlc3NQcm92aWRlci5nZXRDb252ZXJzYXRpb24oYyxkLHtvblN1Y2Nlc3M6ZnVuY3Rpb24oYSl7c2V0VGltZW91dChmdW5jdGlvbigpe2Uub25TdWNjZXNzKGEpfSl9LG9uRXJyb3I6ZnVuY3Rpb24oYSl7c2V0VGltZW91dChmdW5jdGlvbigpe2IubG9nZ2VyKHtjb2RlOmEsZnVuY05hbWU6XCJnZXRDb252ZXJzYXRpb25cIn0pLGUub25FcnJvcihhKX0pfX0pfSxiLnByb3RvdHlwZS5wb3R0aW5nQ29udmVyc2F0aW9uPWZ1bmN0aW9uKGMpe3ZhciBkPXRoaXMsZT0hMTtiLl9kYXRhQWNjZXNzUHJvdmlkZXIuZ2V0Q29udmVyc2F0aW9uKGMudHlwZSxjLnVzZXJJZCx7b25TdWNjZXNzOmZ1bmN0aW9uKGYpe2Y/ZT0hMDpmPW5ldyBhLkNvbnZlcnNhdGlvbixmLmNvbnZlcnNhdGlvblR5cGU9Yy50eXBlLGYudGFyZ2V0SWQ9Yy51c2VySWQsZi5sYXRlc3RNZXNzYWdlPWEuTWVzc2FnZVV0aWwubWVzc2FnZVBhcnNlcihjLm1zZyksZi5sYXRlc3RNZXNzYWdlSWQ9Zi5sYXRlc3RNZXNzYWdlLm1lc3NhZ2VJZCxmLm9iamVjdE5hbWU9Zi5sYXRlc3RNZXNzYWdlLm9iamVjdE5hbWUsZi5yZWNlaXZlZFN0YXR1cz1mLmxhdGVzdE1lc3NhZ2UucmVjZWl2ZWRTdGF0dXMsZi5yZWNlaXZlZFRpbWU9Zi5sYXRlc3RNZXNzYWdlLnJlY2VpdmVUaW1lLGYuc2VudFN0YXR1cz1mLmxhdGVzdE1lc3NhZ2Uuc2VudFN0YXR1cyxmLnNlbnRUaW1lPWYubGF0ZXN0TWVzc2FnZS5zZW50VGltZTt2YXIgZz1iLl9zdG9yYWdlUHJvdmlkZXIuZ2V0SXRlbShcIm1lbnRpb25lZHNfXCIrYS5CcmlkZ2UuX2NsaWVudC51c2VySWQrXCJfXCIrZi5jb252ZXJzYXRpb25UeXBlK1wiX1wiK2YudGFyZ2V0SWQpO2lmKGcpe3ZhciBoPUpTT04ucGFyc2UoZyk7Zi5tZW50aW9uZWRNc2c9aFtjLnR5cGUrXCJfXCIrYy51c2VySWRdfWlmKCFlKWlmKGEuUm9uZ1V0aWwuc3VwcG9ydExvY2FsU3RvcmFnZSgpKXt2YXIgaT1iLl9zdG9yYWdlUHJvdmlkZXIuZ2V0SXRlbShcImN1XCIrYS5CcmlkZ2UuX2NsaWVudC51c2VySWQrYy50eXBlK2MudXNlcklkKTtmLnVucmVhZE1lc3NhZ2VDb3VudD1OdW1iZXIoaSl9ZWxzZSBmLnVucmVhZE1lc3NhZ2VDb3VudD0wO2YuY29udmVyc2F0aW9uVHlwZT09YS5Db252ZXJzYXRpb25UeXBlLkRJU0NVU1NJT04mJmQuZ2V0RGlzY3Vzc2lvbihjLnVzZXJJZCx7b25TdWNjZXNzOmZ1bmN0aW9uKGEpe2YuY29udmVyc2F0aW9uVGl0bGU9YS5uYW1lfSxvbkVycm9yOmZ1bmN0aW9uKGEpe319KSxiLl9kYXRhQWNjZXNzUHJvdmlkZXIuYWRkQ29udmVyc2F0aW9uKGYse29uU3VjY2VzczpmdW5jdGlvbihhKXt9fSl9LG9uRXJyb3I6ZnVuY3Rpb24oYSl7fX0pfSxiLnByb3RvdHlwZS5hZGRDb252ZXJzYXRpb249ZnVuY3Rpb24oYSxjKXtiLl9kYXRhQWNjZXNzUHJvdmlkZXIuYWRkQ29udmVyc2F0aW9uKGEsYyl9LGIucHJvdG90eXBlLnNvcnRDb252ZXJzYXRpb25MaXN0PWZ1bmN0aW9uKGEpe2Zvcih2YXIgYz1bXSxkPTAsZT1hLmxlbmd0aDtkPGU7ZCsrKWlmKGFbZF0paWYoYVtkXS5pc1RvcCljLnB1c2goYVtkXSksYS5zcGxpY2UoZCwxKTtlbHNlIGZvcih2YXIgZj0wO2Y8ZS1kLTE7ZisrKWlmKGFbZl0uc2VudFRpbWU8YVtmKzFdLnNlbnRUaW1lKXt2YXIgZz1hW2ZdO2FbZl09YVtmKzFdLGFbZisxXT1nfXJldHVybiBiLl9tZW1vcnlTdG9yZS5jb252ZXJzYXRpb25MaXN0PWMuY29uY2F0KGEpfSxiLnByb3RvdHlwZS5nZXRDb252ZXJzYXRpb25MaXN0PWZ1bmN0aW9uKGMsZCxlLGYpe2EuQ2hlY2tQYXJhbS5nZXRJbnN0YW5jZSgpLmNoZWNrKFtcIm9iamVjdFwiLFwibnVsbHx1bmRlZmluZWR8YXJyYXl8b2JqZWN0fGdsb2JhbFwiLFwibnVtYmVyfHVuZGVmaW5lZHxudWxsfG9iamVjdHxnbG9iYWxcIixcImJvb2xlYW58dW5kZWZpbmVkfG51bGx8b2JqZWN0fGdsb2JhbFwiXSxcImdldENvbnZlcnNhdGlvbkxpc3RcIiwhMSxhcmd1bWVudHMpO2IuX2RhdGFBY2Nlc3NQcm92aWRlci5nZXRDb252ZXJzYXRpb25MaXN0KHtvblN1Y2Nlc3M6ZnVuY3Rpb24oYSl7ZHx8Yi5fZGF0YUFjY2Vzc1Byb3ZpZGVyP3NldFRpbWVvdXQoZnVuY3Rpb24oKXtjLm9uU3VjY2VzcyhhKX0pOnNldFRpbWVvdXQoZnVuY3Rpb24oKXtjLm9uU3VjY2VzcyhiLl9tZW1vcnlTdG9yZS5jb252ZXJzYXRpb25MaXN0KX0pfSxvbkVycm9yOmZ1bmN0aW9uKGEpe3NldFRpbWVvdXQoZnVuY3Rpb24oKXtiLmxvZ2dlcih7Y29kZTphLGZ1bmNOYW1lOlwiZ2V0Q29udmVyc2F0aW9uTGlzdFwifSksYy5vbkVycm9yKGEpfSl9fSxkLGUsZil9LGIucHJvdG90eXBlLmdldFJlbW90ZUNvbnZlcnNhdGlvbkxpc3Q9ZnVuY3Rpb24oYyxkLGUsZil7YS5DaGVja1BhcmFtLmdldEluc3RhbmNlKCkuY2hlY2soW1wib2JqZWN0XCIsXCJudWxsfGFycmF5fG9iamVjdHxnbG9iYWxcIixcIm51bWJlcnx1bmRlZmluZWR8bnVsbHxvYmplY3R8Z2xvYmFsXCIsXCJib29sZWFufHVuZGVmaW5lZHxudWxsfG9iamVjdHxnbG9iYWxcIl0sXCJnZXRSZW1vdGVDb252ZXJzYXRpb25MaXN0XCIsITEsYXJndW1lbnRzKSxiLl9kYXRhQWNjZXNzUHJvdmlkZXIuZ2V0UmVtb3RlQ29udmVyc2F0aW9uTGlzdChiLmxvZ0NhbGxiYWNrKGMsXCJnZXRSZW1vdGVDb252ZXJzYXRpb25MaXN0XCIpLGQsZSxmKX0sYi5wcm90b3R5cGUudXBkYXRlQ29udmVyc2F0aW9uPWZ1bmN0aW9uKGEpe3JldHVybiBiLl9kYXRhQWNjZXNzUHJvdmlkZXIudXBkYXRlQ29udmVyc2F0aW9uKGEpfSxiLnByb3RvdHlwZS5jcmVhdGVDb252ZXJzYXRpb249ZnVuY3Rpb24oYixjLGQpe2EuQ2hlY2tQYXJhbS5nZXRJbnN0YW5jZSgpLmNoZWNrKFtcIm51bWJlclwiLFwic3RyaW5nfG51bWJlclwiLFwic3RyaW5nXCJdLFwiY3JlYXRlQ29udmVyc2F0aW9uXCIsITEsYXJndW1lbnRzKTt2YXIgZT1uZXcgYS5Db252ZXJzYXRpb247cmV0dXJuIGUudGFyZ2V0SWQ9YyxlLmNvbnZlcnNhdGlvblR5cGU9YixlLmNvbnZlcnNhdGlvblRpdGxlPWQsZS5sYXRlc3RNZXNzYWdlPXt9LGUudW5yZWFkTWVzc2FnZUNvdW50PTAsZX0sYi5wcm90b3R5cGUucmVtb3ZlQ29udmVyc2F0aW9uPWZ1bmN0aW9uKGMsZCxlKXthLkNoZWNrUGFyYW0uZ2V0SW5zdGFuY2UoKS5jaGVjayhbXCJudW1iZXJcIixcInN0cmluZ3xudW1iZXJcIixcIm9iamVjdFwiXSxcInJlbW92ZUNvbnZlcnNhdGlvblwiLCExLGFyZ3VtZW50cyksYi5fZGF0YUFjY2Vzc1Byb3ZpZGVyLnJlbW92ZUNvbnZlcnNhdGlvbihjLGQsYi5sb2dDYWxsYmFjayhlLFwicmVtb3ZlQ29udmVyc2F0aW9uXCIpKX0sYi5wcm90b3R5cGUuc2V0Q29udmVyc2F0aW9uSGlkZGVuPWZ1bmN0aW9uKGMsZCxlKXthLkNoZWNrUGFyYW0uZ2V0SW5zdGFuY2UoKS5jaGVjayhbXCJudW1iZXJcIixcInN0cmluZ3xudW1iZXJcIixcImJvb2xlYW5cIl0sXCJzZXRDb252ZXJzYXRpb25IaWRkZW5cIiwhMSxhcmd1bWVudHMpLGIuX2RhdGFBY2Nlc3NQcm92aWRlci5zZXRDb252ZXJzYXRpb25IaWRkZW4oYyxkLGUpfSxiLnByb3RvdHlwZS5zZXRDb252ZXJzYXRpb25Ub1RvcD1mdW5jdGlvbihjLGQsZSxmKXthLkNoZWNrUGFyYW0uZ2V0SW5zdGFuY2UoKS5jaGVjayhbXCJudW1iZXJcIixcInN0cmluZ3xudW1iZXJcIixcImJvb2xlYW5cIixcIm9iamVjdFwiXSxcInNldENvbnZlcnNhdGlvblRvVG9wXCIsITEsYXJndW1lbnRzKSxiLl9kYXRhQWNjZXNzUHJvdmlkZXIuc2V0Q29udmVyc2F0aW9uVG9Ub3AoYyxkLGUse29uU3VjY2VzczpmdW5jdGlvbihhKXtzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7Zi5vblN1Y2Nlc3MoYSl9KX0sb25FcnJvcjpmdW5jdGlvbihhKXtzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7Yi5sb2dnZXIoe2NvZGU6YSxmdW5jTmFtZTpcInNldENvbnZlcnNhdGlvblRvVG9wXCJ9KSxmLm9uRXJyb3IoYSl9KX19KX0sYi5wcm90b3R5cGUuZ2V0Q29udmVyc2F0aW9uTm90aWZpY2F0aW9uU3RhdHVzPWZ1bmN0aW9uKGEsYyxkKXt2YXIgZT17Y29udmVyc2F0aW9uVHlwZTphLHRhcmdldElkOmN9O2IuX2RhdGFBY2Nlc3NQcm92aWRlci5nZXRDb252ZXJzYXRpb25Ob3RpZmljYXRpb25TdGF0dXMoZSxiLmxvZ0NhbGxiYWNrKGQsXCJnZXRDb252ZXJzYXRpb25Ob3RpZmljYXRpb25TdGF0dXNcIikpfSxiLnByb3RvdHlwZS5zZXRDb252ZXJzYXRpb25Ob3RpZmljYXRpb25TdGF0dXM9ZnVuY3Rpb24oYSxjLGQsZSl7dmFyIGY9e2NvbnZlcnNhdGlvblR5cGU6YSx0YXJnZXRJZDpjLHN0YXR1czpzdGF0dXN9O2IuX2RhdGFBY2Nlc3NQcm92aWRlci5zZXRDb252ZXJzYXRpb25Ob3RpZmljYXRpb25TdGF0dXMoZixiLmxvZ0NhbGxiYWNrKGUsXCJzZXRDb252ZXJzYXRpb25Ob3RpZmljYXRpb25TdGF0dXNcIikpfSxiLnByb3RvdHlwZS5nZXROb3RpZmljYXRpb25RdWlldEhvdXJzPWZ1bmN0aW9uKGEpe3Rocm93IG5ldyBFcnJvcihcIk5vdCBpbXBsZW1lbnRlZCB5ZXRcIil9LGIucHJvdG90eXBlLnJlbW92ZU5vdGlmaWNhdGlvblF1aWV0SG91cnM9ZnVuY3Rpb24oYSl7dGhyb3cgbmV3IEVycm9yKFwiTm90IGltcGxlbWVudGVkIHlldFwiKX0sYi5wcm90b3R5cGUuc2V0Tm90aWZpY2F0aW9uUXVpZXRIb3Vycz1mdW5jdGlvbihhLGIsYyl7dGhyb3cgbmV3IEVycm9yKFwiTm90IGltcGxlbWVudGVkIHlldFwiKX0sYi5wcm90b3R5cGUuYWRkTWVtYmVyVG9EaXNjdXNzaW9uPWZ1bmN0aW9uKGMsZCxlKXthLkNoZWNrUGFyYW0uZ2V0SW5zdGFuY2UoKS5jaGVjayhbXCJzdHJpbmdcIixcImFycmF5XCIsXCJvYmplY3RcIl0sXCJhZGRNZW1iZXJUb0Rpc2N1c3Npb25cIiwhMSxhcmd1bWVudHMpLGIuX2RhdGFBY2Nlc3NQcm92aWRlci5hZGRNZW1iZXJUb0Rpc2N1c3Npb24oYyxkLGIubG9nQ2FsbGJhY2soZSxcImFkZE1lbWJlclRvRGlzY3Vzc2lvblwiKSl9LGIucHJvdG90eXBlLmNyZWF0ZURpc2N1c3Npb249ZnVuY3Rpb24oYyxkLGUpe2EuQ2hlY2tQYXJhbS5nZXRJbnN0YW5jZSgpLmNoZWNrKFtcInN0cmluZ1wiLFwiYXJyYXlcIixcIm9iamVjdFwiXSxcImNyZWF0ZURpc2N1c3Npb25cIiwhMSxhcmd1bWVudHMpLGIuX2RhdGFBY2Nlc3NQcm92aWRlci5jcmVhdGVEaXNjdXNzaW9uKGMsZCxlKX0sYi5wcm90b3R5cGUuZ2V0RGlzY3Vzc2lvbj1mdW5jdGlvbihjLGQpe2EuQ2hlY2tQYXJhbS5nZXRJbnN0YW5jZSgpLmNoZWNrKFtcInN0cmluZ1wiLFwib2JqZWN0XCJdLFwiZ2V0RGlzY3Vzc2lvblwiLCExLGFyZ3VtZW50cyksYi5fZGF0YUFjY2Vzc1Byb3ZpZGVyLmdldERpc2N1c3Npb24oYyxiLmxvZ0NhbGxiYWNrKGQsXCJnZXREaXNjdXNzaW9uXCIpKX0sYi5wcm90b3R5cGUucXVpdERpc2N1c3Npb249ZnVuY3Rpb24oYyxkKXthLkNoZWNrUGFyYW0uZ2V0SW5zdGFuY2UoKS5jaGVjayhbXCJzdHJpbmdcIixcIm9iamVjdFwiXSxcInF1aXREaXNjdXNzaW9uXCIsITEsYXJndW1lbnRzKSxiLl9kYXRhQWNjZXNzUHJvdmlkZXIucXVpdERpc2N1c3Npb24oYyxiLmxvZ0NhbGxiYWNrKGQsXCJxdWl0RGlzY3Vzc2lvblwiKSl9LGIucHJvdG90eXBlLnJlbW92ZU1lbWJlckZyb21EaXNjdXNzaW9uPWZ1bmN0aW9uKGMsZCxlKXthLkNoZWNrUGFyYW0uZ2V0SW5zdGFuY2UoKS5jaGVjayhbXCJzdHJpbmdcIixcInN0cmluZ1wiLFwib2JqZWN0XCJdLFwicmVtb3ZlTWVtYmVyRnJvbURpc2N1c3Npb25cIiwhMSxhcmd1bWVudHMpLGIuX2RhdGFBY2Nlc3NQcm92aWRlci5yZW1vdmVNZW1iZXJGcm9tRGlzY3Vzc2lvbihjLGQsYi5sb2dDYWxsYmFjayhlLFwicmVtb3ZlTWVtYmVyRnJvbURpc2N1c3Npb25cIikpfSxiLnByb3RvdHlwZS5zZXREaXNjdXNzaW9uSW52aXRlU3RhdHVzPWZ1bmN0aW9uKGMsZCxlKXthLkNoZWNrUGFyYW0uZ2V0SW5zdGFuY2UoKS5jaGVjayhbXCJzdHJpbmdcIixcIm51bWJlclwiLFwib2JqZWN0XCJdLFwic2V0RGlzY3Vzc2lvbkludml0ZVN0YXR1c1wiLCExLGFyZ3VtZW50cyksYi5fZGF0YUFjY2Vzc1Byb3ZpZGVyLnNldERpc2N1c3Npb25JbnZpdGVTdGF0dXMoYyxkLGIubG9nQ2FsbGJhY2soZSxcInNldERpc2N1c3Npb25JbnZpdGVTdGF0dXNcIikpfSxiLnByb3RvdHlwZS5zZXREaXNjdXNzaW9uTmFtZT1mdW5jdGlvbihjLGQsZSl7YS5DaGVja1BhcmFtLmdldEluc3RhbmNlKCkuY2hlY2soW1wic3RyaW5nXCIsXCJzdHJpbmdcIixcIm9iamVjdFwiXSxcInNldERpc2N1c3Npb25OYW1lXCIsITEsYXJndW1lbnRzKSxiLl9kYXRhQWNjZXNzUHJvdmlkZXIuc2V0RGlzY3Vzc2lvbk5hbWUoYyxkLGIubG9nQ2FsbGJhY2soZSxcInNldERpc2N1c3Npb25OYW1lXCIpKX0sYi5wcm90b3R5cGUuam9pbkNoYXRSb29tPWZ1bmN0aW9uKGMsZCxlKXtpZihhLkNoZWNrUGFyYW0uZ2V0SW5zdGFuY2UoKS5jaGVjayhbXCJzdHJpbmd8bnVtYmVyXCIsXCJudW1iZXJcIixcIm9iamVjdFwiXSxcImpvaW5DaGF0Um9vbVwiLCExLGFyZ3VtZW50cyksXCJcIj09YylyZXR1cm4gdm9pZCBzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7dmFyIGM9YS5FcnJvckNvZGUuQ0hBVFJPT01fSURfSVNOVUxMO2IubG9nZ2VyKHtjb2RlOmMsZnVuY05hbWU6XCJqb2luQ2hhdFJvb21cIn0pLGUub25FcnJvcihhLkVycm9yQ29kZS5DSEFUUk9PTV9JRF9JU05VTEwpfSk7Yi5fZGF0YUFjY2Vzc1Byb3ZpZGVyLmpvaW5DaGF0Um9vbShjLGQsYi5sb2dDYWxsYmFjayhlLFwiam9pbkNoYXRSb29tXCIpKX0sYi5wcm90b3R5cGUuc2V0RGV2aWNlSW5mbz1mdW5jdGlvbihhKXtiLl9kYXRhQWNjZXNzUHJvdmlkZXIuc2V0RGV2aWNlSW5mbyhhKX0sYi5wcm90b3R5cGUuc2V0Q2hhdHJvb21IaXNNZXNzYWdlVGltZXN0YW1wPWZ1bmN0aW9uKGMsZCl7YS5DaGVja1BhcmFtLmdldEluc3RhbmNlKCkuY2hlY2soW1wic3RyaW5nfG51bWJlclwiLFwibnVtYmVyXCJdLFwic2V0Q2hhdHJvb21IaXNNZXNzYWdlVGltZXN0YW1wXCIsITEsYXJndW1lbnRzKSxiLl9kYXRhQWNjZXNzUHJvdmlkZXIuc2V0Q2hhdHJvb21IaXNNZXNzYWdlVGltZXN0YW1wKGMsZCl9LGIucHJvdG90eXBlLmdldENoYXRSb29tSGlzdG9yeU1lc3NhZ2VzPWZ1bmN0aW9uKGMsZCxlLGYpe2EuQ2hlY2tQYXJhbS5nZXRJbnN0YW5jZSgpLmNoZWNrKFtcInN0cmluZ3xudW1iZXJcIixcIm51bWJlclwiLFwibnVtYmVyXCIsXCJvYmplY3RcIl0sXCJnZXRDaGF0Um9vbUhpc3RvcnlNZXNzYWdlc1wiLCExLGFyZ3VtZW50cyksYi5fZGF0YUFjY2Vzc1Byb3ZpZGVyLmdldENoYXRSb29tSGlzdG9yeU1lc3NhZ2VzKGMsZCxlLGIubG9nQ2FsbGJhY2soZixcImdldENoYXRSb29tSGlzdG9yeU1lc3NhZ2VzXCIpKX0sYi5wcm90b3R5cGUuZ2V0Q2hhdFJvb21JbmZvPWZ1bmN0aW9uKGMsZCxlLGYpe2EuQ2hlY2tQYXJhbS5nZXRJbnN0YW5jZSgpLmNoZWNrKFtcInN0cmluZ3xudW1iZXJcIixcIm51bWJlclwiLFwibnVtYmVyXCIsXCJvYmplY3RcIl0sXCJnZXRDaGF0Um9vbUluZm9cIiwhMSxhcmd1bWVudHMpLGIuX2RhdGFBY2Nlc3NQcm92aWRlci5nZXRDaGF0Um9vbUluZm8oYyxkLGUsYi5sb2dDYWxsYmFjayhmLFwiZ2V0Q2hhdFJvb21JbmZvXCIpKX0sYi5wcm90b3R5cGUucXVpdENoYXRSb29tPWZ1bmN0aW9uKGMsZCl7YS5DaGVja1BhcmFtLmdldEluc3RhbmNlKCkuY2hlY2soW1wic3RyaW5nfG51bWJlclwiLFwib2JqZWN0XCJdLFwicXVpdENoYXRSb29tXCIsITEsYXJndW1lbnRzKSxiLl9kYXRhQWNjZXNzUHJvdmlkZXIucXVpdENoYXRSb29tKGMsYi5sb2dDYWxsYmFjayhkLFwicXVpdENoYXRSb29tXCIpKX0sYi5wcm90b3R5cGUuZ2V0UmVtb3RlUHVibGljU2VydmljZUxpc3Q9ZnVuY3Rpb24oYSxjKXtiLl9kYXRhQWNjZXNzUHJvdmlkZXIuZ2V0UmVtb3RlUHVibGljU2VydmljZUxpc3QoYi5sb2dDYWxsYmFjayhhLFwiZ2V0UmVtb3RlUHVibGljU2VydmljZUxpc3RcIiksYyl9LGIucHJvdG90eXBlLmdldFB1YmxpY1NlcnZpY2VMaXN0PWZ1bmN0aW9uKGMpe2IuX21lbW9yeVN0b3JlLmRlcGVuZC5vcGVuTXAmJihhLkNoZWNrUGFyYW0uZ2V0SW5zdGFuY2UoKS5jaGVjayhbXCJvYmplY3RcIl0sXCJnZXRQdWJsaWNTZXJ2aWNlTGlzdFwiLCExLGFyZ3VtZW50cyksdGhpcy5nZXRSZW1vdGVQdWJsaWNTZXJ2aWNlTGlzdChiLmxvZ0NhbGxiYWNrKGMsXCJnZXRQdWJsaWNTZXJ2aWNlTGlzdFwiKSkpfSxiLnByb3RvdHlwZS5nZXRQdWJsaWNTZXJ2aWNlUHJvZmlsZT1mdW5jdGlvbihjLGQsZSl7Yi5fbWVtb3J5U3RvcmUuZGVwZW5kLm9wZW5NcCYmKGEuQ2hlY2tQYXJhbS5nZXRJbnN0YW5jZSgpLmNoZWNrKFtcIm51bWJlclwiLFwic3RyaW5nfG51bWJlclwiLFwib2JqZWN0XCJdLFwiZ2V0UHVibGljU2VydmljZVByb2ZpbGVcIiwhMSxhcmd1bWVudHMpLGIuX2RhdGFBY2Nlc3NQcm92aWRlci5nZXRQdWJsaWNTZXJ2aWNlUHJvZmlsZShjLGQsYi5sb2dDYWxsYmFjayhlLFwiZ2V0UHVibGljU2VydmljZVByb2ZpbGVcIikpKX0sYi5wcm90b3R5cGUucG90dGluZ1B1YmxpY1NlYXJjaFR5cGU9ZnVuY3Rpb24oYSxjKXtpZihiLl9tZW1vcnlTdG9yZS5kZXBlbmQub3Blbk1wKXt2YXIgZD0wO3JldHVybiAwPT1hPyhkfD0zLGR8PTA9PWM/MTI6NDgpOjE9PWE/KGR8PTEsZHw9MD09Yz84OjMyKTooZHw9MixkfD0wPT1hPzQ6MTYpLGR9fSxiLnByb3RvdHlwZS5zZWFyY2hQdWJsaWNTZXJ2aWNlPWZ1bmN0aW9uKGMsZCxlKXtpZihiLl9tZW1vcnlTdG9yZS5kZXBlbmQub3Blbk1wKXthLkNoZWNrUGFyYW0uZ2V0SW5zdGFuY2UoKS5jaGVjayhbXCJudW1iZXJcIixcInN0cmluZ1wiLFwib2JqZWN0XCJdLFwic2VhcmNoUHVibGljU2VydmljZVwiLCExLGFyZ3VtZW50cyk7dmFyIGY9bmV3IGIuUHJvdG9idWYuU2VhcmNoTXBJbnB1dDtmLnNldFR5cGUodGhpcy5wb3R0aW5nUHVibGljU2VhcmNoVHlwZSgwLGMpKSxmLnNldElkKGQpLGIuYnJpZGdlLnF1ZXJ5TXNnKDI5LGEuTWVzc2FnZVV0aWwuQXJyYXlGb3JtKGYudG9BcnJheUJ1ZmZlcigpKSxhLkJyaWRnZS5fY2xpZW50LnVzZXJJZCxiLmxvZ0NhbGxiYWNrKGUsXCJzZWFyY2hQdWJsaWNTZXJ2aWNlXCIpLFwiU2VhcmNoTXBPdXRwdXRcIil9fSxiLnByb3RvdHlwZS5zZWFyY2hQdWJsaWNTZXJ2aWNlQnlUeXBlPWZ1bmN0aW9uKGMsZCxlLGYpe2lmKGIuX21lbW9yeVN0b3JlLmRlcGVuZC5vcGVuTXApe2EuQ2hlY2tQYXJhbS5nZXRJbnN0YW5jZSgpLmNoZWNrKFtcIm51bWJlclwiLFwibnVtYmVyXCIsXCJzdHJpbmdcIixcIm9iamVjdFwiXSxcInNlYXJjaFB1YmxpY1NlcnZpY2VCeVR5cGVcIiwhMSxhcmd1bWVudHMpO3ZhciBnPWM9PWEuQ29udmVyc2F0aW9uVHlwZS5BUFBfUFVCTElDX1NFUlZJQ0U/MjoxLGg9bmV3IGIuUHJvdG9idWYuU2VhcmNoTXBJbnB1dDtoLnNldFR5cGUodGhpcy5wb3R0aW5nUHVibGljU2VhcmNoVHlwZShnLGQpKSxoLnNldElkKGUpLGIuYnJpZGdlLnF1ZXJ5TXNnKDI5LGEuTWVzc2FnZVV0aWwuQXJyYXlGb3JtKGgudG9BcnJheUJ1ZmZlcigpKSxhLkJyaWRnZS5fY2xpZW50LnVzZXJJZCxiLmxvZ0NhbGxiYWNrKGYsXCJzZWFyY2hQdWJsaWNTZXJ2aWNlQnlUeXBlXCIpLFwiU2VhcmNoTXBPdXRwdXRcIil9fSxiLnByb3RvdHlwZS5zdWJzY3JpYmVQdWJsaWNTZXJ2aWNlPWZ1bmN0aW9uKGMsZCxlKXtpZihiLl9tZW1vcnlTdG9yZS5kZXBlbmQub3Blbk1wKXthLkNoZWNrUGFyYW0uZ2V0SW5zdGFuY2UoKS5jaGVjayhbXCJudW1iZXJcIixcInN0cmluZ3xudW1iZXJcIixcIm9iamVjdFwiXSxcInN1YnNjcmliZVB1YmxpY1NlcnZpY2VcIiwhMSxhcmd1bWVudHMpO3ZhciBmPW5ldyBiLlByb3RvYnVmLk1QRm9sbG93SW5wdXQsZz10aGlzLGg9Yz09YS5Db252ZXJzYXRpb25UeXBlLkFQUF9QVUJMSUNfU0VSVklDRT9cIm1jRm9sbG93XCI6XCJtcEZvbGxvd1wiO2Yuc2V0SWQoZCksYi5icmlkZ2UucXVlcnlNc2coaCxhLk1lc3NhZ2VVdGlsLkFycmF5Rm9ybShmLnRvQXJyYXlCdWZmZXIoKSksYS5CcmlkZ2UuX2NsaWVudC51c2VySWQse29uU3VjY2VzczpmdW5jdGlvbigpe2cuZ2V0UmVtb3RlUHVibGljU2VydmljZUxpc3Qoe29uU3VjY2VzczpmdW5jdGlvbigpe30sb25FcnJvcjpmdW5jdGlvbigpe319KSxlLm9uU3VjY2VzcygpfSxvbkVycm9yOmZ1bmN0aW9uKGEpe3ZhciBjPWE7Yi5sb2dnZXIoe2NvZGU6YyxmdW5jTmFtZTpcInN1YnNjcmliZVB1YmxpY1NlcnZpY2VcIn0pLGUub25FcnJvcihhKX19LFwiTVBGb2xsb3dPdXRwdXRcIil9fSxiLnByb3RvdHlwZS51bnN1YnNjcmliZVB1YmxpY1NlcnZpY2U9ZnVuY3Rpb24oYyxkLGUpe2lmKGIuX21lbW9yeVN0b3JlLmRlcGVuZC5vcGVuTXApe2EuQ2hlY2tQYXJhbS5nZXRJbnN0YW5jZSgpLmNoZWNrKFtcIm51bWJlclwiLFwic3RyaW5nfG51bWJlclwiLFwib2JqZWN0XCJdLFwidW5zdWJzY3JpYmVQdWJsaWNTZXJ2aWNlXCIsITEsYXJndW1lbnRzKTt2YXIgZj1uZXcgYi5Qcm90b2J1Zi5NUEZvbGxvd0lucHV0LGc9Yz09YS5Db252ZXJzYXRpb25UeXBlLkFQUF9QVUJMSUNfU0VSVklDRT9cIm1jVW5Gb2xsb3dcIjpcIm1wVW5Gb2xsb3dcIjtmLnNldElkKGQpLGIuYnJpZGdlLnF1ZXJ5TXNnKGcsYS5NZXNzYWdlVXRpbC5BcnJheUZvcm0oZi50b0FycmF5QnVmZmVyKCkpLGEuQnJpZGdlLl9jbGllbnQudXNlcklkLHtvblN1Y2Nlc3M6ZnVuY3Rpb24oKXtiLl9tZW1vcnlTdG9yZS5wdWJsaWNTZXJ2aWNlTWFwLnJlbW92ZShjLGQpLGUub25TdWNjZXNzKCl9LG9uRXJyb3I6ZnVuY3Rpb24oYSl7dmFyIGM9YTtiLmxvZ2dlcih7Y29kZTpjLGZ1bmNOYW1lOlwidW5zdWJzY3JpYmVQdWJsaWNTZXJ2aWNlXCJ9KSxlLm9uRXJyb3IoYSl9fSxcIk1QRm9sbG93T3V0cHV0XCIpfX0sYi5wcm90b3R5cGUuYWRkVG9CbGFja2xpc3Q9ZnVuY3Rpb24oYyxkKXthLkNoZWNrUGFyYW0uZ2V0SW5zdGFuY2UoKS5jaGVjayhbXCJzdHJpbmd8bnVtYmVyXCIsXCJvYmplY3RcIl0sXCJhZGRUb0JsYWNrbGlzdFwiLCExLGFyZ3VtZW50cyksYi5fZGF0YUFjY2Vzc1Byb3ZpZGVyLmFkZFRvQmxhY2tsaXN0KGMsYi5sb2dDYWxsYmFjayhkLFwiYWRkVG9CbGFja2xpc3RcIikpfSxiLnByb3RvdHlwZS5nZXRCbGFja2xpc3Q9ZnVuY3Rpb24oYyl7YS5DaGVja1BhcmFtLmdldEluc3RhbmNlKCkuY2hlY2soW1wib2JqZWN0XCJdLFwiZ2V0QmxhY2tsaXN0XCIsITEsYXJndW1lbnRzKSxiLl9kYXRhQWNjZXNzUHJvdmlkZXIuZ2V0QmxhY2tsaXN0KGMpfSxiLnByb3RvdHlwZS5nZXRCbGFja2xpc3RTdGF0dXM9ZnVuY3Rpb24oYyxkKXthLkNoZWNrUGFyYW0uZ2V0SW5zdGFuY2UoKS5jaGVjayhbXCJzdHJpbmd8bnVtYmVyXCIsXCJvYmplY3RcIl0sXCJnZXRCbGFja2xpc3RTdGF0dXNcIiwhMSxhcmd1bWVudHMpLGIuX2RhdGFBY2Nlc3NQcm92aWRlci5nZXRCbGFja2xpc3RTdGF0dXMoYyxiLmxvZ0NhbGxiYWNrKGQsXCJnZXRCbGFja2xpc3RTdGF0dXNcIikpfSxiLnByb3RvdHlwZS5yZW1vdmVGcm9tQmxhY2tsaXN0PWZ1bmN0aW9uKGMsZCl7XHJcbmEuQ2hlY2tQYXJhbS5nZXRJbnN0YW5jZSgpLmNoZWNrKFtcInN0cmluZ3xudW1iZXJcIixcIm9iamVjdFwiXSxcInJlbW92ZUZyb21CbGFja2xpc3RcIiwhMSxhcmd1bWVudHMpLGIuX2RhdGFBY2Nlc3NQcm92aWRlci5yZW1vdmVGcm9tQmxhY2tsaXN0KGMsYi5sb2dDYWxsYmFjayhkLFwicmVtb3ZlRnJvbUJsYWNrbGlzdFwiKSl9LGIucHJvdG90eXBlLmdldEZpbGVUb2tlbj1mdW5jdGlvbihjLGQpe2EuQ2hlY2tQYXJhbS5nZXRJbnN0YW5jZSgpLmNoZWNrKFtcIm51bWJlclwiLFwib2JqZWN0XCJdLFwiZ2V0UW5nZXRGaWxlVG9rZW5Ua25cIiwhMSxhcmd1bWVudHMpLGIuX2RhdGFBY2Nlc3NQcm92aWRlci5nZXRGaWxlVG9rZW4oYyxiLmxvZ0NhbGxiYWNrKGQsXCJnZXRGaWxlVG9rZW5cIikpfSxiLnByb3RvdHlwZS5nZXRGaWxlVXJsPWZ1bmN0aW9uKGMsZCxlLGYpe2EuQ2hlY2tQYXJhbS5nZXRJbnN0YW5jZSgpLmNoZWNrKFtcIm51bWJlclwiLFwic3RyaW5nXCIsXCJzdHJpbmd8Z2xvYmFsfG9iamVjdHxudWxsXCIsXCJvYmplY3RcIl0sXCJnZXRGaWxlVXJsXCIsITEsYXJndW1lbnRzKSxiLl9kYXRhQWNjZXNzUHJvdmlkZXIuZ2V0RmlsZVVybChjLGQsZSxiLmxvZ0NhbGxiYWNrKGYsXCJnZXRGaWxlVXJsXCIpKX0sYi5wcm90b3R5cGUuYWRkUmVhbFRpbWVMb2NhdGlvbkxpc3RlbmVyPWZ1bmN0aW9uKGEsYixjKXt0aHJvdyBuZXcgRXJyb3IoXCJOb3QgaW1wbGVtZW50ZWQgeWV0XCIpfSxiLnByb3RvdHlwZS5nZXRSZWFsVGltZUxvY2F0aW9uPWZ1bmN0aW9uKGEsYil7dGhyb3cgbmV3IEVycm9yKFwiTm90IGltcGxlbWVudGVkIHlldFwiKX0sYi5wcm90b3R5cGUuZ2V0UmVhbFRpbWVMb2NhdGlvbkN1cnJlbnRTdGF0ZT1mdW5jdGlvbihhLGIpe3Rocm93IG5ldyBFcnJvcihcIk5vdCBpbXBsZW1lbnRlZCB5ZXRcIil9LGIucHJvdG90eXBlLmdldFJlYWxUaW1lTG9jYXRpb25QYXJ0aWNpcGFudHM9ZnVuY3Rpb24oYSxiKXt0aHJvdyBuZXcgRXJyb3IoXCJOb3QgaW1wbGVtZW50ZWQgeWV0XCIpfSxiLnByb3RvdHlwZS5qb2luUmVhbFRpbWVMb2NhdGlvbj1mdW5jdGlvbihhLGIpe3Rocm93IG5ldyBFcnJvcihcIk5vdCBpbXBsZW1lbnRlZCB5ZXRcIil9LGIucHJvdG90eXBlLnF1aXRSZWFsVGltZUxvY2F0aW9uPWZ1bmN0aW9uKGEsYil7dGhyb3cgbmV3IEVycm9yKFwiTm90IGltcGxlbWVudGVkIHlldFwiKX0sYi5wcm90b3R5cGUuc3RhcnRSZWFsVGltZUxvY2F0aW9uPWZ1bmN0aW9uKGEsYil7dGhyb3cgbmV3IEVycm9yKFwiTm90IGltcGxlbWVudGVkIHlldFwiKX0sYi5wcm90b3R5cGUudXBkYXRlUmVhbFRpbWVMb2NhdGlvblN0YXR1cz1mdW5jdGlvbihhLGIsYyxkKXt0aHJvdyBuZXcgRXJyb3IoXCJOb3QgaW1wbGVtZW50ZWQgeWV0XCIpfSxiLnByb3RvdHlwZS5zdGFydENhbGw9ZnVuY3Rpb24oYyxkLGUsZixnLGgpe2lmKGEuQ2hlY2tQYXJhbS5nZXRJbnN0YW5jZSgpLmNoZWNrKFtcIm51bWJlclwiLFwic3RyaW5nfG51bWJlclwiLFwiYXJyYXlcIixcIm51bWJlclwiLFwic3RyaW5nXCIsXCJvYmplY3RcIl0sXCJzdGFydENhbGxcIiwhMSxhcmd1bWVudHMpLGIuX21lbW9yeVN0b3JlLnZvaXBTdGF0ZWd5KWIuX3ZvaXBQcm92aWRlci5zdGFydENhbGwoYyxkLGUsZixnLGIubG9nQ2FsbGJhY2soaCxcInN0YXJ0Q2FsbFwiKSk7ZWxzZXt2YXIgaT1hLkVycm9yQ29kZS5WT0lQX05PVF9BVkFMSUFCTEU7Yi5sb2dnZXIoe2NvZGU6aSxmdW5jTmFtZTpcInN0YXJ0Q2FsbFwifSksaC5vbkVycm9yKGEuRXJyb3JDb2RlLlZPSVBfTk9UX0FWQUxJQUJMRSl9fSxiLnByb3RvdHlwZS5qb2luQ2FsbD1mdW5jdGlvbihjLGQpe2lmKGEuQ2hlY2tQYXJhbS5nZXRJbnN0YW5jZSgpLmNoZWNrKFtcIm51bWJlclwiLFwib2JqZWN0XCJdLFwiam9pbkNhbGxcIiwhMSxhcmd1bWVudHMpLGIuX21lbW9yeVN0b3JlLnZvaXBTdGF0ZWd5KWIuX3ZvaXBQcm92aWRlci5qb2luQ2FsbChjLGIubG9nQ2FsbGJhY2soZCxcImpvaW5DYWxsXCIpKTtlbHNle3ZhciBlPWEuRXJyb3JDb2RlLlZPSVBfTk9UX0FWQUxJQUJMRTtiLmxvZ2dlcih7Y29kZTplLGZ1bmNOYW1lOlwiam9pbkNhbGxcIn0pLGQub25FcnJvcihhLkVycm9yQ29kZS5WT0lQX05PVF9BVkFMSUFCTEUpfX0sYi5wcm90b3R5cGUuaHVuZ3VwQ2FsbD1mdW5jdGlvbihjLGQsZSl7YS5DaGVja1BhcmFtLmdldEluc3RhbmNlKCkuY2hlY2soW1wibnVtYmVyXCIsXCJzdHJpbmdcIixcIm51bWJlclwiXSxcImh1bmd1cENhbGxcIiwhMSxhcmd1bWVudHMpLGIuX21lbW9yeVN0b3JlLnZvaXBTdGF0ZWd5JiZiLl92b2lwUHJvdmlkZXIuaHVuZ3VwQ2FsbChjLGQsZSl9LGIucHJvdG90eXBlLmNoYW5nZU1lZGlhVHlwZT1mdW5jdGlvbihjLGQsZSxmKXtpZihhLkNoZWNrUGFyYW0uZ2V0SW5zdGFuY2UoKS5jaGVjayhbXCJudW1iZXJcIixcInN0cmluZ1wiLFwibnVtYmVyXCIsXCJvYmplY3RcIl0sXCJjaGFuZ2VNZWRpYVR5cGVcIiwhMSxhcmd1bWVudHMpLGIuX21lbW9yeVN0b3JlLnZvaXBTdGF0ZWd5KWIuX3ZvaXBQcm92aWRlci5jaGFuZ2VNZWRpYVR5cGUoYyxkLGUsYi5sb2dDYWxsYmFjayhmLFwiY2hhbmdlTWVkaWFUeXBlXCIpKTtlbHNle3ZhciBnPWEuRXJyb3JDb2RlLlZPSVBfTk9UX0FWQUxJQUJMRTtiLmxvZ2dlcih7Y29kZTpnLGZ1bmNOYW1lOlwiY2hhbmdlTWVkaWFUeXBlXCJ9KSxmLm9uRXJyb3IoYS5FcnJvckNvZGUuVk9JUF9OT1RfQVZBTElBQkxFKX19LGIucHJvdG90eXBlLmdldFVucmVhZE1lbnRpb25lZE1lc3NhZ2VzPWZ1bmN0aW9uKGEsYyl7cmV0dXJuIGIuX2RhdGFBY2Nlc3NQcm92aWRlci5nZXRVbnJlYWRNZW50aW9uZWRNZXNzYWdlcyhhLGMpfSxiLnByb3RvdHlwZS5jbGVhckxpc3RlbmVycz1mdW5jdGlvbigpe2IuX2RhdGFBY2Nlc3NQcm92aWRlci5jbGVhckxpc3RlbmVycygpfSxiLnByb3RvdHlwZS5nZXRVc2VyU3RhdHVzPWZ1bmN0aW9uKGEsYyl7Yi5fZGF0YUFjY2Vzc1Byb3ZpZGVyLmdldFVzZXJTdGF0dXMoYSxiLmxvZ0NhbGxiYWNrKGMsXCJnZXRVc2VyU3RhdHVzXCIpKX0sYi5wcm90b3R5cGUuc2V0VXNlclN0YXR1cz1mdW5jdGlvbihhLGMpe2IuX2RhdGFBY2Nlc3NQcm92aWRlci5zZXRVc2VyU3RhdHVzKGEsYi5sb2dDYWxsYmFjayhjLFwic2V0VXNlclN0YXR1c1wiKSl9LGIucHJvdG90eXBlLnNldFVzZXJTdGF0dXNMaXN0ZW5lcj1mdW5jdGlvbihhLGMpe3ZhciBkPWEudXNlcklkcyxlPWEubXVsdGlwbGU7Yi51c2VyU3RhdHVzT2JzZXJ2ZXIud2F0Y2goe2tleTpkLGZ1bmM6YyxtdWx0aXBsZTplfSksYi5fZGF0YUFjY2Vzc1Byb3ZpZGVyLnNldFVzZXJTdGF0dXNMaXN0ZW5lcihhLGMpfSxiLm1lc3NhZ2VXYXRjaD1mdW5jdGlvbihhKXtiLlJUQ0xpc3RlbmVyPWF9LGIucHJvdG90eXBlLmdldFJUQ1VzZXJJbmZvTGlzdD1mdW5jdGlvbihjLGQpe2EuQ2hlY2tQYXJhbS5nZXRJbnN0YW5jZSgpLmNoZWNrKFtcIm9iamVjdFwiLFwib2JqZWN0XCJdLFwiZ2V0UlRDVXNlckluZm9MaXN0XCIsITEsYXJndW1lbnRzKSxiLl9kYXRhQWNjZXNzUHJvdmlkZXIuZ2V0UlRDVXNlckluZm9MaXN0KGMsZCl9LGIucHJvdG90eXBlLmdldFJUQ1VzZXJMaXN0PWZ1bmN0aW9uKGMsZCl7YS5DaGVja1BhcmFtLmdldEluc3RhbmNlKCkuY2hlY2soW1wib2JqZWN0XCIsXCJvYmplY3RcIl0sXCJnZXRSVENVc2VyTGlzdFwiLCExLGFyZ3VtZW50cyksYi5fZGF0YUFjY2Vzc1Byb3ZpZGVyLmdldFJUQ1VzZXJMaXN0KGMsZCl9LGIucHJvdG90eXBlLnNldFJUQ1VzZXJJbmZvPWZ1bmN0aW9uKGMsZCxlKXthLkNoZWNrUGFyYW0uZ2V0SW5zdGFuY2UoKS5jaGVjayhbXCJvYmplY3RcIixcIm9iamVjdFwiLFwib2JqZWN0XCJdLFwic2V0UlRDVXNlckluZm9cIiwhMSxhcmd1bWVudHMpLGIuX2RhdGFBY2Nlc3NQcm92aWRlci5zZXRSVENVc2VySW5mbyhjLGQsZSl9LGIucHJvdG90eXBlLnJlbW92ZVJUQ1VzZXJJbmZvPWZ1bmN0aW9uKGMsZCxlKXthLkNoZWNrUGFyYW0uZ2V0SW5zdGFuY2UoKS5jaGVjayhbXCJvYmplY3RcIixcIm9iamVjdFwiLFwib2JqZWN0XCJdLFwicmVtb3ZlUlRDVXNlckluZm9cIiwhMSxhcmd1bWVudHMpLGIuX2RhdGFBY2Nlc3NQcm92aWRlci5yZW1vdmVSVENVc2VySW5mbyhjLGQsZSl9LGIucHJvdG90eXBlLmdldFJUQ1Jvb21JbmZvPWZ1bmN0aW9uKGMsZCl7YS5DaGVja1BhcmFtLmdldEluc3RhbmNlKCkuY2hlY2soW1wib2JqZWN0XCIsXCJvYmplY3RcIl0sXCJnZXRSVENSb29tSW5mb1wiLCExLGFyZ3VtZW50cyksYi5fZGF0YUFjY2Vzc1Byb3ZpZGVyLmdldFJUQ1Jvb21JbmZvKGMsZCl9LGIucHJvdG90eXBlLnNldFJUQ1Jvb21JbmZvPWZ1bmN0aW9uKGMsZCxlKXthLkNoZWNrUGFyYW0uZ2V0SW5zdGFuY2UoKS5jaGVjayhbXCJvYmplY3RcIixcIm9iamVjdFwiLFwib2JqZWN0XCJdLFwic2V0UlRDUm9vbUluZm9cIiwhMSxhcmd1bWVudHMpLGIuX2RhdGFBY2Nlc3NQcm92aWRlci5zZXRSVENSb29tSW5mbyhjLGQsZSl9LGIucHJvdG90eXBlLnJlbW92ZVJUQ1Jvb21JbmZvPWZ1bmN0aW9uKGMsZCxlKXthLkNoZWNrUGFyYW0uZ2V0SW5zdGFuY2UoKS5jaGVjayhbXCJvYmplY3RcIixcIm9iamVjdFwiLFwib2JqZWN0XCJdLFwicmVtb3ZlUlRDUm9vbUluZm9cIiwhMSxhcmd1bWVudHMpLGIuX2RhdGFBY2Nlc3NQcm92aWRlci5yZW1vdmVSVENSb29tSW5mbyhjLGQsZSl9LGIucHJvdG90eXBlLmpvaW5SVENSb29tPWZ1bmN0aW9uKGMsZCl7YS5DaGVja1BhcmFtLmdldEluc3RhbmNlKCkuY2hlY2soW1wib2JqZWN0XCIsXCJvYmplY3RcIl0sXCJqb2luUlRDUm9vbVwiLCExLGFyZ3VtZW50cyksYi5fZGF0YUFjY2Vzc1Byb3ZpZGVyLmpvaW5SVENSb29tKGMsZCl9LGIucHJvdG90eXBlLnF1aXRSVENSb29tPWZ1bmN0aW9uKGMsZCl7YS5DaGVja1BhcmFtLmdldEluc3RhbmNlKCkuY2hlY2soW1wib2JqZWN0XCIsXCJvYmplY3RcIl0sXCJxdWl0UlRDUm9vbVwiLCExLGFyZ3VtZW50cyksYi5fZGF0YUFjY2Vzc1Byb3ZpZGVyLnF1aXRSVENSb29tKGMsZCl9LGIucHJvdG90eXBlLlJUQ1Bpbmc9ZnVuY3Rpb24oYyxkKXthLkNoZWNrUGFyYW0uZ2V0SW5zdGFuY2UoKS5jaGVjayhbXCJvYmplY3RcIixcIm9iamVjdFwiXSxcIlJUQ1BpbmdcIiwhMSxhcmd1bWVudHMpLGIuX2RhdGFBY2Nlc3NQcm92aWRlci5SVENQaW5nKGMsZCl9LGIucHJvdG90eXBlLnNldFJUQ1VzZXJEYXRhPWZ1bmN0aW9uKGMsZCxlLGYsZyxoKXthLkNoZWNrUGFyYW0uZ2V0SW5zdGFuY2UoKS5jaGVjayhbXCJzdHJpbmdcIixcInN0cmluZ1wiLFwic3RyaW5nXCIsXCJib29sZWFuXCIsXCJvYmplY3RcIixcImdsb2JhbHxvYmplY3R8bnVsbHx1bmRlZmluZWRcIl0sXCJzZXRSVENVc2VyRGF0YVwiLCExLGFyZ3VtZW50cyksYi5fZGF0YUFjY2Vzc1Byb3ZpZGVyLnNldFJUQ1VzZXJEYXRhKGMsZCxlLGYsZyxoKX0sYi5wcm90b3R5cGUuZ2V0UlRDVXNlckRhdGE9ZnVuY3Rpb24oYyxkLGUsZil7YS5DaGVja1BhcmFtLmdldEluc3RhbmNlKCkuY2hlY2soW1wic3RyaW5nXCIsXCJhcnJheVwiLFwiYm9vbGVhblwiLFwib2JqZWN0XCIsXCJnbG9iYWx8b2JqZWN0fG51bGxcIl0sXCJnZXRSVENVc2VyRGF0YVwiLCExLGFyZ3VtZW50cyksYi5fZGF0YUFjY2Vzc1Byb3ZpZGVyLmdldFJUQ1VzZXJEYXRhKGMsZCxlLGYpfSxiLnByb3RvdHlwZS5yZW1vdmVSVENVc2VyRGF0YT1mdW5jdGlvbihjLGQsZSxmLGcpe2EuQ2hlY2tQYXJhbS5nZXRJbnN0YW5jZSgpLmNoZWNrKFtcInN0cmluZ1wiLFwiYXJyYXlcIixcImJvb2xlYW5cIixcIm9iamVjdFwiLFwiZ2xvYmFsfG9iamVjdHxudWxsfHVuZGVmaW5lZFwiXSxcInJlbW92ZVJUQ1VzZXJEYXRhXCIsITEsYXJndW1lbnRzKSxiLl9kYXRhQWNjZXNzUHJvdmlkZXIucmVtb3ZlUlRDVXNlckRhdGEoYyxkLGUsZixnKX0sYi5wcm90b3R5cGUuc2V0UlRDUm9vbURhdGE9ZnVuY3Rpb24oYyxkLGUsZixnLGgpe2EuQ2hlY2tQYXJhbS5nZXRJbnN0YW5jZSgpLmNoZWNrKFtcInN0cmluZ1wiLFwic3RyaW5nXCIsXCJzdHJpbmdcIixcImJvb2xlYW5cIixcIm9iamVjdFwiLFwiZ2xvYmFsfG9iamVjdHxudWxsfHVuZGVmaW5lZFwiXSxcInNldFJUQ1Jvb21EYXRhXCIsITEsYXJndW1lbnRzKSxiLl9kYXRhQWNjZXNzUHJvdmlkZXIuc2V0UlRDUm9vbURhdGEoYyxkLGUsZixnLGgpfSxiLnByb3RvdHlwZS5nZXRSVENSb29tRGF0YT1mdW5jdGlvbihjLGQsZSxmKXthLkNoZWNrUGFyYW0uZ2V0SW5zdGFuY2UoKS5jaGVjayhbXCJzdHJpbmdcIixcImFycmF5XCIsXCJib29sZWFuXCIsXCJvYmplY3RcIl0sXCJnZXRSVENSb29tRGF0YVwiLCExLGFyZ3VtZW50cyksYi5fZGF0YUFjY2Vzc1Byb3ZpZGVyLmdldFJUQ1Jvb21EYXRhKGMsZCxlLGYpfSxiLnByb3RvdHlwZS5yZW1vdmVSVENSb29tRGF0YT1mdW5jdGlvbihjLGQsZSxmLGcpe2EuQ2hlY2tQYXJhbS5nZXRJbnN0YW5jZSgpLmNoZWNrKFtcInN0cmluZ1wiLFwiYXJyYXlcIixcImJvb2xlYW5cIixcIm9iamVjdFwiLFwiZ2xvYmFsfG9iamVjdHxudWxsfHVuZGVmaW5lZFwiXSxcInJlbW92ZVJUQ1Jvb21EYXRhXCIsITEsYXJndW1lbnRzKSxiLl9kYXRhQWNjZXNzUHJvdmlkZXIucmVtb3ZlUlRDUm9vbURhdGEoYyxkLGUsZixnKX0sYi5wcm90b3R5cGUuZ2V0TmF2aT1mdW5jdGlvbigpe3JldHVybiBiLl9kYXRhQWNjZXNzUHJvdmlkZXIuZ2V0TmF2aSgpfSxiLnByb3RvdHlwZS5nZXRSVENUb2tlbj1mdW5jdGlvbihjLGQpe3JldHVybiBhLkNoZWNrUGFyYW0uZ2V0SW5zdGFuY2UoKS5jaGVjayhbXCJvYmplY3RcIixcIm9iamVjdFwiXSxcImdldFJUQ1Rva2VuXCIsITEsYXJndW1lbnRzKSxiLl9kYXRhQWNjZXNzUHJvdmlkZXIuZ2V0UlRDVG9rZW4oYyxkKX0sYi5wcm90b3R5cGUuZ2V0QXBwSW5mbz1mdW5jdGlvbigpe3JldHVybnthcHBLZXk6Yi5fbWVtb3J5U3RvcmUuYXBwS2V5fX0sYi5SVENMaXN0ZW5lcj1mdW5jdGlvbigpe30sYi5jdXJyZW50U2VydmVyPVwiXCIsYi5Mb2dGYWN0b3J5PXt9LGIuTWVzc2FnZVR5cGU9e30sYi5SZWdpc3Rlck1lc3NhZ2U9e30sYi5fbWVtb3J5U3RvcmU9e2xpc3RlbmVyTGlzdDpbXSxpc1B1bGxGaW5pc2hlZDohMSxzeW5jTXNnUXVldWU6W119LGIuaXNOb3RQdWxsTXNnPSExLGIudXNlclN0YXR1c09ic2VydmVyPW51bGwsYi5zZGt2ZXI9XCIyLjUuMFwiLGIub3RoZXJEZXZpY2VMb2dpbkNvdW50PTAsYi5zZXJ2ZXJTdG9yZT17aW5kZXg6MH0sYi5pc0ZpcnN0Q29ubmVjdD0hMCxiLnN0YXR1c0xpc3RlbmVycz1bXSxiLnVzZXJTdGF0dXNMaXN0ZW5lcj1udWxsLGJ9KCk7YS5Sb25nSU1DbGllbnQ9Yn0oUm9uZ0lNTGlifHwoUm9uZ0lNTGliPXt9KSk7dmFyIFJvbmdJTUxpYjshZnVuY3Rpb24oYSl7IWZ1bmN0aW9uKGEpe2FbYS5BVF9NT1NUX09OQ0U9MF09XCJBVF9NT1NUX09OQ0VcIixhW2EuQVRfTEVBU1RfT05DRT0xXT1cIkFUX0xFQVNUX09OQ0VcIixhW2EuRVhBQ1RMWV9PTkNFPTJdPVwiRVhBQ1RMWV9PTkNFXCIsYVthLkRFRkFVTFQ9M109XCJERUZBVUxUXCJ9KGEuUW9zfHwoYS5Rb3M9e30pKTt2YXIgYj1hLlFvczshZnVuY3Rpb24oYSl7YVthLkNPTk5FQ1Q9MV09XCJDT05ORUNUXCIsYVthLkNPTk5BQ0s9Ml09XCJDT05OQUNLXCIsYVthLlBVQkxJU0g9M109XCJQVUJMSVNIXCIsYVthLlBVQkFDSz00XT1cIlBVQkFDS1wiLGFbYS5RVUVSWT01XT1cIlFVRVJZXCIsYVthLlFVRVJZQUNLPTZdPVwiUVVFUllBQ0tcIixhW2EuUVVFUllDT049N109XCJRVUVSWUNPTlwiLGFbYS5TVUJTQ1JJQkU9OF09XCJTVUJTQ1JJQkVcIixhW2EuU1VCQUNLPTldPVwiU1VCQUNLXCIsYVthLlVOU1VCU0NSSUJFPTEwXT1cIlVOU1VCU0NSSUJFXCIsYVthLlVOU1VCQUNLPTExXT1cIlVOU1VCQUNLXCIsYVthLlBJTkdSRVE9MTJdPVwiUElOR1JFUVwiLGFbYS5QSU5HUkVTUD0xM109XCJQSU5HUkVTUFwiLGFbYS5ESVNDT05ORUNUPTE0XT1cIkRJU0NPTk5FQ1RcIn0oYS5UeXBlfHwoYS5UeXBlPXt9KSk7dmFyIGM9KGEuVHlwZSxbXCJpbnZ0RGl6XCIsXCJjckRpelwiLFwicW5VcmxcIixcInVzZXJJbmZcIixcImRpekluZlwiLFwidXNlckluZlwiLFwiam9pbkdycFwiLFwicXVpdERpelwiLFwiZXhpdEdycFwiLFwiZXZjdERpelwiLFtcIlwiLFwicHBNc2dQXCIsXCJwZE1zZ1BcIixcInBnTXNnUFwiLFwiY2hhdE1zZ1wiLFwicGNNc2dQXCIsXCJcIixcInBtY01zZ05cIixcInBtcE1zZ05cIixcIlwiLFwiXCIsXCJcIixcInByTXNnU1wiXSxcInBkT3BlblwiLFwicmVuYW1lXCIsXCJ1R2NtcHJcIixcInFuVGtuXCIsXCJkZXN0cm95Q2hybVwiLFwiY3JlYXRlQ2hybVwiLFwiZXhpdENocm1cIixcInF1ZXJ5Q2hybVwiLFwiam9pbkNocm1cIixcInBHcnBzXCIsXCJhZGRCbGFja1wiLFwicm1CbGFja1wiLFwiZ2V0QmxhY2tcIixcImJsYWNrU3RhdFwiLFwiYWRkUmVsYXRpb25cIixcInFyeVJlbGF0aW9uXCIsXCJkZWxSZWxhdGlvblwiLFwicHVsbE1wXCIsXCJzY2hNcFwiLFwicW5Ua25cIixcInFuVXJsXCIsXCJxcnlWb2lwS1wiLFwiZGVsTXNnXCIsXCJxcnlDSE1zZ1wiLFwiZ2V0VXNlclN0YXR1c1wiLFwic2V0VXNlclN0YXR1c1wiLFwic3ViVXNlclN0YXR1c1wiLFwiY2xlYW5IaXNNc2dcIl0pLGQ9ZnVuY3Rpb24oKXtmdW5jdGlvbiBiKGMsZCl7dGhpcy5jb25uZWN0aW9uU3RhdHVzPS0xO3ZhciBmPWQuYXBwSWQsZz1lbmNvZGVVUklDb21wb25lbnQoZC50b2tlbiksaD1kLnNka1ZlcixpPWQuYXBpVmVyO3RoaXMuc2VsZj1kLHRoaXMuc29ja2V0PWUuZ2V0SW5zdGFuY2UoKS5jcmVhdGVTZXJ2ZXIoKTt2YXIgaj10aGlzLGs9YS5Sb25nSU1DbGllbnQuX3N0b3JhZ2VQcm92aWRlcixsPWsuZ2V0SXRlbShcInNlcnZlcnNcIik7bD1KU09OLnBhcnNlKGwpfHxbXTt2YXIgbT1hLlJvbmdJTUNsaWVudC5fbWVtb3J5U3RvcmUuZGVwZW5kLG49ZnVuY3Rpb24oYil7ai51cmw9YS5Sb25nVXRpbC50cGxFbmdpbmUoXCJ7aG9zdH0vd2Vic29ja2V0P2FwcElkPXthcHBJZH0mdG9rZW49e3Rva2VufSZzZGtWZXI9e3Nka1Zlcn0mYXBpVmVyPXthcGlWZXJ9XCIse2hvc3Q6YixhcHBJZDpmLHRva2VuOmcsc2RrVmVyOmgsYXBpVmVyOml9KSxqLnNvY2tldC5jb25uZWN0KGoudXJsLGMpO3ZhciBkPWsuZ2V0SXRlbShcInJvbmdfY3VycmVudF91c2VyXCIpO2EuTmF2aWdhdGlvbi5FbmRwb2ludD17aG9zdDpiLHVzZXJJZDpkfX07KHt3czpmdW5jdGlvbigpe2Zvcih2YXIgYj1uZXcgYS5UaW1lcih7dGltZW91dDoxNWUzfSksYz1bXSxkPVtdLGU9ITEsZj1mdW5jdGlvbigpe2Zvcih2YXIgYT0wO2E8Yy5sZW5ndGg7YSsrKXt2YXIgYj1jW2FdO2NsZWFyVGltZW91dChiKX1mb3IodmFyIGE9MDthPGQubGVuZ3RoO2ErKyl7ZFthXS5hYm9ydCgpfWMubGVuZ3RoPTAsZC5sZW5ndGg9MH0sZz1mdW5jdGlvbihnLGgpe3ZhciBpPWcudXJsLGo9Zy50aW1lO2lmKCFlKXt2YXIgaz1zZXRUaW1lb3V0KGZ1bmN0aW9uKCl7dmFyIGM9ZnVuY3Rpb24oKXtlfHwoZigpLGU9ITAsYi5wYXVzZSgpLGgoaSkpfSxnPWEuTWVzc2FnZVV0aWwuZGV0ZWN0Q01QKHt1cmw6aSxzdWNjZXNzOmMsZmFpbDpmdW5jdGlvbihhKXtjb25zb2xlLmxvZyhhKX19KTtkLnB1c2goZyl9LGopO2MucHVzaChrKX19LGg9ZnVuY3Rpb24oYil7dmFyIGM9LyhodHRwfGh0dHBzKTpcXC9cXC8oW15cXC9dKykvaSxkPWIubWF0Y2goYylbMl07YS5Sb25nSU1DbGllbnQuY3VycmVudFNlcnZlcj1kLG4oZCl9LGk9XCJ7cHJvdG9jb2x9e3NlcnZlcn0vcGluZz9yPXtyYW5kb219XCIsaz0wO2s8bC5sZW5ndGg7aysrKXt2YXIgbz1sW2tdO28mJihvPWEuUm9uZ1V0aWwudHBsRW5naW5lKGkse3Byb3RvY29sOm0ucHJvdG9jb2wsc2VydmVyOm8scmFuZG9tOmEuUm9uZ1V0aWwuZ2V0VGltZXN0YW1wKCl9KSxnKHt1cmw6byx0aW1lOjFlMyprfSxoKSl9Yi5yZXN1bWUoZnVuY3Rpb24oKXthLk5hdmlnYXRpb24uY2xlYXIoKSxmKCksai5zb2NrZXQuZmlyZShcIlN0YXR1c0NoYW5nZWRcIixhLkNvbm5lY3Rpb25TdGF0dXMuTkVUV09SS19VTkFWQUlMQUJMRSl9KX0sY29tZXQ6ZnVuY3Rpb24oKXt2YXIgYT1sWzBdO24oYSl9fSlbbS5pc1BvbGxpbmc/XCJjb21ldFwiOlwid3NcIl0oKTt2YXIgbz1iLl9Db25uZWN0aW9uU3RhdHVzTGlzdGVuZXIscD1cIm9iamVjdFwiPT10eXBlb2YgbyxxPXRoaXM7cS5zb2NrZXQub24oXCJTdGF0dXNDaGFuZ2VkXCIsZnVuY3Rpb24oYil7aWYoIXApdGhyb3cgbmV3IEVycm9yKFwic2V0Q29ubmVjdFN0YXR1c0xpc3RlbmVyOlBhcmFtZXRlciBmb3JtYXQgaXMgaW5jb3JyZWN0XCIpO3ZhciBjPWI9PWEuQ29ubmVjdGlvblN0YXR1cy5ORVRXT1JLX1VOQVZBSUxBQkxFLGU9IWEuUm9uZ0lNQ2xpZW50Ll9tZW1vcnlTdG9yZS5kZXBlbmQuaXNQb2xsaW5nO2lmKGEuUm9uZ0lNQ2xpZW50LmlzRmlyc3RDb25uZWN0JiZjJiZlJiYoYj1hLkNvbm5lY3Rpb25TdGF0dXMuV0VCU09DS0VUX1VOQVZBSUxBQkxFKSxjKXt2YXIgZj1hLlJvbmdJTUNsaWVudC5fc3RvcmFnZVByb3ZpZGVyLGc9Zi5nZXRJdGVtKFwic2VydmVyc1wiKTtnPUpTT04ucGFyc2UoZyk7dmFyIGg9YS5Sb25nSU1DbGllbnQuY3VycmVudFNlcnZlcjtpZihoKXt2YXIgaT1hLlJvbmdVdGlsLmluZGV4T2YoZyxoKTtpZighYS5Sb25nVXRpbC5pc0VxdWFsKGksLTEpKXt2YXIgaj1nLnNwbGljZShpLDEpWzBdO2cucHVzaChqKSxmLnNldEl0ZW0oXCJzZXJ2ZXJzXCIsSlNPTi5zdHJpbmdpZnkoZykpfX19cS5jb25uZWN0aW9uU3RhdHVzPWIsc2V0VGltZW91dChmdW5jdGlvbigpe28ub25DaGFuZ2VkKGIpfSksYj09YS5Db25uZWN0aW9uU3RhdHVzLkRJU0NPTk5FQ1RFRCYmZC5jbGVhckhlYXJ0YmVhdCgpLGI9PWEuQ29ubmVjdGlvblN0YXR1cy5LSUNLRURfT0ZGTElORV9CWV9PVEhFUl9DTElFTlQmJmEuUm9uZ0lNQ2xpZW50Lm90aGVyRGV2aWNlTG9naW5Db3VudCsrLGI9PWEuQ29ubmVjdGlvblN0YXR1cy5DT05ORUNURUQmJihhLlJvbmdJTUNsaWVudC5pc0ZpcnN0Q29ubmVjdD0hMSksYj09YS5Db25uZWN0aW9uU3RhdHVzLldFQlNPQ0tFVF9VTkFWQUlMQUJMRSYmKHEuY2hhbmdlQ29ubmVjdFR5cGUoKSxhLlJvbmdJTUNsaWVudC5pc0ZpcnN0Q29ubmVjdD0hMSxhLlJvbmdJTUNsaWVudC5jb25uZWN0KGQudG9rZW4sYS5Sb25nSU1DbGllbnQuX21lbW9yeVN0b3JlLmNhbGxiYWNrKSl9KSx0aGlzLnNvY2tldC5vbihcIm1lc3NhZ2VcIixkLmhhbmRsZXIuaGFuZGxlTWVzc2FnZSksdGhpcy5zb2NrZXQub24oXCJkaXNjb25uZWN0XCIsZnVuY3Rpb24oYSl7ai5zb2NrZXQuZmlyZShcIlN0YXR1c0NoYW5nZWRcIixhfHwyKX0pfXJldHVybiBiLnByb3RvdHlwZS5jaGFuZ2VDb25uZWN0VHlwZT1mdW5jdGlvbigpe2EuUm9uZ0lNQ2xpZW50Ll9tZW1vcnlTdG9yZS5kZXBlbmQuaXNQb2xsaW5nPSFhLlJvbmdJTUNsaWVudC5fbWVtb3J5U3RvcmUuZGVwZW5kLmlzUG9sbGluZyxuZXcgYS5GZWF0dXJlRGVjdGVjdG9yfSxiLnByb3RvdHlwZS53cml0ZUFuZEZsdXNoPWZ1bmN0aW9uKGEpe3RoaXMuc29ja2V0LnNlbmQoYSl9LGIucHJvdG90eXBlLnJlY29ubmVjdD1mdW5jdGlvbihiKXthLk1lc3NhZ2VJZEhhbmRsZXIuY2xlYXJNZXNzYWdlSWQoKSx0aGlzLnNvY2tldD10aGlzLnNvY2tldC5yZWNvbm5lY3QoKSxiJiYodGhpcy5zZWxmLnJlY29ubmVjdE9iaj1iKX0sYi5wcm90b3R5cGUuZGlzY29ubmVjdD1mdW5jdGlvbihhKXt0aGlzLnNvY2tldC5kaXNjb25uZWN0KGEpfSxifSgpO2EuQ2hhbm5lbD1kO3ZhciBlPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gYigpe3RoaXMuc29ja2V0PW51bGwsdGhpcy5fZXZlbnRzPXt9fXJldHVybiBiLmdldEluc3RhbmNlPWZ1bmN0aW9uKCl7cmV0dXJuIG5ldyBifSxiLnByb3RvdHlwZS5jb25uZWN0PWZ1bmN0aW9uKGIsYyl7cmV0dXJuIHRoaXMuc29ja2V0JiYoYiYmKGEuUm9uZ0lNQ2xpZW50Ll9zdG9yYWdlUHJvdmlkZXIuc2V0SXRlbShcInJvbmdTREtcIix0aGlzLmNoZWNrVHJhbnNwb3J0KCkpLHRoaXMub24oXCJjb25uZWN0XCIsY3x8bmV3IEZ1bmN0aW9uKSksYiYmKHRoaXMuY3VycmVudFVSTD1iKSx0aGlzLnNvY2tldC5jcmVhdGVUcmFuc3BvcnQoYikpLHRoaXN9LGIucHJvdG90eXBlLmNyZWF0ZVNlcnZlcj1mdW5jdGlvbigpe3ZhciBhPXRoaXMuZ2V0VHJhbnNwb3J0KHRoaXMuY2hlY2tUcmFuc3BvcnQoKSk7aWYobnVsbD09PWEpdGhyb3cgbmV3IEVycm9yKFwidGhlIGNoYW5uZWwgd2FzIG5vdCBzdXBwb3J0ZWRcIik7cmV0dXJuIGF9LGIucHJvdG90eXBlLmdldFRyYW5zcG9ydD1mdW5jdGlvbihjKXtyZXR1cm4gYz09Yi5YSFJfUE9MTElORz90aGlzLnNvY2tldD1uZXcgYS5Qb2xsaW5nVHJhbnNwb3J0YXRpb24odGhpcyk6Yz09Yi5XRUJTT0NLRVQmJih0aGlzLnNvY2tldD1uZXcgYS5Tb2NrZXRUcmFuc3BvcnRhdGlvbih0aGlzKSksdGhpc30sYi5wcm90b3R5cGUuc2VuZD1mdW5jdGlvbihhKXt0aGlzLnNvY2tldCYmKHRoaXMuY2hlY2tUcmFuc3BvcnQoKT09Yi5XRUJTT0NLRVQ/dGhpcy5zb2NrZXQuc2VuZChhKTp0aGlzLnNvY2tldC5zZW5kKHRoaXMuX2VuY29kZShhKSkpfSxiLnByb3RvdHlwZS5vbk1lc3NhZ2U9ZnVuY3Rpb24oYSl7dGhpcy5maXJlKFwibWVzc2FnZVwiLGEpfSxiLnByb3RvdHlwZS5kaXNjb25uZWN0PWZ1bmN0aW9uKGEpe3JldHVybiB0aGlzLnNvY2tldC5kaXNjb25uZWN0KGEpLHRoaXMuZmlyZShcImRpc2Nvbm5lY3RcIixhKSx0aGlzfSxiLnByb3RvdHlwZS5yZWNvbm5lY3Q9ZnVuY3Rpb24oKXtpZih0aGlzLmN1cnJlbnRVUkwmJmEuUm9uZ0lNQ2xpZW50Ll9zdG9yYWdlUHJvdmlkZXIuZ2V0SXRlbShcInJvbmdTREtcIikpcmV0dXJuIHRoaXMuY29ubmVjdCh0aGlzLmN1cnJlbnRVUkwsbnVsbCk7dGhyb3cgbmV3IEVycm9yKFwicmVjb25uZWN0Om5vIGhhdmUgVVJMXCIpfSxiLnByb3RvdHlwZS5jaGVja1RyYW5zcG9ydD1mdW5jdGlvbigpe3JldHVybiBhLlJvbmdJTUNsaWVudC5fbWVtb3J5U3RvcmUuZGVwZW5kLmlzUG9sbGluZyYmKGEuVHJhbnNwb3J0YXRpb25zLl9UcmFuc3BvcnRUeXBlPWIuWEhSX1BPTExJTkcpLGEuVHJhbnNwb3J0YXRpb25zLl9UcmFuc3BvcnRUeXBlfSxiLnByb3RvdHlwZS5maXJlPWZ1bmN0aW9uKGEsYil7aWYoYSBpbiB0aGlzLl9ldmVudHMpZm9yKHZhciBjPTAsZD10aGlzLl9ldmVudHNbYV0ubGVuZ3RoO2M8ZDtjKyspdGhpcy5fZXZlbnRzW2FdW2NdKGIpO3JldHVybiB0aGlzfSxiLnByb3RvdHlwZS5vbj1mdW5jdGlvbihiLGMpe3JldHVyblwiZnVuY3Rpb25cIj09dHlwZW9mIGMmJmI/KGIgaW4gdGhpcy5fZXZlbnRzPy0xPT1hLk1lc3NhZ2VVdGlsLmluZGV4T2YodGhpcy5fZXZlbnRzLGMpJiZ0aGlzLl9ldmVudHNbYl0ucHVzaChjKTp0aGlzLl9ldmVudHNbYl09W2NdLHRoaXMpOnRoaXN9LGIucHJvdG90eXBlLnJlbW92ZUV2ZW50PWZ1bmN0aW9uKGEsYil7aWYoYSBpbiB0aGlzLl9ldmVudHMpZm9yKHZhciBjPTAsZD10aGlzLl9ldmVudHNbYV0ubGVuZ3RoO2M8ZDtjKyspdGhpcy5fZXZlbnRzW2FdW2NdPT1iJiZ0aGlzLl9ldmVudHNbYV0uc3BsaWNlKGMsMSk7cmV0dXJuIHRoaXN9LGIucHJvdG90eXBlLl9lbmNvZGU9ZnVuY3Rpb24oYil7dmFyIGM9XCI/bWVzc2FnZWlkPVwiK2IuZ2V0TWVzc2FnZUlkKCkrXCImaGVhZGVyPVwiK2IuZ2V0SGVhZGVyRmxhZygpK1wiJnNlc3Npb25pZD1cIithLlJvbmdJTUNsaWVudC5fc3RvcmFnZVByb3ZpZGVyLmdldEl0ZW0oXCJzSWRcIithLk5hdmlnYXRpb24uRW5kcG9pbnQudXNlcklkKTtyZXR1cm4vKFB1YkFja01lc3NhZ2V8UXVlcnlDb25NZXNzYWdlKS8udGVzdChiLl9uYW1lKXx8KGMrPVwiJnRvcGljPVwiK2IuZ2V0VG9waWMoKStcIiZ0YXJnZXRpZD1cIisoYi5nZXRUYXJnZXRJZCgpfHxcIlwiKSkse3VybDpjLGRhdGE6XCJnZXREYXRhXCJpbiBiP2IuZ2V0RGF0YSgpOlwiXCJ9fSxiLlhIUl9QT0xMSU5HPVwieGhyLXBvbGxpbmdcIixiLldFQlNPQ0tFVD1cIndlYnNvY2tldFwiLGJ9KCk7YS5Tb2NrZXQ9ZTt2YXIgZj1mdW5jdGlvbigpe2Z1bmN0aW9uIGMoYixjKXt0aGlzLnRpbWVvdXRNaWxsaXM9NmUzLHRoaXMudGltZW91dF89MCx0aGlzLnNka1Zlcj1cIlwiLHRoaXMuYXBpVmVyPU1hdGguZmxvb3IoMWU2Kk1hdGgucmFuZG9tKCkpLHRoaXMuY2hhbm5lbD1udWxsLHRoaXMuaGFuZGxlcj1udWxsLHRoaXMudXNlcklkPVwiXCIsdGhpcy5yZWNvbm5lY3RPYmo9e30sdGhpcy5oZWFydGJlYXQ9MCx0aGlzLnB1bGxNc2dIZWFyYmVhdD0wLHRoaXMuY2hhdHJvb21JZD1cIlwiLHRoaXMuU3luY1RpbWVRdWV1ZT1bXSx0aGlzLmNhY2hlTWVzc2FnZUlkcz1bXSx0aGlzLnRva2VuPWIsdGhpcy5hcHBJZD1jLHRoaXMuU3luY1RpbWVRdWV1ZS5zdGF0ZT1cImNvbXBsZXRlXCIsdGhpcy5zZGtWZXI9YS5Sb25nSU1DbGllbnQuc2RrdmVyfXJldHVybiBjLnByb3RvdHlwZS5yZXN1bWVUaW1lcj1mdW5jdGlvbigpe3ZhciBiPXRoaXM7dGhpcy50aW1lb3V0Xz1zZXRUaW1lb3V0KGZ1bmN0aW9uKCl7Yi5jaGFubmVsLmRpc2Nvbm5lY3QoYS5Db25uZWN0aW9uU3RhdHVzLk5FVFdPUktfVU5BVkFJTEFCTEUpfSx0aGlzLnRpbWVvdXRNaWxsaXMpfSxjLnByb3RvdHlwZS5wYXVzZVRpbWVyPWZ1bmN0aW9uKCl7dGhpcy50aW1lb3V0XyYmKGNsZWFyVGltZW91dCh0aGlzLnRpbWVvdXRfKSx0aGlzLnRpbWVvdXRfPTApfSxjLnByb3RvdHlwZS5jb25uZWN0PWZ1bmN0aW9uKGIpe3RoaXMuaGFuZGxlcj1uZXcgaCh0aGlzKSx0aGlzLmhhbmRsZXIuc2V0Q29ubmVjdENhbGxiYWNrKGIpO3ZhciBjPXRoaXM7dGhpcy5jaGFubmVsPW5ldyBkKGZ1bmN0aW9uKCl7YS5UcmFuc3BvcnRhdGlvbnMuX1RyYW5zcG9ydFR5cGU9PWUuV0VCU09DS0VUJiZjLmtlZXBMaXZlKCl9LHRoaXMpLHRoaXMuY2hhbm5lbC5zb2NrZXQuZmlyZShcIlN0YXR1c0NoYW5nZWRcIixhLkNvbm5lY3Rpb25TdGF0dXMuQ09OTkVDVElORyl9LGMucHJvdG90eXBlLmNoZWNrU29ja2V0PWZ1bmN0aW9uKGIpe3RoaXMuY2hhbm5lbC53cml0ZUFuZEZsdXNoKG5ldyBhLlBpbmdSZXFNZXNzYWdlKTt2YXIgYz0wLGQ9c2V0SW50ZXJ2YWwoZnVuY3Rpb24oKXthLlJvbmdJTUNsaWVudC5fbWVtb3J5U3RvcmUuaXNGaXJzdFBpbmdNc2c/Yz4xNSYmKGNsZWFySW50ZXJ2YWwoZCksYi5vbkVycm9yKCkpOihjbGVhckludGVydmFsKGQpLGIub25TdWNjZXNzKCkpLGMrK30sMTAwKX0sYy5wcm90b3R5cGUua2VlcExpdmU9ZnVuY3Rpb24oKXt0aGlzLmhlYXJ0YmVhdD4wJiZjbGVhckludGVydmFsKHRoaXMuaGVhcnRiZWF0KTt2YXIgYj10aGlzO2IuaGVhcnRiZWF0PXNldEludGVydmFsKGZ1bmN0aW9uKCl7Yi5yZXN1bWVUaW1lcigpLGIuY2hhbm5lbC53cml0ZUFuZEZsdXNoKG5ldyBhLlBpbmdSZXFNZXNzYWdlKX0sM2U0KSxiLnB1bGxNc2dIZWFyYmVhdD4wJiZjbGVhckludGVydmFsKGIucHVsbE1zZ0hlYXJiZWF0KSxiLnB1bGxNc2dIZWFyYmVhdD1zZXRJbnRlcnZhbChmdW5jdGlvbigpe2Iuc3luY1RpbWUoITAsdm9pZCAwLHZvaWQgMCwhMSl9LDE4ZTQpfSxjLnByb3RvdHlwZS5jbGVhckhlYXJ0YmVhdD1mdW5jdGlvbigpe2NsZWFySW50ZXJ2YWwodGhpcy5oZWFydGJlYXQpLHRoaXMuaGVhcnRiZWF0PTAsdGhpcy5wYXVzZVRpbWVyKCksY2xlYXJJbnRlcnZhbCh0aGlzLnB1bGxNc2dIZWFyYmVhdCksdGhpcy5wdWxsTXNnSGVhcmJlYXQ9MH0sYy5wcm90b3R5cGUucHVibGlzaE1lc3NhZ2U9ZnVuY3Rpb24oYyxkLGUsZixnKXt2YXIgaD1hLk1lc3NhZ2VJZEhhbmRsZXIubWVzc2FnZUlkUGx1cyh0aGlzLmNoYW5uZWwucmVjb25uZWN0KTtpZihoKXt2YXIgaT1uZXcgYS5QdWJsaXNoTWVzc2FnZShjLGQsZSk7aS5zZXRNZXNzYWdlSWQoaCksZj8oaS5zZXRRb3MoYi5BVF9MRUFTVF9PTkNFKSx0aGlzLmhhbmRsZXIucHV0Q2FsbGJhY2sobmV3IGEuUHVibGlzaENhbGxiYWNrKGYub25TdWNjZXNzLGYub25FcnJvciksaS5nZXRNZXNzYWdlSWQoKSxnKSk6aS5zZXRRb3MoYi5BVF9NT1NUX09OQ0UpLHRoaXMuY2hhbm5lbC53cml0ZUFuZEZsdXNoKGkpfX0sYy5wcm90b3R5cGUucXVlcnlNZXNzYWdlPWZ1bmN0aW9uKGIsZCxlLGYsZyxoKXtpZihcInVzZXJJbmZcIj09YiYmYy51c2VySW5mb01hcHBpbmdbZV0pcmV0dXJuIHZvaWQgZy5vblN1Y2Nlc3MoYy51c2VySW5mb01hcHBpbmdbZV0pO3ZhciBpPWEuTWVzc2FnZUlkSGFuZGxlci5tZXNzYWdlSWRQbHVzKHRoaXMuY2hhbm5lbC5yZWNvbm5lY3QpO2lmKGkpe3ZhciBqPW5ldyBhLlF1ZXJ5TWVzc2FnZShiLGQsZSk7ai5zZXRNZXNzYWdlSWQoaSksai5zZXRRb3MoZiksdGhpcy5oYW5kbGVyLnB1dENhbGxiYWNrKG5ldyBhLlF1ZXJ5Q2FsbGJhY2soZy5vblN1Y2Nlc3MsZy5vbkVycm9yKSxqLmdldE1lc3NhZ2VJZCgpLGgpLHRoaXMuY2hhbm5lbC53cml0ZUFuZEZsdXNoKGopfX0sYy5wcm90b3R5cGUuaW52b2tlPWZ1bmN0aW9uKGMsZCxlKXt2YXIgZixoLGksaixrPXRoaXMsbD10aGlzLlN5bmNUaW1lUXVldWUuc2hpZnQoKTtpZih2b2lkIDAhPWwpe3RoaXMuU3luY1RpbWVRdWV1ZS5zdGF0ZT1cInBlbmRpbmdcIjt2YXIgbT1hLlN5bmNUaW1lVXRpbC5nZXQoKSxuPW0uc2VudDtpZigyIT1sLnR5cGUpZj1tLnJlY2VpdmVkLGg9bmV3IGEuUm9uZ0lNQ2xpZW50LlByb3RvYnVmLlN5bmNSZXF1ZXN0TXNnLGguc2V0SXNwb2xsaW5nKCExKSxpPVwicHVsbE1zZ1wiLGo9dGhpcy51c2VySWQsaC5zZXRTZW5kQm94U3luY1RpbWUobik7ZWxzZSBpZihqPWwuY2hybUlkfHxrLmNoYXRyb29tSWQsZj1hLlJvbmdJTUNsaWVudC5fbWVtb3J5U3RvcmUubGFzdFJlYWRUaW1lLmdldChqK2cuX2NsaWVudC51c2VySWQrXCJDU1RcIil8fDAsaD1uZXcgYS5Sb25nSU1DbGllbnQuUHJvdG9idWYuQ2hybVB1bGxNc2csaC5zZXRDb3VudCgwKSxpPVwiY2hybVB1bGxcIiwhail0aHJvdyBuZXcgRXJyb3IoXCJzeW5jVGltZTpSZWNlaXZlZCBtZXNzYWdlcyBvZiBjaGF0cm9vbSBidXQgd2FzIG5vdCBpbml0XCIpO2lmKGwucHVsbHRpbWU8PWYpcmV0dXJuIHRoaXMuU3luY1RpbWVRdWV1ZS5zdGF0ZT1cImNvbXBsZXRlXCIsdm9pZCB0aGlzLmludm9rZShjLGosZSk7YyYmXCJzZXRJc1B1bGxTZW5kXCJpbiBoJiZoLnNldElzUHVsbFNlbmQoITApLGguc2V0U3luY1RpbWUoZiksdGhpcy5xdWVyeU1lc3NhZ2UoaSxhLk1lc3NhZ2VVdGlsLkFycmF5Rm9ybShoLnRvQXJyYXlCdWZmZXIoKSksaixiLkFUX0xFQVNUX09OQ0Use29uU3VjY2VzczpmdW5jdGlvbihiKXt2YXIgZD1hLk1lc3NhZ2VVdGlsLmludDY0VG9UaW1lc3RhbXAoYi5zeW5jVGltZSksaD1qLGw9XCJjaHJtUHVsbFwiPT1pO2lmKGwpaCs9Zy5fY2xpZW50LnVzZXJJZCtcIkNTVFwiLGEuUm9uZ0lNQ2xpZW50Ll9tZW1vcnlTdG9yZS5sYXN0UmVhZFRpbWUuc2V0KGgsZCk7ZWxzZXt2YXIgbT1hLlJvbmdJTUNsaWVudC5fc3RvcmFnZVByb3ZpZGVyO2Q+bS5nZXRJdGVtKGgpJiZtLnNldEl0ZW0oaCxkKX12YXIgbz1iLmxpc3QscD1iLmZpbmlzaGVkO2wmJihwPSEwKSx2b2lkIDA9PT1wJiYocD0hMCksYS5Sb25nSU1DbGllbnQuX21lbW9yeVN0b3JlLmlzUHVsbEZpbmlzaGVkPXA7Zm9yKHZhciBxPWEuUm9uZ0lNQ2xpZW50Ll9tZW1vcnlTdG9yZS5jb25uZWN0QWNrVGltZSxyPTAscz1vLmxlbmd0aCx0PXM7cjxzO3IrKyl7dC09MTt2YXIgdT1vW3JdLHY9YS5NZXNzYWdlVXRpbC5pbnQ2NFRvVGltZXN0YW1wKHUuZGF0YVRpbWUpO2lmKHY+KHUuZGlyZWN0aW9uPT1hLk1lc3NhZ2VEaXJlY3Rpb24uU0VORD9uOmYpKXt2YXIgdz12PHE7Zy5fY2xpZW50LmhhbmRsZXIub25SZWNlaXZlZCh1LHZvaWQgMCx3LHQsITEscCl9fWsuU3luY1RpbWVRdWV1ZS5zdGF0ZT1cImNvbXBsZXRlXCIsay5pbnZva2UoYyxqLGUpfSxvbkVycm9yOmZ1bmN0aW9uKGEpe2suU3luY1RpbWVRdWV1ZS5zdGF0ZT1cImNvbXBsZXRlXCIsay5pbnZva2UoYyxqLGUpfX0sXCJEb3duU3RyZWFtTWVzc2FnZXNcIil9fSxjLnByb3RvdHlwZS5zeW5jVGltZT1mdW5jdGlvbihhLGIsYyxkKXt0aGlzLlN5bmNUaW1lUXVldWUucHVzaCh7dHlwZTphLHB1bGx0aW1lOmIsY2hybUlkOmN9KSwxPT10aGlzLlN5bmNUaW1lUXVldWUubGVuZ3RoJiZcImNvbXBsZXRlXCI9PXRoaXMuU3luY1RpbWVRdWV1ZS5zdGF0ZSYmdGhpcy5pbnZva2UoIWEsYyxkKX0sYy5wcm90b3R5cGUuX19pbml0PWZ1bmN0aW9uKGIpe3RoaXMuaGFuZGxlcj1uZXcgaCh0aGlzKSx0aGlzLmhhbmRsZXIuc2V0Q29ubmVjdENhbGxiYWNrKGEuUm9uZ0lNQ2xpZW50Ll9tZW1vcnlTdG9yZS5jYWxsYmFjayksdGhpcy5jaGFubmVsPW5ldyBkKGIsdGhpcyl9LGMudXNlckluZm9NYXBwaW5nPXt9LGN9KCk7YS5DbGllbnQ9Zjt2YXIgZz1mdW5jdGlvbigpe2Z1bmN0aW9uIGUoKXt9cmV0dXJuIGUuZ2V0SW5zdGFuY2U9ZnVuY3Rpb24oKXtyZXR1cm4gbmV3IGV9LGUucHJvdG90eXBlLmNvbm5lY3Q9ZnVuY3Rpb24oYixjLGQpe2lmKGEuUm9uZ0lNQ2xpZW50LlByb3RvYnVmKXJldHVybiBlLl9jbGllbnQ9KG5ldyBhLk5hdmlnYXRpb24pLmNvbm5lY3QoYixjLGQpLGUuX2NsaWVudH0sZS5wcm90b3R5cGUuc2V0TGlzdGVuZXI9ZnVuY3Rpb24oYSl7XCJvYmplY3RcIj09dHlwZW9mIGEmJihcImZ1bmN0aW9uXCI9PXR5cGVvZiBhLm9uQ2hhbmdlZD9kLl9Db25uZWN0aW9uU3RhdHVzTGlzdGVuZXI9YTpcImZ1bmN0aW9uXCI9PXR5cGVvZiBhLm9uUmVjZWl2ZWQmJihkLl9SZWNlaXZlTWVzc2FnZUxpc3RlbmVyPWEpKX0sZS5wcm90b3R5cGUucmVjb25uZWN0PWZ1bmN0aW9uKGEpe2UuX2NsaWVudC5jaGFubmVsLnJlY29ubmVjdChhKX0sZS5wcm90b3R5cGUuZGlzY29ubmVjdD1mdW5jdGlvbigpe2UuX2NsaWVudC5jaGFubmVsLmRpc2Nvbm5lY3QoMil9LGUucHJvdG90eXBlLnF1ZXJ5TXNnPWZ1bmN0aW9uKGEsZCxmLGcsaCl7XCJzdHJpbmdcIiE9dHlwZW9mIGEmJihhPWNbYV0pLGUuX2NsaWVudC5xdWVyeU1lc3NhZ2UoYSxkLGYsYi5BVF9NT1NUX09OQ0UsZyxoKX0sZS5wcm90b3R5cGUucHViTXNnPWZ1bmN0aW9uKGIsZCxmLGcsaCxpKXtcIm51bWJlclwiPT10eXBlb2YgaT9pPT1hLk1ldGhvZFR5cGUuQ1VTVE9NRVJfU0VSVklDRT9lLl9jbGllbnQucHVibGlzaE1lc3NhZ2UoXCJwY3VNc2dQXCIsZCxmLGcsaCk6aT09YS5NZXRob2RUeXBlLlJFQ0FMTCYmZS5fY2xpZW50LnB1Ymxpc2hNZXNzYWdlKFwicmVjYWxsTXNnXCIsZCxmLGcsaCk6ZS5fY2xpZW50LnB1Ymxpc2hNZXNzYWdlKGNbMTBdW2JdLGQsZixnLGgpfSxlfSgpO2EuQnJpZGdlPWc7dmFyIGg9ZnVuY3Rpb24oKXtmdW5jdGlvbiBiKGEpe2lmKHRoaXMubWFwPXt9LHRoaXMuY29ubmVjdENhbGxiYWNrPW51bGwsIWQuX1JlY2VpdmVNZXNzYWdlTGlzdGVuZXIpdGhyb3cgbmV3IEVycm9yKFwicGxlYXNlIHNldCBvblJlY2VpdmVNZXNzYWdlTGlzdGVuZXJcIik7dGhpcy5fb25SZWNlaXZlZD1kLl9SZWNlaXZlTWVzc2FnZUxpc3RlbmVyLm9uUmVjZWl2ZWQsdGhpcy5fY2xpZW50PWEsdGhpcy5zeW5jTXNnTWFwPW5ldyBPYmplY3R9cmV0dXJuIGIucHJvdG90eXBlLnB1dENhbGxiYWNrPWZ1bmN0aW9uKGEsYixjKXt2YXIgZD17Q2FsbGJhY2s6YSxNZXNzYWdlOmN9O2QuQ2FsbGJhY2sucmVzdW1lVGltZXIoKSx0aGlzLm1hcFtiXT1kfSxiLnByb3RvdHlwZS5zZXRDb25uZWN0Q2FsbGJhY2s9ZnVuY3Rpb24oYil7YiYmKHRoaXMuY29ubmVjdENhbGxiYWNrPW5ldyBhLkNvbm5lY3RBY2soYi5vblN1Y2Nlc3MsYi5vbkVycm9yLHRoaXMuX2NsaWVudCkpfSxiLnByb3RvdHlwZS5vblJlY2VpdmVkPWZ1bmN0aW9uKGIsYyxkLGUsZil7dmFyIGgsaSxqO2lmKFwiUHVibGlzaE1lc3NhZ2VcIiE9Yi5fbmFtZSloPWIsYS5Sb25nSU1DbGllbnQuX3N0b3JhZ2VQcm92aWRlci5zZXRJdGVtKHRoaXMuX2NsaWVudC51c2VySWQsYS5NZXNzYWdlVXRpbC5pbnQ2NFRvVGltZXN0YW1wKGguZGF0YVRpbWUpKTtlbHNle2lmKFwic19udGZcIj09Yi5nZXRUb3BpYygpKXJldHVybiBoPWEuUm9uZ0lNQ2xpZW50LlByb3RvYnVmLk5vdGlmeU1zZy5kZWNvZGUoYi5nZXREYXRhKCkpLHZvaWQgdGhpcy5fY2xpZW50LnN5bmNUaW1lKGgudHlwZSxhLk1lc3NhZ2VVdGlsLmludDY0VG9UaW1lc3RhbXAoaC50aW1lKSxoLmNocm1JZCk7aWYoXCJzX21zZ1wiPT1iLmdldFRvcGljKCkpe2g9YS5Sb25nSU1DbGllbnQuUHJvdG9idWYuRG93blN0cmVhbU1lc3NhZ2UuZGVjb2RlKGIuZ2V0RGF0YSgpKTt2YXIgaz1hLk1lc3NhZ2VVdGlsLmludDY0VG9UaW1lc3RhbXAoaC5kYXRhVGltZSk7YS5Sb25nSU1DbGllbnQuX3N0b3JhZ2VQcm92aWRlci5zZXRJdGVtKHRoaXMuX2NsaWVudC51c2VySWQsayksYS5Sb25nSU1DbGllbnQuX21lbW9yeVN0b3JlLmxhc3RSZWFkVGltZS5nZXQodGhpcy5fY2xpZW50LnVzZXJJZCxrKX1lbHNle2lmKFwic19zdGF0XCI9PWIuZ2V0VG9waWMoKSlyZXR1cm4gaD1hLlJvbmdJTUNsaWVudC5Qcm90b2J1Zi5HZXRVc2VyU3RhdHVzT3V0cHV0LmRlY29kZShiLmdldERhdGEoKSksaD1hLlJvbmdJbm5lclRvb2xzLmNvbnZlcnRVc2VyU3RhdHVzKGgpLHZvaWQgYS5Sb25nSU1DbGllbnQudXNlclN0YXR1c09ic2VydmVyLm5vdGlmeSh7a2V5OmgudXNlcklkLGVudGl0eTpofSk7aWYoZy5fY2xpZW50LnNka1ZlciYmXCIxLjAuMFwiPT1nLl9jbGllbnQuc2RrVmVyKXJldHVybjtoPWEuUm9uZ0lNQ2xpZW50LlByb3RvYnVmLlVwU3RyZWFtTWVzc2FnZS5kZWNvZGUoYi5nZXREYXRhKCkpO3ZhciBsPWIuZ2V0VG9waWMoKSxtPWwuc3Vic3RyKDAsMik7XCJwcFwiPT1tP2gudHlwZT0xOlwicGRcIj09bT9oLnR5cGU9MjpcInBnXCI9PW0/aC50eXBlPTM6XCJjaFwiPT1tP2gudHlwZT00OlwicGNcIj09bSYmKGgudHlwZT01KSxoLmdyb3VwSWQ9Yi5nZXRUYXJnZXRJZCgpLGguZnJvbVVzZXJJZD10aGlzLl9jbGllbnQudXNlcklkLGguZGF0YVRpbWU9RGF0ZS5wYXJzZSgobmV3IERhdGUpLnRvU3RyaW5nKCkpfWlmKCFoKXJldHVybn12YXIgbj1hLlJvbmdJTUNsaWVudC5fbWVtb3J5U3RvcmUuaXNQdWxsRmluaXNoZWQ7aWYobnx8ZCl7aT1hLk1lc3NhZ2VVdGlsLm1lc3NhZ2VQYXJzZXIoaCx0aGlzLl9vblJlY2VpdmVkLGQpO2lmKDEyPT1pLmNvbnZlcnNhdGlvblR5cGUpcmV0dXJuIGEuUm9uZ0lNQ2xpZW50LlJUQ0xpc3RlbmVyKGkpO2lmKGIuZ2V0VG9waWMmJlwicmVjYWxsTXNnXCI9PWIuZ2V0VG9waWMoKSl7dmFyIG89aS5jb250ZW50O2kuY29udmVyc2F0aW9uVHlwZT1vLmNvbnZlcnNhdGlvblR5cGUsaS50YXJnZXRJZD1vLnRhcmdldElkLGkubWVzc2FnZUlkPW51bGx9aWYoYyYmKGkubWVzc2FnZVVJZD1jLmdldE1lc3NhZ2VVSWQoKSxpLnNlbnRUaW1lPWMuZ2V0VGltZXN0YW1wKCksYS5Sb25nSU1DbGllbnQuX3N0b3JhZ2VQcm92aWRlci5zZXRJdGVtKHRoaXMuX2NsaWVudC51c2VySWQsaS5zZW50VGltZSkpLG51bGwhPT1pKXtpZighKGkuY29udmVyc2F0aW9uVHlwZT09YS5Db252ZXJzYXRpb25UeXBlLkNIQVRST09NKSl7YS5Sb25nSU1DbGllbnQuTWVzc2FnZVBhcmFtc1tpLm1lc3NhZ2VUeXBlXS5tc2dUYWcuZ2V0TWVzc2FnZVRhZygpPj0wJiZhLlN5bmNUaW1lVXRpbC5zZXQoaSk7aWYoaS5tZXNzYWdlRGlyZWN0aW9uPT1hLk1lc3NhZ2VEaXJlY3Rpb24uU0VORCl7dmFyIHA9YS5Sb25nSU1DbGllbnQuX3N0b3JhZ2VQcm92aWRlcixxPWEuQnJpZGdlLl9jbGllbnQudXNlcklkLHI9cC5nZXRJdGVtKFwibGFzdF9zZW50VGltZV9cIitxKXx8MDtpZihpLnNlbnRUaW1lPD1yJiYhZilyZXR1cm59fWlmKGEuUm9uZ0lNQ2xpZW50Lk1lc3NhZ2VQYXJhbXNbaS5tZXNzYWdlVHlwZV0ubXNnVGFnLmdldE1lc3NhZ2VUYWcoKT4wKXtpZihqPWEuUm9uZ0lNQ2xpZW50Ll9kYXRhQWNjZXNzUHJvdmlkZXIuZ2V0Q29udmVyc2F0aW9uKGkuY29udmVyc2F0aW9uVHlwZSxpLnRhcmdldElkLHtvblN1Y2Nlc3M6ZnVuY3Rpb24oKXt9LG9uRXJyb3I6ZnVuY3Rpb24oKXt9fSksanx8KGo9YS5Sb25nSU1DbGllbnQuZ2V0SW5zdGFuY2UoKS5jcmVhdGVDb252ZXJzYXRpb24oaS5jb252ZXJzYXRpb25UeXBlLGkudGFyZ2V0SWQsXCJcIikpLGkubWVzc2FnZURpcmVjdGlvbj09YS5NZXNzYWdlRGlyZWN0aW9uLlJFQ0VJVkUmJjY0PT0oNjQmaC5zdGF0dXMpKXt2YXIgcz1hLlJvbmdJTUNsaWVudC5fc3RvcmFnZVByb3ZpZGVyLmdldEl0ZW0oXCJtZW50aW9uZWRzX1wiK2cuX2NsaWVudC51c2VySWQrXCJfXCIraS5jb252ZXJzYXRpb25UeXBlK1wiX1wiK2kudGFyZ2V0SWQpLHQ9aS5jb252ZXJzYXRpb25UeXBlK1wiX1wiK2kudGFyZ2V0SWQsdT17fTtpZihpLmNvbnRlbnQmJmkuY29udGVudC5tZW50aW9uZWRJbmZvJiYodVt0XT17dWlkOmkubWVzc2FnZVVJZCx0aW1lOmkuc2VudFRpbWUsbWVudGlvbmVkSW5mbzppLmNvbnRlbnQubWVudGlvbmVkSW5mb30sYS5Sb25nSU1DbGllbnQuX3N0b3JhZ2VQcm92aWRlci5zZXRJdGVtKFwibWVudGlvbmVkc19cIitnLl9jbGllbnQudXNlcklkK1wiX1wiK2kuY29udmVyc2F0aW9uVHlwZStcIl9cIitpLnRhcmdldElkLEpTT04uc3RyaW5naWZ5KHUpKSxzPUpTT04uc3RyaW5naWZ5KHUpKSxzKXt2YXIgdT1KU09OLnBhcnNlKHMpO2oubWVudGlvbmVkTXNnPXVbdF19fWlmKGkubWVzc2FnZURpcmVjdGlvbj09YS5NZXNzYWdlRGlyZWN0aW9uLlJFQ0VJVkUmJmkuc2VuZGVyVXNlcklkIT1nLl9jbGllbnQudXNlcklkJiYoai51bnJlYWRNZXNzYWdlQ291bnQ9ai51bnJlYWRNZXNzYWdlQ291bnQrMSxhLlJvbmdVdGlsLnN1cHBvcnRMb2NhbFN0b3JhZ2UoKSkpe3ZhciB2PWEuUm9uZ0lNQ2xpZW50Ll9zdG9yYWdlUHJvdmlkZXIuZ2V0SXRlbShcImN1XCIrZy5fY2xpZW50LnVzZXJJZCtqLmNvbnZlcnNhdGlvblR5cGUrai50YXJnZXRJZCksdz1OdW1iZXIodikrMTthLlJvbmdJTUNsaWVudC5fc3RvcmFnZVByb3ZpZGVyLnNldEl0ZW0oXCJjdVwiK2cuX2NsaWVudC51c2VySWQrai5jb252ZXJzYXRpb25UeXBlK2kudGFyZ2V0SWQsdyksai51bnJlYWRNZXNzYWdlQ291bnQ9d31qLnJlY2VpdmVkVGltZT0obmV3IERhdGUpLmdldFRpbWUoKSxqLnJlY2VpdmVkU3RhdHVzPWkucmVjZWl2ZWRTdGF0dXMsai5zZW5kZXJVc2VySWQ9aS5zZW5kVXNlcklkLGoubm90aWZpY2F0aW9uU3RhdHVzPWEuQ29udmVyc2F0aW9uTm90aWZpY2F0aW9uU3RhdHVzLkRPX05PVF9ESVNUVVJCLGoubGF0ZXN0TWVzc2FnZUlkPWkubWVzc2FnZUlkLGoubGF0ZXN0TWVzc2FnZT1pLGouc2VudFRpbWU9aS5zZW50VGltZSxhLlJvbmdJTUNsaWVudC5fZGF0YUFjY2Vzc1Byb3ZpZGVyLmFkZENvbnZlcnNhdGlvbihqLHtvblN1Y2Nlc3M6ZnVuY3Rpb24oYSl7fSxvbkVycm9yOmZ1bmN0aW9uKCl7fX0pfWlmKGkuY29udmVyc2F0aW9uVHlwZSE9YS5Db252ZXJzYXRpb25UeXBlLkNVU1RPTUVSX1NFUlZJQ0V8fFwiQ2hhbmdlTW9kZVJlc3BvbnNlTWVzc2FnZVwiIT1pLm1lc3NhZ2VUeXBlJiZcIlN1c3BlbmRNZXNzYWdlXCIhPWkubWVzc2FnZVR5cGUmJlwiSGFuZFNoYWtlUmVzcG9uc2VNZXNzYWdlXCIhPWkubWVzc2FnZVR5cGUmJlwiVGVybWluYXRlTWVzc2FnZVwiIT1pLm1lc3NhZ2VUeXBlJiZcIkN1c3RvbWVyU3RhdHVzVXBkYXRlTWVzc2FnZVwiIT1pLm1lc3NhZ2VUeXBlJiZcIlRleHRNZXNzYWdlXCIhPWkubWVzc2FnZVR5cGUmJlwiSW5mb3JtYXRpb25Ob3RpZmljYXRpb25NZXNzYWdlXCIhPWkubWVzc2FnZVR5cGV8fGEuUm9uZ0lNQ2xpZW50Ll9tZW1vcnlTdG9yZS5jdXN0U3RvcmUuaXNJbml0KXtpZihpLmNvbnZlcnNhdGlvblR5cGU9PWEuQ29udmVyc2F0aW9uVHlwZS5DVVNUT01FUl9TRVJWSUNFJiZcIkhhbmRTaGFrZVJlc3BvbnNlTWVzc2FnZVwiIT1pLm1lc3NhZ2VUeXBlKXtpZighYS5Sb25nSU1DbGllbnQuX21lbW9yeVN0b3JlLmN1c3RTdG9yZVtpLnRhcmdldElkXSlyZXR1cm47aWYoXCJUZXJtaW5hdGVNZXNzYWdlXCI9PWkubWVzc2FnZVR5cGUmJmEuUm9uZ0lNQ2xpZW50Ll9tZW1vcnlTdG9yZS5jdXN0U3RvcmVbaS50YXJnZXRJZF0uc2lkIT1pLmNvbnRlbnQuc2lkKXJldHVybn1pZihpLm1lc3NhZ2VUeXBlPT09YS5Sb25nSU1DbGllbnQuTWVzc2FnZVR5cGUuSGFuZFNoYWtlUmVzcG9uc2VNZXNzYWdlKXt2YXIgeD1pLmNvbnRlbnQuZGF0YTthLlJvbmdJTUNsaWVudC5fbWVtb3J5U3RvcmUuY3VzdFN0b3JlW2kudGFyZ2V0SWRdPXgseC5zZXJ2aWNlVHlwZSE9YS5DdXN0b21lclR5cGUuT05MWV9IVU1BTiYmeC5zZXJ2aWNlVHlwZSE9YS5DdXN0b21lclR5cGUuSFVNQU5fRklSU1R8fFwiMVwiPT14Lm5vdEF1dG9DaGEmJmEuUm9uZ0lNQ2xpZW50LmdldEluc3RhbmNlKCkuc3dpdGNoVG9IdW1hbk1vZGUoaS50YXJnZXRJZCx7b25TdWNjZXNzOmZ1bmN0aW9uKCl7fSxvbkVycm9yOmZ1bmN0aW9uKCl7fX0pfXZhciB5PW5ldyBEYXRlLHo9eS5nZXRNb250aCgpKzEsQT15LmdldEZ1bGxZZWFyKCkrXCIvXCIrKDE9PXoudG9TdHJpbmcoKS5sZW5ndGg/XCIwXCIrejp6KStcIi9cIit5LmdldERhdGUoKSxCPW5ldyBEYXRlKEEpLmdldFRpbWUoKS1pLnNlbnRUaW1lPDA7aWYoYS5Sb25nVXRpbC5zdXBwb3J0TG9jYWxTdG9yYWdlKCkmJmkubWVzc2FnZVR5cGU9PT1hLlJvbmdJTUNsaWVudC5NZXNzYWdlVHlwZS5SZWFkUmVjZWlwdFJlcXVlc3RNZXNzYWdlJiZCJiZpLm1lc3NhZ2VEaXJlY3Rpb249PWEuTWVzc2FnZURpcmVjdGlvbi5TRU5EKXt2YXIgQz1nLl9jbGllbnQudXNlcklkK2kuY29udGVudC5tZXNzYWdlVUlkK1wiU0VOVFwiO2EuUm9uZ0lNQ2xpZW50Ll9zdG9yYWdlUHJvdmlkZXIuc2V0SXRlbShDLEpTT04uc3RyaW5naWZ5KHtjb3VudDowLGRlYWx0aW1lOmkuc2VudFRpbWUsdXNlcklkczp7fX0pKX1lbHNlIGlmKGEuUm9uZ1V0aWwuc3VwcG9ydExvY2FsU3RvcmFnZSgpJiZpLm1lc3NhZ2VUeXBlPT09YS5Sb25nSU1DbGllbnQuTWVzc2FnZVR5cGUuUmVhZFJlY2VpcHRSZXF1ZXN0TWVzc2FnZSYmQil7dmFyIEQ9Zy5fY2xpZW50LnVzZXJJZCtpLmNvbnZlcnNhdGlvblR5cGUraS50YXJnZXRJZCtcIlJFQ0VJVkVEXCIsRT1KU09OLnBhcnNlKGEuUm9uZ0lNQ2xpZW50Ll9zdG9yYWdlUHJvdmlkZXIuZ2V0SXRlbShEKSk7aWYoRSlpZihpLnNlbmRlclVzZXJJZCBpbiBFKXtpZighRVtpLnNlbmRlclVzZXJJZF0udUlkc3x8IUVbaS5zZW5kZXJVc2VySWRdLnVJZHN8fC0xIT1FW2kuc2VuZGVyVXNlcklkXS51SWRzLmluZGV4T2YoaS5jb250ZW50Lm1lc3NhZ2VVSWQpKXJldHVybjtFW2kuc2VuZGVyVXNlcklkXS51SWRzLnB1c2goaS5jb250ZW50Lm1lc3NhZ2VVSWQpLEVbaS5zZW5kZXJVc2VySWRdLmRlYWx0aW1lPWkuc2VudFRpbWUsRVtpLnNlbmRlclVzZXJJZF0uaXNSZXNwb25zZT0hMSxhLlJvbmdJTUNsaWVudC5fc3RvcmFnZVByb3ZpZGVyLnNldEl0ZW0oRCxKU09OLnN0cmluZ2lmeShFKSl9ZWxzZXt2YXIgRj17dUlkczpbaS5jb250ZW50Lm1lc3NhZ2VVSWRdLGRlYWx0aW1lOmkuc2VudFRpbWUsaXNSZXNwb25zZTohMX07RVtpLnNlbmRlclVzZXJJZF09RixhLlJvbmdJTUNsaWVudC5fc3RvcmFnZVByb3ZpZGVyLnNldEl0ZW0oRCxKU09OLnN0cmluZ2lmeShFKSl9ZWxzZXt2YXIgRz17fTtHW2kuc2VuZGVyVXNlcklkXT17dUlkczpbaS5jb250ZW50Lm1lc3NhZ2VVSWRdLGRlYWx0aW1lOmkuc2VudFRpbWUsaXNSZXNwb25zZTohMX0sYS5Sb25nSU1DbGllbnQuX3N0b3JhZ2VQcm92aWRlci5zZXRJdGVtKEQsSlNPTi5zdHJpbmdpZnkoRykpfX1pZihhLlJvbmdVdGlsLnN1cHBvcnRMb2NhbFN0b3JhZ2UoKSYmaS5tZXNzYWdlVHlwZT09PWEuUm9uZ0lNQ2xpZW50Lk1lc3NhZ2VUeXBlLlJlYWRSZWNlaXB0UmVzcG9uc2VNZXNzYWdlJiZCKXt2YXIgSCxJPWkuY29udGVudCxKPUkucmVjZWlwdE1lc3NhZ2VEaWNbZy5fY2xpZW50LnVzZXJJZF0sQz1cIlwiO2lmKGkucmVjZWlwdFJlc3BvbnNlfHwoaS5yZWNlaXB0UmVzcG9uc2U9e30pLEope2Zvcih2YXIgSz1bXSxMPTAsTT1KLmxlbmd0aDtMPE07TCsrKUM9Zy5fY2xpZW50LnVzZXJJZCtKW0xdK1wiU0VOVFwiLCEoSD1KU09OLnBhcnNlKGEuUm9uZ0lNQ2xpZW50Ll9zdG9yYWdlUHJvdmlkZXIuZ2V0SXRlbShDKSkpfHxpLnNlbmRlclVzZXJJZCBpbiBILnVzZXJJZHN8fChLLnB1c2goSltMXSksSC5jb3VudCs9MSxILnVzZXJJZHNbaS5zZW5kZXJVc2VySWRdPWkuc2VudFRpbWUsaS5yZWNlaXB0UmVzcG9uc2VbSltMXV09SC5jb3VudCxhLlJvbmdJTUNsaWVudC5fc3RvcmFnZVByb3ZpZGVyLnNldEl0ZW0oQyxKU09OLnN0cmluZ2lmeShIKSkpO0kucmVjZWlwdE1lc3NhZ2VEaWNbZy5fY2xpZW50LnVzZXJJZF09SyxpLmNvbnRlbnQ9SX19dmFyIE49dGhpcztpZihhLlJvbmdJTUNsaWVudC5fdm9pcFByb3ZpZGVyJiZbXCJBY2NlcHRNZXNzYWdlXCIsXCJSaW5naW5nTWVzc2FnZVwiLFwiSHVuZ3VwTWVzc2FnZVwiLFwiSW52aXRlTWVzc2FnZVwiLFwiTWVkaWFNb2RpZnlNZXNzYWdlXCIsXCJNZW1iZXJNb2RpZnlNZXNzYWdlXCJdLmluZGV4T2YoaS5tZXNzYWdlVHlwZSk+LTEpc2V0VGltZW91dChmdW5jdGlvbigpe2EuUm9uZ0lNQ2xpZW50Ll92b2lwUHJvdmlkZXIub25SZWNlaXZlZChpKX0pO2Vsc2V7dmFyIE89ZXx8MCxQPSFuO3NldFRpbWVvdXQoZnVuY3Rpb24oKXtOLl9vblJlY2VpdmVkKGksTyxQKX0pfX19fX0sYi5wcm90b3R5cGUuaGFuZGxlTWVzc2FnZT1mdW5jdGlvbihiKXtpZihiKXN3aXRjaChiLl9uYW1lKXtjYXNlXCJDb25uQWNrTWVzc2FnZVwiOmcuX2NsaWVudC5oYW5kbGVyLmNvbm5lY3RDYWxsYmFjay5wcm9jZXNzKGIuZ2V0U3RhdHVzKCksYi5nZXRVc2VySWQoKSxiLmdldFRpbWVzdGFtcCgpKTticmVhaztjYXNlXCJQdWJsaXNoTWVzc2FnZVwiOmIuZ2V0U3luY01zZygpfHwwPT1iLmdldFFvcygpfHxnLl9jbGllbnQuY2hhbm5lbC53cml0ZUFuZEZsdXNoKG5ldyBhLlB1YkFja01lc3NhZ2UoYi5nZXRNZXNzYWdlSWQoKSkpLGIuZ2V0U3luY01zZygpJiYhYS5Sb25nSU1DbGllbnQuX21lbW9yeVN0b3JlLmRlcGVuZC5pc1BvbGxpbmc/Zy5fY2xpZW50LmhhbmRsZXIuc3luY01zZ01hcFtiLmdldE1lc3NhZ2VJZCgpXT1iOmcuX2NsaWVudC5oYW5kbGVyLm9uUmVjZWl2ZWQoYik7YnJlYWs7Y2FzZVwiUXVlcnlBY2tNZXNzYWdlXCI6MCE9Yi5nZXRRb3MoKSYmZy5fY2xpZW50LmNoYW5uZWwud3JpdGVBbmRGbHVzaChuZXcgYS5RdWVyeUNvbk1lc3NhZ2UoYi5nZXRNZXNzYWdlSWQoKSkpO3ZhciBjPWcuX2NsaWVudC5oYW5kbGVyLm1hcFtiLmdldE1lc3NhZ2VJZCgpXTtjJiYoYy5DYWxsYmFjay5wcm9jZXNzKGIuZ2V0U3RhdHVzKCksYi5nZXREYXRhKCksYi5nZXREYXRlKCksYy5NZXNzYWdlKSxkZWxldGUgZy5fY2xpZW50LmhhbmRsZXIubWFwW2IuZ2V0TWVzc2FnZUlkKCldKTticmVhaztjYXNlXCJQdWJBY2tNZXNzYWdlXCI6dmFyIGQ9Zy5fY2xpZW50LmhhbmRsZXIubWFwW2IuZ2V0TWVzc2FnZUlkKCldO2lmKGQpZC5DYWxsYmFjay5wcm9jZXNzKGIuZ2V0U3RhdHVzKCl8fDAsYi5nZXRNZXNzYWdlVUlkKCksYi5nZXRUaW1lc3RhbXAoKSxkLk1lc3NhZ2UsYi5nZXRNZXNzYWdlSWQoKSksZGVsZXRlIGcuX2NsaWVudC5oYW5kbGVyLm1hcFtiLmdldE1lc3NhZ2VJZCgpXTtlbHNle3ZhciBlPWEuQnJpZGdlLl9jbGllbnQudXNlcklkO2EuUm9uZ0lNQ2xpZW50Ll9zdG9yYWdlUHJvdmlkZXIuc2V0SXRlbShcImxhc3Rfc2VudFRpbWVfXCIrZSxiLnRpbWVzdGFtcCksZy5fY2xpZW50LmhhbmRsZXIub25SZWNlaXZlZChnLl9jbGllbnQuaGFuZGxlci5zeW5jTXNnTWFwW2IubWVzc2FnZUlkXSxiLG51bGwsbnVsbCwhMCksZGVsZXRlIGcuX2NsaWVudC5oYW5kbGVyLnN5bmNNc2dNYXBbYi5nZXRNZXNzYWdlSWQoKV19YnJlYWs7Y2FzZVwiUGluZ1Jlc3BNZXNzYWdlXCI6YS5Sb25nSU1DbGllbnQuX21lbW9yeVN0b3JlLmlzRmlyc3RQaW5nTXNnP2EuUm9uZ0lNQ2xpZW50Ll9tZW1vcnlTdG9yZS5pc0ZpcnN0UGluZ01zZz0hMTpnLl9jbGllbnQucGF1c2VUaW1lcigpO2JyZWFrO2Nhc2VcIkRpc2Nvbm5lY3RNZXNzYWdlXCI6Zy5fY2xpZW50LmNoYW5uZWwuZGlzY29ubmVjdChiLmdldFN0YXR1cygpKX19LGJ9KCk7YS5NZXNzYWdlSGFuZGxlcj1ofShSb25nSU1MaWJ8fChSb25nSU1MaWI9e30pKTt2YXIgX19leHRlbmRzPXRoaXMmJnRoaXMuX19leHRlbmRzfHxmdW5jdGlvbihhLGIpe2Z1bmN0aW9uIGMoKXt0aGlzLmNvbnN0cnVjdG9yPWF9Zm9yKHZhciBkIGluIGIpYi5oYXNPd25Qcm9wZXJ0eShkKSYmKGFbZF09YltkXSk7YS5wcm90b3R5cGU9bnVsbD09PWI/T2JqZWN0LmNyZWF0ZShiKTooYy5wcm90b3R5cGU9Yi5wcm90b3R5cGUsbmV3IGMpfSxSb25nSU1MaWI7IWZ1bmN0aW9uKGEpe3ZhciBiPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gYihhKXt0aGlzLnRpbWVvdXQ9bnVsbCx0aGlzLm9uRXJyb3I9bnVsbCxhJiZcIm51bWJlclwiPT10eXBlb2YgYT90aGlzLnRpbWVvdXRNaWxsaXM9YToodGhpcy50aW1lb3V0TWlsbGlzPTNlNCx0aGlzLm9uRXJyb3I9YSl9cmV0dXJuIGIucHJvdG90eXBlLnJlc3VtZVRpbWVyPWZ1bmN0aW9uKCl7dmFyIGE9dGhpczt0aGlzLnRpbWVvdXRNaWxsaXM+MCYmIXRoaXMudGltZW91dCYmKHRoaXMudGltZW91dD1zZXRUaW1lb3V0KGZ1bmN0aW9uKCl7YS5yZWFkVGltZU91dCghMCl9LHRoaXMudGltZW91dE1pbGxpcykpfSxiLnByb3RvdHlwZS5wYXVzZVRpbWVyPWZ1bmN0aW9uKCl7dGhpcy50aW1lb3V0JiYoY2xlYXJUaW1lb3V0KHRoaXMudGltZW91dCksdGhpcy50aW1lb3V0PW51bGwpfSxiLnByb3RvdHlwZS5yZWFkVGltZU91dD1mdW5jdGlvbihiKXtiJiZ0aGlzLm9uRXJyb3I/dGhpcy5vbkVycm9yKGEuRXJyb3JDb2RlLlRJTUVPVVQpOnRoaXMucGF1c2VUaW1lcigpfSxifSgpO2EuTWVzc2FnZUNhbGxiYWNrPWI7dmFyIGM9ZnVuY3Rpb24oKXtmdW5jdGlvbiBiKCl7dGhpcy5wdWJsaWNTZXJ2aWNlTGlzdD1bXX1yZXR1cm4gYi5nZXRJbnN0YW5jZT1mdW5jdGlvbigpe3JldHVybiBuZXcgYn0sYi5wcm90b3R5cGUucG90dGluZ1Byb2ZpbGU9ZnVuY3Rpb24oYil7dmFyIGM7dGhpcy5wcm9maWxlPW5ldyBhLlB1YmxpY1NlcnZpY2VQcm9maWxlLGM9SlNPTi5wYXJzZShiLmV4dHJhKSx0aGlzLnByb2ZpbGUuaXNHbG9iYWw9Yy5pc0dsb2JhbCx0aGlzLnByb2ZpbGUuaW50cm9kdWN0aW9uPWMuaW50cm9kdWN0aW9uLHRoaXMucHJvZmlsZS5tZW51PWMubWVudSx0aGlzLnByb2ZpbGUuaGFzRm9sbG93ZWQ9Yy5mb2xsb3csdGhpcy5wcm9maWxlLnB1YmxpY1NlcnZpY2VJZD1iLm1waWQsdGhpcy5wcm9maWxlLm5hbWU9Yi5uYW1lLHRoaXMucHJvZmlsZS5wb3J0cmFpdFVyaT1iLnBvcnRyYWl0VXJsLHRoaXMucHJvZmlsZS5jb252ZXJzYXRpb25UeXBlPVwibWNcIj09Yi50eXBlP2EuQ29udmVyc2F0aW9uVHlwZS5BUFBfUFVCTElDX1NFUlZJQ0U6YS5Db252ZXJzYXRpb25UeXBlLlBVQkxJQ19TRVJWSUNFLHRoaXMucHVibGljU2VydmljZUxpc3QucHVzaCh0aGlzLnByb2ZpbGUpfSxiLnByb3RvdHlwZS5tYXBwaW5nPWZ1bmN0aW9uKGIsYyl7c3dpdGNoKGMpe2Nhc2VcIkdldFVzZXJJbmZvT3V0cHV0XCI6cmV0dXJuIG5ldyBhLlVzZXJJbmZvKGIudXNlcklkLGIudXNlck5hbWUsYi51c2VyUG9ydHJhaXQpO2Nhc2VcIkdldFFOdXBUb2tlbk91dHB1dFwiOnJldHVybntkZWFkbGluZTphLk1lc3NhZ2VVdGlsLmludDY0VG9UaW1lc3RhbXAoYi5kZWFkbGluZSksdG9rZW46Yi50b2tlbn07Y2FzZVwiR2V0UU5kb3dubG9hZFVybE91dHB1dFwiOnJldHVybntkb3dubG9hZFVybDpiLmRvd25sb2FkVXJsfTtjYXNlXCJDcmVhdGVEaXNjdXNzaW9uT3V0cHV0XCI6cmV0dXJuIGIuaWQ7Y2FzZVwiQ2hhbm5lbEluZm9PdXRwdXRcIjp2YXIgZD1uZXcgYS5EaXNjdXNzaW9uO3JldHVybiBkLmNyZWF0b3JJZD1iLmFkbWluVXNlcklkLGQuaWQ9Yi5jaGFubmVsSWQsZC5tZW1iZXJJZExpc3Q9Yi5maXJzdFRlblVzZXJJZHMsZC5uYW1lPWIuY2hhbm5lbE5hbWUsZC5pc09wZW49Yi5vcGVuU3RhdHVzLGQ7Y2FzZVwiR3JvdXBIYXNoT3V0cHV0XCI6cmV0dXJuIGIucmVzdWx0O2Nhc2VcIlF1ZXJ5QmxhY2tMaXN0T3V0cHV0XCI6cmV0dXJuIGIudXNlcklkcztjYXNlXCJTZWFyY2hNcE91dHB1dFwiOmNhc2VcIlB1bGxNcE91dHB1dFwiOmlmKGIuaW5mbyl7dmFyIGU9dGhpcztBcnJheS5mb3JFYWNoKGIuaW5mbyxmdW5jdGlvbihhKXtzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7ZS5wb3R0aW5nUHJvZmlsZShhKX0sMTAwKX0pfXJldHVybiB0aGlzLnB1YmxpY1NlcnZpY2VMaXN0O2RlZmF1bHQ6cmV0dXJuIGJ9fSxifSgpO2EuQ2FsbGJhY2tNYXBwaW5nPWM7dmFyIGQ9ZnVuY3Rpb24oYyl7ZnVuY3Rpb24gZChhLGIpe2MuY2FsbCh0aGlzLGIpLHRoaXMuX2NiPWEsdGhpcy5fdGltZW91dD1ifXJldHVybiBfX2V4dGVuZHMoZCxjKSxkLnByb3RvdHlwZS5wcm9jZXNzPWZ1bmN0aW9uKGIsYyxkLGUsZil7aWYodGhpcy5yZWFkVGltZU91dCgpLDA9PWIpe2UmJihlLnNldFNlbnRTdGF0dXM9Yik7aWYoYS5Sb25nSU1DbGllbnQuX21lbW9yeVN0b3JlLmlzUHVsbEZpbmlzaGVkKXt2YXIgZz1hLkJyaWRnZS5fY2xpZW50LnVzZXJJZDthLlJvbmdJTUNsaWVudC5fc3RvcmFnZVByb3ZpZGVyLnNldEl0ZW0oXCJsYXN0X3NlbnRUaW1lX1wiK2csZCksYS5TeW5jVGltZVV0aWwuc2V0KHttZXNzYWdlRGlyZWN0aW9uOmEuTWVzc2FnZURpcmVjdGlvbi5TRU5ELHNlbnRUaW1lOmR9KX10aGlzLl9jYih7bWVzc2FnZVVJZDpjLHRpbWVzdGFtcDpkLG1lc3NhZ2VJZDpmfSl9ZWxzZSB0aGlzLl90aW1lb3V0KGIse21lc3NhZ2VVSWQ6YyxzZW50VGltZTpkfSl9LGQucHJvdG90eXBlLnJlYWRUaW1lT3V0PWZ1bmN0aW9uKGEpe2IucHJvdG90eXBlLnJlYWRUaW1lT3V0LmNhbGwodGhpcyxhKX0sZH0oYik7YS5QdWJsaXNoQ2FsbGJhY2s9ZDt2YXIgZT1mdW5jdGlvbihkKXtmdW5jdGlvbiBlKGEsYil7ZC5jYWxsKHRoaXMsYiksdGhpcy5fY2I9YSx0aGlzLl90aW1lb3V0PWJ9cmV0dXJuIF9fZXh0ZW5kcyhlLGQpLGUucHJvdG90eXBlLnByb2Nlc3M9ZnVuY3Rpb24oYixkLGUsZil7aWYodGhpcy5yZWFkVGltZU91dCgpLGYmJmQmJjA9PWIpe3RyeXtkPWMuZ2V0SW5zdGFuY2UoKS5tYXBwaW5nKGEuUm9uZ0lNQ2xpZW50LlByb3RvYnVmW2ZdLmRlY29kZShkKSxmKX1jYXRjaChnKXtyZXR1cm4gdm9pZCB0aGlzLl90aW1lb3V0KGEuRXJyb3JDb2RlLlVOS05PV04pfVwiR2V0VXNlckluZm9PdXRwdXRcIj09ZiYmKGEuQ2xpZW50LnVzZXJJbmZvTWFwcGluZ1tkLnVzZXJJZF09ZCksdGhpcy5fY2IoZCl9ZWxzZSBiPjA/dGhpcy5fdGltZW91dChiKTp0aGlzLl9jYihiKX0sZS5wcm90b3R5cGUucmVhZFRpbWVPdXQ9ZnVuY3Rpb24oYSl7Yi5wcm90b3R5cGUucmVhZFRpbWVPdXQuY2FsbCh0aGlzLGEpfSxlfShiKTthLlF1ZXJ5Q2FsbGJhY2s9ZTt2YXIgZj1mdW5jdGlvbihjKXtmdW5jdGlvbiBkKGEsYixkKXtjLmNhbGwodGhpcyxiKSx0aGlzLl9jbGllbnQ9ZCx0aGlzLl9jYj1hLHRoaXMuX3RpbWVvdXQ9Yn1yZXR1cm4gX19leHRlbmRzKGQsYyksZC5wcm90b3R5cGUucHJvY2Vzcz1mdW5jdGlvbihiLGMsZCl7aWYodGhpcy5yZWFkVGltZU91dCgpLDA9PWIpe3RoaXMuX2NsaWVudC51c2VySWQ9Yzt2YXIgZT10aGlzO2lmKCFhLlJvbmdJTUNsaWVudC5fbWVtb3J5U3RvcmUuZGVwZW5kLmlzUG9sbGluZyYmYS5Sb25nSU1DbGllbnQuX21lbW9yeVN0b3JlLmlzRmlyc3RQaW5nTXNnP2EuQnJpZGdlLl9jbGllbnQuY2hlY2tTb2NrZXQoe29uU3VjY2VzczpmdW5jdGlvbigpe2EuUm9uZ0lNQ2xpZW50LmlzTm90UHVsbE1zZ3x8ZS5fY2xpZW50LnN5bmNUaW1lKHZvaWQgMCx2b2lkIDAsdm9pZCAwLCEwKX0sb25FcnJvcjpmdW5jdGlvbigpe2EuUm9uZ0lNQ2xpZW50Ll9tZW1vcnlTdG9yZS5pc0ZpcnN0UGluZ01zZz0hMSxhLlJvbmdJTUNsaWVudC5nZXRJbnN0YW5jZSgpLmRpc2Nvbm5lY3QoKSxhLlJvbmdJTUNsaWVudC5jb25uZWN0KGEuUm9uZ0lNQ2xpZW50Ll9tZW1vcnlTdG9yZS50b2tlbixhLlJvbmdJTUNsaWVudC5fbWVtb3J5U3RvcmUuY2FsbGJhY2spfX0pOmEuUm9uZ0lNQ2xpZW50LmlzTm90UHVsbE1zZ3x8ZS5fY2xpZW50LnN5bmNUaW1lKHZvaWQgMCx2b2lkIDAsdm9pZCAwLCEwKSxhLkJyaWRnZS5fY2xpZW50LmNoYW5uZWwuc29ja2V0LmZpcmUoXCJTdGF0dXNDaGFuZ2VkXCIsMCksdGhpcy5fY2xpZW50LnJlY29ubmVjdE9iai5vblN1Y2Nlc3MpdGhpcy5fY2xpZW50LnJlY29ubmVjdE9iai5vblN1Y2Nlc3MoYyksZGVsZXRlIHRoaXMuX2NsaWVudC5yZWNvbm5lY3RPYmoub25TdWNjZXNzO2Vsc2V7dmFyIGY9dGhpcztzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7Zi5fY2IoYyl9LDUwMCl9YS5Sb25nSU1DbGllbnQuX21lbW9yeVN0b3JlLmNvbm5lY3RBY2tUaW1lPWQsKG5ldyBEYXRlKS5nZXRUaW1lKCktZD9hLlJvbmdJTUNsaWVudC5fbWVtb3J5U3RvcmUuZGVsdGFUaW1lPShuZXcgRGF0ZSkuZ2V0VGltZSgpLWQ6YS5Sb25nSU1DbGllbnQuX21lbW9yeVN0b3JlLmRlbHRhVGltZT0wfWVsc2UgaWYoNj09Yil7YS5Sb25nSU1DbGllbnQuZ2V0SW5zdGFuY2UoKS5kaXNjb25uZWN0KCk7dmFyIGY9dGhpcyxnPWYuX2NsaWVudCxoPWcuYXBwSWQsaT1nLnRva2VuXHJcbjsobmV3IGEuTmF2aWdhdGlvbikucmVxdWVzdE5hdmkoaSxoLGZ1bmN0aW9uKCl7Zy5jbGVhckhlYXJ0YmVhdCgpO3ZhciBiPW5ldyBhLkNsaWVudChpLGgpO2EuQnJpZGdlLl9jbGllbnQ9YixiLl9faW5pdChmdW5jdGlvbigpe1wid2Vic29ja2V0XCI9PWEuVHJhbnNwb3J0YXRpb25zLl9UcmFuc3BvcnRUeXBlJiZiLmtlZXBMaXZlKCl9KX0sZi5fdGltZW91dCwhMSl9ZWxzZSBhLkJyaWRnZS5fY2xpZW50LmNoYW5uZWwuc29ja2V0LnNvY2tldC5fc3RhdHVzPWIsdGhpcy5fY2xpZW50LnJlY29ubmVjdE9iai5vbkVycm9yPyh0aGlzLl9jbGllbnQucmVjb25uZWN0T2JqLm9uRXJyb3IoYiksZGVsZXRlIHRoaXMuX2NsaWVudC5yZWNvbm5lY3RPYmoub25FcnJvcik6dGhpcy5fdGltZW91dChiKX0sZC5wcm90b3R5cGUucmVhZFRpbWVPdXQ9ZnVuY3Rpb24oYSl7Yi5wcm90b3R5cGUucmVhZFRpbWVPdXQuY2FsbCh0aGlzLGEpfSxkfShiKTthLkNvbm5lY3RBY2s9Zn0oUm9uZ0lNTGlifHwoUm9uZ0lNTGliPXt9KSk7dmFyIFJvbmdJTUxpYjshZnVuY3Rpb24oYSl7dmFyIGI9ZnVuY3Rpb24oKXtmdW5jdGlvbiBiKCl7fXJldHVybiBiLmNsZWFyPWZ1bmN0aW9uKCl7dmFyIGI9YS5Sb25nSU1DbGllbnQuX3N0b3JhZ2VQcm92aWRlcjtiLnJlbW92ZUl0ZW0oXCJyY191aWRcIiksYi5yZW1vdmVJdGVtKFwic2VydmVySW5kZXhcIiksYi5yZW1vdmVJdGVtKFwicm9uZ1NES1wiKX0sYi5wcm90b3R5cGUuZ2V0TmF2aVN1Y2Nlc3M9ZnVuY3Rpb24oYil7dmFyIGM9YS5Sb25nSU1DbGllbnQuX3N0b3JhZ2VQcm92aWRlcjtjLnNldEl0ZW0oXCJmdWxsbmF2aVwiLEpTT04uc3RyaW5naWZ5KGIpKTt2YXIgZD1iLnNlcnZlcjtkJiYoZCs9XCIsXCIpO3ZhciBlPWIuYmFja3VwU2VydmVyfHxcIlwiLGY9XCJ7c2VydmVyfXtiYWNrdXBTZXJ2ZXJ9XCIsZz1hLlJvbmdVdGlsLnRwbEVuZ2luZShmLHtzZXJ2ZXI6ZCxiYWNrdXBTZXJ2ZXI6ZX0pO2c9Zy5zcGxpdChcIixcIiksYy5zZXRJdGVtKFwic2VydmVyc1wiLEpTT04uc3RyaW5naWZ5KGcpKTt2YXIgaD1hLlJvbmdJTUNsaWVudC5fbWVtb3J5U3RvcmUudG9rZW4saT1hLklubmVyVXRpbC5nZXRVSWQoaCk7Yy5zZXRJdGVtKFwicmNfdWlkXCIsaSk7dmFyIGo9Yi51c2VySWQ7aWYoYy5zZXRJdGVtKFwiY3VycmVudF91c2VyXCIsaiksYi52b2lwQ2FsbEluZm8pe3ZhciBrPUpTT04ucGFyc2UoYi52b2lwQ2FsbEluZm8pO2EuUm9uZ0lNQ2xpZW50Ll9tZW1vcnlTdG9yZS52b2lwU3RhdGVneT1rLnN0cmF0ZWd5LGMuc2V0SXRlbShcInZvaXBTdHJhdGVneVwiLGsuc3RyYXRlZ3kpfXZhciBsPWIub3Blbk1wO2Muc2V0SXRlbShcIm9wZW5NcFwiK2ksbCksYS5Sb25nSU1DbGllbnQuX21lbW9yeVN0b3JlLmRlcGVuZC5vcGVuTXA9bH0sYi5wcm90b3R5cGUuY29ubmVjdD1mdW5jdGlvbihiLGMsZCl7dmFyIGU9YS5Sb25nSU1DbGllbnQuX3N0b3JhZ2VQcm92aWRlci5nZXRJdGVtKFwiYXBwSWRcIik7ZSYmZSE9YiYmKGEuUm9uZ0lNQ2xpZW50Ll9zdG9yYWdlUHJvdmlkZXIuY2xlYXJJdGVtKCksYS5Sb25nSU1DbGllbnQuX3N0b3JhZ2VQcm92aWRlci5zZXRJdGVtKFwiYXBwSWRcIixiKSksZXx8YS5Sb25nSU1DbGllbnQuX3N0b3JhZ2VQcm92aWRlci5zZXRJdGVtKFwiYXBwSWRcIixiKTt2YXIgZj1uZXcgYS5DbGllbnQoYyxiKTtyZXR1cm4gdGhpcy5yZXF1ZXN0TmF2aShjLGIsZnVuY3Rpb24oKXtmLmNvbm5lY3QoZCl9LGQub25FcnJvciwhMCksZn0sYi5wcm90b3R5cGUucmVxdWVzdE5hdmk9ZnVuY3Rpb24oYyxkLGUsZixnKXtpZihnKXt2YXIgaD1tZDUoYykuc2xpY2UoOCwxNiksaT1hLlJvbmdJTUNsaWVudC5fc3RvcmFnZVByb3ZpZGVyLGo9aS5nZXRJdGVtKFwicm9uZ1NES1wiKSxrPWEuVHJhbnNwb3J0YXRpb25zLl9UcmFuc3BvcnRUeXBlPT1qLGw9aS5nZXRJdGVtKFwicmNfdWlkXCIpLG09bD09aCxuPWkuZ2V0SXRlbShcInNlcnZlcnNcIiksbz1cInN0cmluZ1wiPT10eXBlb2YgbjtpZihtJiZrJiZvKXthLlJvbmdJTUNsaWVudC5fbWVtb3J5U3RvcmUudm9pcFN0YXRlZ3k9aS5nZXRJdGVtKFwidm9pcFN0cmF0ZWd5XCIpO3ZhciBwPWkuZ2V0SXRlbShcIm9wZW5NcFwiK2gpO3JldHVybiBhLlJvbmdJTUNsaWVudC5fbWVtb3J5U3RvcmUuZGVwZW5kLm9wZW5NcD1wLHZvaWQgZSgpfX1iLmNsZWFyKCk7dmFyIHE9YS5DaGFubmVsLl9Db25uZWN0aW9uU3RhdHVzTGlzdGVuZXIscj1hLlJvbmdJTUNsaWVudC5fbWVtb3J5U3RvcmUuZGVwZW5kLHM9ci5uYXZpZ2F0ZXJzLHQ9ci5uYXZpVGltZW91dCx1PXIubWF4TmF2aVJldHJ5LHY9dGhpcyx3PW5ldyBhLlRpbWVyKHt0aW1lb3V0OnR9KSx4PTEseT1mdW5jdGlvbigpe3JldHVybiB4Pj11fSx6PW5ldyBhLkluZGV4VG9vbHMoe2l0ZW1zOnMsb253aGVlbDpmdW5jdGlvbigpe3grPTF9fSksQT1mdW5jdGlvbigpe2lmKHkoKSlyZXR1cm4gdm9pZCBmKGEuQ29ubmVjdGlvblN0YXR1cy5SRVNQT05TRV9OQVZJX0VSUk9SKTt2YXIgYj16LmdldCgpLGc9c1tiXTt6LmFkZCgpO3ZhciBoPWZ1bmN0aW9uKGIpe3cucGF1c2UoKSxxLm9uQ2hhbmdlZChhLkNvbm5lY3Rpb25TdGF0dXMuUkVTUE9OU0VfTkFWSSk7dmFyIGM9Yi5jb2RlO2EuUm9uZ1V0aWwuaXNFcXVhbChjLDIwMCkmJih2LmdldE5hdmlTdWNjZXNzKGIpLGUoKSksYS5Sb25nVXRpbC5pc0VxdWFsKGMsNDAxKSYmZihhLkNvbm5lY3Rpb25TdGF0ZS5UT0tFTl9JTkNPUlJFQ1QpLGEuUm9uZ1V0aWwuaXNFcXVhbChjLDQwMykmJnEub25DaGFuZ2VkKGEuQ29ubmVjdGlvblN0YXR1cy5BUFBLRVlfSVNfRkFLRSl9LGk9ZnVuY3Rpb24oYil7YS5Sb25nVXRpbC5pc0VxdWFsKGIsMCl8fCh3LnBhdXNlKCkscS5vbkNoYW5nZWQoYS5Db25uZWN0aW9uU3RhdHVzLlJFU1BPTlNFX05BVklfRVJST1IpLEEoKSl9O3Eub25DaGFuZ2VkKGEuQ29ubmVjdGlvblN0YXR1cy5SRVFVRVNUX05BVkkpO3ZhciBqPXYucmVxdWVzdChnLGQsYyxoLGkpO3cucmVzdW1lKGZ1bmN0aW9uKCl7cS5vbkNoYW5nZWQoYS5Db25uZWN0aW9uU3RhdHVzLlJFU1BPTlNFX05BVklfVElNRU9VVCksai5hYm9ydCgpLEEoKX0pfTtBKCl9LGIucHJvdG90eXBlLnJlcXVlc3Q9ZnVuY3Rpb24oYixjLGQsZSxmKXt2YXIgZz1hLlJvbmdJTUNsaWVudC5fbWVtb3J5U3RvcmUuZGVwZW5kLGg9Zy5pc1BvbGxpbmc/XCJjb21ldG5hdmlcIjpcIm5hdmlcIjtkPWVuY29kZVVSSUNvbXBvbmVudChkKTt2YXIgaT1hLlJvbmdJTUNsaWVudC5zZGt2ZXIsaj1hLlJvbmdVdGlsLmdldFRpbWVzdGFtcCgpLGs9XCJ7bmF2aX0ve3BhdGh9LmpzP2FwcElkPXthcHBJZH0mdG9rZW49e3Rva2VufSZjYWxsQmFjaz1udWxsJnY9e3Nka3Zlcn0mcj17cmFuZG9tfVwiLGw9YS5Sb25nVXRpbC50cGxFbmdpbmUoayx7bmF2aTpiLHBhdGg6aCxhcHBJZDpjLHRva2VuOmQsc2RrdmVyOmkscmFuZG9tOmp9KTtyZXR1cm4gYS5Sb25nVXRpbC5yZXF1ZXN0KHt1cmw6bCxzdWNjZXNzOmZ1bmN0aW9uKGEpe2E9YS5yZXBsYWNlKFwibnVsbChcIixcIlwiKS5yZXBsYWNlKFwiKTtcIixcIlwiKTt2YXIgYj1hLmxhc3RJbmRleE9mKFwiKVwiKTtiPT1hLmxlbmd0aC0xJiYoYT1hLnN1YnN0cigwLGIpKSxlKEpTT04ucGFyc2UoYSkpfSxlcnJvcjpmdW5jdGlvbihhLGIpezQwMT09YXx8NDAzPT1hP2UoSlNPTi5wYXJzZShiKSk6ZihhKX19KX0sYi5FbmRwb2ludD1uZXcgT2JqZWN0LGJ9KCk7YS5OYXZpZ2F0aW9uPWJ9KFJvbmdJTUxpYnx8KFJvbmdJTUxpYj17fSkpO3ZhciBSb25nSU1MaWI7IWZ1bmN0aW9uKGEpe3ZhciBiPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gYihiKXt0aGlzLl9uYW1lPVwiQmFzZU1lc3NhZ2VcIix0aGlzLmxlbmd0aFNpemU9MCxiIGluc3RhbmNlb2YgYS5IZWFkZXI/dGhpcy5faGVhZGVyPWI6dGhpcy5faGVhZGVyPW5ldyBhLkhlYWRlcihiLCExLGEuUW9zLkFUX01PU1RfT05DRSwhMSl9cmV0dXJuIGIucHJvdG90eXBlLnJlYWQ9ZnVuY3Rpb24oYSxiKXt0aGlzLnJlYWRNZXNzYWdlKGEsYil9LGIucHJvdG90eXBlLndyaXRlPWZ1bmN0aW9uKGIpe3ZhciBjPW5ldyBhLkJpbmFyeUhlbHBlcixkPWMuY29udmVydFN0cmVhbShiKTtyZXR1cm4gdGhpcy5faGVhZGVyQ29kZT10aGlzLmdldEhlYWRlckZsYWcoKSxkLndyaXRlKHRoaXMuX2hlYWRlckNvZGUpLHRoaXMud3JpdGVNZXNzYWdlKGQpLGR9LGIucHJvdG90eXBlLmdldEhlYWRlckZsYWc9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5faGVhZGVyLmVuY29kZSgpfSxiLnByb3RvdHlwZS5nZXRMZW5ndGhTaXplPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMubGVuZ3RoU2l6ZX0sYi5wcm90b3R5cGUudG9CeXRlcz1mdW5jdGlvbigpe3JldHVybiB0aGlzLndyaXRlKFtdKS5nZXRCeXRlc0FycmF5KCl9LGIucHJvdG90eXBlLmlzUmV0YWluZWQ9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5faGVhZGVyLnJldGFpbn0sYi5wcm90b3R5cGUuc2V0UmV0YWluZWQ9ZnVuY3Rpb24oYSl7dGhpcy5faGVhZGVyLnJldGFpbj1hfSxiLnByb3RvdHlwZS5zZXRRb3M9ZnVuY3Rpb24oYil7dGhpcy5faGVhZGVyLnFvcz1cIltvYmplY3QgT2JqZWN0XVwiPT1PYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoYik/YjphLlFvc1tiXX0sYi5wcm90b3R5cGUuc2V0RHVwPWZ1bmN0aW9uKGEpe3RoaXMuX2hlYWRlci5kdXA9YX0sYi5wcm90b3R5cGUuaXNEdXA9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5faGVhZGVyLmR1cH0sYi5wcm90b3R5cGUuZ2V0VHlwZT1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9oZWFkZXIudHlwZX0sYi5wcm90b3R5cGUuZ2V0UW9zPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2hlYWRlci5xb3N9LGIucHJvdG90eXBlLm1lc3NhZ2VMZW5ndGg9ZnVuY3Rpb24oKXtyZXR1cm4gMH0sYi5wcm90b3R5cGUud3JpdGVNZXNzYWdlPWZ1bmN0aW9uKGEpe30sYi5wcm90b3R5cGUucmVhZE1lc3NhZ2U9ZnVuY3Rpb24oYSxiKXt9LGIucHJvdG90eXBlLmluaXQ9ZnVuY3Rpb24oYSl7dmFyIGIsYyxkPXRoaXM7Zm9yKGMgaW4gYSlhLmhhc093blByb3BlcnR5KGMpJiYoYj1jLnJlcGxhY2UoL15cXHcvLGZ1bmN0aW9uKGEpe3ZhciBiPWEuY2hhckNvZGVBdCgwKTtyZXR1cm5cInNldFwiKyhiPj05Nz9TdHJpbmcuZnJvbUNoYXJDb2RlKC0zMyZiKTphKX0pKWluIGQmJihcInN0YXR1c1wiPT1jP2RbYl0oZGlzY29ubmVjdFN0YXR1c1thW2NdXT9kaXNjb25uZWN0U3RhdHVzW2FbY11dOmFbY10pOmRbYl0oYVtjXSkpfSxifSgpO2EuQmFzZU1lc3NhZ2U9Yjt2YXIgYz1mdW5jdGlvbihiKXtmdW5jdGlvbiBjKGMpe3N3aXRjaChiLmNhbGwodGhpcywwPT1hcmd1bWVudHMubGVuZ3RofHwzPT1hcmd1bWVudHMubGVuZ3RoP2EuVHlwZS5DT05ORUNUOmFyZ3VtZW50c1swXSksdGhpcy5fbmFtZT1cIkNvbm5lY3RNZXNzYWdlXCIsdGhpcy5DT05ORUNUX0hFQURFUl9TSVpFPTEyLHRoaXMucHJvdG9jb2xJZD1cIlJDbG91ZFwiLHRoaXMuYmluYXJ5SGVscGVyPW5ldyBhLkJpbmFyeUhlbHBlcix0aGlzLnByb3RvY29sVmVyc2lvbj0zLGFyZ3VtZW50cy5sZW5ndGgpe2Nhc2UgMDpjYXNlIDE6Y2FzZSAzOmlmKCFhcmd1bWVudHNbMF18fGFyZ3VtZW50c1swXS5sZW5ndGg+NjQpdGhyb3cgbmV3IEVycm9yKFwiQ29ubmVjdE1lc3NhZ2U6Q2xpZW50IElkIGNhbm5vdCBiZSBudWxsIGFuZCBtdXN0IGJlIGF0IG1vc3QgNjQgY2hhcmFjdGVycyBsb25nOiBcIithcmd1bWVudHNbMF0pO3RoaXMuY2xpZW50SWQ9YXJndW1lbnRzWzBdLHRoaXMuY2xlYW5TZXNzaW9uPWFyZ3VtZW50c1sxXSx0aGlzLmtlZXBBbGl2ZT1hcmd1bWVudHNbMl19fXJldHVybiBfX2V4dGVuZHMoYyxiKSxjLnByb3RvdHlwZS5tZXNzYWdlTGVuZ3RoPWZ1bmN0aW9uKCl7dmFyIGE9dGhpcy5iaW5hcnlIZWxwZXIudG9NUXR0U3RyaW5nKHRoaXMuY2xpZW50SWQpLmxlbmd0aDtyZXR1cm4gYSs9dGhpcy5iaW5hcnlIZWxwZXIudG9NUXR0U3RyaW5nKHRoaXMud2lsbFRvcGljKS5sZW5ndGgsYSs9dGhpcy5iaW5hcnlIZWxwZXIudG9NUXR0U3RyaW5nKHRoaXMud2lsbCkubGVuZ3RoLGErPXRoaXMuYmluYXJ5SGVscGVyLnRvTVF0dFN0cmluZyh0aGlzLmFwcElkKS5sZW5ndGgsKGErPXRoaXMuYmluYXJ5SGVscGVyLnRvTVF0dFN0cmluZyh0aGlzLnRva2VuKS5sZW5ndGgpK3RoaXMuQ09OTkVDVF9IRUFERVJfU0laRX0sYy5wcm90b3R5cGUucmVhZE1lc3NhZ2U9ZnVuY3Rpb24oYSl7dGhpcy5wcm90b2NvbElkPWEucmVhZFVURigpLHRoaXMucHJvdG9jb2xWZXJzaW9uPWEucmVhZEJ5dGUoKTt2YXIgYj1hLnJlYWRCeXRlKCk7aWYodGhpcy5oYXNBcHBJZD0oMTI4JmIpPjAsdGhpcy5oYXNUb2tlbj0oNjQmYik+MCx0aGlzLnJldGFpbldpbGw9KDMyJmIpPjAsdGhpcy53aWxsUW9zPWI+PjMmMyx0aGlzLmhhc1dpbGw9KDQmYik+MCx0aGlzLmNsZWFuU2Vzc2lvbj0oMzImYik+MCx0aGlzLmtlZXBBbGl2ZT0yNTYqYS5yZWFkKCkrYS5yZWFkKCksdGhpcy5jbGllbnRJZD1hLnJlYWRVVEYoKSx0aGlzLmhhc1dpbGwmJih0aGlzLndpbGxUb3BpYz1hLnJlYWRVVEYoKSx0aGlzLndpbGw9YS5yZWFkVVRGKCkpLHRoaXMuaGFzQXBwSWQpdHJ5e3RoaXMuYXBwSWQ9YS5yZWFkVVRGKCl9Y2F0Y2goYyl7dGhyb3cgbmV3IEVycm9yKGMpfWlmKHRoaXMuaGFzVG9rZW4pdHJ5e3RoaXMudG9rZW49YS5yZWFkVVRGKCl9Y2F0Y2goYyl7dGhyb3cgbmV3IEVycm9yKGMpfXJldHVybiBhfSxjLnByb3RvdHlwZS53cml0ZU1lc3NhZ2U9ZnVuY3Rpb24oYSl7dmFyIGI9dGhpcy5iaW5hcnlIZWxwZXIuY29udmVydFN0cmVhbShhKTtiLndyaXRlVVRGKHRoaXMucHJvdG9jb2xJZCksYi53cml0ZSh0aGlzLnByb3RvY29sVmVyc2lvbik7dmFyIGM9dGhpcy5jbGVhblNlc3Npb24/MjowO3JldHVybiBjfD10aGlzLmhhc1dpbGw/NDowLGN8PXRoaXMud2lsbFFvcz90aGlzLndpbGxRb3M+PjM6MCxjfD10aGlzLnJldGFpbldpbGw/MzI6MCxjfD10aGlzLmhhc1Rva2VuPzY0OjAsY3w9dGhpcy5oYXNBcHBJZD8xMjg6MCxiLndyaXRlKGMpLGIud3JpdGVDaGFyKHRoaXMua2VlcEFsaXZlKSxiLndyaXRlVVRGKHRoaXMuY2xpZW50SWQpLHRoaXMuaGFzV2lsbCYmKGIud3JpdGVVVEYodGhpcy53aWxsVG9waWMpLGIud3JpdGVVVEYodGhpcy53aWxsKSksdGhpcy5oYXNBcHBJZCYmYi53cml0ZVVURih0aGlzLmFwcElkKSx0aGlzLmhhc1Rva2VuJiZiLndyaXRlVVRGKHRoaXMudG9rZW4pLGJ9LGN9KGIpO2EuQ29ubmVjdE1lc3NhZ2U9Yzt2YXIgZD1mdW5jdGlvbihiKXtmdW5jdGlvbiBjKGMpe2IuY2FsbCh0aGlzLDA9PWFyZ3VtZW50cy5sZW5ndGg/YS5UeXBlLkNPTk5BQ0s6MT09YXJndW1lbnRzLmxlbmd0aD9hcmd1bWVudHNbMF1pbnN0YW5jZW9mIGEuSGVhZGVyP2FyZ3VtZW50c1swXTphLlR5cGUuQ09OTkFDSzpudWxsKSx0aGlzLl9uYW1lPVwiQ29ubkFja01lc3NhZ2VcIix0aGlzLk1FU1NBR0VfTEVOR1RIPTIsdGhpcy5iaW5hcnlIZWxwZXI9bmV3IGEuQmluYXJ5SGVscGVyO3ZhciBkPXRoaXM7c3dpdGNoKGFyZ3VtZW50cy5sZW5ndGgpe2Nhc2UgMDpjYXNlIDE6aWYoIShhcmd1bWVudHNbMF1pbnN0YW5jZW9mIGEuSGVhZGVyKSYmYXJndW1lbnRzWzBdaW4gYS5Db25uZWN0aW9uU3RhdGUpe2lmKG51bGw9PWFyZ3VtZW50c1swXSl0aHJvdyBuZXcgRXJyb3IoXCJDb25uQWNrTWVzc2FnZTpUaGUgc3RhdHVzIG9mIENvbm5Bc2tNZXNzYWdlIGNhbid0IGJlIG51bGxcIik7ZC5zZXRTdGF0dXMoYXJndW1lbnRzWzBdKX19fXJldHVybiBfX2V4dGVuZHMoYyxiKSxjLnByb3RvdHlwZS5tZXNzYWdlTGVuZ3RoPWZ1bmN0aW9uKCl7dmFyIGE9dGhpcy5NRVNTQUdFX0xFTkdUSDtyZXR1cm4gdGhpcy51c2VySWQmJihhKz10aGlzLmJpbmFyeUhlbHBlci50b01RdHRTdHJpbmcodGhpcy51c2VySWQpLmxlbmd0aCksYX0sYy5wcm90b3R5cGUucmVhZE1lc3NhZ2U9ZnVuY3Rpb24oYSxiKXthLnJlYWQoKTt2YXIgYz0rYS5yZWFkKCk7aWYoIShjPj0wJiZjPD0xMikpdGhyb3cgbmV3IEVycm9yKFwiVW5zdXBwb3J0ZWQgQ09OTkFDSyBjb2RlOlwiK2MpO2lmKHRoaXMuc2V0U3RhdHVzKGMpLGI+dGhpcy5NRVNTQUdFX0xFTkdUSCl7dGhpcy5zZXRVc2VySWQoYS5yZWFkVVRGKCkpO3ZhciBkPShhLnJlYWRVVEYoKSxhLnJlYWRMb25nKCkpO3RoaXMuc2V0VGltZXN0YW1wKGQpfX0sYy5wcm90b3R5cGUud3JpdGVNZXNzYWdlPWZ1bmN0aW9uKGEpe3ZhciBiPXRoaXMuYmluYXJ5SGVscGVyLmNvbnZlcnRTdHJlYW0oYSk7c3dpdGNoKGIud3JpdGUoMTI4KSwrc3RhdHVzKXtjYXNlIDA6Y2FzZSAxOmNhc2UgMjpjYXNlIDU6Y2FzZSA2OmIud3JpdGUoK3N0YXR1cyk7YnJlYWs7Y2FzZSAzOmNhc2UgNDpiLndyaXRlKDMpO2JyZWFrO2RlZmF1bHQ6dGhyb3cgbmV3IEVycm9yKFwiVW5zdXBwb3J0ZWQgQ09OTkFDSyBjb2RlOlwiK3N0YXR1cyl9cmV0dXJuIHRoaXMudXNlcklkJiZiLndyaXRlVVRGKHRoaXMudXNlcklkKSxifSxjLnByb3RvdHlwZS5zZXRTdGF0dXM9ZnVuY3Rpb24oYSl7dGhpcy5zdGF0dXM9YX0sYy5wcm90b3R5cGUuc2V0VXNlcklkPWZ1bmN0aW9uKGEpe3RoaXMudXNlcklkPWF9LGMucHJvdG90eXBlLmdldFN0YXR1cz1mdW5jdGlvbigpe3JldHVybiB0aGlzLnN0YXR1c30sYy5wcm90b3R5cGUuZ2V0VXNlcklkPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMudXNlcklkfSxjLnByb3RvdHlwZS5zZXRUaW1lc3RhbXA9ZnVuY3Rpb24oYSl7dGhpcy50aW1lc3RyYXA9YX0sYy5wcm90b3R5cGUuZ2V0VGltZXN0YW1wPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMudGltZXN0cmFwfSxjfShiKTthLkNvbm5BY2tNZXNzYWdlPWQ7dmFyIGU9ZnVuY3Rpb24oYil7ZnVuY3Rpb24gYyhjKXtiLmNhbGwodGhpcyxjIGluc3RhbmNlb2YgYS5IZWFkZXI/YzphLlR5cGUuRElTQ09OTkVDVCksdGhpcy5fbmFtZT1cIkRpc2Nvbm5lY3RNZXNzYWdlXCIsdGhpcy5NRVNTQUdFX0xFTkdUSD0yLHRoaXMuYmluYXJ5SGVscGVyPW5ldyBhLkJpbmFyeUhlbHBlcixjIGluc3RhbmNlb2YgYS5IZWFkZXJ8fGMgaW4gYS5Db25uZWN0aW9uU3RhdHVzJiYodGhpcy5zdGF0dXM9Yyl9cmV0dXJuIF9fZXh0ZW5kcyhjLGIpLGMucHJvdG90eXBlLm1lc3NhZ2VMZW5ndGg9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5NRVNTQUdFX0xFTkdUSH0sYy5wcm90b3R5cGUucmVhZE1lc3NhZ2U9ZnVuY3Rpb24oYSl7YS5yZWFkKCk7dmFyIGI9K2EucmVhZCgpO2lmKCEoYj49MCYmYjw9NSkpdGhyb3cgbmV3IEVycm9yKFwiVW5zdXBwb3J0ZWQgQ09OTkFDSyBjb2RlOlwiK2IpO3RoaXMuc2V0U3RhdHVzKGRpc2Nvbm5lY3RTdGF0dXNbYl0/ZGlzY29ubmVjdFN0YXR1c1tiXTpiKX0sYy5wcm90b3R5cGUud3JpdGVNZXNzYWdlPWZ1bmN0aW9uKGEpe3ZhciBiPXRoaXMuYmluYXJ5SGVscGVyLmNvbnZlcnRTdHJlYW0oYSk7aWYoYi53cml0ZSgwKSwhKCtzdGF0dXM+PTEmJitzdGF0dXM8PTMpKXRocm93IG5ldyBFcnJvcihcIlVuc3VwcG9ydGVkIENPTk5BQ0sgY29kZTpcIitzdGF0dXMpO2Iud3JpdGUoK3N0YXR1cy0xKX0sYy5wcm90b3R5cGUuc2V0U3RhdHVzPWZ1bmN0aW9uKGEpe3RoaXMuc3RhdHVzPWF9LGMucHJvdG90eXBlLmdldFN0YXR1cz1mdW5jdGlvbigpe3JldHVybiB0aGlzLnN0YXR1c30sY30oYik7YS5EaXNjb25uZWN0TWVzc2FnZT1lO3ZhciBmPWZ1bmN0aW9uKGIpe2Z1bmN0aW9uIGMoYyl7Yi5jYWxsKHRoaXMsYyYmYyBpbnN0YW5jZW9mIGEuSGVhZGVyP2M6YS5UeXBlLlBJTkdSRVEpLHRoaXMuX25hbWU9XCJQaW5nUmVxTWVzc2FnZVwifXJldHVybiBfX2V4dGVuZHMoYyxiKSxjfShiKTthLlBpbmdSZXFNZXNzYWdlPWY7dmFyIGc9ZnVuY3Rpb24oYil7ZnVuY3Rpb24gYyhjKXtiLmNhbGwodGhpcyxjJiZjIGluc3RhbmNlb2YgYS5IZWFkZXI/YzphLlR5cGUuUElOR1JFU1ApLHRoaXMuX25hbWU9XCJQaW5nUmVzcE1lc3NhZ2VcIn1yZXR1cm4gX19leHRlbmRzKGMsYiksY30oYik7YS5QaW5nUmVzcE1lc3NhZ2U9Zzt2YXIgaD1mdW5jdGlvbihiKXtmdW5jdGlvbiBjKGMpe2IuY2FsbCh0aGlzLGMpLHRoaXMuX25hbWU9XCJSZXRyeWFibGVNZXNzYWdlXCIsdGhpcy5iaW5hcnlIZWxwZXI9bmV3IGEuQmluYXJ5SGVscGVyfXJldHVybiBfX2V4dGVuZHMoYyxiKSxjLnByb3RvdHlwZS5tZXNzYWdlTGVuZ3RoPWZ1bmN0aW9uKCl7cmV0dXJuIDJ9LGMucHJvdG90eXBlLndyaXRlTWVzc2FnZT1mdW5jdGlvbihhKXt2YXIgYj10aGlzLmJpbmFyeUhlbHBlci5jb252ZXJ0U3RyZWFtKGEpLGM9dGhpcy5nZXRNZXNzYWdlSWQoKSxkPTI1NSZjLGU9KDY1MjgwJmMpPj44O3JldHVybiBiLndyaXRlKGUpLGIud3JpdGUoZCksYn0sYy5wcm90b3R5cGUucmVhZE1lc3NhZ2U9ZnVuY3Rpb24oYSxiKXt2YXIgYz0yNTYqYS5yZWFkKCkrYS5yZWFkKCk7dGhpcy5zZXRNZXNzYWdlSWQocGFyc2VJbnQoYywxMCkpfSxjLnByb3RvdHlwZS5zZXRNZXNzYWdlSWQ9ZnVuY3Rpb24oYSl7dGhpcy5tZXNzYWdlSWQ9YX0sYy5wcm90b3R5cGUuZ2V0TWVzc2FnZUlkPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMubWVzc2FnZUlkfSxjfShiKTthLlJldHJ5YWJsZU1lc3NhZ2U9aDt2YXIgaT1mdW5jdGlvbihiKXtmdW5jdGlvbiBjKGMpe2IuY2FsbCh0aGlzLGMgaW5zdGFuY2VvZiBhLkhlYWRlcj9jOmEuVHlwZS5QVUJBQ0spLHRoaXMubXNnTGVuPTIsdGhpcy5kYXRlPTAsdGhpcy5taWxsaXNlY29uZD0wLHRoaXMudGltZXN0YW1wPTAsdGhpcy5iaW5hcnlIZWxwZXI9bmV3IGEuQmluYXJ5SGVscGVyLHRoaXMuX25hbWU9XCJQdWJBY2tNZXNzYWdlXCIsYyBpbnN0YW5jZW9mIGEuSGVhZGVyfHxiLnByb3RvdHlwZS5zZXRNZXNzYWdlSWQuY2FsbCh0aGlzLGMpfXJldHVybiBfX2V4dGVuZHMoYyxiKSxjLnByb3RvdHlwZS5tZXNzYWdlTGVuZ3RoPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMubXNnTGVufSxjLnByb3RvdHlwZS53cml0ZU1lc3NhZ2U9ZnVuY3Rpb24oYSl7dmFyIGI9dGhpcy5iaW5hcnlIZWxwZXIuY29udmVydFN0cmVhbShhKTtoLnByb3RvdHlwZS53cml0ZU1lc3NhZ2UuY2FsbCh0aGlzLGIpfSxjLnByb3RvdHlwZS5yZWFkTWVzc2FnZT1mdW5jdGlvbihhLGIpe2gucHJvdG90eXBlLnJlYWRNZXNzYWdlLmNhbGwodGhpcyxhKSx0aGlzLmRhdGU9YS5yZWFkSW50KCksdGhpcy5zdGF0dXM9MjU2KmEucmVhZCgpK2EucmVhZCgpLHRoaXMubWlsbGlzZWNvbmQ9MjU2KmEucmVhZCgpK2EucmVhZCgpLHRoaXMudGltZXN0YW1wPTFlMyp0aGlzLmRhdGUrdGhpcy5taWxsaXNlY29uZCx0aGlzLm1lc3NhZ2VVSWQ9YS5yZWFkVVRGKCl9LGMucHJvdG90eXBlLnNldFN0YXR1cz1mdW5jdGlvbihhKXt0aGlzLnN0YXR1cz1hfSxjLnByb3RvdHlwZS5zZXRUaW1lc3RhbXA9ZnVuY3Rpb24oYSl7dGhpcy50aW1lc3RhbXA9YX0sYy5wcm90b3R5cGUuc2V0TWVzc2FnZVVJZD1mdW5jdGlvbihhKXt0aGlzLm1lc3NhZ2VVSWQ9YX0sYy5wcm90b3R5cGUuZ2V0U3RhdHVzPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuc3RhdHVzfSxjLnByb3RvdHlwZS5nZXREYXRlPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZGF0ZX0sYy5wcm90b3R5cGUuZ2V0VGltZXN0YW1wPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMudGltZXN0YW1wfSxjLnByb3RvdHlwZS5nZXRNZXNzYWdlVUlkPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMubWVzc2FnZVVJZH0sY30oaCk7YS5QdWJBY2tNZXNzYWdlPWk7dmFyIGo9ZnVuY3Rpb24oYil7ZnVuY3Rpb24gYyhjLGQsZSl7Yi5jYWxsKHRoaXMsMT09YXJndW1lbnRzLmxlbmd0aCYmYyBpbnN0YW5jZW9mIGEuSGVhZGVyP2M6Mz09YXJndW1lbnRzLmxlbmd0aD9hLlR5cGUuUFVCTElTSDowKSx0aGlzLl9uYW1lPVwiUHVibGlzaE1lc3NhZ2VcIix0aGlzLmJpbmFyeUhlbHBlcj1uZXcgYS5CaW5hcnlIZWxwZXIsdGhpcy5zeW5jTXNnPSExLDM9PWFyZ3VtZW50cy5sZW5ndGgmJih0aGlzLnRvcGljPWMsdGhpcy50YXJnZXRJZD1lLHRoaXMuZGF0YT1cInN0cmluZ1wiPT10eXBlb2YgZD90aGlzLmJpbmFyeUhlbHBlci50b01RdHRTdHJpbmcoZCk6ZCl9cmV0dXJuIF9fZXh0ZW5kcyhjLGIpLGMucHJvdG90eXBlLm1lc3NhZ2VMZW5ndGg9ZnVuY3Rpb24oKXt2YXIgYT0xMDtyZXR1cm4gYSs9dGhpcy5iaW5hcnlIZWxwZXIudG9NUXR0U3RyaW5nKHRoaXMudG9waWMpLmxlbmd0aCxhKz10aGlzLmJpbmFyeUhlbHBlci50b01RdHRTdHJpbmcodGhpcy50YXJnZXRJZCkubGVuZ3RoLGErPXRoaXMuZGF0YS5sZW5ndGh9LGMucHJvdG90eXBlLndyaXRlTWVzc2FnZT1mdW5jdGlvbihhKXt2YXIgYj10aGlzLmJpbmFyeUhlbHBlci5jb252ZXJ0U3RyZWFtKGEpO2Iud3JpdGVVVEYodGhpcy50b3BpYyksYi53cml0ZVVURih0aGlzLnRhcmdldElkKSxoLnByb3RvdHlwZS53cml0ZU1lc3NhZ2UuYXBwbHkodGhpcyxhcmd1bWVudHMpLGIud3JpdGUodGhpcy5kYXRhKX0sYy5wcm90b3R5cGUucmVhZE1lc3NhZ2U9ZnVuY3Rpb24oYSxiKXt2YXIgYz02O3RoaXMuZGF0ZT1hLnJlYWRJbnQoKSx0aGlzLnRvcGljPWEucmVhZFVURigpLGMrPXRoaXMuYmluYXJ5SGVscGVyLnRvTVF0dFN0cmluZyh0aGlzLnRvcGljKS5sZW5ndGgsdGhpcy50YXJnZXRJZD1hLnJlYWRVVEYoKSxjKz10aGlzLmJpbmFyeUhlbHBlci50b01RdHRTdHJpbmcodGhpcy50YXJnZXRJZCkubGVuZ3RoLGgucHJvdG90eXBlLnJlYWRNZXNzYWdlLmFwcGx5KHRoaXMsYXJndW1lbnRzKSx0aGlzLmRhdGE9bmV3IEFycmF5KGItYyksdGhpcy5kYXRhPWEucmVhZCh0aGlzLmRhdGEpfSxjLnByb3RvdHlwZS5zZXRUb3BpYz1mdW5jdGlvbihhKXt0aGlzLnRvcGljPWF9LGMucHJvdG90eXBlLnNldERhdGE9ZnVuY3Rpb24oYSl7dGhpcy5kYXRhPWF9LGMucHJvdG90eXBlLnNldFRhcmdldElkPWZ1bmN0aW9uKGEpe3RoaXMudGFyZ2V0SWQ9YX0sYy5wcm90b3R5cGUuc2V0RGF0ZT1mdW5jdGlvbihhKXt0aGlzLmRhdGU9YX0sYy5wcm90b3R5cGUuc2V0U3luY01zZz1mdW5jdGlvbihhKXt0aGlzLnN5bmNNc2c9YX0sYy5wcm90b3R5cGUuZ2V0U3luY01zZz1mdW5jdGlvbigpe3JldHVybiB0aGlzLnN5bmNNc2d9LGMucHJvdG90eXBlLmdldFRvcGljPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMudG9waWN9LGMucHJvdG90eXBlLmdldERhdGE9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5kYXRhfSxjLnByb3RvdHlwZS5nZXRUYXJnZXRJZD1mdW5jdGlvbigpe3JldHVybiB0aGlzLnRhcmdldElkfSxjLnByb3RvdHlwZS5nZXREYXRlPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZGF0ZX0sY30oaCk7YS5QdWJsaXNoTWVzc2FnZT1qO3ZhciBrPWZ1bmN0aW9uKGIpe2Z1bmN0aW9uIGMoYyxkLGUpe2IuY2FsbCh0aGlzLGMgaW5zdGFuY2VvZiBhLkhlYWRlcj9jOjM9PWFyZ3VtZW50cy5sZW5ndGg/YS5UeXBlLlFVRVJZOm51bGwpLHRoaXMuYmluYXJ5SGVscGVyPW5ldyBhLkJpbmFyeUhlbHBlcix0aGlzLl9uYW1lPVwiUXVlcnlNZXNzYWdlXCIsMz09YXJndW1lbnRzLmxlbmd0aCYmKHRoaXMuZGF0YT1cInN0cmluZ1wiPT10eXBlb2YgZD90aGlzLmJpbmFyeUhlbHBlci50b01RdHRTdHJpbmcoZCk6ZCx0aGlzLnRvcGljPWMsdGhpcy50YXJnZXRJZD1lKX1yZXR1cm4gX19leHRlbmRzKGMsYiksYy5wcm90b3R5cGUubWVzc2FnZUxlbmd0aD1mdW5jdGlvbigpe3ZhciBhPTA7cmV0dXJuIGErPXRoaXMuYmluYXJ5SGVscGVyLnRvTVF0dFN0cmluZyh0aGlzLnRvcGljKS5sZW5ndGgsYSs9dGhpcy5iaW5hcnlIZWxwZXIudG9NUXR0U3RyaW5nKHRoaXMudGFyZ2V0SWQpLmxlbmd0aCxhKz0yLGErPXRoaXMuZGF0YS5sZW5ndGh9LGMucHJvdG90eXBlLndyaXRlTWVzc2FnZT1mdW5jdGlvbihhKXt2YXIgYj10aGlzLmJpbmFyeUhlbHBlci5jb252ZXJ0U3RyZWFtKGEpO2Iud3JpdGVVVEYodGhpcy50b3BpYyksYi53cml0ZVVURih0aGlzLnRhcmdldElkKSxoLnByb3RvdHlwZS53cml0ZU1lc3NhZ2UuY2FsbCh0aGlzLGIpLGIud3JpdGUodGhpcy5kYXRhKX0sYy5wcm90b3R5cGUucmVhZE1lc3NhZ2U9ZnVuY3Rpb24oYSxiKXt2YXIgYz0wO3RoaXMudG9waWM9YS5yZWFkVVRGKCksdGhpcy50YXJnZXRJZD1hLnJlYWRVVEYoKSxjKz10aGlzLmJpbmFyeUhlbHBlci50b01RdHRTdHJpbmcodGhpcy50b3BpYykubGVuZ3RoLGMrPXRoaXMuYmluYXJ5SGVscGVyLnRvTVF0dFN0cmluZyh0aGlzLnRhcmdldElkKS5sZW5ndGgsdGhpcy5yZWFkTWVzc2FnZS5hcHBseSh0aGlzLGFyZ3VtZW50cyksYys9Mix0aGlzLmRhdGE9bmV3IEFycmF5KGItYyksYS5yZWFkKHRoaXMuZGF0YSl9LGMucHJvdG90eXBlLnNldFRvcGljPWZ1bmN0aW9uKGEpe3RoaXMudG9waWM9YX0sYy5wcm90b3R5cGUuc2V0RGF0YT1mdW5jdGlvbihhKXt0aGlzLmRhdGE9YX0sYy5wcm90b3R5cGUuc2V0VGFyZ2V0SWQ9ZnVuY3Rpb24oYSl7dGhpcy50YXJnZXRJZD1hfSxjLnByb3RvdHlwZS5nZXRUb3BpYz1mdW5jdGlvbigpe3JldHVybiB0aGlzLnRvcGljfSxjLnByb3RvdHlwZS5nZXREYXRhPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZGF0YX0sYy5wcm90b3R5cGUuZ2V0VGFyZ2V0SWQ9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy50YXJnZXRJZH0sY30oaCk7YS5RdWVyeU1lc3NhZ2U9azt2YXIgbD1mdW5jdGlvbihiKXtmdW5jdGlvbiBjKGMpe2IuY2FsbCh0aGlzLGMgaW5zdGFuY2VvZiBhLkhlYWRlcj9jOmEuVHlwZS5RVUVSWUNPTiksdGhpcy5fbmFtZT1cIlF1ZXJ5Q29uTWVzc2FnZVwiLGMgaW5zdGFuY2VvZiBhLkhlYWRlcnx8Yi5wcm90b3R5cGUuc2V0TWVzc2FnZUlkLmNhbGwodGhpcyxjKX1yZXR1cm4gX19leHRlbmRzKGMsYiksY30oaCk7YS5RdWVyeUNvbk1lc3NhZ2U9bDt2YXIgbT1mdW5jdGlvbihiKXtmdW5jdGlvbiBjKGMpe2IuY2FsbCh0aGlzLGMpLHRoaXMuX25hbWU9XCJRdWVyeUFja01lc3NhZ2VcIix0aGlzLmJpbmFyeUhlbHBlcj1uZXcgYS5CaW5hcnlIZWxwZXJ9cmV0dXJuIF9fZXh0ZW5kcyhjLGIpLGMucHJvdG90eXBlLnJlYWRNZXNzYWdlPWZ1bmN0aW9uKGEsYil7aC5wcm90b3R5cGUucmVhZE1lc3NhZ2UuY2FsbCh0aGlzLGEpLHRoaXMuZGF0ZT1hLnJlYWRJbnQoKSx0aGlzLnNldFN0YXR1cygyNTYqYS5yZWFkKCkrYS5yZWFkKCkpLGI+MCYmKHRoaXMuZGF0YT1uZXcgQXJyYXkoYi04KSx0aGlzLmRhdGE9YS5yZWFkKHRoaXMuZGF0YSkpfSxjLnByb3RvdHlwZS5nZXREYXRhPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZGF0YX0sYy5wcm90b3R5cGUuZ2V0U3RhdHVzPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuc3RhdHVzfSxjLnByb3RvdHlwZS5nZXREYXRlPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZGF0ZX0sYy5wcm90b3R5cGUuc2V0RGF0ZT1mdW5jdGlvbihhKXt0aGlzLmRhdGU9YX0sYy5wcm90b3R5cGUuc2V0U3RhdHVzPWZ1bmN0aW9uKGEpe3RoaXMuc3RhdHVzPWF9LGMucHJvdG90eXBlLnNldERhdGE9ZnVuY3Rpb24oYSl7dGhpcy5kYXRhPWF9LGN9KGgpO2EuUXVlcnlBY2tNZXNzYWdlPW19KFJvbmdJTUxpYnx8KFJvbmdJTUxpYj17fSkpO3ZhciBSb25nSU1MaWI7IWZ1bmN0aW9uKGEpe3ZhciBiPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gYihiKXt2YXIgYz1uZXcgYS5CaW5hcnlIZWxwZXI7dGhpcy5vdXQ9Yy5jb252ZXJ0U3RyZWFtKGIpfXJldHVybiBiLnByb3RvdHlwZS53cml0ZU1lc3NhZ2U9ZnVuY3Rpb24oYil7YiBpbnN0YW5jZW9mIGEuQmFzZU1lc3NhZ2UmJmIud3JpdGUodGhpcy5vdXQpfSxifSgpO2EuTWVzc2FnZU91dHB1dFN0cmVhbT1iO3ZhciBjPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gYihiLGMpe2lmKGMpdGhpcy5mbGFncz1iLmhlYWRlckNvZGU7ZWxzZXt2YXIgZD0obmV3IGEuQmluYXJ5SGVscGVyKS5jb252ZXJ0U3RyZWFtKGIpO3RoaXMuZmxhZ3M9ZC5yZWFkQnl0ZSgpLHRoaXMuX2luPWR9dGhpcy5oZWFkZXI9bmV3IGEuSGVhZGVyKHRoaXMuZmxhZ3MpLHRoaXMuaXNQb2xsaW5nPWMsdGhpcy5Jbj1ifXJldHVybiBiLnByb3RvdHlwZS5yZWFkTWVzc2FnZT1mdW5jdGlvbigpe3N3aXRjaCh0aGlzLmhlYWRlci5nZXRUeXBlKCkpe2Nhc2UgMTp0aGlzLm1zZz1uZXcgYS5Db25uZWN0TWVzc2FnZSh0aGlzLmhlYWRlcik7YnJlYWs7Y2FzZSAyOnRoaXMubXNnPW5ldyBhLkNvbm5BY2tNZXNzYWdlKHRoaXMuaGVhZGVyKTticmVhaztjYXNlIDM6dGhpcy5tc2c9bmV3IGEuUHVibGlzaE1lc3NhZ2UodGhpcy5oZWFkZXIpLHRoaXMubXNnLnNldFN5bmNNc2codGhpcy5oZWFkZXIuZ2V0U3luY01zZygpKTticmVhaztjYXNlIDQ6dGhpcy5tc2c9bmV3IGEuUHViQWNrTWVzc2FnZSh0aGlzLmhlYWRlcik7YnJlYWs7Y2FzZSA1OnRoaXMubXNnPW5ldyBhLlF1ZXJ5TWVzc2FnZSh0aGlzLmhlYWRlcik7YnJlYWs7Y2FzZSA2OnRoaXMubXNnPW5ldyBhLlF1ZXJ5QWNrTWVzc2FnZSh0aGlzLmhlYWRlcik7YnJlYWs7Y2FzZSA3OnRoaXMubXNnPW5ldyBhLlF1ZXJ5Q29uTWVzc2FnZSh0aGlzLmhlYWRlcik7YnJlYWs7Y2FzZSA5OmNhc2UgMTE6Y2FzZSAxMzp0aGlzLm1zZz1uZXcgYS5QaW5nUmVzcE1lc3NhZ2UodGhpcy5oZWFkZXIpO2JyZWFrO2Nhc2UgODpjYXNlIDEwOmNhc2UgMTI6dGhpcy5tc2c9bmV3IGEuUGluZ1JlcU1lc3NhZ2UodGhpcy5oZWFkZXIpO2JyZWFrO2Nhc2UgMTQ6dGhpcy5tc2c9bmV3IGEuRGlzY29ubmVjdE1lc3NhZ2UodGhpcy5oZWFkZXIpO2JyZWFrO2RlZmF1bHQ6dGhyb3cgbmV3IEVycm9yKFwiTm8gc3VwcG9ydCBmb3IgZGVzZXJpYWxpemluZyBcIit0aGlzLmhlYWRlci5nZXRUeXBlKCkrXCIgbWVzc2FnZXNcIil9cmV0dXJuIHRoaXMuaXNQb2xsaW5nP3RoaXMubXNnLmluaXQodGhpcy5Jbik6dGhpcy5tc2cucmVhZCh0aGlzLl9pbix0aGlzLkluLmxlbmd0aC0xKSx0aGlzLm1zZ30sYn0oKTthLk1lc3NhZ2VJbnB1dFN0cmVhbT1jO3ZhciBkPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gYihiLGMsZCxlKXt0aGlzLnJldGFpbj0hMSx0aGlzLnFvcz1hLlFvcy5BVF9MRUFTVF9PTkNFLHRoaXMuZHVwPSExLHRoaXMuc3luY01zZz0hMSxiJiYrYj09YiYmMT09YXJndW1lbnRzLmxlbmd0aD8odGhpcy5yZXRhaW49KDEmYik+MCx0aGlzLnFvcz0oNiZiKT4+MSx0aGlzLmR1cD0oOCZiKT4wLHRoaXMudHlwZT1iPj40JjE1LHRoaXMuc3luY01zZz04PT0oOCZiKSk6KHRoaXMudHlwZT1iLHRoaXMucmV0YWluPWMsdGhpcy5xb3M9ZCx0aGlzLmR1cD1lKX1yZXR1cm4gYi5wcm90b3R5cGUuZ2V0U3luY01zZz1mdW5jdGlvbigpe3JldHVybiB0aGlzLnN5bmNNc2d9LGIucHJvdG90eXBlLmdldFR5cGU9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy50eXBlfSxiLnByb3RvdHlwZS5lbmNvZGU9ZnVuY3Rpb24oKXt2YXIgYj10aGlzO3N3aXRjaCh0aGlzLnFvcyl7Y2FzZSBhLlFvc1swXTpiLnFvcz1hLlFvcy5BVF9NT1NUX09OQ0U7YnJlYWs7Y2FzZSBhLlFvc1sxXTpiLnFvcz1hLlFvcy5BVF9MRUFTVF9PTkNFO2JyZWFrO2Nhc2UgYS5Rb3NbMl06Yi5xb3M9YS5Rb3MuRVhBQ1RMWV9PTkNFO2JyZWFrO2Nhc2UgYS5Rb3NbM106Yi5xb3M9YS5Rb3MuREVGQVVMVH12YXIgYz10aGlzLnR5cGU8PDQ7cmV0dXJuIGN8PXRoaXMucmV0YWluPzE6MCxjfD10aGlzLnFvczw8MSxjfD10aGlzLmR1cD84OjB9LGIucHJvdG90eXBlLnRvU3RyaW5nPWZ1bmN0aW9uKCl7cmV0dXJuXCJIZWFkZXIgW3R5cGU9XCIrdGhpcy50eXBlK1wiLHJldGFpbj1cIit0aGlzLnJldGFpbitcIixxb3M9XCIrdGhpcy5xb3MrXCIsZHVwPVwiK3RoaXMuZHVwK1wiXVwifSxifSgpO2EuSGVhZGVyPWQ7dmFyIGU9ZnVuY3Rpb24oKXtmdW5jdGlvbiBhKCl7fXJldHVybiBhLnByb3RvdHlwZS53cml0ZVVURj1mdW5jdGlvbihhLGIpe2Zvcih2YXIgYz1bXSxkPTAsZT0wLGY9YS5sZW5ndGg7ZTxmO2UrKyl7dmFyIGc9YS5jaGFyQ29kZUF0KGUpO2c+PTAmJmc8PTEyNz8oZCs9MSxjLnB1c2goZykpOmc+PTEyOCYmZzw9MjA0Nz8oZCs9MixjLnB1c2goMTkyfDMxJmc+PjYpLGMucHVzaCgxMjh8NjMmZykpOmc+PTIwNDgmJmc8PTY1NTM1JiYoZCs9MyxjLnB1c2goMjI0fDE1Jmc+PjEyKSxjLnB1c2goMTI4fDYzJmc+PjYpLGMucHVzaCgxMjh8NjMmZykpfWZvcih2YXIgZT0wLGY9Yy5sZW5ndGg7ZTxmO2UrKyljW2VdPjI1NSYmKGNbZV0mPTI1NSk7cmV0dXJuIGI/YzpkPD0yNTU/WzAsZF0uY29uY2F0KGMpOltkPj44LDI1NSZkXS5jb25jYXQoYyl9LGEucHJvdG90eXBlLnJlYWRVVEY9ZnVuY3Rpb24oYSl7aWYoXCJbb2JqZWN0IFN0cmluZ11cIj09T2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGEpKXJldHVybiBhO2Zvcih2YXIgYj1cIlwiLGM9YSxkPTAsZT1jLmxlbmd0aDtkPGU7ZCsrKXtjW2RdPDAmJihjW2RdKz0yNTYpO3ZhciBmPWNbZF0udG9TdHJpbmcoMiksZz1mLm1hdGNoKC9eMSs/KD89MCkvKTtpZihnJiY4PT1mLmxlbmd0aCl7Zm9yKHZhciBoPWdbMF0ubGVuZ3RoLGk9XCJcIixqPTA7ajxoO2orKylpKz1jW2orZF0udG9TdHJpbmcoMikuc2xpY2UoMik7Yis9U3RyaW5nLmZyb21DaGFyQ29kZShwYXJzZUludChpLDIpKSxkKz1oLTF9ZWxzZSBiKz1TdHJpbmcuZnJvbUNoYXJDb2RlKGNbZF0pfXJldHVybiBifSxhLnByb3RvdHlwZS5jb252ZXJ0U3RyZWFtPWZ1bmN0aW9uKGEpe3JldHVybiBhIGluc3RhbmNlb2YgZj9hOm5ldyBmKGEpfSxhLnByb3RvdHlwZS50b01RdHRTdHJpbmc9ZnVuY3Rpb24oYSl7cmV0dXJuIHRoaXMud3JpdGVVVEYoYSl9LGF9KCk7YS5CaW5hcnlIZWxwZXI9ZTt2YXIgZj1mdW5jdGlvbigpe2Z1bmN0aW9uIGEoYSl7dGhpcy5wb3NpdGlvbj0wLHRoaXMud3JpdGVuPTAsdGhpcy5wb29sTGVuPTAsdGhpcy5iaW5hcnlIZWxwZXI9bmV3IGUsdGhpcy5wb29sPWEsdGhpcy5wb29sTGVuPWEubGVuZ3RofXJldHVybiBhLnByb3RvdHlwZS5jaGVjaz1mdW5jdGlvbigpe3JldHVybiB0aGlzLnBvc2l0aW9uPj10aGlzLnBvb2wubGVuZ3RofSxhLnByb3RvdHlwZS5yZWFkSW50PWZ1bmN0aW9uKCl7aWYodGhpcy5jaGVjaygpKXJldHVybi0xO2Zvcih2YXIgYT1cIlwiLGI9MDtiPDQ7YisrKXt2YXIgYz10aGlzLnBvb2xbdGhpcy5wb3NpdGlvbisrXS50b1N0cmluZygxNik7MT09Yy5sZW5ndGgmJihjPVwiMFwiK2MpLGErPWMudG9TdHJpbmcoMTYpfXJldHVybiBwYXJzZUludChhLDE2KX0sYS5wcm90b3R5cGUucmVhZExvbmc9ZnVuY3Rpb24oKXtpZih0aGlzLmNoZWNrKCkpcmV0dXJuLTE7Zm9yKHZhciBhPVwiXCIsYj0wO2I8ODtiKyspe3ZhciBjPXRoaXMucG9vbFt0aGlzLnBvc2l0aW9uKytdLnRvU3RyaW5nKDE2KTsxPT1jLmxlbmd0aCYmKGM9XCIwXCIrYyksYSs9Y31yZXR1cm4gcGFyc2VJbnQoYSwxNil9LGEucHJvdG90eXBlLnJlYWRUaW1lc3RhbXA9ZnVuY3Rpb24oKXtpZih0aGlzLmNoZWNrKCkpcmV0dXJuLTE7Zm9yKHZhciBhPVwiXCIsYj0wO2I8ODtiKyspYSs9dGhpcy5wb29sW3RoaXMucG9zaXRpb24rK10udG9TdHJpbmcoMTYpO3JldHVybiBhPWEuc3Vic3RyaW5nKDIsOCkscGFyc2VJbnQoYSwxNil9LGEucHJvdG90eXBlLnJlYWRVVEY9ZnVuY3Rpb24oKXtpZih0aGlzLmNoZWNrKCkpcmV0dXJuLTE7dmFyIGE9dGhpcy5yZWFkQnl0ZSgpPDw4fHRoaXMucmVhZEJ5dGUoKTtyZXR1cm4gdGhpcy5iaW5hcnlIZWxwZXIucmVhZFVURih0aGlzLnBvb2wuc3ViYXJyYXkodGhpcy5wb3NpdGlvbix0aGlzLnBvc2l0aW9uKz1hKSl9LGEucHJvdG90eXBlLnJlYWRCeXRlPWZ1bmN0aW9uKCl7aWYodGhpcy5jaGVjaygpKXJldHVybi0xO3ZhciBhPXRoaXMucG9vbFt0aGlzLnBvc2l0aW9uKytdO3JldHVybiBhPjI1NSYmKGEmPTI1NSksYX0sYS5wcm90b3R5cGUucmVhZD1mdW5jdGlvbihhKXtyZXR1cm4gYT90aGlzLnBvb2wuc3ViYXJyYXkodGhpcy5wb3NpdGlvbix0aGlzLnBvb2xMZW4pOnRoaXMucmVhZEJ5dGUoKX0sYS5wcm90b3R5cGUud3JpdGU9ZnVuY3Rpb24oYSl7dmFyIGI9YTtyZXR1cm5cIltvYmplY3QgYXJyYXldXCI9PU9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChiKS50b0xvd2VyQ2FzZSgpP1tdLnB1c2guYXBwbHkodGhpcy5wb29sLGIpOitiPT1iJiYoYj4yNTUmJihiJj0yNTUpLHRoaXMucG9vbC5wdXNoKGIpLHRoaXMud3JpdGVuKyspLGJ9LGEucHJvdG90eXBlLndyaXRlQ2hhcj1mdW5jdGlvbihhKXtpZigrYSE9YSl0aHJvdyBuZXcgRXJyb3IoXCJ3cml0ZUNoYXI6YXJndW1lbnRzIHR5cGUgaXMgZXJyb3JcIik7dGhpcy53cml0ZShhPj44JjI1NSksdGhpcy53cml0ZSgyNTUmYSksdGhpcy53cml0ZW4rPTJ9LGEucHJvdG90eXBlLndyaXRlVVRGPWZ1bmN0aW9uKGEpe3ZhciBiPXRoaXMuYmluYXJ5SGVscGVyLndyaXRlVVRGKGEpO1tdLnB1c2guYXBwbHkodGhpcy5wb29sLGIpLHRoaXMud3JpdGVuKz1iLmxlbmd0aH0sYS5wcm90b3R5cGUudG9Db21wbGVtZW50cz1mdW5jdGlvbigpe2Zvcih2YXIgYT10aGlzLnBvb2wsYj0wO2I8dGhpcy5wb29sTGVuO2IrKylhW2JdPjEyOCYmKGFbYl0tPTI1Nik7cmV0dXJuIGF9LGEucHJvdG90eXBlLmdldEJ5dGVzQXJyYXk9ZnVuY3Rpb24oYSl7cmV0dXJuIGE/dGhpcy50b0NvbXBsZW1lbnRzKCk6dGhpcy5wb29sfSxhfSgpO2EuUm9uZ0lNU3RyZWFtPWZ9KFJvbmdJTUxpYnx8KFJvbmdJTUxpYj17fSkpO3ZhciBSb25nSU1MaWI7IWZ1bmN0aW9uKGEpe3ZhciBiPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gYihhKXtyZXR1cm4gdGhpcy5jb25uZWN0ZWQ9ITEsdGhpcy5pc0Nsb3NlPSExLHRoaXMucXVldWU9W10sdGhpcy5lbXB0eT1uZXcgRnVuY3Rpb24sdGhpcy5fc29ja2V0PWEsdGhpc31yZXR1cm4gYi5wcm90b3R5cGUuY3JlYXRlVHJhbnNwb3J0PWZ1bmN0aW9uKGIsYyl7aWYoIWIpdGhyb3cgbmV3IEVycm9yKFwiVVJMIGNhbid0IGJlIGVtcHR5XCIpO3RoaXMudXJsPWI7dmFyIGQ9YS5Sb25nSU1DbGllbnQuX21lbW9yeVN0b3JlLmRlcGVuZCxlPWQud3NTY2hlbWU7cmV0dXJuIGI9YS5Sb25nVXRpbC50cGxFbmdpbmUoXCJ7d3NTY2hlbWV9e3VybH1cIix7d3NTY2hlbWU6ZSx1cmw6Yn0pLHRoaXMuc29ja2V0PW5ldyBXZWJTb2NrZXQoYiksdGhpcy5zb2NrZXQuYmluYXJ5VHlwZT1cImFycmF5YnVmZmVyXCIsdGhpcy5hZGRFdmVudCgpLHRoaXMuc29ja2V0fSxiLnByb3RvdHlwZS5zZW5kPWZ1bmN0aW9uKGIpe2lmKCF0aGlzLmNvbm5lY3RlZCYmIXRoaXMuaXNDbG9zZSlyZXR1cm4gdm9pZCB0aGlzLnF1ZXVlLnB1c2goYik7aWYodGhpcy5pc0Nsb3NlKXJldHVybiB2b2lkIHRoaXMuX3NvY2tldC5maXJlKFwiU3RhdHVzQ2hhbmdlZFwiLGEuQ29ubmVjdGlvblN0YXR1cy5DT05ORUNUSU9OX0NMT1NFRCk7dmFyIGM9bmV3IGEuUm9uZ0lNU3RyZWFtKFtdKTtuZXcgYS5NZXNzYWdlT3V0cHV0U3RyZWFtKGMpLndyaXRlTWVzc2FnZShiKTt2YXIgZD1jLmdldEJ5dGVzQXJyYXkoITApLGU9bmV3IEludDhBcnJheShkKTtyZXR1cm4gdGhpcy5zb2NrZXQuc2VuZChlLmJ1ZmZlciksdGhpc30sYi5wcm90b3R5cGUub25EYXRhPWZ1bmN0aW9uKGIpe3JldHVybiBhLk1lc3NhZ2VVdGlsLmlzQXJyYXkoYik/dGhpcy5fc29ja2V0Lm9uTWVzc2FnZShuZXcgYS5NZXNzYWdlSW5wdXRTdHJlYW0oYikucmVhZE1lc3NhZ2UoKSk6dGhpcy5fc29ja2V0Lm9uTWVzc2FnZShuZXcgYS5NZXNzYWdlSW5wdXRTdHJlYW0oYS5NZXNzYWdlVXRpbC5BcnJheUZvcm1JbnB1dChiKSkucmVhZE1lc3NhZ2UoKSksXCJcIn0sYi5wcm90b3R5cGUub25DbG9zZT1mdW5jdGlvbihiKXt2YXIgYz10aGlzO2MuaXNDbG9zZT0hMCxjLnNvY2tldD10aGlzLmVtcHR5LGEuQnJpZGdlLl9jbGllbnQuY2xlYXJIZWFydGJlYXQoKSwxMDA2IT1iLmNvZGV8fHRoaXMuX3N0YXR1cz9jLl9zdGF0dXM9MDpjLl9zb2NrZXQuZmlyZShcIlN0YXR1c0NoYW5nZWRcIixhLkNvbm5lY3Rpb25TdGF0dXMuTkVUV09SS19VTkFWQUlMQUJMRSl9LGIucHJvdG90eXBlLm9uRXJyb3I9ZnVuY3Rpb24oYSl7dGhyb3cgbmV3IEVycm9yKGEpfSxiLnByb3RvdHlwZS5hZGRFdmVudD1mdW5jdGlvbigpe3ZhciBhPXRoaXM7YS5zb2NrZXQub25vcGVuPWZ1bmN0aW9uKCl7YS5jb25uZWN0ZWQ9ITAsYS5pc0Nsb3NlPSExLGEuZG9RdWV1ZSgpLGEuX3NvY2tldC5maXJlKFwiY29ubmVjdFwiKX0sYS5zb2NrZXQub25tZXNzYWdlPWZ1bmN0aW9uKGIpe1wic3RyaW5nXCI9PXR5cGVvZiBiLmRhdGE/YS5vbkRhdGEoYi5kYXRhLnNwbGl0KFwiLFwiKSk6YS5vbkRhdGEoYi5kYXRhKX0sYS5zb2NrZXQub25lcnJvcj1mdW5jdGlvbihiKXthLm9uRXJyb3IoYil9LGEuc29ja2V0Lm9uY2xvc2U9ZnVuY3Rpb24oYil7YS5vbkNsb3NlKGIpfX0sYi5wcm90b3R5cGUuZG9RdWV1ZT1mdW5jdGlvbigpe2Zvcih2YXIgYT10aGlzLGI9MCxjPWEucXVldWUubGVuZ3RoO2I8YztiKyspYS5zZW5kKGEucXVldWVbYl0pfSxiLnByb3RvdHlwZS5kaXNjb25uZWN0PWZ1bmN0aW9uKGEpe3ZhciBiPXRoaXM7Yi5zb2NrZXQucmVhZHlTdGF0ZSYmKGIuaXNDbG9zZT0hMCxhJiYoYi5fc3RhdHVzPWEpLGIuc29ja2V0LmNsb3NlKCkpfSxiLnByb3RvdHlwZS5yZWNvbm5lY3Q9ZnVuY3Rpb24oKXt0aGlzLmRpc2Nvbm5lY3QoKSx0aGlzLmNyZWF0ZVRyYW5zcG9ydCh0aGlzLnVybCl9LGIucHJvdG90eXBlLmNsb3NlPWZ1bmN0aW9uKCl7dGhpcy5zb2NrZXQuY2xvc2UoKX0sYn0oKTthLlNvY2tldFRyYW5zcG9ydGF0aW9uPWJ9KFJvbmdJTUxpYnx8KFJvbmdJTUxpYj17fSkpO3ZhciBSb25nSU1MaWI7IWZ1bmN0aW9uKGEpe3ZhciBiPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gYihhKXtyZXR1cm4gdGhpcy5lbXB0eT1uZXcgRnVuY3Rpb24sdGhpcy5jb25uZWN0ZWQ9ITEsdGhpcy5waWQ9K25ldyBEYXRlK01hdGgucmFuZG9tKCkrXCJcIix0aGlzLnF1ZXVlPVtdLHRoaXMuc29ja2V0PWEsdGhpc31yZXR1cm4gYi5wcm90b3R5cGUuY3JlYXRlVHJhbnNwb3J0PWZ1bmN0aW9uKGIsYyl7aWYoIWIpdGhyb3cgbmV3IEVycm9yKFwiVXJsIGlzIGVtcHR5LFBsZWFzZSBjaGVjayBpdCFcIik7dGhpcy51cmw9Yjt2YXIgZD1hLlJvbmdJTUNsaWVudC5fc3RvcmFnZVByb3ZpZGVyLmdldEl0ZW0oXCJzSWRcIithLk5hdmlnYXRpb24uRW5kcG9pbnQudXNlcklkKSxlPXRoaXM7cmV0dXJuIGQ/KHNldFRpbWVvdXQoZnVuY3Rpb24oKXtlLm9uU3VjY2Vzcygne1wic3RhdHVzXCI6MCxcInVzZXJJZFwiOlwiJythLk5hdmlnYXRpb24uRW5kcG9pbnQudXNlcklkKydcIixcImhlYWRlckNvZGVcIjozMixcIm1lc3NhZ2VJZFwiOjAsXCJzZXNzaW9uaWRcIjpcIicrZCsnXCJ9JyksZS5jb25uZWN0ZWQ9ITB9LDUwMCksdGhpcyk6KHRoaXMuZ2V0UmVxdWVzdChiLCEwKSx0aGlzKX0sYi5wcm90b3R5cGUucmVxdWVzdEZhY3Rvcnk9ZnVuY3Rpb24oYixjLGQpe3ZhciBlPXRoaXMuWG1sSHR0cFJlcXVlc3QoKTtyZXR1cm4gZCYmKGUubXVsdGlwYXJ0PSEwKSxlLm9wZW4oY3x8XCJHRVRcIixhLlJvbmdJTUNsaWVudC5fbWVtb3J5U3RvcmUuZGVwZW5kLnByb3RvY29sK2IpLFwiUE9TVFwiPT1jJiZcInNldFJlcXVlc3RIZWFkZXJcImluIGUmJmUuc2V0UmVxdWVzdEhlYWRlcihcIkNvbnRlbnQtdHlwZVwiLFwiYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkOyBjaGFyc2V0PXV0Zi04XCIpLGV9LGIucHJvdG90eXBlLmdldFJlcXVlc3Q9ZnVuY3Rpb24oYSxiKXt2YXIgYz10aGlzO2MueGhyPXRoaXMucmVxdWVzdEZhY3RvcnkoYStcIiZwaWQ9XCIrZW5jb2RlVVJJQ29tcG9uZW50KGMucGlkKSxcIkdFVFwiKSxcIm9ubG9hZFwiaW4gYy54aHI/KGMueGhyLm9ubG9hZD1mdW5jdGlvbigpe2MueGhyLm9ubG9hZD1jLmVtcHR5LFwibG9zdCBwYXJhbXNcIj09dGhpcy5yZXNwb25zZVRleHQ/Yy5vbkVycm9yKCk6Yy5vblN1Y2Nlc3ModGhpcy5yZXNwb25zZVRleHQsYil9LGMueGhyLm9uZXJyb3I9ZnVuY3Rpb24oKXtjLmRpc2Nvbm5lY3QoKX0pOmMueGhyLm9ucmVhZHlzdGF0ZWNoYW5nZT1mdW5jdGlvbigpezQ9PWMueGhyLnJlYWR5U3RhdGUmJihjLnhoci5vbnJlYWR5c3RhdGVjaGFuZ2U9Yy5lbXB0eSwvXigyMDB8MjAyKSQvLnRlc3QoYy54aHIuc3RhdHVzKT9jLm9uU3VjY2VzcyhjLnhoci5yZXNwb25zZVRleHQsYik6L14oNDAwfDQwMykkLy50ZXN0KGMueGhyLnN0YXR1cyk/Yy5vbkVycm9yKCk6Yy5kaXNjb25uZWN0KCkpfSxjLnhoci5zZW5kKCl9LGIucHJvdG90eXBlLnNlbmQ9ZnVuY3Rpb24oYil7dmFyIGM9dGhpcyxkPWMuc2VuZHhocj10aGlzLnJlcXVlc3RGYWN0b3J5KGEuTmF2aWdhdGlvbi5FbmRwb2ludC5ob3N0K1wiL3dlYnNvY2tldFwiK2IudXJsK1wiJnBpZD1cIitlbmNvZGVVUklDb21wb25lbnQoYy5waWQpLFwiUE9TVFwiKTtcIm9ubG9hZFwiaW4gZD8oZC5vbmxvYWQ9ZnVuY3Rpb24oKXtkLm9ubG9hZD1jLmVtcHR5LGMub25EYXRhKGQucmVzcG9uc2VUZXh0KX0sZC5vbmVycm9yPWZ1bmN0aW9uKCl7ZC5vbmVycm9yPWMuZW1wdHl9KTpkLm9ucmVhZHlzdGF0ZWNoYW5nZT1mdW5jdGlvbigpezQ9PWQucmVhZHlTdGF0ZSYmKHRoaXMub25yZWFkeXN0YXRlY2hhbmdlPXRoaXMuZW1wdHksL14oMjAyfDIwMCkkLy50ZXN0KGQuc3RhdHVzKSYmYy5vbkRhdGEoZC5yZXNwb25zZVRleHQpKX0sZC5zZW5kKEpTT04uc3RyaW5naWZ5KGIuZGF0YSkpfSxiLnByb3RvdHlwZS5vbkRhdGE9ZnVuY3Rpb24oYixjKXtpZihiJiZcImxvc3QgcGFyYW1zXCIhPWIpe3ZhciBkPXRoaXMsZT1KU09OLnBhcnNlKGIpO3JldHVybiBlLnVzZXJJZCYmKGEuTmF2aWdhdGlvbi5FbmRwb2ludC51c2VySWQ9ZS51c2VySWQpLGMmJmEuUm9uZ0lNQ2xpZW50Ll9zdG9yYWdlUHJvdmlkZXIuc2V0SXRlbShcInNJZFwiK2EuTmF2aWdhdGlvbi5FbmRwb2ludC51c2VySWQsYyksYS5NZXNzYWdlVXRpbC5pc0FycmF5KGUpfHwoZT1bZV0pLEFycmF5LmZvckVhY2goZSxmdW5jdGlvbihiKXtkLnNvY2tldC5maXJlKFwibWVzc2FnZVwiLG5ldyBhLk1lc3NhZ2VJbnB1dFN0cmVhbShiLCEwKS5yZWFkTWVzc2FnZSgpKX0pLFwiXCJ9fSxiLnByb3RvdHlwZS5YbWxIdHRwUmVxdWVzdD1mdW5jdGlvbigpe3ZhciBhPVwidW5kZWZpbmVkXCIhPXR5cGVvZiBYTUxIdHRwUmVxdWVzdCYmXCJ3aXRoQ3JlZGVudGlhbHNcImluIG5ldyBYTUxIdHRwUmVxdWVzdDtyZXR1cm5cInVuZGVmaW5lZFwiIT10eXBlb2YgWE1MSHR0cFJlcXVlc3QmJmE/bmV3IFhNTEh0dHBSZXF1ZXN0OlwidW5kZWZpbmVkXCIhPXR5cGVvZiBYRG9tYWluUmVxdWVzdD9uZXcgWERvbWFpblJlcXVlc3Q6bmV3IEFjdGl2ZVhPYmplY3QoXCJNaWNyb3NvZnQuWE1MSFRUUFwiKX0sYi5wcm90b3R5cGUub25DbG9zZT1mdW5jdGlvbigpe3RoaXMueGhyJiYodGhpcy54aHIub25sb2FkP3RoaXMueGhyLm9ucmVhZHlzdGF0ZWNoYW5nZT10aGlzLnhoci5vbmxvYWQ9dGhpcy5lbXB0eTp0aGlzLnhoci5vbnJlYWR5c3RhdGVjaGFuZ2U9dGhpcy5lbXB0eSx0aGlzLnhoci5hYm9ydCgpLHRoaXMueGhyPW51bGwpLHRoaXMuc2VuZHhociYmKHRoaXMuc2VuZHhoci5vbmxvYWQ/dGhpcy5zZW5keGhyLm9ucmVhZHlzdGF0ZWNoYW5nZT10aGlzLnNlbmR4aHIub25sb2FkPXRoaXMuZW1wdHk6dGhpcy5zZW5keGhyLm9ucmVhZHlzdGF0ZWNoYW5nZT10aGlzLmVtcHR5LHRoaXMuc2VuZHhoci5hYm9ydCgpLHRoaXMuc2VuZHhocj1udWxsKX0sYi5wcm90b3R5cGUuZGlzY29ubmVjdD1mdW5jdGlvbigpe2EuUm9uZ0lNQ2xpZW50Ll9zdG9yYWdlUHJvdmlkZXIucmVtb3ZlSXRlbShcInNJZFwiK2EuTmF2aWdhdGlvbi5FbmRwb2ludC51c2VySWQpLGEuUm9uZ0lNQ2xpZW50Ll9zdG9yYWdlUHJvdmlkZXIucmVtb3ZlSXRlbShhLk5hdmlnYXRpb24uRW5kcG9pbnQudXNlcklkK1wibXNnSWRcIiksdGhpcy5vbkNsb3NlKCl9LGIucHJvdG90eXBlLnJlY29ubmVjdD1mdW5jdGlvbigpe3RoaXMuZGlzY29ubmVjdCgpLHRoaXMuY3JlYXRlVHJhbnNwb3J0KHRoaXMudXJsKX0sYi5wcm90b3R5cGUub25TdWNjZXNzPWZ1bmN0aW9uKGIsYyl7dmFyIGQ9Yi5tYXRjaCgvXCJzZXNzaW9uaWRcIjpcIlxcUys/KD89XCIpLyk7aWYodGhpcy5vbkRhdGEoYixkP2RbMF0uc2xpY2UoMTMpOjApLC9cImhlYWRlckNvZGVcIjotMzIsLy50ZXN0KGIpKXJldHVybiBhLlJvbmdJTUNsaWVudC5fc3RvcmFnZVByb3ZpZGVyLnJlbW92ZUl0ZW0oXCJzSWRcIithLk5hdmlnYXRpb24uRW5kcG9pbnQudXNlcklkKSx2b2lkIGEuUm9uZ0lNQ2xpZW50Ll9zdG9yYWdlUHJvdmlkZXIucmVtb3ZlSXRlbShhLk5hdmlnYXRpb24uRW5kcG9pbnQudXNlcklkK1wibXNnSWRcIik7dGhpcy5nZXRSZXF1ZXN0KGEuTmF2aWdhdGlvbi5FbmRwb2ludC5ob3N0K1wiL3B1bGxtc2cuanM/c2Vzc2lvbmlkPVwiK2EuUm9uZ0lNQ2xpZW50Ll9zdG9yYWdlUHJvdmlkZXIuZ2V0SXRlbShcInNJZFwiK2EuTmF2aWdhdGlvbi5FbmRwb2ludC51c2VySWQpK1wiJnRpbWVzdHJhcD1cIitlbmNvZGVVUklDb21wb25lbnQoKG5ldyBEYXRlKS5nZXRUaW1lKCkrTWF0aC5yYW5kb20oKStcIlwiKSksdGhpcy5jb25uZWN0ZWQ9ITAsYyYmdGhpcy5zb2NrZXQuZmlyZShcImNvbm5lY3RcIil9LGIucHJvdG90eXBlLm9uRXJyb3I9ZnVuY3Rpb24oKXthLlJvbmdJTUNsaWVudC5fc3RvcmFnZVByb3ZpZGVyLnJlbW92ZUl0ZW0oXCJzSWRcIithLk5hdmlnYXRpb24uRW5kcG9pbnQudXNlcklkKSxhLlJvbmdJTUNsaWVudC5fc3RvcmFnZVByb3ZpZGVyLnJlbW92ZUl0ZW0oYS5OYXZpZ2F0aW9uLkVuZHBvaW50LnVzZXJJZCtcIm1zZ0lkXCIpLHRoaXMub25DbG9zZSgpLHRoaXMuY29ubmVjdGVkPSExLHRoaXMuc29ja2V0LmZpcmUoXCJkaXNjb25uZWN0XCIpfSxiLnByb3RvdHlwZS5jbG9zZT1mdW5jdGlvbigpe3RoaXMueGhyLmFib3J0KCksdGhpcy5zZW5keGhyPW51bGx9LGJ9KCk7YS5Qb2xsaW5nVHJhbnNwb3J0YXRpb249Yn0oUm9uZ0lNTGlifHwoUm9uZ0lNTGliPXt9KSk7dmFyIHR5cGVNYXBwaW5nPXtcIlJDOlR4dE1zZ1wiOlwiVGV4dE1lc3NhZ2VcIixcIlJDOkltZ01zZ1wiOlwiSW1hZ2VNZXNzYWdlXCIsXCJSQzpWY01zZ1wiOlwiVm9pY2VNZXNzYWdlXCIsXCJSQzpJbWdUZXh0TXNnXCI6XCJSaWNoQ29udGVudE1lc3NhZ2VcIixcIlJDOkZpbGVNc2dcIjpcIkZpbGVNZXNzYWdlXCIsXCJSQzpIUVZDTXNnXCI6XCJIUVZvaWNlTWVzc2FnZVwiLFwiUkM6TEJTTXNnXCI6XCJMb2NhdGlvbk1lc3NhZ2VcIixcIlJDOkluZm9OdGZcIjpcIkluZm9ybWF0aW9uTm90aWZpY2F0aW9uTWVzc2FnZVwiLFwiUkM6Q29udGFjdE50ZlwiOlwiQ29udGFjdE5vdGlmaWNhdGlvbk1lc3NhZ2VcIixcIlJDOlByb2ZpbGVOdGZcIjpcIlByb2ZpbGVOb3RpZmljYXRpb25NZXNzYWdlXCIsXCJSQzpDbWROdGZcIjpcIkNvbW1hbmROb3RpZmljYXRpb25NZXNzYWdlXCIsXCJSQzpEaXpOdGZcIjpcIkRpc2N1c3Npb25Ob3RpZmljYXRpb25NZXNzYWdlXCIsXCJSQzpDbWRNc2dcIjpcIkNvbW1hbmRNZXNzYWdlXCIsXCJSQzpUeXBTdHNcIjpcIlR5cGluZ1N0YXR1c01lc3NhZ2VcIixcIlJDOkNzQ2hhUlwiOlwiQ2hhbmdlTW9kZVJlc3BvbnNlTWVzc2FnZVwiLFwiUkM6Q3NIc1JcIjpcIkhhbmRTaGFrZVJlc3BvbnNlTWVzc2FnZVwiLFwiUkM6Q3NFbmRcIjpcIlRlcm1pbmF0ZU1lc3NhZ2VcIixcIlJDOkNzU3BcIjpcIlN1c3BlbmRNZXNzYWdlXCIsXCJSQzpDc1VwZGF0ZVwiOlwiQ3VzdG9tZXJTdGF0dXNVcGRhdGVNZXNzYWdlXCIsXCJSQzpSZWFkTnRmXCI6XCJSZWFkUmVjZWlwdE1lc3NhZ2VcIixcIlJDOlZDQWNjZXB0XCI6XCJBY2NlcHRNZXNzYWdlXCIsXCJSQzpWQ1JpbmdpbmdcIjpcIlJpbmdpbmdNZXNzYWdlXCIsXCJSQzpWQ1N1bW1hcnlcIjpcIlN1bW1hcnlNZXNzYWdlXCIsXCJSQzpWQ0hhbmd1cFwiOlwiSHVuZ3VwTWVzc2FnZVwiLFwiUkM6VkNJbnZpdGVcIjpcIkludml0ZU1lc3NhZ2VcIixcIlJDOlZDTW9kaWZ5TWVkaWFcIjpcIk1lZGlhTW9kaWZ5TWVzc2FnZVwiLFwiUkM6VkNNb2RpZnlNZW1cIjpcIk1lbWJlck1vZGlmeU1lc3NhZ2VcIixcIlJDOkNzQ29udGFjdFwiOlwiQ3VzdG9tZXJDb250YWN0XCIsXCJSQzpQU0ltZ1R4dE1zZ1wiOlwiUHVibGljU2VydmljZVJpY2hDb250ZW50TWVzc2FnZVwiLFwiUkM6UFNNdWx0aUltZ1R4dE1zZ1wiOlwiUHVibGljU2VydmljZU11bHRpUmljaENvbnRlbnRNZXNzYWdlXCIsXCJSQzpHcnBOdGZcIjpcIkdyb3VwTm90aWZpY2F0aW9uTWVzc2FnZVwiLFwiUkM6UFNDbWRcIjpcIlB1YmxpY1NlcnZpY2VDb21tYW5kTWVzc2FnZVwiLFwiUkM6UmNDbWRcIjpcIlJlY2FsbENvbW1hbmRNZXNzYWdlXCIsXCJSQzpTUlNNc2dcIjpcIlN5bmNSZWFkU3RhdHVzTWVzc2FnZVwiLFwiUkM6UlJSZXFNc2dcIjpcIlJlYWRSZWNlaXB0UmVxdWVzdE1lc3NhZ2VcIixcIlJDOlJSUnNwTXNnXCI6XCJSZWFkUmVjZWlwdFJlc3BvbnNlTWVzc2FnZVwiLFwiUkNKcm1mOlJwTXNnXCI6XCJKcm1mUmVkUGFja2V0TWVzc2FnZVwiLFwiUkNKcm1mOlJwT3BlbmRNc2dcIjpcIkpybWZSZWRQYWNrZXRPcGVuZWRNZXNzYWdlXCJ9LHJlZ2lzdGVyTWVzc2FnZVR5cGVNYXBwaW5nPXt9LEhpc3RvcnlNc2dUeXBlPXs0OlwicXJ5Q01zZ1wiLDI6XCJxcnlETXNnXCIsMzpcInFyeUdNc2dcIiwxOlwicXJ5UE1zZ1wiLDY6XCJxcnlTTXNnXCIsNzpcInFyeVBNc2dcIiw4OlwicXJ5UE1zZ1wiLDU6XCJxcnlDTXNnXCJ9LGRpc2Nvbm5lY3RTdGF0dXM9ezE6Nn0sUm9uZ0lNTGliOyFmdW5jdGlvbihSb25nSU1MaWIpe3ZhciBUcmFuc3BvcnRhdGlvbnM9ZnVuY3Rpb24oKXtmdW5jdGlvbiBhKCl7fXJldHVybiBhLl9UcmFuc3BvcnRUeXBlPVJvbmdJTUxpYi5Tb2NrZXQuV0VCU09DS0VULGF9KCk7Um9uZ0lNTGliLlRyYW5zcG9ydGF0aW9ucz1UcmFuc3BvcnRhdGlvbnM7dmFyIFN5bmNUaW1lVXRpbD1mdW5jdGlvbigpe2Z1bmN0aW9uIGEoKXt9cmV0dXJuIGEuJGdldEtleT1mdW5jdGlvbihhKXt2YXIgYj1Sb25nSU1MaWIuQnJpZGdlLl9jbGllbnQsYz1iLnVzZXJJZCxkPTE9PWEubWVzc2FnZURpcmVjdGlvbj9cInNlbmRcIjpcInJlY2VpdmVcIixlPVJvbmdJTUxpYi5Sb25nSU1DbGllbnQuX21lbW9yeVN0b3JlLmFwcEtleTtyZXR1cm4gUm9uZ0lNTGliLlJvbmdVdGlsLnRwbEVuZ2luZShcInthcHBrZXl9X3t1c2VySWR9X3tkaXJlY3Rpb259Ym94XCIse2FwcGtleTplLHVzZXJJZDpjLGRpcmVjdGlvbjpkfSl9LGEuc2V0PWZ1bmN0aW9uKGIpe3ZhciBjPWEuJGdldEtleShiKSxkPWIuc2VudFRpbWU7Um9uZ0lNTGliLlJvbmdJTUNsaWVudC5fc3RvcmFnZVByb3ZpZGVyLnNldEl0ZW0oYyxkKX0sYS5nZXQ9ZnVuY3Rpb24oKXt2YXIgYj1hLiRnZXRLZXkoe21lc3NhZ2VEaXJlY3Rpb246Um9uZ0lNTGliLk1lc3NhZ2VEaXJlY3Rpb24uU0VORH0pLGM9YS4kZ2V0S2V5KHttZXNzYWdlRGlyZWN0aW9uOlJvbmdJTUxpYi5NZXNzYWdlRGlyZWN0aW9uLlJFQ0VJVkV9KSxkPVJvbmdJTUxpYi5Sb25nSU1DbGllbnQuX3N0b3JhZ2VQcm92aWRlcjtyZXR1cm57c2VudDpOdW1iZXIoZC5nZXRJdGVtKGIpfHwwKSxyZWNlaXZlZDpOdW1iZXIoZC5nZXRJdGVtKGMpfHwwKX19LGF9KCk7Um9uZ0lNTGliLlN5bmNUaW1lVXRpbD1TeW5jVGltZVV0aWw7dmFyIE1lc3NhZ2VVdGlsPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gTWVzc2FnZVV0aWwoKXt9cmV0dXJuIE1lc3NhZ2VVdGlsLmNoZWNrU3RvcmFnZVNpemU9ZnVuY3Rpb24oKXtyZXR1cm4gSlNPTi5zdHJpbmdpZnkobG9jYWxTdG9yYWdlKS5sZW5ndGg8NDY4ZTR9LE1lc3NhZ2VVdGlsLmdldEZpcnN0S2V5PWZ1bmN0aW9uKGEpe3ZhciBiPVwiXCI7Zm9yKHZhciBjIGluIGEpe2I9YzticmVha31yZXR1cm4gYn0sTWVzc2FnZVV0aWwuaXNFbXB0eT1mdW5jdGlvbihhKXt2YXIgYj0hMDtmb3IodmFyIGMgaW4gYSl7Yj0hMTticmVha31yZXR1cm4gYn0sTWVzc2FnZVV0aWwuQXJyYXlGb3JtPWZ1bmN0aW9uKGEpe2lmKFwiW29iamVjdCBBcnJheUJ1ZmZlcl1cIj09T2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGEpKXt2YXIgYj1uZXcgSW50OEFycmF5KGEpO3JldHVybltdLnNsaWNlLmNhbGwoYil9cmV0dXJuIGF9LE1lc3NhZ2VVdGlsLkFycmF5Rm9ybUlucHV0PWZ1bmN0aW9uKGEpe2lmKFwiW29iamVjdCBBcnJheUJ1ZmZlcl1cIj09T2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGEpKXtyZXR1cm4gbmV3IFVpbnQ4QXJyYXkoYSl9cmV0dXJuIGF9LE1lc3NhZ2VVdGlsLmluZGV4T2Y9ZnVuY3Rpb24oYSxiLGMpe2Zvcih2YXIgZD1hLmxlbmd0aCxlPWM8MD9NYXRoLm1heCgwLCtjKTpjfHwwO2U8ZDtlKyspaWYoYVtlXT09YilyZXR1cm4gZTtyZXR1cm4tMX0sTWVzc2FnZVV0aWwuaXNBcnJheT1mdW5jdGlvbihhKXtyZXR1cm5cIltvYmplY3QgQXJyYXldXCI9PU9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChhKX0sTWVzc2FnZVV0aWwuZm9yRWFjaD1mdW5jdGlvbihhLGIpe3JldHVybltdLmZvckVhY2g/ZnVuY3Rpb24oYSxiKXtbXS5mb3JFYWNoLmNhbGwoYSxiKX06ZnVuY3Rpb24oYSxiKXtmb3IodmFyIGM9MDtjPGEubGVuZ3RoO2MrKyliLmNhbGwoYSxhW2NdLGMsYSl9fSxNZXNzYWdlVXRpbC5yZW1vdmU9ZnVuY3Rpb24oYSxiKXtmb3IodmFyIGM9MCxkPWEubGVuZ3RoO2M8ZDtjKyspaWYoYihhW2NdKSlyZXR1cm4gYS5zcGxpY2UoYywxKVswXTtyZXR1cm4gbnVsbH0sTWVzc2FnZVV0aWwuaW50NjRUb1RpbWVzdGFtcD1mdW5jdGlvbihhLGIpe2lmKHZvaWQgMD09PWEubG93KXJldHVybiBhO3ZhciBjPWEubG93O2M8MCYmKGMrPTQyOTQ5NjcyOTYpLGM9Yy50b1N0cmluZygxNik7dmFyIGQ9cGFyc2VJbnQoYS5oaWdoLnRvU3RyaW5nKDE2KStcIjAwMDAwMDAwXCIucmVwbGFjZShuZXcgUmVnRXhwKFwiMHtcIitjLmxlbmd0aCtcIn0kXCIpLGMpLDE2KTtyZXR1cm4gYj9uZXcgRGF0ZShkKTpkfSxNZXNzYWdlVXRpbC5tZXNzYWdlUGFyc2VyPWZ1bmN0aW9uKGVudGl0eSxvblJlY2VpdmVkLG9mZmxpbmVNc2cpe3ZhciBtZXNzYWdlPW5ldyBSb25nSU1MaWIuTWVzc2FnZSxjb250ZW50PWVudGl0eS5jb250ZW50LGRlLG9iamVjdE5hbWU9ZW50aXR5LmNsYXNzbmFtZSx2YWwsaXNVc2VEZWY9ITE7dHJ5e1JvbmdJTUxpYi5Sb25nSU1DbGllbnQuX21lbW9yeVN0b3JlLmRlcGVuZC5pc1BvbGxpbmc/KHZhbD0obmV3IFJvbmdJTUxpYi5CaW5hcnlIZWxwZXIpLnJlYWRVVEYoY29udGVudC5vZmZzZXQ/TWVzc2FnZVV0aWwuQXJyYXlGb3JtKGNvbnRlbnQuYnVmZmVyKS5zbGljZShjb250ZW50Lm9mZnNldCxjb250ZW50LmxpbWl0KTpjb250ZW50KSxkZT1KU09OLnBhcnNlKHZhbCkpOih2YWw9KG5ldyBSb25nSU1MaWIuQmluYXJ5SGVscGVyKS5yZWFkVVRGKGNvbnRlbnQub2Zmc2V0P01lc3NhZ2VVdGlsLkFycmF5Rm9ybUlucHV0KGNvbnRlbnQuYnVmZmVyKS5zdWJhcnJheShjb250ZW50Lm9mZnNldCxjb250ZW50LmxpbWl0KTpjb250ZW50KSxkZT1KU09OLnBhcnNlKHZhbCkpfWNhdGNoKGV4KXtkZT12YWwsaXNVc2VEZWY9ITB9aWYob2JqZWN0TmFtZSBpbiB0eXBlTWFwcGluZyl7dmFyIHN0cj1cIm5ldyBSb25nSU1MaWIuXCIrdHlwZU1hcHBpbmdbb2JqZWN0TmFtZV0rXCIoZGUpXCI7bWVzc2FnZS5jb250ZW50PWV2YWwoc3RyKSxtZXNzYWdlLm1lc3NhZ2VUeXBlPXR5cGVNYXBwaW5nW29iamVjdE5hbWVdfWVsc2UgaWYob2JqZWN0TmFtZSBpbiByZWdpc3Rlck1lc3NhZ2VUeXBlTWFwcGluZyl7dmFyIHN0cj1cIm5ldyBSb25nSU1MaWIuUm9uZ0lNQ2xpZW50LlJlZ2lzdGVyTWVzc2FnZS5cIityZWdpc3Rlck1lc3NhZ2VUeXBlTWFwcGluZ1tvYmplY3ROYW1lXStcIihkZSlcIjttZXNzYWdlLmNvbnRlbnQ9aXNVc2VEZWY/ZXZhbChzdHIpLmRlY29kZShkZSk6ZXZhbChzdHIpLG1lc3NhZ2UubWVzc2FnZVR5cGU9cmVnaXN0ZXJNZXNzYWdlVHlwZU1hcHBpbmdbb2JqZWN0TmFtZV19ZWxzZSBtZXNzYWdlLmNvbnRlbnQ9bmV3IFJvbmdJTUxpYi5Vbmtub3duTWVzc2FnZSh7Y29udGVudDpkZSxvYmplY3ROYW1lOm9iamVjdE5hbWV9KSxtZXNzYWdlLm1lc3NhZ2VUeXBlPVwiVW5rbm93bk1lc3NhZ2VcIjt2YXIgZGF0ZVRpbWU9TWVzc2FnZVV0aWwuaW50NjRUb1RpbWVzdGFtcChlbnRpdHkuZGF0YVRpbWUpO21lc3NhZ2Uuc2VudFRpbWU9ZGF0ZVRpbWU+MD9kYXRlVGltZTorbmV3IERhdGUsbWVzc2FnZS5zZW5kZXJVc2VySWQ9ZW50aXR5LmZyb21Vc2VySWQsbWVzc2FnZS5jb252ZXJzYXRpb25UeXBlPWVudGl0eS50eXBlLGVudGl0eS5mcm9tVXNlcklkPT1Sb25nSU1MaWIuQnJpZGdlLl9jbGllbnQudXNlcklkP21lc3NhZ2UudGFyZ2V0SWQ9ZW50aXR5Lmdyb3VwSWQ6bWVzc2FnZS50YXJnZXRJZD0vXlsyMzRdJC8udGVzdChlbnRpdHkudHlwZXx8ZW50aXR5LmdldFR5cGUoKSk/ZW50aXR5Lmdyb3VwSWQ6bWVzc2FnZS5zZW5kZXJVc2VySWQ7dmFyIHNlbGZVc2VySWQ9Um9uZ0lNTGliLkJyaWRnZS5fY2xpZW50LnVzZXJJZCxpc1NlbGZTZW5kPTE9PWVudGl0eS5kaXJlY3Rpb258fG1lc3NhZ2Uuc2VuZGVyVXNlcklkPT09c2VsZlVzZXJJZFxyXG47aXNTZWxmU2VuZD8obWVzc2FnZS5tZXNzYWdlRGlyZWN0aW9uPVJvbmdJTUxpYi5NZXNzYWdlRGlyZWN0aW9uLlNFTkQsbWVzc2FnZS5zZW5kZXJVc2VySWQ9Um9uZ0lNTGliLkJyaWRnZS5fY2xpZW50LnVzZXJJZCk6bWVzc2FnZS5tZXNzYWdlRGlyZWN0aW9uPVJvbmdJTUxpYi5NZXNzYWdlRGlyZWN0aW9uLlJFQ0VJVkU7dmFyIGlzU2VsZlRvU2VsZj1tZXNzYWdlLnNlbmRlclVzZXJJZD09PXNlbGZVc2VySWQmJm1lc3NhZ2UudGFyZ2V0SWQ9PT1zZWxmVXNlcklkO3JldHVybiBpc1NlbGZUb1NlbGYmJihtZXNzYWdlLm1lc3NhZ2VEaXJlY3Rpb249Um9uZ0lNTGliLk1lc3NhZ2VEaXJlY3Rpb24uUkVDRUlWRSksbWVzc2FnZS5tZXNzYWdlVUlkPWVudGl0eS5tc2dJZCxtZXNzYWdlLnJlY2VpdmVkVGltZT0obmV3IERhdGUpLmdldFRpbWUoKSxtZXNzYWdlLm1lc3NhZ2VJZD1tZXNzYWdlLmNvbnZlcnNhdGlvblR5cGUrXCJfXCIrfn4oMTY3NzcyMTUqTWF0aC5yYW5kb20oKSksbWVzc2FnZS5vYmplY3ROYW1lPW9iamVjdE5hbWUsbWVzc2FnZS5yZWNlaXZlZFN0YXR1cz1Sb25nSU1MaWIuUmVjZWl2ZWRTdGF0dXMuUkVBRCwyPT0oMiZlbnRpdHkuc3RhdHVzKSYmKG1lc3NhZ2UucmVjZWl2ZWRTdGF0dXM9Um9uZ0lNTGliLlJlY2VpdmVkU3RhdHVzLlJFVFJJRVZFRCksbWVzc2FnZS5vZmZMaW5lTWVzc2FnZT0hIW9mZmxpbmVNc2csb2ZmbGluZU1zZ3x8Um9uZ0lNTGliLlJvbmdJTUNsaWVudC5fbWVtb3J5U3RvcmUuY29ubmVjdEFja1RpbWU+bWVzc2FnZS5zZW50VGltZSYmKG1lc3NhZ2Uub2ZmTGluZU1lc3NhZ2U9ITApLG1lc3NhZ2V9LE1lc3NhZ2VVdGlsLmRldGVjdENNUD1mdW5jdGlvbihhKXt2YXIgYj1uZXcgWE1MSHR0cFJlcXVlc3Q7Yi5vbnJlYWR5c3RhdGVjaGFuZ2U9ZnVuY3Rpb24oKXtpZig0PT1iLnJlYWR5U3RhdGUpezIwMD09Yi5zdGF0dXM/YS5zdWNjZXNzKCk6YS5mYWlsKGIuc3RhdHVzKX19O3ZhciBjPWEudXJsLGQ9YS51cmwsYz1hLm1ldGhvZHx8XCJHRVRcIjtiLm9wZW4oYyxkKTt2YXIgZT1hLmhlYWRlcnM7Zm9yKHZhciBmIGluIGUpe3ZhciBnPWVbZl07Yi5zZXRSZXF1ZXN0SGVhZGVyKGYsZyl9dmFyIGg9SlNPTi5zdHJpbmdpZnkoYS5ib2R5fHx7fSk7cmV0dXJuIGIuc2VuZChoKSxifSxNZXNzYWdlVXRpbC5zaWduPXtjb252ZXJOdW06MSxtc2dOdW06MSxpc01zZ1N0YXJ0OiEwLGlzQ29udlN0YXJ0OiEwfSxNZXNzYWdlVXRpbH0oKTtSb25nSU1MaWIuTWVzc2FnZVV0aWw9TWVzc2FnZVV0aWw7dmFyIE1lc3NhZ2VJZEhhbmRsZXI9ZnVuY3Rpb24oKXtmdW5jdGlvbiBhKCl7fXJldHVybiBhLmluaXQ9ZnVuY3Rpb24oKXt0aGlzLm1lc3NhZ2VJZD0rKFJvbmdJTUxpYi5Sb25nSU1DbGllbnQuX3N0b3JhZ2VQcm92aWRlci5nZXRJdGVtKFJvbmdJTUxpYi5OYXZpZ2F0aW9uLkVuZHBvaW50LnVzZXJJZCtcIm1zZ0lkXCIpfHxSb25nSU1MaWIuUm9uZ0lNQ2xpZW50Ll9zdG9yYWdlUHJvdmlkZXIuc2V0SXRlbShSb25nSU1MaWIuTmF2aWdhdGlvbi5FbmRwb2ludC51c2VySWQrXCJtc2dJZFwiLDApfHwwKX0sYS5tZXNzYWdlSWRQbHVzPWZ1bmN0aW9uKGEpe3JldHVybiBSb25nSU1MaWIuUm9uZ0lNQ2xpZW50Ll9tZW1vcnlTdG9yZS5kZXBlbmQuaXNQb2xsaW5nJiZ0aGlzLmluaXQoKSx0aGlzLm1lc3NhZ2VJZD49NjU1MzU/KGEoKSwhMSk6KHRoaXMubWVzc2FnZUlkKyssUm9uZ0lNTGliLlJvbmdJTUNsaWVudC5fbWVtb3J5U3RvcmUuZGVwZW5kLmlzUG9sbGluZyYmUm9uZ0lNTGliLlJvbmdJTUNsaWVudC5fc3RvcmFnZVByb3ZpZGVyLnNldEl0ZW0oUm9uZ0lNTGliLk5hdmlnYXRpb24uRW5kcG9pbnQudXNlcklkK1wibXNnSWRcIix0aGlzLm1lc3NhZ2VJZCksdGhpcy5tZXNzYWdlSWQpfSxhLmNsZWFyTWVzc2FnZUlkPWZ1bmN0aW9uKCl7dGhpcy5tZXNzYWdlSWQ9MCxSb25nSU1MaWIuUm9uZ0lNQ2xpZW50Ll9tZW1vcnlTdG9yZS5kZXBlbmQuaXNQb2xsaW5nJiZSb25nSU1MaWIuUm9uZ0lNQ2xpZW50Ll9zdG9yYWdlUHJvdmlkZXIuc2V0SXRlbShSb25nSU1MaWIuTmF2aWdhdGlvbi5FbmRwb2ludC51c2VySWQrXCJtc2dJZFwiLHRoaXMubWVzc2FnZUlkKX0sYS5nZXRNZXNzYWdlSWQ9ZnVuY3Rpb24oKXtyZXR1cm4gUm9uZ0lNTGliLlJvbmdJTUNsaWVudC5fbWVtb3J5U3RvcmUuZGVwZW5kLmlzUG9sbGluZyYmdGhpcy5pbml0KCksdGhpcy5tZXNzYWdlSWR9LGEubWVzc2FnZUlkPTAsYX0oKTtSb25nSU1MaWIuTWVzc2FnZUlkSGFuZGxlcj1NZXNzYWdlSWRIYW5kbGVyO3ZhciBSb25nSW5uZXJUb29scz1mdW5jdGlvbigpe2Z1bmN0aW9uIGEoKXt9cmV0dXJuIGEuY29udmVydFVzZXJTdGF0dXM9ZnVuY3Rpb24oYSl7YT1Sb25nSU1MaWIuUm9uZ1V0aWwucmVuYW1lKGEse3N1YlVzZXJJZDpcInVzZXJJZFwifSk7dmFyIGI9SlNPTi5wYXJzZShhLnN0YXR1cyksYz1iLnVzO3JldHVybiBjPyhhLnN0YXR1cz1Sb25nSU1MaWIuUm9uZ1V0aWwucmVuYW1lKGMse286XCJvbmxpbmVcIixwOlwicGxhdGZvcm1cIixzOlwic3RhdHVzXCJ9KSxhKTphfSxhfSgpO1JvbmdJTUxpYi5Sb25nSW5uZXJUb29scz1Sb25nSW5uZXJUb29sc30oUm9uZ0lNTGlifHwoUm9uZ0lNTGliPXt9KSk7dmFyIFJvbmdJTUxpYjshZnVuY3Rpb24oYSl7dmFyIGI9ZnVuY3Rpb24oKXtmdW5jdGlvbiBhKGEpe3Rocm93IG5ldyBFcnJvcihcIlRoaXMgbWV0aG9kIGlzIGFic3RyYWN0LCB5b3UgbXVzdCBpbXBsZW1lbnQgdGhpcyBtZXRob2QgaW4gaW5oZXJpdGVkIGNsYXNzLlwiKX1yZXR1cm4gYS5vYnRhaW49ZnVuY3Rpb24oKXt0aHJvdyBuZXcgRXJyb3IoXCJUaGlzIG1ldGhvZCBpcyBhYnN0cmFjdCwgeW91IG11c3QgaW1wbGVtZW50IHRoaXMgbWV0aG9kIGluIGluaGVyaXRlZCBjbGFzcy5cIil9LGF9KCk7YS5NZXNzYWdlQ29udGVudD1iO3ZhciBjPWZ1bmN0aW9uKGEpe2Z1bmN0aW9uIGIoKXthLmFwcGx5KHRoaXMsYXJndW1lbnRzKX1yZXR1cm4gX19leHRlbmRzKGIsYSksYn0oYik7YS5Ob3RpZmljYXRpb25NZXNzYWdlPWM7dmFyIGQ9ZnVuY3Rpb24oYSl7ZnVuY3Rpb24gYigpe2EuYXBwbHkodGhpcyxhcmd1bWVudHMpfXJldHVybiBfX2V4dGVuZHMoYixhKSxifShiKTthLlN0YXR1c01lc3NhZ2U9ZDt2YXIgZT1mdW5jdGlvbigpe2Z1bmN0aW9uIGIoKXt9cmV0dXJuIGIubW9kZWxDbG9uZT1mdW5jdGlvbihhKXt2YXIgYj17fTtmb3IodmFyIGMgaW4gYSlcIm1lc3NhZ2VOYW1lXCIhPWMmJlwiZW5jb2RlXCIhPWMmJihiW2NdPWFbY10pO3JldHVybiBifSxiLm1vZGxlQ3JlYXRlPWZ1bmN0aW9uKGIsYyl7dmFyIGQ9ZnVuY3Rpb24oZSl7dmFyIGY9dGhpcztmb3IodmFyIGcgaW4gYilmW2JbZ11dPWVbYltnXV07ZC5wcm90b3R5cGUubWVzc2FnZU5hbWU9YyxkLnByb3RvdHlwZS5lbmNvZGU9ZnVuY3Rpb24oKXtyZXR1cm4gSlNPTi5zdHJpbmdpZnkoYS5Nb2RlbFV0aWwubW9kZWxDbG9uZSh0aGlzKSl9fTtyZXR1cm4gZH0sYn0oKTthLk1vZGVsVXRpbD1lfShSb25nSU1MaWJ8fChSb25nSU1MaWI9e30pKTt2YXIgUm9uZ0lNTGliOyFmdW5jdGlvbihhKXt2YXIgYj1mdW5jdGlvbigpe2Z1bmN0aW9uIGIoYSl7dGhpcy5tZXNzYWdlTmFtZT1cIkN1c3RvbWVyU3RhdHVzTWVzc2FnZVwiLHRoaXMuc3RhdHVzPWEuc3RhdHVzfXJldHVybiBiLm9idGFpbj1mdW5jdGlvbigpe3JldHVybiBudWxsfSxiLnByb3RvdHlwZS5lbmNvZGU9ZnVuY3Rpb24oKXtyZXR1cm4gSlNPTi5zdHJpbmdpZnkoYS5Nb2RlbFV0aWwubW9kZWxDbG9uZSh0aGlzKSl9LGJ9KCk7YS5DdXN0b21lclN0YXR1c01lc3NhZ2U9Yjt2YXIgYz1mdW5jdGlvbigpe2Z1bmN0aW9uIGIoYSl7dGhpcy5tZXNzYWdlTmFtZT1cIkNoYW5nZU1vZGVSZXNwb25zZU1lc3NhZ2VcIix0aGlzLmNvZGU9YS5jb2RlLHRoaXMuZGF0YT1hLmRhdGEsdGhpcy5tc2c9YS5tc2d9cmV0dXJuIGIub2J0YWluPWZ1bmN0aW9uKCl7cmV0dXJuIG51bGx9LGIucHJvdG90eXBlLmVuY29kZT1mdW5jdGlvbigpe3JldHVybiBKU09OLnN0cmluZ2lmeShhLk1vZGVsVXRpbC5tb2RlbENsb25lKHRoaXMpKX0sYn0oKTthLkNoYW5nZU1vZGVSZXNwb25zZU1lc3NhZ2U9Yzt2YXIgZD1mdW5jdGlvbigpe2Z1bmN0aW9uIGIoYSl7dGhpcy5tZXNzYWdlTmFtZT1cIkNoYW5nZU1vZGVNZXNzYWdlXCIsdGhpcy51aWQ9YS51aWQsdGhpcy5zaWQ9YS5zaWQsdGhpcy5waWQ9YS5waWR9cmV0dXJuIGIub2J0YWluPWZ1bmN0aW9uKCl7cmV0dXJuIG51bGx9LGIucHJvdG90eXBlLmVuY29kZT1mdW5jdGlvbigpe3JldHVybiBKU09OLnN0cmluZ2lmeShhLk1vZGVsVXRpbC5tb2RlbENsb25lKHRoaXMpKX0sYn0oKTthLkNoYW5nZU1vZGVNZXNzYWdlPWQ7dmFyIGU9ZnVuY3Rpb24oKXtmdW5jdGlvbiBiKGEpe3RoaXMubWVzc2FnZU5hbWU9XCJDdXN0b21lclN0YXR1c1VwZGF0ZU1lc3NhZ2VcIix0aGlzLnNlcnZpY2VTdGF0dXM9YS5zZXJ2aWNlU3RhdHVzLHRoaXMuc2lkPWEuc2lkfXJldHVybiBiLm9idGFpbj1mdW5jdGlvbigpe3JldHVybiBudWxsfSxiLnByb3RvdHlwZS5lbmNvZGU9ZnVuY3Rpb24oKXtyZXR1cm4gSlNPTi5zdHJpbmdpZnkoYS5Nb2RlbFV0aWwubW9kZWxDbG9uZSh0aGlzKSl9LGJ9KCk7YS5DdXN0b21lclN0YXR1c1VwZGF0ZU1lc3NhZ2U9ZTt2YXIgZj1mdW5jdGlvbigpe2Z1bmN0aW9uIGIoYSl7dGhpcy5tZXNzYWdlTmFtZT1cIkhhbmRTaGFrZU1lc3NhZ2VcIixhJiYodGhpcy5yZXF1ZXN0SW5mbz1hLnJlcXVlc3RJbmZvLHRoaXMudXNlckluZm89YS51c2VySW5mbyl9cmV0dXJuIGIub2J0YWluPWZ1bmN0aW9uKCl7cmV0dXJuIG51bGx9LGIucHJvdG90eXBlLmVuY29kZT1mdW5jdGlvbigpe3JldHVybiBKU09OLnN0cmluZ2lmeShhLk1vZGVsVXRpbC5tb2RlbENsb25lKHRoaXMpKX0sYn0oKTthLkhhbmRTaGFrZU1lc3NhZ2U9Zjt2YXIgZz1mdW5jdGlvbigpe2Z1bmN0aW9uIGIoYSl7dGhpcy5tZXNzYWdlTmFtZT1cIkN1c3RvbWVyQ29udGFjdFwiLHRoaXMucGFnZT1hLnBhZ2UsdGhpcy5uaWNrTmFtZT1hLm5pY2tOYW1lLHRoaXMucm91dGluZ0luZm89YS5yb3V0aW5nSW5mbyx0aGlzLmluZm89YS5pbmZvLHRoaXMucmVxdWVzdEluZm89YS5yZXF1ZXN0SW5mb31yZXR1cm4gYi5wcm90b3R5cGUuZW5jb2RlPWZ1bmN0aW9uKCl7cmV0dXJuIEpTT04uc3RyaW5naWZ5KGEuTW9kZWxVdGlsLm1vZGVsQ2xvbmUodGhpcykpfSxifSgpO2EuQ3VzdG9tZXJDb250YWN0PWc7dmFyIGg9ZnVuY3Rpb24oKXtmdW5jdGlvbiBiKGEpe3RoaXMubWVzc2FnZU5hbWU9XCJFdmFsdWF0ZU1lc3NhZ2VcIix0aGlzLnVpZD1hLnVpZCx0aGlzLnNpZD1hLnNpZCx0aGlzLnBpZD1hLnBpZCx0aGlzLnNvdXJjZT1hLnNvdXJjZSx0aGlzLnN1Z2dlc3Q9YS5zdWdnZXN0LHRoaXMuaXNyZXNvbHZlPWEuaXNyZXNvbHZlLHRoaXMudHlwZT1hLnR5cGV9cmV0dXJuIGIub2J0YWluPWZ1bmN0aW9uKCl7cmV0dXJuIG51bGx9LGIucHJvdG90eXBlLmVuY29kZT1mdW5jdGlvbigpe3JldHVybiBKU09OLnN0cmluZ2lmeShhLk1vZGVsVXRpbC5tb2RlbENsb25lKHRoaXMpKX0sYn0oKTthLkV2YWx1YXRlTWVzc2FnZT1oO3ZhciBpPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gYihhKXt0aGlzLm1lc3NhZ2VOYW1lPVwiSGFuZFNoYWtlUmVzcG9uc2VNZXNzYWdlXCIsdGhpcy5tc2c9YS5tc2csdGhpcy5zdGF0dXM9YS5zdGF0dXMsdGhpcy5kYXRhPWEuZGF0YX1yZXR1cm4gYi5vYnRhaW49ZnVuY3Rpb24oKXtyZXR1cm4gbnVsbH0sYi5wcm90b3R5cGUuZW5jb2RlPWZ1bmN0aW9uKCl7cmV0dXJuIEpTT04uc3RyaW5naWZ5KGEuTW9kZWxVdGlsLm1vZGVsQ2xvbmUodGhpcykpfSxifSgpO2EuSGFuZFNoYWtlUmVzcG9uc2VNZXNzYWdlPWk7dmFyIGo9ZnVuY3Rpb24oKXtmdW5jdGlvbiBiKGEpe3RoaXMubWVzc2FnZU5hbWU9XCJTdXNwZW5kTWVzc2FnZVwiLHRoaXMudWlkPWEudWlkLHRoaXMuc2lkPWEuc2lkLHRoaXMucGlkPWEucGlkfXJldHVybiBiLm9idGFpbj1mdW5jdGlvbigpe3JldHVybiBudWxsfSxiLnByb3RvdHlwZS5lbmNvZGU9ZnVuY3Rpb24oKXtyZXR1cm4gSlNPTi5zdHJpbmdpZnkoYS5Nb2RlbFV0aWwubW9kZWxDbG9uZSh0aGlzKSl9LGJ9KCk7YS5TdXNwZW5kTWVzc2FnZT1qO3ZhciBrPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gYihhKXt0aGlzLm1lc3NhZ2VOYW1lPVwiVGVybWluYXRlTWVzc2FnZVwiLHRoaXMuY29kZT1hLmNvZGUsdGhpcy5tc2c9YS5tc2csdGhpcy5zaWQ9YS5zaWR9cmV0dXJuIGIub2J0YWluPWZ1bmN0aW9uKCl7cmV0dXJuIG51bGx9LGIucHJvdG90eXBlLmVuY29kZT1mdW5jdGlvbigpe3JldHVybiBKU09OLnN0cmluZ2lmeShhLk1vZGVsVXRpbC5tb2RlbENsb25lKHRoaXMpKX0sYn0oKTthLlRlcm1pbmF0ZU1lc3NhZ2U9a30oUm9uZ0lNTGlifHwoUm9uZ0lNTGliPXt9KSk7dmFyIFJvbmdJTUxpYjshZnVuY3Rpb24oYSl7dmFyIGI9ZnVuY3Rpb24oKXtmdW5jdGlvbiBhKGEpe3RoaXMubWVzc2FnZU5hbWU9XCJJc1R5cGluZ1N0YXR1c01lc3NhZ2VcIn1yZXR1cm4gYS5wcm90b3R5cGUuZW5jb2RlPWZ1bmN0aW9uKCl7fSxhLnByb3RvdHlwZS5nZXRNZXNzYWdlPWZ1bmN0aW9uKCl7cmV0dXJuIG51bGx9LGF9KCk7YS5Jc1R5cGluZ1N0YXR1c01lc3NhZ2U9Yn0oUm9uZ0lNTGlifHwoUm9uZ0lNTGliPXt9KSk7dmFyIFJvbmdJTUxpYjshZnVuY3Rpb24oYSl7dmFyIGI9ZnVuY3Rpb24oKXtmdW5jdGlvbiBiKGEpe2lmKHRoaXMubWVzc2FnZU5hbWU9XCJJbmZvcm1hdGlvbk5vdGlmaWNhdGlvbk1lc3NhZ2VcIiwwPT1hcmd1bWVudHMubGVuZ3RoKXRocm93IG5ldyBFcnJvcihcIkNhbiBub3QgaW5zdGFudGlhdGUgd2l0aCBlbXB0eSBwYXJhbWV0ZXJzLCB1c2Ugb2J0YWluIG1ldGhvZCBpbnN0ZWFkIC0+IEluZm9ybWF0aW9uTm90aWZpY2F0aW9uTWVzc2FnZS5cIik7dGhpcy5tZXNzYWdlPWEubWVzc2FnZSx0aGlzLmV4dHJhPWEuZXh0cmEsYS51c2VyJiYodGhpcy51c2VyPWEudXNlcil9cmV0dXJuIGIub2J0YWluPWZ1bmN0aW9uKGEpe3JldHVybiBuZXcgYih7bWVzc2FnZTphLGV4dHJhOlwiXCJ9KX0sYi5wcm90b3R5cGUuZW5jb2RlPWZ1bmN0aW9uKCl7cmV0dXJuIEpTT04uc3RyaW5naWZ5KGEuTW9kZWxVdGlsLm1vZGVsQ2xvbmUodGhpcykpfSxifSgpO2EuSW5mb3JtYXRpb25Ob3RpZmljYXRpb25NZXNzYWdlPWI7dmFyIGM9ZnVuY3Rpb24oKXtmdW5jdGlvbiBiKGEpe2lmKHRoaXMubWVzc2FnZU5hbWU9XCJDb21tYW5kTWVzc2FnZVwiLDA9PWFyZ3VtZW50cy5sZW5ndGgpdGhyb3cgbmV3IEVycm9yKFwiQ2FuIG5vdCBpbnN0YW50aWF0ZSB3aXRoIGVtcHR5IHBhcmFtZXRlcnMsIHVzZSBvYnRhaW4gbWV0aG9kIGluc3RlYWQgLT4gQ29tbWFuZE1lc3NhZ2UuXCIpO3RyeXtcIltvYmplY3QgU3RyaW5nXVwiPT1PYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoYS5kYXRhKT90aGlzLmRhdGE9SlNPTi5wYXJzZShhLmRhdGEpOnRoaXMuZGF0YT1hLmRhdGF9Y2F0Y2goYil7dGhpcy5kYXRhPWEuZGF0YX10aGlzLm5hbWU9YS5uYW1lLHRoaXMuZXh0cmE9YS5leHRyYX1yZXR1cm4gYi5vYnRhaW49ZnVuY3Rpb24oYSl7cmV0dXJuIG5ldyBiKHtkYXRhOmEsZXh0cmE6XCJcIn0pfSxiLnByb3RvdHlwZS5lbmNvZGU9ZnVuY3Rpb24oKXtyZXR1cm4gSlNPTi5zdHJpbmdpZnkoYS5Nb2RlbFV0aWwubW9kZWxDbG9uZSh0aGlzKSl9LGJ9KCk7YS5Db21tYW5kTWVzc2FnZT1jO3ZhciBkPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gYyhhKXtpZih0aGlzLm1lc3NhZ2VOYW1lPVwiQ29udGFjdE5vdGlmaWNhdGlvbk1lc3NhZ2VcIiwwPT1hcmd1bWVudHMubGVuZ3RoKXRocm93IG5ldyBFcnJvcihcIkNhbiBub3QgaW5zdGFudGlhdGUgd2l0aCBlbXB0eSBwYXJhbWV0ZXJzLCB1c2Ugb2J0YWluIG1ldGhvZCBpbnN0ZWFkIC0+IENvbnRhY3ROb3RpZmljYXRpb25NZXNzYWdlLlwiKTt0aGlzLm9wZXJhdGlvbj1hLm9wZXJhdGlvbix0aGlzLnRhcmdldFVzZXJJZD1hLnRhcmdldFVzZXJJZCx0aGlzLm1lc3NhZ2U9YS5tZXNzYWdlLHRoaXMuZXh0cmE9YS5leHRyYSx0aGlzLnNvdXJjZVVzZXJJZD1hLnNvdXJjZVVzZXJJZCxhLnVzZXImJih0aGlzLnVzZXI9YS51c2VyKX1yZXR1cm4gYy5vYnRhaW49ZnVuY3Rpb24oYSxjLGQsZSl7cmV0dXJuIG5ldyBiKHtvcGVyYXRpb246YSxzb3VyY2VVc2VySWQ6Yyx0YXJnZXRVc2VySWQ6ZCxtZXNzYWdlOmV9KX0sYy5wcm90b3R5cGUuZW5jb2RlPWZ1bmN0aW9uKCl7cmV0dXJuIEpTT04uc3RyaW5naWZ5KGEuTW9kZWxVdGlsLm1vZGVsQ2xvbmUodGhpcykpfSxjLkNPTlRBQ1RfT1BFUkFUSU9OX0FDQ0VQVF9SRVNQT05TRT1cIkNvbnRhY3RPcGVyYXRpb25BY2NlcHRSZXNwb25zZVwiLGMuQ09OVEFDVF9PUEVSQVRJT05fUkVKRUNUX1JFU1BPTlNFPVwiQ29udGFjdE9wZXJhdGlvblJlamVjdFJlc3BvbnNlXCIsYy5DT05UQUNUX09QRVJBVElPTl9SRVFVRVNUPVwiQ29udGFjdE9wZXJhdGlvblJlcXVlc3RcIixjfSgpO2EuQ29udGFjdE5vdGlmaWNhdGlvbk1lc3NhZ2U9ZDt2YXIgZT1mdW5jdGlvbigpe2Z1bmN0aW9uIGIoYSl7aWYodGhpcy5tZXNzYWdlTmFtZT1cIlByb2ZpbGVOb3RpZmljYXRpb25NZXNzYWdlXCIsMD09YXJndW1lbnRzLmxlbmd0aCl0aHJvdyBuZXcgRXJyb3IoXCJDYW4gbm90IGluc3RhbnRpYXRlIHdpdGggZW1wdHkgcGFyYW1ldGVycywgdXNlIG9idGFpbiBtZXRob2QgaW5zdGVhZCAtPiBQcm9maWxlTm90aWZpY2F0aW9uTWVzc2FnZS5cIik7dGhpcy5vcGVyYXRpb249YS5vcGVyYXRpb247dHJ5e1wiW29iamVjdCBTdHJpbmddXCI9PU9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChhLmRhdGEpP3RoaXMuZGF0YT1KU09OLnBhcnNlKGEuZGF0YSk6dGhpcy5kYXRhPWEuZGF0YX1jYXRjaChiKXt0aGlzLmRhdGE9YS5kYXRhfXRoaXMuZXh0cmE9YS5leHRyYSxhLnVzZXImJih0aGlzLnVzZXI9YS51c2VyKX1yZXR1cm4gYi5vYnRhaW49ZnVuY3Rpb24oYSxjKXtyZXR1cm4gbmV3IGIoe29wZXJhdGlvbjphLGRhdGE6Y30pfSxiLnByb3RvdHlwZS5lbmNvZGU9ZnVuY3Rpb24oKXtyZXR1cm4gSlNPTi5zdHJpbmdpZnkoYS5Nb2RlbFV0aWwubW9kZWxDbG9uZSh0aGlzKSl9LGJ9KCk7YS5Qcm9maWxlTm90aWZpY2F0aW9uTWVzc2FnZT1lO3ZhciBmPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gYihhKXtpZih0aGlzLm1lc3NhZ2VOYW1lPVwiQ29tbWFuZE5vdGlmaWNhdGlvbk1lc3NhZ2VcIiwwPT1hcmd1bWVudHMubGVuZ3RoKXRocm93IG5ldyBFcnJvcihcIkNhbiBub3QgaW5zdGFudGlhdGUgd2l0aCBlbXB0eSBwYXJhbWV0ZXJzLCB1c2Ugb2J0YWluIG1ldGhvZCBpbnN0ZWFkIC0+IFByb2ZpbGVOb3RpZmljYXRpb25NZXNzYWdlLlwiKTt0cnl7XCJbb2JqZWN0IFN0cmluZ11cIj09T2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGEuZGF0YSk/dGhpcy5kYXRhPUpTT04ucGFyc2UoYS5kYXRhKTp0aGlzLmRhdGE9YS5kYXRhfWNhdGNoKGIpe3RoaXMuZGF0YT1hLmRhdGF9dGhpcy5uYW1lPWEubmFtZSx0aGlzLmV4dHJhPWEuZXh0cmEsYS51c2VyJiYodGhpcy51c2VyPWEudXNlcil9cmV0dXJuIGIub2J0YWluPWZ1bmN0aW9uKGEsYyl7cmV0dXJuIG5ldyBiKHtuYW1lOmEsZGF0YTpjLGV4dHJhOlwiXCJ9KX0sYi5wcm90b3R5cGUuZW5jb2RlPWZ1bmN0aW9uKCl7cmV0dXJuIEpTT04uc3RyaW5naWZ5KGEuTW9kZWxVdGlsLm1vZGVsQ2xvbmUodGhpcykpfSxifSgpO2EuQ29tbWFuZE5vdGlmaWNhdGlvbk1lc3NhZ2U9Zjt2YXIgZz1mdW5jdGlvbigpe2Z1bmN0aW9uIGIoYSl7aWYodGhpcy5tZXNzYWdlTmFtZT1cIkRpc2N1c3Npb25Ob3RpZmljYXRpb25NZXNzYWdlXCIsMD09YXJndW1lbnRzLmxlbmd0aCl0aHJvdyBuZXcgRXJyb3IoXCJDYW4gbm90IGluc3RhbnRpYXRlIHdpdGggZW1wdHkgcGFyYW1ldGVycywgdXNlIG9idGFpbiBtZXRob2QgaW5zdGVhZCAtPiBEaXNjdXNzaW9uTm90aWZpY2F0aW9uTWVzc2FnZS5cIik7dGhpcy5leHRyYT1hLmV4dHJhLHRoaXMuZXh0ZW5zaW9uPWEuZXh0ZW5zaW9uLHRoaXMudHlwZT1hLnR5cGUsdGhpcy5pc0hhc1JlY2VpdmVkPWEuaXNIYXNSZWNlaXZlZCx0aGlzLm9wZXJhdGlvbj1hLm9wZXJhdGlvbix0aGlzLnVzZXI9YS51c2VyLGEudXNlciYmKHRoaXMudXNlcj1hLnVzZXIpfXJldHVybiBiLnByb3RvdHlwZS5lbmNvZGU9ZnVuY3Rpb24oKXtyZXR1cm4gSlNPTi5zdHJpbmdpZnkoYS5Nb2RlbFV0aWwubW9kZWxDbG9uZSh0aGlzKSl9LGJ9KCk7YS5EaXNjdXNzaW9uTm90aWZpY2F0aW9uTWVzc2FnZT1nO3ZhciBoPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gYihhKXtpZih0aGlzLm1lc3NhZ2VOYW1lPVwiR3JvdXBOb3RpZmljYXRpb25NZXNzYWdlXCIsMD09YXJndW1lbnRzLmxlbmd0aCl0aHJvdyBuZXcgRXJyb3IoXCJDYW4gbm90IGluc3RhbnRpYXRlIHdpdGggZW1wdHkgcGFyYW1ldGVycywgdXNlIG9idGFpbiBtZXRob2QgaW5zdGVhZCAtPiBHcm91cE5vdGlmaWNhdGlvbk1lc3NhZ2UuXCIpO2Eub3BlcmF0b3JVc2VySWQmJih0aGlzLm9wZXJhdG9yVXNlcklkPWEub3BlcmF0b3JVc2VySWQpLGEub3BlcmF0aW9uJiYodGhpcy5vcGVyYXRpb249YS5vcGVyYXRpb24pLGEuZGF0YSYmKHRoaXMuZGF0YT1hLmRhdGEpLGEubWVzc2FnZSYmKHRoaXMubWVzc2FnZT1hLm1lc3NhZ2UpLGEuZXh0cmEmJih0aGlzLmV4dHJhPWEuZXh0cmEpfXJldHVybiBiLnByb3RvdHlwZS5lbmNvZGU9ZnVuY3Rpb24oKXtyZXR1cm4gSlNPTi5zdHJpbmdpZnkoYS5Nb2RlbFV0aWwubW9kZWxDbG9uZSh0aGlzKSl9LGJ9KCk7YS5Hcm91cE5vdGlmaWNhdGlvbk1lc3NhZ2U9aH0oUm9uZ0lNTGlifHwoUm9uZ0lNTGliPXt9KSk7dmFyIFJvbmdJTUxpYjshZnVuY3Rpb24oYSl7dmFyIGI9ZnVuY3Rpb24oKXtmdW5jdGlvbiBiKGEpe2lmKHRoaXMubWVzc2FnZU5hbWU9XCJUZXh0TWVzc2FnZVwiLDA9PWFyZ3VtZW50cy5sZW5ndGgpdGhyb3cgbmV3IEVycm9yKFwiQ2FuIG5vdCBpbnN0YW50aWF0ZSB3aXRoIGVtcHR5IHBhcmFtZXRlcnMsIHVzZSBvYnRhaW4gbWV0aG9kIGluc3RlYWQgLT4gVGV4dE1lc3NhZ2UuXCIpO3RoaXMuY29udGVudD1hLmNvbnRlbnQsdGhpcy5leHRyYT1hLmV4dHJhLGEudXNlciYmKHRoaXMudXNlcj1hLnVzZXIpLGEubWVudGlvbmVkSW5mbyYmKHRoaXMubWVudGlvbmVkSW5mbz1hLm1lbnRpb25lZEluZm8pfXJldHVybiBiLm9idGFpbj1mdW5jdGlvbihhKXtyZXR1cm4gbmV3IGIoe2V4dHJhOlwiXCIsY29udGVudDphfSl9LGIucHJvdG90eXBlLmVuY29kZT1mdW5jdGlvbigpe3JldHVybiBKU09OLnN0cmluZ2lmeShhLk1vZGVsVXRpbC5tb2RlbENsb25lKHRoaXMpKX0sYn0oKTthLlRleHRNZXNzYWdlPWI7dmFyIGM9ZnVuY3Rpb24oKXtmdW5jdGlvbiBiKGEpe2lmKHRoaXMubWVzc2FnZU5hbWU9XCJUeXBpbmdTdGF0dXNNZXNzYWdlXCIsMD09YXJndW1lbnRzLmxlbmd0aCl0aHJvdyBuZXcgRXJyb3IoXCJDYW4gbm90IGluc3RhbnRpYXRlIHdpdGggZW1wdHkgcGFyYW1ldGVycywgdXNlIG9idGFpbiBtZXRob2QgaW5zdGVhZCAtPiBUeXBpbmdTdGF0dXNNZXNzYWdlLlwiKTt0aGlzLnR5cGluZ0NvbnRlbnRUeXBlPWEudHlwaW5nQ29udGVudFR5cGUsdGhpcy5kYXRhPWEuZGF0YX1yZXR1cm4gYi5vYnRhaW49ZnVuY3Rpb24oYSxjKXtyZXR1cm4gbmV3IGIoe3R5cGluZ0NvbnRlbnRUeXBlOmEsZGF0YTpjfSl9LGIucHJvdG90eXBlLmVuY29kZT1mdW5jdGlvbigpe3JldHVybiBKU09OLnN0cmluZ2lmeShhLk1vZGVsVXRpbC5tb2RlbENsb25lKHRoaXMpKX0sYn0oKTthLlR5cGluZ1N0YXR1c01lc3NhZ2U9Yzt2YXIgZD1mdW5jdGlvbigpe2Z1bmN0aW9uIGIoYSl7aWYodGhpcy5tZXNzYWdlTmFtZT1cIlJlYWRSZWNlaXB0TWVzc2FnZVwiLDA9PWFyZ3VtZW50cy5sZW5ndGgpdGhyb3cgbmV3IEVycm9yKFwiQ2FuIG5vdCBpbnN0YW50aWF0ZSB3aXRoIGVtcHR5IHBhcmFtZXRlcnMsIHVzZSBvYnRhaW4gbWV0aG9kIGluc3RlYWQgLT4gUmVhZFJlY2VpcHRNZXNzYWdlLlwiKTt0aGlzLmxhc3RNZXNzYWdlU2VuZFRpbWU9YS5sYXN0TWVzc2FnZVNlbmRUaW1lLHRoaXMubWVzc2FnZVVJZD1hLm1lc3NhZ2VVSWQsdGhpcy50eXBlPWEudHlwZX1yZXR1cm4gYi5vYnRhaW49ZnVuY3Rpb24oYSxjLGQpe3JldHVybiBuZXcgYih7bWVzc2FnZVVJZDphLGxhc3RNZXNzYWdlU2VuZFRpbWU6Yyx0eXBlOmR9KX0sYi5wcm90b3R5cGUuZW5jb2RlPWZ1bmN0aW9uKCl7cmV0dXJuIEpTT04uc3RyaW5naWZ5KGEuTW9kZWxVdGlsLm1vZGVsQ2xvbmUodGhpcykpfSxifSgpO2EuUmVhZFJlY2VpcHRNZXNzYWdlPWQ7dmFyIGU9ZnVuY3Rpb24oKXtmdW5jdGlvbiBiKGEpe2lmKHRoaXMubWVzc2FnZU5hbWU9XCJWb2ljZU1lc3NhZ2VcIiwwPT1hcmd1bWVudHMubGVuZ3RoKXRocm93IG5ldyBFcnJvcihcIkNhbiBub3QgaW5zdGFudGlhdGUgd2l0aCBlbXB0eSBwYXJhbWV0ZXJzLCB1c2Ugb2J0YWluIG1ldGhvZCBpbnN0ZWFkIC0+IFZvaWNlTWVzc2FnZS5cIik7dGhpcy5jb250ZW50PWEuY29udGVudCx0aGlzLmR1cmF0aW9uPWEuZHVyYXRpb24sdGhpcy5leHRyYT1hLmV4dHJhLGEudXNlciYmKHRoaXMudXNlcj1hLnVzZXIpLGEubWVudGlvbmVkSW5mbyYmKHRoaXMubWVudGlvbmVkSW5mbz1hLm1lbnRpb25lZEluZm8pfXJldHVybiBiLm9idGFpbj1mdW5jdGlvbihhLGMpe3JldHVybiBuZXcgYih7Y29udGVudDphLGR1cmF0aW9uOmMsZXh0cmE6XCJcIn0pfSxiLnByb3RvdHlwZS5lbmNvZGU9ZnVuY3Rpb24oKXtyZXR1cm4gSlNPTi5zdHJpbmdpZnkoYS5Nb2RlbFV0aWwubW9kZWxDbG9uZSh0aGlzKSl9LGJ9KCk7YS5Wb2ljZU1lc3NhZ2U9ZTt2YXIgZj1mdW5jdGlvbigpe2Z1bmN0aW9uIGIoYSl7dGhpcy5tZXNzYWdlTmFtZT1cIlJlY2FsbENvbW1hbmRNZXNzYWdlXCIsdGhpcy5tZXNzYWdlVUlkPWEubWVzc2FnZVVJZCx0aGlzLmNvbnZlcnNhdGlvblR5cGU9YS5jb252ZXJzYXRpb25UeXBlLHRoaXMudGFyZ2V0SWQ9YS50YXJnZXRJZCx0aGlzLnNlbnRUaW1lPWEuc2VudFRpbWUsYS5leHRyYSYmKHRoaXMuZXh0cmE9YS5leHRyYSksYS51c2VyJiYodGhpcy51c2VyPWEudXNlcil9cmV0dXJuIGIucHJvdG90eXBlLmVuY29kZT1mdW5jdGlvbigpe3JldHVybiBKU09OLnN0cmluZ2lmeShhLk1vZGVsVXRpbC5tb2RlbENsb25lKHRoaXMpKX0sYn0oKTthLlJlY2FsbENvbW1hbmRNZXNzYWdlPWY7dmFyIGc9ZnVuY3Rpb24oKXtmdW5jdGlvbiBiKGEpe2lmKHRoaXMubWVzc2FnZU5hbWU9XCJJbWFnZU1lc3NhZ2VcIiwwPT1hcmd1bWVudHMubGVuZ3RoKXRocm93IG5ldyBFcnJvcihcIkNhbiBub3QgaW5zdGFudGlhdGUgd2l0aCBlbXB0eSBwYXJhbWV0ZXJzLCB1c2Ugb2J0YWluIG1ldGhvZCBpbnN0ZWFkIC0+IEltYWdlTWVzc2FnZS5cIik7dGhpcy5jb250ZW50PWEuY29udGVudCx0aGlzLmltYWdlVXJpPWEuaW1hZ2VVcmksYS5leHRyYSYmKHRoaXMuZXh0cmE9YS5leHRyYSksYS51c2VyJiYodGhpcy51c2VyPWEudXNlciksYS5tZW50aW9uZWRJbmZvJiYodGhpcy5tZW50aW9uZWRJbmZvPWEubWVudGlvbmVkSW5mbyl9cmV0dXJuIGIub2J0YWluPWZ1bmN0aW9uKGEsYyl7cmV0dXJuIG5ldyBiKHtjb250ZW50OmEsaW1hZ2VVcmk6YyxleHRyYTpcIlwifSl9LGIucHJvdG90eXBlLmVuY29kZT1mdW5jdGlvbigpe3JldHVybiBKU09OLnN0cmluZ2lmeShhLk1vZGVsVXRpbC5tb2RlbENsb25lKHRoaXMpKX0sYn0oKTthLkltYWdlTWVzc2FnZT1nO3ZhciBoPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gYihhKXtpZih0aGlzLm1lc3NhZ2VOYW1lPVwiTG9jYXRpb25NZXNzYWdlXCIsMD09YXJndW1lbnRzLmxlbmd0aCl0aHJvdyBuZXcgRXJyb3IoXCJDYW4gbm90IGluc3RhbnRpYXRlIHdpdGggZW1wdHkgcGFyYW1ldGVycywgdXNlIG9idGFpbiBtZXRob2QgaW5zdGVhZCAtPiBMb2NhdGlvbk1lc3NhZ2UuXCIpO3RoaXMubGF0aXR1ZGU9YS5sYXRpdHVkZSx0aGlzLmxvbmdpdHVkZT1hLmxvbmdpdHVkZSx0aGlzLnBvaT1hLnBvaSx0aGlzLmNvbnRlbnQ9YS5jb250ZW50LHRoaXMuZXh0cmE9YS5leHRyYSxhLnVzZXImJih0aGlzLnVzZXI9YS51c2VyKSxhLm1lbnRpb25lZEluZm8mJih0aGlzLm1lbnRpb25lZEluZm89YS5tZW50aW9uZWRJbmZvKX1yZXR1cm4gYi5vYnRhaW49ZnVuY3Rpb24oYSxjLGQsZSl7cmV0dXJuIG5ldyBiKHtsYXRpdHVkZTphLGxvbmdpdHVkZTpjLHBvaTpkLGNvbnRlbnQ6ZSxleHRyYTpcIlwifSl9LGIucHJvdG90eXBlLmVuY29kZT1mdW5jdGlvbigpe3JldHVybiBKU09OLnN0cmluZ2lmeShhLk1vZGVsVXRpbC5tb2RlbENsb25lKHRoaXMpKX0sYn0oKTthLkxvY2F0aW9uTWVzc2FnZT1oO3ZhciBpPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gYihhKXtpZih0aGlzLm1lc3NhZ2VOYW1lPVwiUmljaENvbnRlbnRNZXNzYWdlXCIsMD09YXJndW1lbnRzLmxlbmd0aCl0aHJvdyBuZXcgRXJyb3IoXCJDYW4gbm90IGluc3RhbnRpYXRlIHdpdGggZW1wdHkgcGFyYW1ldGVycywgdXNlIG9idGFpbiBtZXRob2QgaW5zdGVhZCAtPiBSaWNoQ29udGVudE1lc3NhZ2UuXCIpO3RoaXMudGl0bGU9YS50aXRsZSx0aGlzLmNvbnRlbnQ9YS5jb250ZW50LHRoaXMuaW1hZ2VVcmk9YS5pbWFnZVVyaSx0aGlzLmV4dHJhPWEuZXh0cmEsdGhpcy51cmw9YS51cmwsYS51c2VyJiYodGhpcy51c2VyPWEudXNlcil9cmV0dXJuIGIub2J0YWluPWZ1bmN0aW9uKGEsYyxkLGUpe3JldHVybiBuZXcgYih7dGl0bGU6YSxjb250ZW50OmMsaW1hZ2VVcmk6ZCx1cmw6ZSxleHRyYTpcIlwifSl9LGIucHJvdG90eXBlLmVuY29kZT1mdW5jdGlvbigpe3JldHVybiBKU09OLnN0cmluZ2lmeShhLk1vZGVsVXRpbC5tb2RlbENsb25lKHRoaXMpKX0sYn0oKTthLlJpY2hDb250ZW50TWVzc2FnZT1pO3ZhciBqPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gYShhKXt0aGlzLm1lc3NhZ2VOYW1lPVwiSnJtZlJlZFBhY2tldE1lc3NhZ2VcIixhJiYodGhpcy5tZXNzYWdlPWEpfXJldHVybiBhLnByb3RvdHlwZS5lbmNvZGU9ZnVuY3Rpb24oKXtyZXR1cm5cIlwifSxhfSgpO2EuSnJtZlJlZFBhY2tldE1lc3NhZ2U9ajt2YXIgaz1mdW5jdGlvbigpe2Z1bmN0aW9uIGEoYSl7dGhpcy5tZXNzYWdlTmFtZT1cIkpybWZSZWRQYWNrZXRPcGVuZWRNZXNzYWdlXCIsYSYmKHRoaXMubWVzc2FnZT1hKX1yZXR1cm4gYS5wcm90b3R5cGUuZW5jb2RlPWZ1bmN0aW9uKCl7cmV0dXJuXCJcIn0sYX0oKTthLkpybWZSZWRQYWNrZXRPcGVuZWRNZXNzYWdlPWs7dmFyIGw9ZnVuY3Rpb24oKXtmdW5jdGlvbiBhKGEpe2lmKHRoaXMubWVzc2FnZU5hbWU9XCJVbmtub3duTWVzc2FnZVwiLDA9PWFyZ3VtZW50cy5sZW5ndGgpdGhyb3cgbmV3IEVycm9yKFwiQ2FuIG5vdCBpbnN0YW50aWF0ZSB3aXRoIGVtcHR5IHBhcmFtZXRlcnMsIHVzZSBvYnRhaW4gbWV0aG9kIGluc3RlYWQgLT4gVW5rbm93bk1lc3NhZ2UuXCIpO3RoaXMubWVzc2FnZT1hfXJldHVybiBhLnByb3RvdHlwZS5lbmNvZGU9ZnVuY3Rpb24oKXtyZXR1cm5cIlwifSxhfSgpO2EuVW5rbm93bk1lc3NhZ2U9bDt2YXIgbT1mdW5jdGlvbigpe2Z1bmN0aW9uIGIoYSl7aWYodGhpcy5tZXNzYWdlTmFtZT1cIlB1YmxpY1NlcnZpY2VDb21tYW5kTWVzc2FnZVwiLDA9PWFyZ3VtZW50cy5sZW5ndGgpdGhyb3cgbmV3IEVycm9yKFwiQ2FuIG5vdCBpbnN0YW50aWF0ZSB3aXRoIGVtcHR5IHBhcmFtZXRlcnMsIHVzZSBvYnRhaW4gbWV0aG9kIGluc3RlYWQgLT4gUHVibGljU2VydmljZUNvbW1hbmRNZXNzYWdlLlwiKTt0aGlzLmNvbnRlbnQ9YS5jb250ZW50LHRoaXMuZXh0cmE9YS5leHRyYSx0aGlzLm1lbnVJdGVtPWEubWVudUl0ZW0sYS51c2VyJiYodGhpcy51c2VyPWEudXNlciksYS5tZW50aW9uZWRJbmZvJiYodGhpcy5tZW50aW9uZWRJbmZvPWEubWVudGlvbmVkSW5mbyl9cmV0dXJuIGIub2J0YWluPWZ1bmN0aW9uKGEpe3JldHVybiBuZXcgYih7Y29udGVudDpcIlwiLGNvbW1hbmQ6XCJcIixtZW51SXRlbTphLGV4dHJhOlwiXCJ9KX0sYi5wcm90b3R5cGUuZW5jb2RlPWZ1bmN0aW9uKCl7cmV0dXJuIEpTT04uc3RyaW5naWZ5KGEuTW9kZWxVdGlsLm1vZGVsQ2xvbmUodGhpcykpfSxifSgpO2EuUHVibGljU2VydmljZUNvbW1hbmRNZXNzYWdlPW07dmFyIG49ZnVuY3Rpb24oKXtmdW5jdGlvbiBhKGEpe3RoaXMubWVzc2FnZU5hbWU9XCJQdWJsaWNTZXJ2aWNlTXVsdGlSaWNoQ29udGVudE1lc3NhZ2VcIix0aGlzLnJpY2hDb250ZW50TWVzc2FnZXM9YX1yZXR1cm4gYS5wcm90b3R5cGUuZW5jb2RlPWZ1bmN0aW9uKCl7cmV0dXJuIG51bGx9LGF9KCk7YS5QdWJsaWNTZXJ2aWNlTXVsdGlSaWNoQ29udGVudE1lc3NhZ2U9bjt2YXIgbz1mdW5jdGlvbigpe2Z1bmN0aW9uIGIoYSl7dGhpcy5tZXNzYWdlTmFtZT1cIlN5bmNSZWFkU3RhdHVzTWVzc2FnZVwiLGEubGFzdE1lc3NhZ2VTZW5kVGltZSYmKHRoaXMubGFzdE1lc3NhZ2VTZW5kVGltZT1hLmxhc3RNZXNzYWdlU2VuZFRpbWUpfXJldHVybiBiLnByb3RvdHlwZS5lbmNvZGU9ZnVuY3Rpb24oKXtyZXR1cm4gSlNPTi5zdHJpbmdpZnkoYS5Nb2RlbFV0aWwubW9kZWxDbG9uZSh0aGlzKSl9LGJ9KCk7YS5TeW5jUmVhZFN0YXR1c01lc3NhZ2U9bzt2YXIgcD1mdW5jdGlvbigpe2Z1bmN0aW9uIGIoYSl7dGhpcy5tZXNzYWdlTmFtZT1cIlJlYWRSZWNlaXB0UmVxdWVzdE1lc3NhZ2VcIixhLm1lc3NhZ2VVSWQmJih0aGlzLm1lc3NhZ2VVSWQ9YS5tZXNzYWdlVUlkKX1yZXR1cm4gYi5wcm90b3R5cGUuZW5jb2RlPWZ1bmN0aW9uKCl7cmV0dXJuIEpTT04uc3RyaW5naWZ5KGEuTW9kZWxVdGlsLm1vZGVsQ2xvbmUodGhpcykpfSxifSgpO2EuUmVhZFJlY2VpcHRSZXF1ZXN0TWVzc2FnZT1wO3ZhciBxPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gYihhKXt0aGlzLm1lc3NhZ2VOYW1lPVwiUmVhZFJlY2VpcHRSZXNwb25zZU1lc3NhZ2VcIixhLnJlY2VpcHRNZXNzYWdlRGljJiYodGhpcy5yZWNlaXB0TWVzc2FnZURpYz1hLnJlY2VpcHRNZXNzYWdlRGljKX1yZXR1cm4gYi5wcm90b3R5cGUuZW5jb2RlPWZ1bmN0aW9uKCl7cmV0dXJuIEpTT04uc3RyaW5naWZ5KGEuTW9kZWxVdGlsLm1vZGVsQ2xvbmUodGhpcykpfSxifSgpO2EuUmVhZFJlY2VpcHRSZXNwb25zZU1lc3NhZ2U9cTt2YXIgcj1mdW5jdGlvbigpe2Z1bmN0aW9uIGIoYSl7dGhpcy5tZXNzYWdlTmFtZT1cIlB1YmxpY1NlcnZpY2VSaWNoQ29udGVudE1lc3NhZ2VcIix0aGlzLnJpY2hDb250ZW50TWVzc2FnZT1hfXJldHVybiBiLnByb3RvdHlwZS5lbmNvZGU9ZnVuY3Rpb24oKXtyZXR1cm4gSlNPTi5zdHJpbmdpZnkoYS5Nb2RlbFV0aWwubW9kZWxDbG9uZSh0aGlzKSl9LGJ9KCk7YS5QdWJsaWNTZXJ2aWNlUmljaENvbnRlbnRNZXNzYWdlPXI7dmFyIHM9ZnVuY3Rpb24oKXtmdW5jdGlvbiBiKGEpe3RoaXMubWVzc2FnZU5hbWU9XCJGaWxlTWVzc2FnZVwiLGEubmFtZSYmKHRoaXMubmFtZT1hLm5hbWUpLGEuc2l6ZSYmKHRoaXMuc2l6ZT1hLnNpemUpLGEudHlwZSYmKHRoaXMudHlwZT1hLnR5cGUpLGEuZmlsZVVybCYmKHRoaXMuZmlsZVVybD1hLmZpbGVVcmwpLGEuZXh0cmEmJih0aGlzLmV4dHJhPWEuZXh0cmEpLGEudXNlciYmKHRoaXMudXNlcj1hLnVzZXIpfXJldHVybiBiLm9idGFpbj1mdW5jdGlvbihhKXtyZXR1cm4gbmV3IGIoe25hbWU6YS5uYW1lLHNpemU6YS5zaXplLHR5cGU6YS50eXBlLGZpbGVVcmw6YS5maWxlVXJsfSl9LGIucHJvdG90eXBlLmVuY29kZT1mdW5jdGlvbigpe3JldHVybiBKU09OLnN0cmluZ2lmeShhLk1vZGVsVXRpbC5tb2RlbENsb25lKHRoaXMpKX0sYn0oKTthLkZpbGVNZXNzYWdlPXM7dmFyIHQ9ZnVuY3Rpb24oKXtmdW5jdGlvbiBiKGEpe3RoaXMubWVzc2FnZU5hbWU9XCJIUVZvaWNlTWVzc2FnZVwiLHRoaXMudHlwZT1hLnR5cGV8fFwiYWFjXCIsYS5sb2NhbFBhdGgmJih0aGlzLmxvY2FsUGF0aD1hLmxvY2FsUGF0aCksYS5yZW1vdGVVcmwmJih0aGlzLnJlbW90ZVVybD1hLnJlbW90ZVVybCksYS5kdXJhdGlvbiYmKHRoaXMuZHVyYXRpb249YS5kdXJhdGlvbiksYS5leHRyYSYmKHRoaXMuZXh0cmE9YS5leHRyYSksYS51c2VyJiYodGhpcy51c2VyPWEudXNlcil9cmV0dXJuIGIucHJvdG90eXBlLmVuY29kZT1mdW5jdGlvbigpe3JldHVybiBKU09OLnN0cmluZ2lmeShhLk1vZGVsVXRpbC5tb2RlbENsb25lKHRoaXMpKX0sYn0oKTthLkhRVm9pY2VNZXNzYWdlPXQ7dmFyIHU9ZnVuY3Rpb24oKXtmdW5jdGlvbiBiKGEpe3RoaXMubWVzc2FnZU5hbWU9XCJBY2NlcHRNZXNzYWdlXCIsdGhpcy5tZWRpYUlkPWEubWVkaWFJZCx0aGlzLmNhbGxJZD1hLmNhbGxJZCx0aGlzLm1lZGlhVHlwZT1hLm1lZGlhVHlwZSx0aGlzLm1vZGU9YS5tb2RlLHRoaXMuc3ViSW5mbz1hLnN1YkluZm99cmV0dXJuIGIucHJvdG90eXBlLmVuY29kZT1mdW5jdGlvbigpe3JldHVybiBKU09OLnN0cmluZ2lmeShhLk1vZGVsVXRpbC5tb2RlbENsb25lKHRoaXMpKX0sYn0oKTthLkFjY2VwdE1lc3NhZ2U9dTt2YXIgdj1mdW5jdGlvbigpe2Z1bmN0aW9uIGIoYSl7dGhpcy5tZXNzYWdlTmFtZT1cIlJpbmdpbmdNZXNzYWdlXCIsdGhpcy5jYWxsSWQ9YS5jYWxsSWR9cmV0dXJuIGIucHJvdG90eXBlLmVuY29kZT1mdW5jdGlvbigpe3JldHVybiBKU09OLnN0cmluZ2lmeShhLk1vZGVsVXRpbC5tb2RlbENsb25lKHRoaXMpKX0sYn0oKTthLlJpbmdpbmdNZXNzYWdlPXY7dmFyIHc9ZnVuY3Rpb24oKXtmdW5jdGlvbiBiKGEpe3RoaXMubWVzc2FnZU5hbWU9XCJTdW1tYXJ5TWVzc2FnZVwiLHRoaXMuY2FsbGVyPWEuY2FsbGVyLHRoaXMuaW52aXRlcj1hLmludml0ZXIsdGhpcy5tZWRpYVR5cGU9YS5tZWRpYVR5cGUsdGhpcy5tZW1iZXJJZExpc3Q9YS5tZW1iZXJJZExpc3QsdGhpcy5zdGFydFRpbWU9YS5zdGFydFRpbWUsdGhpcy5jb25uZWN0ZWRUaW1lPWEuY29ubmVjdGVkVGltZSx0aGlzLmR1cmF0aW9uPWEuZHVyYXRpb24sdGhpcy5zdGF0dXM9YS5zdGF0dXN9cmV0dXJuIGIucHJvdG90eXBlLmVuY29kZT1mdW5jdGlvbigpe3JldHVybiBKU09OLnN0cmluZ2lmeShhLk1vZGVsVXRpbC5tb2RlbENsb25lKHRoaXMpKX0sYn0oKTthLlN1bW1hcnlNZXNzYWdlPXc7dmFyIHg9ZnVuY3Rpb24oKXtmdW5jdGlvbiBiKGEpe3RoaXMubWVzc2FnZU5hbWU9XCJIdW5ndXBNZXNzYWdlXCIsdGhpcy5jYWxsSWQ9YS5jYWxsSWQsdGhpcy5yZWFzb249YS5yZWFzb24sdGhpcy5tb2RlPWEubW9kZSx0aGlzLnN1YkluZm89YS5zdWJJbmZvfXJldHVybiBiLnByb3RvdHlwZS5lbmNvZGU9ZnVuY3Rpb24oKXtyZXR1cm4gSlNPTi5zdHJpbmdpZnkoYS5Nb2RlbFV0aWwubW9kZWxDbG9uZSh0aGlzKSl9LGJ9KCk7YS5IdW5ndXBNZXNzYWdlPXg7dmFyIHk9ZnVuY3Rpb24oKXtmdW5jdGlvbiBiKGEpe3RoaXMubWVzc2FnZU5hbWU9XCJJbnZpdGVNZXNzYWdlXCIsdGhpcy5tZWRpYUlkPWEubWVkaWFJZCx0aGlzLmNhbGxJZD1hLmNhbGxJZCx0aGlzLmVuZ2luZVR5cGU9YS5lbmdpbmVUeXBlLHRoaXMuY2hhbm5lbEluZm89YS5jaGFubmVsSW5mbyx0aGlzLm1lZGlhVHlwZT1hLm1lZGlhVHlwZSx0aGlzLmV4dHJhPWEuZXh0cmEsdGhpcy5pbnZpdGVVc2VySWRzPWEuaW52aXRlVXNlcklkcyx0aGlzLm9ic2VydmVyVXNlcklkcz1hLm9ic2VydmVyVXNlcklkcyx0aGlzLm1vZGU9YS5tb2RlLHRoaXMuc3ViSW5mbz1hLnN1YkluZm99cmV0dXJuIGIucHJvdG90eXBlLmVuY29kZT1mdW5jdGlvbigpe3JldHVybiBKU09OLnN0cmluZ2lmeShhLk1vZGVsVXRpbC5tb2RlbENsb25lKHRoaXMpKX0sYn0oKTthLkludml0ZU1lc3NhZ2U9eTt2YXIgej1mdW5jdGlvbigpe2Z1bmN0aW9uIGIoYSl7dGhpcy5tZXNzYWdlTmFtZT1cIk1lZGlhTW9kaWZ5TWVzc2FnZVwiLHRoaXMuY2FsbElkPWEuY2FsbElkLHRoaXMubWVkaWFUeXBlPWEubWVkaWFUeXBlLHRoaXMubW9kZT1hLm1vZGUsdGhpcy5zdWJJbmZvPWEuc3ViSW5mb31yZXR1cm4gYi5wcm90b3R5cGUuZW5jb2RlPWZ1bmN0aW9uKCl7cmV0dXJuIEpTT04uc3RyaW5naWZ5KGEuTW9kZWxVdGlsLm1vZGVsQ2xvbmUodGhpcykpfSxifSgpO2EuTWVkaWFNb2RpZnlNZXNzYWdlPXo7dmFyIEE9ZnVuY3Rpb24oKXtmdW5jdGlvbiBiKGEpe3RoaXMubWVzc2FnZU5hbWU9XCJNZW1iZXJNb2RpZnlNZXNzYWdlXCIsdGhpcy5tb2RpZnlNZW1UeXBlPWEubW9kaWZ5TWVtVHlwZSx0aGlzLmNhbGxJZD1hLmNhbGxJZCx0aGlzLmNhbGxlcj1hLmNhbGxlcix0aGlzLmVuZ2luZVR5cGU9YS5lbmdpbmVUeXBlLHRoaXMuY2hhbm5lbEluZm89YS5jaGFubmVsSW5mbyx0aGlzLm1lZGlhVHlwZT1hLm1lZGlhVHlwZSx0aGlzLmV4dHJhPWEuZXh0cmEsdGhpcy5pbnZpdGVVc2VySWRzPWEuaW52aXRlVXNlcklkcyx0aGlzLmV4aXN0ZWRNZW1iZXJTdGF0dXNMaXN0PWEuZXhpc3RlZE1lbWJlclN0YXR1c0xpc3QsdGhpcy5leGlzdGVkVXNlclBvZmlsZXM9YS5leGlzdGVkVXNlclBvZmlsZXMsdGhpcy5vYnNlcnZlclVzZXJJZHM9YS5vYnNlcnZlclVzZXJJZHMsdGhpcy5tb2RlPWEubW9kZSx0aGlzLnN1YkluZm89YS5zdWJJbmZvfXJldHVybiBiLnByb3RvdHlwZS5lbmNvZGU9ZnVuY3Rpb24oKXtyZXR1cm4gSlNPTi5zdHJpbmdpZnkoYS5Nb2RlbFV0aWwubW9kZWxDbG9uZSh0aGlzKSl9LGJ9KCk7YS5NZW1iZXJNb2RpZnlNZXNzYWdlPUF9KFJvbmdJTUxpYnx8KFJvbmdJTUxpYj17fSkpO3ZhciBSb25nSU1MaWI7IWZ1bmN0aW9uKGEpe3ZhciBiPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gYShhLGIpe3RoaXMuSWQ9YSx0aGlzLktleT1ifXJldHVybiBhfSgpO2EuQ2hhbm5lbEluZm89Yjt2YXIgYz1mdW5jdGlvbigpe2Z1bmN0aW9uIGEoYSxiLGMpe3RoaXMucGxhdGZvcm09YSx0aGlzLm9ubGluZT1iLHRoaXMuc3RhdHVzPWN9cmV0dXJuIGF9KCk7YS5Vc2VyU3RhdHVzPWM7dmFyIGQ9ZnVuY3Rpb24oKXtmdW5jdGlvbiBhKGEsYixjKXt9cmV0dXJuIGF9KCk7YS5NZW50aW9uZWRJbmZvPWQ7dmFyIGU9ZnVuY3Rpb24oKXtmdW5jdGlvbiBhKGEsYixjKXt0aGlzLm1zZ0lkPWEsdGhpcy5tc2dEYXRhVGltZT1iLHRoaXMuZGlyZWN0PWN9cmV0dXJuIGF9KCk7YS5EZWxldGVNZXNzYWdlPWU7dmFyIGY9ZnVuY3Rpb24oKXtmdW5jdGlvbiBhKGEsYixjKXt9cmV0dXJuIGF9KCk7YS5DdXN0b21TZXJ2aWNlQ29uZmlnPWY7dmFyIGc9ZnVuY3Rpb24oKXtmdW5jdGlvbiBhKGEsYixjLGQsZSxmLGcpe31yZXR1cm4gYX0oKTthLkN1c3RvbVNlcnZpY2VTZXNzaW9uPWc7dmFyIGg9ZnVuY3Rpb24oKXtmdW5jdGlvbiBiKGEsYixjLGQsZSxmLGcsaCxpLGosayxsLG0sbixvLHAscSxyLHMsdCx1KXt0aGlzLmNvbnZlcnNhdGlvblRpdGxlPWEsdGhpcy5jb252ZXJzYXRpb25UeXBlPWIsdGhpcy5kcmFmdD1jLHRoaXMuaXNUb3A9ZCx0aGlzLmxhdGVzdE1lc3NhZ2U9ZSx0aGlzLmxhdGVzdE1lc3NhZ2VJZD1mLHRoaXMubm90aWZpY2F0aW9uU3RhdHVzPWcsdGhpcy5vYmplY3ROYW1lPWgsdGhpcy5yZWNlaXZlZFN0YXR1cz1pLHRoaXMucmVjZWl2ZWRUaW1lPWosdGhpcy5zZW5kZXJVc2VySWQ9ayx0aGlzLnNlbmRlclVzZXJOYW1lPWwsdGhpcy5zZW50U3RhdHVzPW0sdGhpcy5zZW50VGltZT1uLHRoaXMudGFyZ2V0SWQ9byx0aGlzLnVucmVhZE1lc3NhZ2VDb3VudD1wLHRoaXMuc2VuZGVyUG9ydHJhaXRVcmk9cSx0aGlzLmlzSGlkZGVuPXIsdGhpcy5tZW50aW9uZWRNc2c9cyx0aGlzLmhhc1VucmVhZE1lbnRpb249dCx0aGlzLl9yZWFkVGltZT11fXJldHVybiBiLnByb3RvdHlwZS5zZXRUb3A9ZnVuY3Rpb24oKXthLlJvbmdJTUNsaWVudC5fZGF0YUFjY2Vzc1Byb3ZpZGVyLmFkZENvbnZlcnNhdGlvbih0aGlzLHtvblN1Y2Nlc3M6ZnVuY3Rpb24oYSl7fX0pfSxifSgpO2EuQ29udmVyc2F0aW9uPWg7dmFyIGk9ZnVuY3Rpb24oKXtmdW5jdGlvbiBhKGEsYixjLGQsZSl7dGhpcy5jcmVhdG9ySWQ9YSx0aGlzLmlkPWIsdGhpcy5tZW1iZXJJZExpc3Q9Yyx0aGlzLm5hbWU9ZCx0aGlzLmlzT3Blbj1lfXJldHVybiBhfSgpO2EuRGlzY3Vzc2lvbj1pO3ZhciBqPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gYShhLGIsYyl7dGhpcy5pZD1hLHRoaXMubmFtZT1iLHRoaXMucG9ydHJhaXRVcmk9Y31yZXR1cm4gYX0oKTthLkdyb3VwPWo7dmFyIGs9ZnVuY3Rpb24oKXtmdW5jdGlvbiBhKGEsYixjLGQsZSxmLGcsaCxpLGosayxsLG0sbixvLHAscSl7dGhpcy5jb250ZW50PWEsdGhpcy5jb252ZXJzYXRpb25UeXBlPWIsdGhpcy5leHRyYT1jLHRoaXMub2JqZWN0TmFtZT1kLHRoaXMubWVzc2FnZURpcmVjdGlvbj1lLHRoaXMubWVzc2FnZUlkPWYsdGhpcy5yZWNlaXZlZFN0YXR1cz1nLHRoaXMucmVjZWl2ZWRUaW1lPWgsdGhpcy5zZW5kZXJVc2VySWQ9aSx0aGlzLnNlbnRTdGF0dXM9aix0aGlzLnNlbnRUaW1lPWssdGhpcy50YXJnZXRJZD1sLHRoaXMubWVzc2FnZVR5cGU9bSx0aGlzLm1lc3NhZ2VVSWQ9bix0aGlzLmlzTG9jYWxNZXNzYWdlPW8sdGhpcy5vZmZMaW5lTWVzc2FnZT1wLHRoaXMucmVjZWlwdFJlc3BvbnNlPXF9cmV0dXJuIGF9KCk7YS5NZXNzYWdlPWs7dmFyIGw9ZnVuY3Rpb24oKXtmdW5jdGlvbiBhKGEsYil7dGhpcy5pc0NvdW50ZWQ9YSx0aGlzLmlzUGVyc2l0ZWQ9Yn1yZXR1cm4gYS5wcm90b3R5cGUuZ2V0TWVzc2FnZVRhZz1mdW5jdGlvbigpe3JldHVybiB0aGlzLmlzQ291bnRlZCYmdGhpcy5pc1BlcnNpdGVkPzM6dGhpcy5pc0NvdW50ZWQ/Mjp0aGlzLmlzUGVyc2l0ZWQ/MTp0aGlzLmlzQ291bnRlZHx8dGhpcy5pc1BlcnNpdGVkP3ZvaWQgMDowfSxhLmdldFRhZ0J5U3RhdHVzPWZ1bmN0aW9uKGEpe3ZhciBiPXszOntpc0NvdW50ZWQ6ITAsaXNQZXJzaXRlZDohMH0sMjp7aXNDb3VudGVkOiEwLGlzUGVyc2l0ZWQ6ITF9LDE6e2lzQ291bnRlZDohMCxpc1BlcnNpdGVkOiEwfSwwOntpc0NvdW50ZWQ6ITAsaXNQZXJzaXRlZDohMH19O3JldHVybiBiW2FdfHxiWzNdfSxhfSgpO2EuTWVzc2FnZVRhZz1sO3ZhciBtPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gYShhLGIsYyxkLGUpe3RoaXMuaWQ9YSx0aGlzLm5hbWU9Yix0aGlzLnR5cGU9Yyx0aGlzLnN1bk1lbnVJdGVtcz1kLHRoaXMudXJsPWV9cmV0dXJuIGF9KCk7YS5QdWJsaWNTZXJ2aWNlTWVudUl0ZW09bTt2YXIgbj1mdW5jdGlvbigpe2Z1bmN0aW9uIGEoYSxiLGMsZCxlLGYsZyxoKXt0aGlzLmNvbnZlcnNhdGlvblR5cGU9YSx0aGlzLmludHJvZHVjdGlvbj1iLHRoaXMubWVudT1jLHRoaXMubmFtZT1kLHRoaXMucG9ydHJhaXRVcmk9ZSx0aGlzLnB1YmxpY1NlcnZpY2VJZD1mLHRoaXMuaGFzRm9sbG93ZWQ9Zyx0aGlzLmlzR2xvYmFsPWh9cmV0dXJuIGF9KCk7YS5QdWJsaWNTZXJ2aWNlUHJvZmlsZT1uO3ZhciBvPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gYShhLGIsYyl7dGhpcy5pZD1hLHRoaXMubmFtZT1iLHRoaXMucG9ydHJhaXRVcmk9Y31yZXR1cm4gYX0oKTthLlVzZXJJbmZvPW87dmFyIHA9ZnVuY3Rpb24oKXtmdW5jdGlvbiBhKGEsYil7dGhpcy5pZD1hLHRoaXMudG9rZW49Yn1yZXR1cm4gYX0oKTthLlVzZXI9cDt2YXIgcT1mdW5jdGlvbigpe2Z1bmN0aW9uIGEoYSxiLGMpe3RoaXMuaWQ9YSx0aGlzLnVzZXI9Yix0aGlzLm1vZGU9Y31yZXR1cm4gYX0oKTthLlJvb209cX0oUm9uZ0lNTGlifHwoUm9uZ0lNTGliPXt9KSk7dmFyIFJvbmdJTUxpYjshZnVuY3Rpb24oYSl7dmFyIGI9ZnVuY3Rpb24oKXtmdW5jdGlvbiBiKCl7dGhpcy51c2VyU3RhdHVzTGlzdGVuZXI9bnVsbH1yZXR1cm4gYi5wcm90b3R5cGUuaW5pdD1mdW5jdGlvbihiLGMpe25ldyBhLkZlYXR1cmVEZWN0ZWN0b3IoYy5hcHBDYWxsYmFjayl9LGIucHJvdG90eXBlLmNvbm5lY3Q9ZnVuY3Rpb24oYixjLGQsZSl7YS5Sb25nSU1DbGllbnQuYnJpZGdlPWEuQnJpZGdlLmdldEluc3RhbmNlKCksYS5Sb25nSU1DbGllbnQuX21lbW9yeVN0b3JlLnRva2VuPWIsYS5Sb25nSU1DbGllbnQuX21lbW9yeVN0b3JlLmNhbGxiYWNrPWMsZD1kfHxcIlwiLGU9ZXx8e307dmFyIGY9ITEsZz0hMTtpZihhLkJyaWRnZS5fY2xpZW50JiZhLkJyaWRnZS5fY2xpZW50LmNoYW5uZWwmJihmPWEuQnJpZGdlLl9jbGllbnQuY2hhbm5lbC5jb25uZWN0aW9uU3RhdHVzPT1hLkNvbm5lY3Rpb25TdGF0dXMuQ09OTkVDVElORyxnPWEuQnJpZGdlLl9jbGllbnQuY2hhbm5lbC5jb25uZWN0aW9uU3RhdHVzPT1hLkNvbm5lY3Rpb25TdGF0dXMuQ09OTkVDVEVEKSwhZyYmIWYpe2lmKGEuUm9uZ0lNQ2xpZW50Lm90aGVyRGV2aWNlTG9naW5Db3VudD41KXJldHVybiB2b2lkIGMub25FcnJvcihhLkNvbm5lY3Rpb25TdGF0dXMuVUxUUkFMSU1JVCk7ZS5mb3JjZSYmYS5Sb25nSU1DbGllbnQuX3N0b3JhZ2VQcm92aWRlci5yZW1vdmVJdGVtKFwic2VydmVyc1wiKTtmb3IodmFyIGg9MCxpPWEuUm9uZ0lNQ2xpZW50Ll9tZW1vcnlTdG9yZS5saXN0ZW5lckxpc3QubGVuZ3RoO2g8aTtoKyspYS5Sb25nSU1DbGllbnQuYnJpZGdlLnNldExpc3RlbmVyKGEuUm9uZ0lNQ2xpZW50Ll9tZW1vcnlTdG9yZS5saXN0ZW5lckxpc3RbaF0pO2EuUm9uZ0lNQ2xpZW50Ll9tZW1vcnlTdG9yZS5saXN0ZW5lckxpc3QubGVuZ3RoPTAsYS5Sb25nSU1DbGllbnQuYnJpZGdlLmNvbm5lY3QoYS5Sb25nSU1DbGllbnQuX21lbW9yeVN0b3JlLmFwcEtleSxiLHtvblN1Y2Nlc3M6ZnVuY3Rpb24oYSl7c2V0VGltZW91dChmdW5jdGlvbigpe2Mub25TdWNjZXNzKGEpfSl9LG9uRXJyb3I6ZnVuY3Rpb24oYil7YiE9YS5Db25uZWN0aW9uU3RhdGUuVE9LRU5fSU5DT1JSRUNUJiZiP3NldFRpbWVvdXQoZnVuY3Rpb24oKXtjLm9uRXJyb3IoYil9KTpzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7Yy5vblRva2VuSW5jb3JyZWN0KCl9KX19KX19LGIucHJvdG90eXBlLnJlY29ubmVjdD1mdW5jdGlvbihiLGMpe3ZhciBkPWEuUm9uZ0lNQ2xpZW50Ll9tZW1vcnlTdG9yZSxlPWQudG9rZW47aWYoIWUpdGhyb3cgbmV3IEVycm9yKFwicmVjb25uZWN0OiB0b2tlbiBpcyBlbXB0eS5cIik7aWYoYS5CcmlkZ2UuX2NsaWVudCYmYS5CcmlkZ2UuX2NsaWVudC5jaGFubmVsJiZhLkJyaWRnZS5fY2xpZW50LmNoYW5uZWwuY29ubmVjdGlvblN0YXR1cyE9YS5Db25uZWN0aW9uU3RhdHVzLkNPTk5FQ1RFRCYmYS5CcmlkZ2UuX2NsaWVudC5jaGFubmVsLmNvbm5lY3Rpb25TdGF0dXMhPWEuQ29ubmVjdGlvblN0YXR1cy5DT05ORUNUSU5HKXtjPWN8fHt9O3ZhciBmPWMuYXV0bz9cImF1dG9cIjpcImN1c3RvbVwiOyh7YXV0bzpmdW5jdGlvbigpe3ZhciBkPWZ1bmN0aW9uKGIpe3ZhciBjPWIuc3RlcCgpLGQ9Yi51cmwsZT1mdW5jdGlvbigpe2EuUm9uZ1V0aWwucmVxdWVzdCh7dXJsOmQsc3VjY2VzczpmdW5jdGlvbigpe2IuZG9uZSgpfSxlcnJvcjpmdW5jdGlvbigpe2YoKX19KX0sZj1mdW5jdGlvbigpe3ZhciBkPWMoKTtpZihcImRvbmVcIj09ZCl7dmFyIGY9YS5Db25uZWN0aW9uU3RhdHVzLk5FVFdPUktfVU5BVkFJTEFCTEU7cmV0dXJuIHZvaWQgYi5kb25lKGYpfXNldFRpbWVvdXQoZSxkKX07ZigpfSxmPWEuUm9uZ0lNQ2xpZW50Ll9tZW1vcnlTdG9yZS5kZXBlbmQucHJvdG9jb2wsZz1jLnVybHx8XCJjZG4ucm9uZ2h1Yi5jb20vUm9uZ0lNTGliLTIuMi42Lm1pbi5qc1wiLGg9e3Byb3RvY29sOmYscGF0aDpnfTtnPWEuUm9uZ1V0aWwuZm9ybWF0UHJvdG9jbFBhdGgoaCk7dmFyIGk9Yy5yYXRlfHxbMTAwLDFlMywzZTMsNmUzLDFlNCwxOGUzXTtpLnB1c2goXCJkb25lXCIpLGQoe3VybDpnLHN0ZXA6ZnVuY3Rpb24oKXt2YXIgYT0wO3JldHVybiBmdW5jdGlvbigpe3ZhciBiPWlbYV07cmV0dXJuIGErKyxifX0sZG9uZTpmdW5jdGlvbihjKXtpZihjKXJldHVybiB2b2lkIGIub25FcnJvcihjKTthLlJvbmdJTUNsaWVudC5jb25uZWN0KGUsYil9fSl9LGN1c3RvbTpmdW5jdGlvbigpe2EuUm9uZ0lNQ2xpZW50LmNvbm5lY3QoZSxiKX19KVtmXSgpfX0sYi5wcm90b3R5cGUubG9nb3V0PWZ1bmN0aW9uKCl7YS5Sb25nSU1DbGllbnQuYnJpZGdlLmRpc2Nvbm5lY3QoKSxhLlJvbmdJTUNsaWVudC5icmlkZ2U9bnVsbH0sYi5wcm90b3R5cGUuZGlzY29ubmVjdD1mdW5jdGlvbigpe2EuUm9uZ0lNQ2xpZW50LmJyaWRnZS5kaXNjb25uZWN0KCl9LGIucHJvdG90eXBlLnNlbmRSZWNlaXB0UmVzcG9uc2U9ZnVuY3Rpb24oYixjLGQpe3ZhciBlPWEuQnJpZGdlLl9jbGllbnQudXNlcklkK2IrYytcIlJFQ0VJVkVEXCIsZj10aGlzO2lmKGEuUm9uZ1V0aWwuc3VwcG9ydExvY2FsU3RvcmFnZSgpKXt2YXIgZz1KU09OLnBhcnNlKGEuUm9uZ0lNQ2xpZW50Ll9zdG9yYWdlUHJvdmlkZXIuZ2V0SXRlbShlKSk7aWYoZyl7dmFyIGg9W107Zm9yKHZhciBpIGluIGcpe3ZhciBqPXt9O2pbaV09Z1tpXS51SWRzLGdbaV0uaXNSZXNwb25zZXx8aC5wdXNoKGopfWlmKDA9PWgubGVuZ3RoKXJldHVybiB2b2lkIGQub25TdWNjZXNzKCk7dmFyIGs9c2V0SW50ZXJ2YWwoZnVuY3Rpb24oKXsxPT1oLmxlbmd0aCYmY2xlYXJJbnRlcnZhbChrKTt2YXIgaT1oLnNwbGljZSgwLDEpWzBdLGo9bmV3IGEuUmVhZFJlY2VpcHRSZXNwb25zZU1lc3NhZ2Uoe3JlY2VpcHRNZXNzYWdlRGljOml9KTtmLnNlbmRNZXNzYWdlKGIsYyxqLHtvblN1Y2Nlc3M6ZnVuY3Rpb24oYil7dmFyIGM9YS5NZXNzYWdlVXRpbC5nZXRGaXJzdEtleShpKTtnW2NdLmlzUmVzcG9uc2U9ITAsYS5Sb25nSU1DbGllbnQuX3N0b3JhZ2VQcm92aWRlci5zZXRJdGVtKGUsSlNPTi5zdHJpbmdpZnkoZykpLGQub25TdWNjZXNzKGIpfSxvbkVycm9yOmZ1bmN0aW9uKGEsYil7ZC5vbkVycm9yKGEsYil9fSl9LDIwMCl9ZWxzZSBkLm9uU3VjY2VzcygpfWVsc2UgZC5vblN1Y2Nlc3MoKX0sYi5wcm90b3R5cGUuc2VuZFR5cGluZ1N0YXR1c01lc3NhZ2U9ZnVuY3Rpb24oYixjLGQsZSl7dmFyIGY9dGhpcztkIGluIGEuUm9uZ0lNQ2xpZW50Lk1lc3NhZ2VQYXJhbXMmJmYuc2VuZE1lc3NhZ2UoYixjLGEuVHlwaW5nU3RhdHVzTWVzc2FnZS5vYnRhaW4oYS5Sb25nSU1DbGllbnQuTWVzc2FnZVBhcmFtc1tkXS5vYmplY3ROYW1lLFwiXCIpLHtvblN1Y2Nlc3M6ZnVuY3Rpb24oKXtzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7ZS5vblN1Y2Nlc3MoKX0pfSxvbkVycm9yOmZ1bmN0aW9uKGEpe3NldFRpbWVvdXQoZnVuY3Rpb24oKXtlLm9uRXJyb3IoYSxudWxsKX0pfSxvbkJlZm9yZTpmdW5jdGlvbigpe319KX0sYi5wcm90b3R5cGUuc2VuZFJlY2FsbE1lc3NhZ2U9ZnVuY3Rpb24oYixjKXt2YXIgZD1uZXcgYS5SZWNhbGxDb21tYW5kTWVzc2FnZSh7Y29udmVyc2F0aW9uVHlwZTpiLmNvbnZlcnNhdGlvblR5cGUsdGFyZ2V0SWQ6Yi50YXJnZXRJZCxzZW50VGltZTpiLnNlbnRUaW1lLG1lc3NhZ2VVSWQ6Yi5tZXNzYWdlVUlkLGV4dHJhOmIuZXh0cmEsdXNlcjpiLnVzZXJ9KTt0aGlzLnNlbmRNZXNzYWdlKGIuY29udmVyc2F0aW9uVHlwZSxiLnNlbmRlclVzZXJJZCxkLGMsITEsbnVsbCxudWxsLDIpfSxiLnByb3RvdHlwZS5zZW5kVGV4dE1lc3NhZ2U9ZnVuY3Rpb24oYixjLGQsZSl7dmFyIGY9YS5UZXh0TWVzc2FnZS5vYnRhaW4oZCk7dGhpcy5zZW5kTWVzc2FnZShiLGMsZixlKX0sYi5wcm90b3R5cGUuZ2V0UmVtb3RlSGlzdG9yeU1lc3NhZ2VzPWZ1bmN0aW9uKGIsYyxkLGUsZixnKXtpZihlPD0xKXRocm93IG5ldyBFcnJvcihcInRoZSBjb3VudCBtdXN0IGJlIGdyZWF0ZXIgdGhhbiAxLlwiKTtnPWd8fHt9O3ZhciBoPWcub3JkZXJ8fDAsaT1mdW5jdGlvbigpe3JldHVybltiLGMsXCJfXCIsaF0uam9pbihcIlwiKX0saj1pKCk7YS5Sb25nVXRpbC5pc051bWJlcihkKXx8KGQ9YS5Sb25nSU1DbGllbnQuX21lbW9yeVN0b3JlLmxhc3RSZWFkVGltZS5nZXQoaikpO3ZhciBrPWEuUm9uZ0lNQ2xpZW50Ll9tZW1vcnlTdG9yZSxsPWsuaGlzdG9yeU1lc3NhZ2VMaW1pdCxtPWwuZ2V0KGopfHx7fSxuPW0uaGFzTW9yZTtpZighbiYmbS50aW1lPT1kJiYwPT1oKXJldHVybiBmLm9uU3VjY2VzcyhbXSxuKTt2YXIgbz1uZXcgYS5Sb25nSU1DbGllbnQuUHJvdG9idWYuSGlzdG9yeU1zZ0lucHV0O28uc2V0VGFyZ2V0SWQoYyksby5zZXRUaW1lKGQpLG8uc2V0Q291bnQoZSksby5zZXRPcmRlcihoKSxhLlJvbmdJTUNsaWVudC5icmlkZ2UucXVlcnlNc2coSGlzdG9yeU1zZ1R5cGVbYl0sYS5NZXNzYWdlVXRpbC5BcnJheUZvcm0oby50b0FycmF5QnVmZmVyKCkpLGMse29uU3VjY2VzczpmdW5jdGlvbihiKXt2YXIgZD1hLk1lc3NhZ2VVdGlsLmludDY0VG9UaW1lc3RhbXAoYi5zeW5jVGltZSk7YS5Sb25nSU1DbGllbnQuX21lbW9yeVN0b3JlLmxhc3RSZWFkVGltZS5zZXQoaixkKSxsLnNldChqLHtoYXNNb3JlOiEhYi5oYXNNc2csdGltZTpkfSk7dmFyIGUsZz1iLmxpc3QucmV2ZXJzZSgpLGg9bnVsbCxpPWEuU2VudFN0YXR1cy5SRUFEO2lmKGEuUm9uZ1V0aWwuc3VwcG9ydExvY2FsU3RvcmFnZSgpKWZvcih2YXIgaz0wLG09Zy5sZW5ndGg7azxtO2srKyloPWEuTWVzc2FnZVV0aWwubWVzc2FnZVBhcnNlcihnW2tdKSxlPUpTT04ucGFyc2UoYS5Sb25nSU1DbGllbnQuX3N0b3JhZ2VQcm92aWRlci5nZXRJdGVtKGEuQnJpZGdlLl9jbGllbnQudXNlcklkK2gubWVzc2FnZVVJZCtcIlNFTlRcIikpLGUmJihoLnJlY2VpcHRSZXNwb25zZXx8KGgucmVjZWlwdFJlc3BvbnNlPXt9KSxoLnJlY2VpcHRSZXNwb25zZVtoLm1lc3NhZ2VVSWRdPWUuY291bnQpLGguc2VudFN0YXR1cz1pLGgudGFyZ2V0SWQ9YyxnW2tdPWg7ZWxzZSBmb3IodmFyIGs9MCxtPWcubGVuZ3RoO2s8bTtrKyspe3ZhciBoPWEuTWVzc2FnZVV0aWwubWVzc2FnZVBhcnNlcihnW2tdKTtoLnNlbnRTdGF0dXM9aSxnW2tdPWh9c2V0VGltZW91dChmdW5jdGlvbigpe2Yub25TdWNjZXNzKGcsISFiLmhhc01zZyl9KX0sb25FcnJvcjpmdW5jdGlvbihhKXtzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7Zi5vbkVycm9yKGEpfSl9fSxcIkhpc3RvcnlNZXNzYWdlc091cHV0XCIpfSxiLnByb3RvdHlwZS5oYXNSZW1vdGVVbnJlYWRNZXNzYWdlcz1mdW5jdGlvbihiLGMpe3ZhciBkPW51bGw7d2luZG93LlJDQ2FsbGJhY2s9ZnVuY3Rpb24oYSl7c2V0VGltZW91dChmdW5jdGlvbigpe2Mub25TdWNjZXNzKCEhK2Euc3RhdHVzKX0pLGQucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChkKX0sZD1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic2NyaXB0XCIpLGQuc3JjPWEuUm9uZ0lNQ2xpZW50Ll9tZW1vcnlTdG9yZS5kZXBlbmQuYXBpK1wiL21lc3NhZ2UvZXhpc3QuanM/YXBwS2V5PVwiK2VuY29kZVVSSUNvbXBvbmVudChhLlJvbmdJTUNsaWVudC5fbWVtb3J5U3RvcmUuYXBwS2V5KStcIiZ0b2tlbj1cIitlbmNvZGVVUklDb21wb25lbnQoYikrXCImY2FsbEJhY2s9UkNDYWxsYmFjayZfPVwiK2EuUm9uZ1V0aWwuZ2V0VGltZXN0YW1wKCksZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChkKSxkLm9uZXJyb3I9ZnVuY3Rpb24oKXtzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7Yy5vbkVycm9yKGEuRXJyb3JDb2RlLlVOS05PV04pfSksZC5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKGQpfX0sYi5wcm90b3R5cGUuZ2V0UmVtb3RlQ29udmVyc2F0aW9uTGlzdD1mdW5jdGlvbihiLGMsZCl7dmFyIGU9bmV3IGEuUm9uZ0lNQ2xpZW50LlByb3RvYnVmLlJlbGF0aW9uc0lucHV0LGY9dGhpcztlLnNldFR5cGUoMSksdm9pZCAwPT09ZD9lLnNldENvdW50KDApOmUuc2V0Q291bnQoZCksYS5Sb25nSU1DbGllbnQuYnJpZGdlLnF1ZXJ5TXNnKDI2LGEuTWVzc2FnZVV0aWwuQXJyYXlGb3JtKGUudG9BcnJheUJ1ZmZlcigpKSxhLkJyaWRnZS5fY2xpZW50LnVzZXJJZCx7b25TdWNjZXNzOmZ1bmN0aW9uKGQpe2lmKGQuaW5mbyl7ZC5pbmZvPWQuaW5mby5yZXZlcnNlKCk7Zm9yKHZhciBlPTAsZz1kLmluZm8ubGVuZ3RoO2U8ZztlKyspYS5Sb25nSU1DbGllbnQuZ2V0SW5zdGFuY2UoKS5wb3R0aW5nQ29udmVyc2F0aW9uKGQuaW5mb1tlXSl9dmFyIGg9YS5Sb25nSU1DbGllbnQuX21lbW9yeVN0b3JlLmNvbnZlcnNhdGlvbkxpc3Q7c2V0VGltZW91dChmdW5jdGlvbigpe2lmKGMpcmV0dXJuIGIub25TdWNjZXNzKGYuZmlsdGVyQ29udmVyc2F0aW9ucyhjLGgpKTtiLm9uU3VjY2VzcyhoKX0pfSxvbkVycm9yOmZ1bmN0aW9uKGEpe2Iub25FcnJvcihhKX19LFwiUmVsYXRpb25zT3V0cHV0XCIpfSxiLnByb3RvdHlwZS5hZGRNZW1iZXJUb0Rpc2N1c3Npb249ZnVuY3Rpb24oYixjLGQpe3ZhciBlPW5ldyBhLlJvbmdJTUNsaWVudC5Qcm90b2J1Zi5DaGFubmVsSW52aXRhdGlvbklucHV0O2Uuc2V0VXNlcnMoYyksYS5Sb25nSU1DbGllbnQuYnJpZGdlLnF1ZXJ5TXNnKDAsYS5NZXNzYWdlVXRpbC5BcnJheUZvcm0oZS50b0FycmF5QnVmZmVyKCkpLGIse29uU3VjY2VzczpmdW5jdGlvbigpe3NldFRpbWVvdXQoZnVuY3Rpb24oKXtkLm9uU3VjY2VzcygpfSl9LG9uRXJyb3I6ZnVuY3Rpb24oYSl7c2V0VGltZW91dChmdW5jdGlvbigpe2Qub25FcnJvcihhKX0pfX0pfSxiLnByb3RvdHlwZS5jcmVhdGVEaXNjdXNzaW9uPWZ1bmN0aW9uKGIsYyxkKXt2YXIgZT1uZXcgYS5Sb25nSU1DbGllbnQuUHJvdG9idWYuQ3JlYXRlRGlzY3Vzc2lvbklucHV0LGY9dGhpcztlLnNldE5hbWUoYiksYS5Sb25nSU1DbGllbnQuYnJpZGdlLnF1ZXJ5TXNnKDEsYS5NZXNzYWdlVXRpbC5BcnJheUZvcm0oZS50b0FycmF5QnVmZmVyKCkpLGEuQnJpZGdlLl9jbGllbnQudXNlcklkLHtvblN1Y2Nlc3M6ZnVuY3Rpb24oYSl7Yy5sZW5ndGg+MCYmZi5hZGRNZW1iZXJUb0Rpc2N1c3Npb24oYSxjLHtvblN1Y2Nlc3M6ZnVuY3Rpb24oKXt9LG9uRXJyb3I6ZnVuY3Rpb24oYSl7c2V0VGltZW91dChmdW5jdGlvbigpe2Qub25FcnJvcihhKX0pfX0pLHNldFRpbWVvdXQoZnVuY3Rpb24oKXtkLm9uU3VjY2VzcyhhKX0pfSxvbkVycm9yOmZ1bmN0aW9uKGEpe3NldFRpbWVvdXQoZnVuY3Rpb24oKXtkLm9uRXJyb3IoYSl9KX19LFwiQ3JlYXRlRGlzY3Vzc2lvbk91dHB1dFwiKX0sYi5wcm90b3R5cGUuZ2V0RGlzY3Vzc2lvbj1mdW5jdGlvbihiLGMpe3ZhciBkPW5ldyBhLlJvbmdJTUNsaWVudC5Qcm90b2J1Zi5DaGFubmVsSW5mb0lucHV0O2Quc2V0Tm90aGluZygxKSxhLlJvbmdJTUNsaWVudC5icmlkZ2UucXVlcnlNc2coNCxhLk1lc3NhZ2VVdGlsLkFycmF5Rm9ybShkLnRvQXJyYXlCdWZmZXIoKSksYix7b25TdWNjZXNzOmZ1bmN0aW9uKGEpe3NldFRpbWVvdXQoZnVuY3Rpb24oKXtjLm9uU3VjY2VzcyhhKX0pfSxvbkVycm9yOmZ1bmN0aW9uKGEpe3NldFRpbWVvdXQoZnVuY3Rpb24oKXtjLm9uRXJyb3IoYSl9KX19LFwiQ2hhbm5lbEluZm9PdXRwdXRcIil9LGIucHJvdG90eXBlLnF1aXREaXNjdXNzaW9uPWZ1bmN0aW9uKGIsYyl7dmFyIGQ9bmV3IGEuUm9uZ0lNQ2xpZW50LlByb3RvYnVmLkxlYXZlQ2hhbm5lbElucHV0O2Quc2V0Tm90aGluZygxKSxhLlJvbmdJTUNsaWVudC5icmlkZ2UucXVlcnlNc2coNyxhLk1lc3NhZ2VVdGlsLkFycmF5Rm9ybShkLnRvQXJyYXlCdWZmZXIoKSksYix7b25TdWNjZXNzOmZ1bmN0aW9uKCl7c2V0VGltZW91dChmdW5jdGlvbigpe2Mub25TdWNjZXNzKCl9KX0sb25FcnJvcjpmdW5jdGlvbihhKXtzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7Yy5vbkVycm9yKGEpfSl9fSl9LGIucHJvdG90eXBlLnJlbW92ZU1lbWJlckZyb21EaXNjdXNzaW9uPWZ1bmN0aW9uKGIsYyxkKXt2YXIgZT1uZXcgYS5Sb25nSU1DbGllbnQuUHJvdG9idWYuQ2hhbm5lbEV2aWN0aW9uSW5wdXQ7ZS5zZXRVc2VyKGMpLGEuUm9uZ0lNQ2xpZW50LmJyaWRnZS5xdWVyeU1zZyg5LGEuTWVzc2FnZVV0aWwuQXJyYXlGb3JtKGUudG9BcnJheUJ1ZmZlcigpKSxiLHtvblN1Y2Nlc3M6ZnVuY3Rpb24oKXtzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7ZC5vblN1Y2Nlc3MoKX0pfSxvbkVycm9yOmZ1bmN0aW9uKGEpe3NldFRpbWVvdXQoZnVuY3Rpb24oKXtkLm9uRXJyb3IoYSl9KX19KX0sYi5wcm90b3R5cGUuc2V0RGlzY3Vzc2lvbkludml0ZVN0YXR1cz1mdW5jdGlvbihiLGMsZCl7dmFyIGU9bmV3IGEuUm9uZ0lNQ2xpZW50LlByb3RvYnVmLk1vZGlmeVBlcm1pc3Npb25JbnB1dDtlLnNldE9wZW5TdGF0dXMoYy52YWx1ZU9mKCkpLGEuUm9uZ0lNQ2xpZW50LmJyaWRnZS5xdWVyeU1zZygxMSxhLk1lc3NhZ2VVdGlsLkFycmF5Rm9ybShlLnRvQXJyYXlCdWZmZXIoKSksYix7b25TdWNjZXNzOmZ1bmN0aW9uKGEpe3NldFRpbWVvdXQoZnVuY3Rpb24oKXtkLm9uU3VjY2VzcygpfSl9LG9uRXJyb3I6ZnVuY3Rpb24oYSl7c2V0VGltZW91dChmdW5jdGlvbigpe2Qub25FcnJvcihhKX0pfX0pfSxiLnByb3RvdHlwZS5zZXREaXNjdXNzaW9uTmFtZT1mdW5jdGlvbihiLGMsZCl7XHJcbnZhciBlPW5ldyBhLlJvbmdJTUNsaWVudC5Qcm90b2J1Zi5SZW5hbWVDaGFubmVsSW5wdXQ7ZS5zZXROYW1lKGMpLGEuUm9uZ0lNQ2xpZW50LmJyaWRnZS5xdWVyeU1zZygxMixhLk1lc3NhZ2VVdGlsLkFycmF5Rm9ybShlLnRvQXJyYXlCdWZmZXIoKSksYix7b25TdWNjZXNzOmZ1bmN0aW9uKCl7c2V0VGltZW91dChmdW5jdGlvbigpe2Qub25TdWNjZXNzKCl9KX0sb25FcnJvcjpmdW5jdGlvbihhKXtkLm9uRXJyb3IoYSl9fSl9LGIucHJvdG90eXBlLmpvaW5DaGF0Um9vbT1mdW5jdGlvbihiLGMsZCl7dmFyIGU9bmV3IGEuUm9uZ0lNQ2xpZW50LlByb3RvYnVmLkNocm1JbnB1dDtlLnNldE5vdGhpbmcoMSksYS5CcmlkZ2UuX2NsaWVudC5jaGF0cm9vbUlkPWIsYS5Sb25nSU1DbGllbnQuYnJpZGdlLnF1ZXJ5TXNnKDE5LGEuTWVzc2FnZVV0aWwuQXJyYXlGb3JtKGUudG9BcnJheUJ1ZmZlcigpKSxiLHtvblN1Y2Nlc3M6ZnVuY3Rpb24oKXtzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7ZC5vblN1Y2Nlc3MoKX0pO3ZhciBlPW5ldyBhLlJvbmdJTUNsaWVudC5Qcm90b2J1Zi5DaHJtUHVsbE1zZzswPT1jJiYoYz0tMSksZS5zZXRDb3VudChjKSxlLnNldFN5bmNUaW1lKDApLGEuQnJpZGdlLl9jbGllbnQucXVlcnlNZXNzYWdlKFwiY2hybVB1bGxcIixhLk1lc3NhZ2VVdGlsLkFycmF5Rm9ybShlLnRvQXJyYXlCdWZmZXIoKSksYiwxLHtvblN1Y2Nlc3M6ZnVuY3Rpb24oYyl7dmFyIGQ9Yy5saXN0LGU9YS5NZXNzYWdlVXRpbC5pbnQ2NFRvVGltZXN0YW1wKGMuc3luY1RpbWUpLGY9ZFtkLmxlbmd0aC0xXTtmJiYoZj1hLk1lc3NhZ2VVdGlsLm1lc3NhZ2VQYXJzZXIoZiksZT1mLnNlbnRUaW1lKSxhLlJvbmdJTUNsaWVudC5fbWVtb3J5U3RvcmUubGFzdFJlYWRUaW1lLnNldChiK2EuQnJpZGdlLl9jbGllbnQudXNlcklkK1wiQ1NUXCIsZSk7Zm9yKHZhciBnPWEuQnJpZGdlLl9jbGllbnQsaD0wLGk9ZC5sZW5ndGg7aDxpO2grKyl7dmFyIGo9XCJSXCIrZFtoXS5tc2dJZDtpZighKGogaW4gZy5jYWNoZU1lc3NhZ2VJZHMpKXtnLmNhY2hlTWVzc2FnZUlkc1tqXT0hMDt2YXIgaz1hLlJvbmdVdGlsLmtleXMoZy5jYWNoZU1lc3NhZ2VJZHMpO2lmKGsubGVuZ3RoPjEwJiYoaj1rWzBdLGRlbGV0ZSBnLmNhY2hlTWVzc2FnZUlkc1tqXSksYS5Sb25nSU1DbGllbnQuX21lbW9yeVN0b3JlLmZpbHRlck1lc3NhZ2VzLmxlbmd0aD4wKWZvcih2YXIgbD0wLG09YS5Sb25nSU1DbGllbnQuX21lbW9yeVN0b3JlLmZpbHRlck1lc3NhZ2VzLmxlbmd0aDtsPG07bCsrKWEuUm9uZ0lNQ2xpZW50Lk1lc3NhZ2VQYXJhbXNbYS5Sb25nSU1DbGllbnQuX21lbW9yeVN0b3JlLmZpbHRlck1lc3NhZ2VzW2xdXS5vYmplY3ROYW1lIT1kW2hdLmNsYXNzbmFtZSYmZy5oYW5kbGVyLm9uUmVjZWl2ZWQoZFtoXSk7ZWxzZSBnLmhhbmRsZXIub25SZWNlaXZlZChkW2hdKX19fSxvbkVycm9yOmZ1bmN0aW9uKGIpe3NldFRpbWVvdXQoZnVuY3Rpb24oKXtkLm9uRXJyb3IoYS5FcnJvckNvZGUuQ0hBVFJPT01fSElTTUVTU0FHRV9FUlJPUil9KX19LFwiRG93blN0cmVhbU1lc3NhZ2VzXCIpfSxvbkVycm9yOmZ1bmN0aW9uKGEpe3NldFRpbWVvdXQoZnVuY3Rpb24oKXtkLm9uRXJyb3IoYSl9KX19LFwiQ2hybU91dHB1dFwiKX0sYi5wcm90b3R5cGUuZ2V0Q2hhdFJvb21JbmZvPWZ1bmN0aW9uKGIsYyxkLGUpe3ZhciBmPW5ldyBhLlJvbmdJTUNsaWVudC5Qcm90b2J1Zi5RdWVyeUNoYXRyb29tSW5mb0lucHV0O2Yuc2V0Q291bnQoYyksZi5zZXRPcmRlcihkKSxhLlJvbmdJTUNsaWVudC5icmlkZ2UucXVlcnlNc2coXCJxdWVyeUNocm1JXCIsYS5NZXNzYWdlVXRpbC5BcnJheUZvcm0oZi50b0FycmF5QnVmZmVyKCkpLGIse29uU3VjY2VzczpmdW5jdGlvbihiKXtiLnVzZXJJbmZvcy5mb3JFYWNoKGZ1bmN0aW9uKGIpe2IudGltZT1hLk1lc3NhZ2VVdGlsLmludDY0VG9UaW1lc3RhbXAoYi50aW1lKX0pLHNldFRpbWVvdXQoZnVuY3Rpb24oKXtlLm9uU3VjY2VzcyhiKX0pfSxvbkVycm9yOmZ1bmN0aW9uKGEpe3NldFRpbWVvdXQoZnVuY3Rpb24oKXtlLm9uRXJyb3IoYSl9KX19LFwiUXVlcnlDaGF0cm9vbUluZm9PdXRwdXRcIil9LGIucHJvdG90eXBlLnF1aXRDaGF0Um9vbT1mdW5jdGlvbihiLGMpe3ZhciBkPW5ldyBhLlJvbmdJTUNsaWVudC5Qcm90b2J1Zi5DaHJtSW5wdXQ7ZC5zZXROb3RoaW5nKDEpLGEuUm9uZ0lNQ2xpZW50LmJyaWRnZS5xdWVyeU1zZygxNyxhLk1lc3NhZ2VVdGlsLkFycmF5Rm9ybShkLnRvQXJyYXlCdWZmZXIoKSksYix7b25TdWNjZXNzOmZ1bmN0aW9uKCl7c2V0VGltZW91dChmdW5jdGlvbigpe2Mub25TdWNjZXNzKCl9KX0sb25FcnJvcjpmdW5jdGlvbihhKXtzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7Yy5vbkVycm9yKGEpfSl9fSxcIkNocm1PdXRwdXRcIil9LGIucHJvdG90eXBlLnNldENoYXRyb29tSGlzTWVzc2FnZVRpbWVzdGFtcD1mdW5jdGlvbihiLGMpe2EuUm9uZ0lNQ2xpZW50Ll9tZW1vcnlTdG9yZS5sYXN0UmVhZFRpbWUuc2V0KFwiY2hyaGlzX1wiK2IsYyl9LGIucHJvdG90eXBlLmdldENoYXRSb29tSGlzdG9yeU1lc3NhZ2VzPWZ1bmN0aW9uKGIsYyxkLGUpe3ZhciBmPW5ldyBhLlJvbmdJTUNsaWVudC5Qcm90b2J1Zi5IaXN0b3J5TXNnSW5wdXQ7Zi5zZXRUYXJnZXRJZChiKTt2YXIgZz1hLlJvbmdJTUNsaWVudC5fbWVtb3J5U3RvcmUubGFzdFJlYWRUaW1lLmdldChcImNocmhpc19cIitiKXx8MDtmLnNldFRpbWUoZyksZi5zZXRDb3VudChjKSxmLnNldE9yZGVyKGQpLGEuUm9uZ0lNQ2xpZW50LmJyaWRnZS5xdWVyeU1zZygzNCxhLk1lc3NhZ2VVdGlsLkFycmF5Rm9ybShmLnRvQXJyYXlCdWZmZXIoKSksYS5CcmlkZ2UuX2NsaWVudC51c2VySWQse29uU3VjY2VzczpmdW5jdGlvbihjKXthLlJvbmdJTUNsaWVudC5fbWVtb3J5U3RvcmUubGFzdFJlYWRUaW1lLnNldChcImNocmhpc19cIitiLGEuTWVzc2FnZVV0aWwuaW50NjRUb1RpbWVzdGFtcChjLnN5bmNUaW1lKSk7Zm9yKHZhciBkPWMubGlzdC5yZXZlcnNlKCksZj0wLGc9ZC5sZW5ndGg7ZjxnO2YrKylkW2ZdPWEuTWVzc2FnZVV0aWwubWVzc2FnZVBhcnNlcihkW2ZdKTtzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7ZS5vblN1Y2Nlc3MoZCwhIWMuaGFzTXNnKX0pfSxvbkVycm9yOmZ1bmN0aW9uKGEpe3NldFRpbWVvdXQoZnVuY3Rpb24oKXtlLm9uRXJyb3IoYSl9KX19LFwiSGlzdG9yeU1zZ091cHV0XCIpfSxiLnByb3RvdHlwZS5zZXRNZXNzYWdlU3RhdHVzPWZ1bmN0aW9uKGEsYixjLGQsZSl7c2V0VGltZW91dChmdW5jdGlvbigpe2Uub25TdWNjZXNzKCEwKX0pfSxiLnByb3RvdHlwZS5hZGRUb0JsYWNrbGlzdD1mdW5jdGlvbihiLGMpe3ZhciBkPW5ldyBhLlJvbmdJTUNsaWVudC5Qcm90b2J1Zi5BZGQyQmxhY2tMaXN0SW5wdXQ7ZC5zZXRVc2VySWQoYiksYS5Sb25nSU1DbGllbnQuYnJpZGdlLnF1ZXJ5TXNnKDIxLGEuTWVzc2FnZVV0aWwuQXJyYXlGb3JtKGQudG9BcnJheUJ1ZmZlcigpKSxiLHtvblN1Y2Nlc3M6ZnVuY3Rpb24oKXtzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7Yy5vblN1Y2Nlc3MoKX0pfSxvbkVycm9yOmZ1bmN0aW9uKGEpe3NldFRpbWVvdXQoZnVuY3Rpb24oKXtjLm9uRXJyb3IoYSl9KX19KX0sYi5wcm90b3R5cGUuZ2V0QmxhY2tsaXN0PWZ1bmN0aW9uKGIpe3ZhciBjPW5ldyBhLlJvbmdJTUNsaWVudC5Qcm90b2J1Zi5RdWVyeUJsYWNrTGlzdElucHV0O2Muc2V0Tm90aGluZygxKSxhLlJvbmdJTUNsaWVudC5icmlkZ2UucXVlcnlNc2coMjMsYS5NZXNzYWdlVXRpbC5BcnJheUZvcm0oYy50b0FycmF5QnVmZmVyKCkpLGEuQnJpZGdlLl9jbGllbnQudXNlcklkLHtvblN1Y2Nlc3M6ZnVuY3Rpb24oYSl7c2V0VGltZW91dChmdW5jdGlvbigpe2Iub25TdWNjZXNzKGEpfSl9LG9uRXJyb3I6ZnVuY3Rpb24oYSl7c2V0VGltZW91dChmdW5jdGlvbigpe2Iub25FcnJvcihhKX0pfX0sXCJRdWVyeUJsYWNrTGlzdE91dHB1dFwiKX0sYi5wcm90b3R5cGUuZ2V0QmxhY2tsaXN0U3RhdHVzPWZ1bmN0aW9uKGIsYyl7dmFyIGQ9bmV3IGEuUm9uZ0lNQ2xpZW50LlByb3RvYnVmLkJsYWNrTGlzdFN0YXR1c0lucHV0O2Quc2V0VXNlcklkKGIpLGEuUm9uZ0lNQ2xpZW50LmJyaWRnZS5xdWVyeU1zZygyNCxhLk1lc3NhZ2VVdGlsLkFycmF5Rm9ybShkLnRvQXJyYXlCdWZmZXIoKSksYix7b25TdWNjZXNzOmZ1bmN0aW9uKGIpe3NldFRpbWVvdXQoZnVuY3Rpb24oKXtjLm9uU3VjY2VzcyhhLkJsYWNrbGlzdFN0YXR1c1tiXSl9KX0sb25FcnJvcjpmdW5jdGlvbihhKXtzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7Yy5vbkVycm9yKGEpfSl9fSl9LGIucHJvdG90eXBlLnJlbW92ZUZyb21CbGFja2xpc3Q9ZnVuY3Rpb24oYixjKXt2YXIgZD1uZXcgYS5Sb25nSU1DbGllbnQuUHJvdG9idWYuUmVtb3ZlRnJvbUJsYWNrTGlzdElucHV0O2Quc2V0VXNlcklkKGIpLGEuUm9uZ0lNQ2xpZW50LmJyaWRnZS5xdWVyeU1zZygyMixhLk1lc3NhZ2VVdGlsLkFycmF5Rm9ybShkLnRvQXJyYXlCdWZmZXIoKSksYix7b25TdWNjZXNzOmZ1bmN0aW9uKCl7c2V0VGltZW91dChmdW5jdGlvbigpe2Mub25TdWNjZXNzKCl9KX0sb25FcnJvcjpmdW5jdGlvbihhKXtzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7Yy5vbkVycm9yKGEpfSl9fSl9LGIucHJvdG90eXBlLmdldEZpbGVUb2tlbj1mdW5jdGlvbihiLGMpe2lmKCEvKDF8MnwzfDQpLy50ZXN0KGIudG9TdHJpbmcoKSkpcmV0dXJuIHZvaWQgc2V0VGltZW91dChmdW5jdGlvbigpe2Mub25FcnJvcihhLkVycm9yQ29kZS5RTlRLTl9GSUxFVFlQRV9FUlJPUil9KTt2YXIgZD1uZXcgYS5Sb25nSU1DbGllbnQuUHJvdG9idWYuR2V0UU51cFRva2VuSW5wdXQ7ZC5zZXRUeXBlKGIpLGEuUm9uZ0lNQ2xpZW50LmJyaWRnZS5xdWVyeU1zZygzMCxhLk1lc3NhZ2VVdGlsLkFycmF5Rm9ybShkLnRvQXJyYXlCdWZmZXIoKSksYS5CcmlkZ2UuX2NsaWVudC51c2VySWQse29uU3VjY2VzczpmdW5jdGlvbihhKXtzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7Yy5vblN1Y2Nlc3MoYSl9KX0sb25FcnJvcjpmdW5jdGlvbihhKXtzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7Yy5vbkVycm9yKGEpfSl9fSxcIkdldFFOdXBUb2tlbk91dHB1dFwiKX0sYi5wcm90b3R5cGUuZ2V0RmlsZVVybD1mdW5jdGlvbihiLGMsZCxlKXtpZighLygxfDJ8M3w0KS8udGVzdChiLnRvU3RyaW5nKCkpKXJldHVybiB2b2lkIHNldFRpbWVvdXQoZnVuY3Rpb24oKXtlLm9uRXJyb3IoYS5FcnJvckNvZGUuUU5US05fRklMRVRZUEVfRVJST1IpfSk7dmFyIGY9bmV3IGEuUm9uZ0lNQ2xpZW50LlByb3RvYnVmLkdldFFOZG93bmxvYWRVcmxJbnB1dDtmLnNldFR5cGUoYiksZi5zZXRLZXkoYyksZCYmZi5zZXRGaWxlTmFtZShkKSxhLlJvbmdJTUNsaWVudC5icmlkZ2UucXVlcnlNc2coMzEsYS5NZXNzYWdlVXRpbC5BcnJheUZvcm0oZi50b0FycmF5QnVmZmVyKCkpLGEuQnJpZGdlLl9jbGllbnQudXNlcklkLHtvblN1Y2Nlc3M6ZnVuY3Rpb24oYSl7c2V0VGltZW91dChmdW5jdGlvbigpe2Uub25TdWNjZXNzKGEpfSl9LG9uRXJyb3I6ZnVuY3Rpb24oYSl7c2V0VGltZW91dChmdW5jdGlvbigpe2Uub25FcnJvcihhKX0pfX0sXCJHZXRRTmRvd25sb2FkVXJsT3V0cHV0XCIpfSxiLnByb3RvdHlwZS5zZW5kTWVzc2FnZT1mdW5jdGlvbihiLGMsZCxlLGYsZyxoLGksail7aWYoIWEuQnJpZGdlLl9jbGllbnQuY2hhbm5lbClyZXR1cm4gdm9pZCBzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7ZS5vbkVycm9yKGEuRXJyb3JDb2RlLlJDX05FVF9VTkFWQUlMQUJMRSxudWxsKX0pO2lmKCFhLkJyaWRnZS5fY2xpZW50LmNoYW5uZWwuc29ja2V0LnNvY2tldC5jb25uZWN0ZWQpdGhyb3cgc2V0VGltZW91dChmdW5jdGlvbigpe2Uub25FcnJvcihhLkVycm9yQ29kZS5USU1FT1VULG51bGwpfSksbmV3IEVycm9yKFwiY29ubmVjdCBpcyB0aW1lb3V0ISBwb3N0aW9uOnNlbmRNZXNzYWdlXCIpO3ZhciBrPWI9PWEuQ29udmVyc2F0aW9uVHlwZS5ESVNDVVNTSU9OfHxiPT1hLkNvbnZlcnNhdGlvblR5cGUuR1JPVVAsbD1uZXcgYS5Sb25nSU1DbGllbnQuUHJvdG9idWYuVXBTdHJlYW1NZXNzYWdlO2lmKGYmJms/bC5zZXRTZXNzaW9uSWQoNyk6bC5zZXRTZXNzaW9uSWQoYS5Sb25nSU1DbGllbnQuTWVzc2FnZVBhcmFtc1tkLm1lc3NhZ2VOYW1lXS5tc2dUYWcuZ2V0TWVzc2FnZVRhZygpKSxnJiZsLnNldFB1c2hUZXh0KGcpLGgmJmwuc2V0QXBwRGF0YShoKSxrJiZkLm1lc3NhZ2VOYW1lPT1hLlJvbmdJTUNsaWVudC5NZXNzYWdlVHlwZS5SZWFkUmVjZWlwdFJlc3BvbnNlTWVzc2FnZSl7dmFyIG09ZDtpZihtLnJlY2VpcHRNZXNzYWdlRGljKXt2YXIgbj1bXTtmb3IodmFyIG8gaW4gbS5yZWNlaXB0TWVzc2FnZURpYyluLnB1c2gobyk7bC5zZXRVc2VySWQobil9fWsmJmQubWVzc2FnZU5hbWU9PWEuUm9uZ0lNQ2xpZW50Lk1lc3NhZ2VUeXBlLlN5bmNSZWFkU3RhdHVzTWVzc2FnZSYmbC5zZXRVc2VySWQoYS5CcmlkZ2UuX2NsaWVudC51c2VySWQpLGo9anx8e307dmFyIHA9ai51c2VySWRzO2smJnAmJmwuc2V0VXNlcklkKHApLGwuc2V0Q2xhc3NuYW1lKGEuUm9uZ0lNQ2xpZW50Lk1lc3NhZ2VQYXJhbXNbZC5tZXNzYWdlTmFtZV0ub2JqZWN0TmFtZSksbC5zZXRDb250ZW50KGQuZW5jb2RlKCkpO3ZhciBxPWwudG9BcnJheUJ1ZmZlcigpO1wiW29iamVjdCBBcnJheUJ1ZmZlcl1cIj09T2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKHEpJiYocT1bXS5zbGljZS5jYWxsKG5ldyBJbnQ4QXJyYXkocSkpKTt2YXIgcj10aGlzLHM9bmV3IGEuTWVzc2FnZSx0PXRoaXMuZ2V0Q29udmVyc2F0aW9uKGIsYyk7Mz09YS5Sb25nSU1DbGllbnQuTWVzc2FnZVBhcmFtc1tkLm1lc3NhZ2VOYW1lXS5tc2dUYWcuZ2V0TWVzc2FnZVRhZygpJiYodHx8KHQ9YS5Sb25nSU1DbGllbnQuZ2V0SW5zdGFuY2UoKS5jcmVhdGVDb252ZXJzYXRpb24oYixjLFwiXCIpKSx0LnNlbnRUaW1lPShuZXcgRGF0ZSkuZ2V0VGltZSgpLHQuc2VudFN0YXR1cz1hLlNlbnRTdGF0dXMuU0VORElORyx0LnNlbmRlclVzZXJOYW1lPVwiXCIsdC5zZW5kZXJVc2VySWQ9YS5CcmlkZ2UuX2NsaWVudC51c2VySWQsdC5ub3RpZmljYXRpb25TdGF0dXM9YS5Db252ZXJzYXRpb25Ob3RpZmljYXRpb25TdGF0dXMuRE9fTk9UX0RJU1RVUkIsdC5sYXRlc3RNZXNzYWdlPXMsdC51bnJlYWRNZXNzYWdlQ291bnQ9MCxhLlJvbmdJTUNsaWVudC5fZGF0YUFjY2Vzc1Byb3ZpZGVyLmFkZENvbnZlcnNhdGlvbih0LHtvblN1Y2Nlc3M6ZnVuY3Rpb24oYSl7fX0pKSxhLlJvbmdJTUNsaWVudC5fbWVtb3J5U3RvcmUuY29udmVyU3RvcmU9dCxzLmNvbnRlbnQ9ZCxzLmNvbnZlcnNhdGlvblR5cGU9YixzLnNlbmRlclVzZXJJZD1hLkJyaWRnZS5fY2xpZW50LnVzZXJJZCxzLm9iamVjdE5hbWU9YS5Sb25nSU1DbGllbnQuTWVzc2FnZVBhcmFtc1tkLm1lc3NhZ2VOYW1lXS5vYmplY3ROYW1lLHMudGFyZ2V0SWQ9YyxzLnNlbnRUaW1lPShuZXcgRGF0ZSkuZ2V0VGltZSgpLHMubWVzc2FnZURpcmVjdGlvbj1hLk1lc3NhZ2VEaXJlY3Rpb24uU0VORCxzLnNlbnRTdGF0dXM9YS5TZW50U3RhdHVzLlNFTlQscy5tZXNzYWdlVHlwZT1kLm1lc3NhZ2VOYW1lLGEuUm9uZ0lNQ2xpZW50LmJyaWRnZS5wdWJNc2coYi52YWx1ZU9mKCkscSxjLHtvblN1Y2Nlc3M6ZnVuY3Rpb24oZil7aWYoZiYmZi50aW1lc3RhbXAmJmEuUm9uZ0lNQ2xpZW50Ll9tZW1vcnlTdG9yZS5sYXN0UmVhZFRpbWUuc2V0KFwiY29udmVyU1RfXCIrYS5CcmlkZ2UuX2NsaWVudC51c2VySWQrYitjLGYudGltZXN0YW1wKSwoYj09YS5Db252ZXJzYXRpb25UeXBlLkRJU0NVU1NJT058fGI9PWEuQ29udmVyc2F0aW9uVHlwZS5HUk9VUCkmJmQubWVzc2FnZU5hbWU9PWEuUm9uZ0lNQ2xpZW50Lk1lc3NhZ2VUeXBlLlJlYWRSZWNlaXB0UmVxdWVzdE1lc3NhZ2Upe3ZhciBnPXMuY29udGVudCxoPWEuQnJpZGdlLl9jbGllbnQudXNlcklkK2cubWVzc2FnZVVJZCtcIlNFTlRcIjthLlJvbmdJTUNsaWVudC5fc3RvcmFnZVByb3ZpZGVyLnNldEl0ZW0oaCxKU09OLnN0cmluZ2lmeSh7Y291bnQ6MCxkZWFsdGltZTpmLnRpbWVzdGFtcCx1c2VySWRzOnt9fSkpfWlmKDM9PWEuUm9uZ0lNQ2xpZW50Lk1lc3NhZ2VQYXJhbXNbcy5tZXNzYWdlVHlwZV0ubXNnVGFnLmdldE1lc3NhZ2VUYWcoKSl7dmFyIGk9YS5Sb25nSU1DbGllbnQuX21lbW9yeVN0b3JlLmNvbnZlclN0b3JlO2kuc2VudFN0YXR1cz1zLnNlbnRTdGF0dXMsaS5sYXRlc3RNZXNzYWdlPXMsci51cGRhdGVDb252ZXJzYXRpb24oaSksYS5Sb25nSU1DbGllbnQuX2RhdGFBY2Nlc3NQcm92aWRlci5hZGRNZXNzYWdlKGIsYyxzLHtvblN1Y2Nlc3M6ZnVuY3Rpb24oYil7cz1iLHMubWVzc2FnZVVJZD1mLm1lc3NhZ2VVSWQscy5zZW50VGltZT1mLnRpbWVzdGFtcCxzLnNlbnRTdGF0dXM9YS5TZW50U3RhdHVzLlNFTlQscy5tZXNzYWdlSWQ9Zi5tZXNzYWdlSWQsYS5Sb25nSU1DbGllbnQuX2RhdGFBY2Nlc3NQcm92aWRlci51cGRhdGVNZXNzYWdlKHMpfSxvbkVycm9yOmZ1bmN0aW9uKCl7fX0pfXNldFRpbWVvdXQoZnVuY3Rpb24oKXtpJiZyLnVwZGF0ZUNvbnZlcnNhdGlvbihpKSxzLnNlbnRUaW1lPWYudGltZXN0YW1wLHMubWVzc2FnZVVJZD1mLm1lc3NhZ2VVSWQsZS5vblN1Y2Nlc3Mocyl9KX0sb25FcnJvcjpmdW5jdGlvbihkLGYpe3Muc2VudFN0YXR1cz1hLlNlbnRTdGF0dXMuRkFJTEVELGYmJihzLm1lc3NhZ2VVSWQ9Zi5tZXNzYWdlVUlkLHMuc2VudFRpbWU9Zi5zZW50VGltZSksMz09YS5Sb25nSU1DbGllbnQuTWVzc2FnZVBhcmFtc1tzLm1lc3NhZ2VUeXBlXS5tc2dUYWcuZ2V0TWVzc2FnZVRhZygpJiYoYS5Sb25nSU1DbGllbnQuX21lbW9yeVN0b3JlLmNvbnZlclN0b3JlLmxhdGVzdE1lc3NhZ2U9cyksYS5Sb25nSU1DbGllbnQuX2RhdGFBY2Nlc3NQcm92aWRlci5hZGRNZXNzYWdlKGIsYyxzLHtvblN1Y2Nlc3M6ZnVuY3Rpb24oYil7cy5tZXNzYWdlSWQ9Yi5tZXNzYWdlSWQsYS5Sb25nSU1DbGllbnQuX2RhdGFBY2Nlc3NQcm92aWRlci51cGRhdGVNZXNzYWdlKHMpfSxvbkVycm9yOmZ1bmN0aW9uKCl7fX0pLHNldFRpbWVvdXQoZnVuY3Rpb24oKXtlLm9uRXJyb3IoZCxzKX0pfX0sbnVsbCxpKSxlLm9uQmVmb3JlJiZlLm9uQmVmb3JlKGEuTWVzc2FnZUlkSGFuZGxlci5tZXNzYWdlSWQpLHMubWVzc2FnZUlkPWEuTWVzc2FnZUlkSGFuZGxlci5tZXNzYWdlSWQrXCJcIn0sYi5wcm90b3R5cGUuc2V0Q29ubmVjdGlvblN0YXR1c0xpc3RlbmVyPWZ1bmN0aW9uKGIpe3ZhciBjPXtvbkNoYW5nZWQ6ZnVuY3Rpb24oYyl7Yi5vbkNoYW5nZWQoYyksYS5Sb25nVXRpbC5mb3JFYWNoKGEuUm9uZ0lNQ2xpZW50LnN0YXR1c0xpc3RlbmVycyxmdW5jdGlvbihhKXthKGMpfSl9fTthLlJvbmdJTUNsaWVudC5icmlkZ2U/YS5Sb25nSU1DbGllbnQuYnJpZGdlLnNldExpc3RlbmVyKGMpOmEuUm9uZ0lNQ2xpZW50Ll9tZW1vcnlTdG9yZS5saXN0ZW5lckxpc3QucHVzaChjKX0sYi5wcm90b3R5cGUuc2V0T25SZWNlaXZlTWVzc2FnZUxpc3RlbmVyPWZ1bmN0aW9uKGIpe2EuUm9uZ0lNQ2xpZW50LmJyaWRnZT9hLlJvbmdJTUNsaWVudC5icmlkZ2Uuc2V0TGlzdGVuZXIoYik6YS5Sb25nSU1DbGllbnQuX21lbW9yeVN0b3JlLmxpc3RlbmVyTGlzdC5wdXNoKGIpfSxiLnByb3RvdHlwZS5yZWdpc3Rlck1lc3NhZ2VUeXBlPWZ1bmN0aW9uKGIsYyxkLGUsZil7aWYoIWIpdGhyb3cgbmV3IEVycm9yKFwibWVzc2FnZVR5cGUgY2FuJ3QgYmUgZW1wdHkscG9zdGlvbiAtPiByZWdpc3Rlck1lc3NhZ2VUeXBlXCIpO2lmKCFjKXRocm93IG5ldyBFcnJvcihcIm9iamVjdE5hbWUgY2FuJ3QgYmUgZW1wdHkscG9zdGlvbiAtPiByZWdpc3Rlck1lc3NhZ2VUeXBlXCIpO2lmKFwiW29iamVjdCBBcnJheV1cIj09T2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGUpKXt2YXIgZz1hLk1vZGVsVXRpbC5tb2RsZUNyZWF0ZShlLGIpO2EuUm9uZ0lNQ2xpZW50LlJlZ2lzdGVyTWVzc2FnZVtiXT1nfWVsc2V7aWYoXCJbb2JqZWN0IEZ1bmN0aW9uXVwiIT1PYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoZSkmJlwiW29iamVjdCBPYmplY3RdXCIhPU9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChlKSl0aHJvdyBuZXcgRXJyb3IoXCJUaGUgaW5kZXggb2YgMyBwYXJhbWV0ZXIgd2FzIHdyb25nIHR5cGUgIG11c3QgYmUgb2JqZWN0IG9yIGZ1bmN0aW9uIG9yIGFycmF5LT4gcmVnaXN0ZXJNZXNzYWdlVHlwZVwiKTtpZighZS5lbmNvZGUpdGhyb3cgbmV3IEVycm9yKFwiZW5jb2RlIG1ldGhvZCBoYXMgbm90IHJlYWxpemVkIG9yIG1lc3NhZ2VOYW1lIGlzIHVuZGVmaW5lZC0+IHJlZ2lzdGVyTWVzc2FnZVR5cGVcIik7aWYoIWUuZGVjb2RlKXRocm93IG5ldyBFcnJvcihcImRlY29kZSBtZXRob2QgaGFzIG5vdCByZWFsaXplZCAtPiByZWdpc3Rlck1lc3NhZ2VUeXBlXCIpfXJlZ2lzdGVyTWVzc2FnZVR5cGVNYXBwaW5nW2NdPWJ9LGIucHJvdG90eXBlLnJlZ2lzdGVyTWVzc2FnZVR5cGVzPWZ1bmN0aW9uKGIpe3ZhciBjPVtdLGQ9ZnVuY3Rpb24oYSl7dmFyIGI9W107Zm9yKHZhciBjIGluIGEpYi5wdXNoKGMpO3JldHVybiBifTtmb3IodmFyIGUgaW4gYil7dmFyIGY9YltlXSxnPWYucHJvdG8saD1kKGcpLGk9Zi5mbGFnfHwzLGo9YS5NZXNzYWdlVGFnLmdldFRhZ0J5U3RhdHVzKGkpO2k9bmV3IGEuTWVzc2FnZVRhZyhqLmlzQ291bnRlZCxqLmlzUGVyc2l0ZWQpLGMucHVzaCh7dHlwZTplLG5hbWU6Zi5uYW1lLGZsYWc6aSxwcm90b3M6aH0pfWZvcih2YXIgaz1mdW5jdGlvbihiKXt2YXIgYz1iLnR5cGUsZD1iLm5hbWUsZT1iLmZsYWcsZj1iLnByb3RvczthLlJvbmdJTUNsaWVudC5yZWdpc3Rlck1lc3NhZ2VUeXBlKGMsZCxlLGYpfSxsPTAsbT1jLmxlbmd0aDtsPG07bCsrKXt2YXIgZj1jW2xdO2soZil9fSxiLnByb3RvdHlwZS5hZGRDb252ZXJzYXRpb249ZnVuY3Rpb24oYixjKXtmb3IodmFyIGQ9ITAsZT0wLGY9YS5Sb25nSU1DbGllbnQuX21lbW9yeVN0b3JlLmNvbnZlcnNhdGlvbkxpc3QubGVuZ3RoO2U8ZjtlKyspaWYoYS5Sb25nSU1DbGllbnQuX21lbW9yeVN0b3JlLmNvbnZlcnNhdGlvbkxpc3RbZV0uY29udmVyc2F0aW9uVHlwZT09PWIuY29udmVyc2F0aW9uVHlwZSYmYS5Sb25nSU1DbGllbnQuX21lbW9yeVN0b3JlLmNvbnZlcnNhdGlvbkxpc3RbZV0udGFyZ2V0SWQ9PT1iLnRhcmdldElkKXthLlJvbmdJTUNsaWVudC5fbWVtb3J5U3RvcmUuY29udmVyc2F0aW9uTGlzdC51bnNoaWZ0KGEuUm9uZ0lNQ2xpZW50Ll9tZW1vcnlTdG9yZS5jb252ZXJzYXRpb25MaXN0LnNwbGljZShlLDEpWzBdKSxkPSExO2JyZWFrfWQmJmEuUm9uZ0lNQ2xpZW50Ll9tZW1vcnlTdG9yZS5jb252ZXJzYXRpb25MaXN0LnVuc2hpZnQoYiksYyYmYy5vblN1Y2Nlc3MoITApfSxiLnByb3RvdHlwZS51cGRhdGVDb252ZXJzYXRpb249ZnVuY3Rpb24oYil7Zm9yKHZhciBjLGQ9MCxlPWEuUm9uZ0lNQ2xpZW50Ll9tZW1vcnlTdG9yZS5jb252ZXJzYXRpb25MaXN0Lmxlbmd0aDtkPGU7ZCsrKXt2YXIgZj1hLlJvbmdJTUNsaWVudC5fbWVtb3J5U3RvcmUuY29udmVyc2F0aW9uTGlzdFtkXTtpZihiLmNvbnZlcnNhdGlvblR5cGU9PT1mLmNvbnZlcnNhdGlvblR5cGUmJmIudGFyZ2V0SWQ9PT1mLnRhcmdldElkKXtiLmNvbnZlcnNhdGlvblRpdGxlJiYoZi5jb252ZXJzYXRpb25UaXRsZT1iLmNvbnZlcnNhdGlvblRpdGxlKSxiLnNlbmRlclVzZXJOYW1lJiYoZi5zZW5kZXJVc2VyTmFtZT1iLnNlbmRlclVzZXJOYW1lKSxiLnNlbmRlclBvcnRyYWl0VXJpJiYoZi5zZW5kZXJQb3J0cmFpdFVyaT1iLnNlbmRlclBvcnRyYWl0VXJpKSxiLmxhdGVzdE1lc3NhZ2UmJihmLmxhdGVzdE1lc3NhZ2U9Yi5sYXRlc3RNZXNzYWdlKSxiLnNlbnRTdGF0dXMmJihmLnNlbnRTdGF0dXM9Yi5zZW50U3RhdHVzKTticmVha319cmV0dXJuIGN9LGIucHJvdG90eXBlLnJlbW92ZUNvbnZlcnNhdGlvbj1mdW5jdGlvbihiLGMsZCl7dmFyIGU9bmV3IGEuUm9uZ0lNQ2xpZW50LlByb3RvYnVmLlJlbGF0aW9uc0lucHV0O2Uuc2V0VHlwZShiKSxhLlJvbmdJTUNsaWVudC5icmlkZ2UucXVlcnlNc2coMjcsYS5NZXNzYWdlVXRpbC5BcnJheUZvcm0oZS50b0FycmF5QnVmZmVyKCkpLGMse29uU3VjY2VzczpmdW5jdGlvbigpe2Zvcih2YXIgZT1hLlJvbmdJTUNsaWVudC5fbWVtb3J5U3RvcmUuY29udmVyc2F0aW9uTGlzdCxmPWUubGVuZ3RoLGc9MDtnPGY7ZysrKWlmKGVbZ10uY29udmVyc2F0aW9uVHlwZT09YiYmYz09ZVtnXS50YXJnZXRJZCl7ZS5zcGxpY2UoZywxKTticmVha31kLm9uU3VjY2VzcyghMCl9LG9uRXJyb3I6ZnVuY3Rpb24oYSl7c2V0VGltZW91dChmdW5jdGlvbigpe2Qub25FcnJvcihhKX0pfX0pfSxiLnByb3RvdHlwZS5nZXRNZXNzYWdlPWZ1bmN0aW9uKGIsYyl7Yy5vblN1Y2Nlc3MobmV3IGEuTWVzc2FnZSl9LGIucHJvdG90eXBlLmFkZE1lc3NhZ2U9ZnVuY3Rpb24oYSxiLGMsZCl7ZCYmZC5vblN1Y2Nlc3MoYyl9LGIucHJvdG90eXBlLnJlbW92ZU1lc3NhZ2U9ZnVuY3Rpb24oYixjLGQsZSl7YS5Sb25nSU1DbGllbnQuZ2V0SW5zdGFuY2UoKS5kZWxldGVSZW1vdGVNZXNzYWdlcyhiLGMsZCxlKX0sYi5wcm90b3R5cGUucmVtb3ZlTG9jYWxNZXNzYWdlPWZ1bmN0aW9uKGEsYixjLGQpe2Qub25TdWNjZXNzKCEwKX0sYi5wcm90b3R5cGUudXBkYXRlTWVzc2FnZT1mdW5jdGlvbihhLGIpe2ImJmIub25TdWNjZXNzKGEpfSxiLnByb3RvdHlwZS5jbGVhclJlbW90ZUhpc3RvcnlNZXNzYWdlcz1mdW5jdGlvbihiLGMpe3ZhciBkPW5ldyBhLlJvbmdJTUNsaWVudC5Qcm90b2J1Zi5DbGVhbkhpc01zZ0lucHV0LGU9Yi5jb252ZXJzYXRpb25UeXBlLGY9ezE6XCJjbGVhblBNc2dcIiwyOlwiY2xlYW5ETXNnXCIsMzpcImNsZWFuR01zZ1wiLDU6XCJjbGVhbkNNc2dcIiw2OlwiY2xlYW5TTXNnXCJ9LGc9ZltlXTtpZighZylyZXR1cm4gdm9pZCBjLm9uRXJyb3IoYS5FcnJvckNvZGUuQ0xFQVJfSElTX1RZUEVfRVJST1IpO3ZhciBoPWIudGltZXN0YW1wO2lmKFwibnVtYmVyXCIhPXR5cGVvZiBoKXJldHVybiB2b2lkIGMub25FcnJvcihhLkVycm9yQ29kZS5DTEVBUl9ISVNfVElNRV9FUlJPUik7ZC5zZXREYXRhVGltZShoKTt2YXIgaT1iLnRhcmdldElkO2Quc2V0VGFyZ2V0SWQoaSksYS5Sb25nSU1DbGllbnQuYnJpZGdlLnF1ZXJ5TXNnKGcsYS5NZXNzYWdlVXRpbC5BcnJheUZvcm0oZC50b0FycmF5QnVmZmVyKCkpLGkse29uU3VjY2VzczpmdW5jdGlvbihhKXtjLm9uU3VjY2VzcyghYSl9LG9uRXJyb3I6ZnVuY3Rpb24oYil7MT09YiYmKGI9YS5FcnJvckNvZGUuQ0xFQVJfSElTX0VSUk9SKSxzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7Yy5vbkVycm9yKGIpfSl9fSl9LGIucHJvdG90eXBlLmNsZWFySGlzdG9yeU1lc3NhZ2VzPWZ1bmN0aW9uKGEsYil7dGhpcy5jbGVhclJlbW90ZUhpc3RvcnlNZXNzYWdlcyhhLGIpfSxiLnByb3RvdHlwZS5jbGVhck1lc3NhZ2VzPWZ1bmN0aW9uKGEsYixjKXt9LGIucHJvdG90eXBlLnVwZGF0ZU1lc3NhZ2VzPWZ1bmN0aW9uKGIsYyxkLGUsZil7dmFyIGc9dGhpcztcInJlYWRTdGF0dXNcIj09ZCYmYS5Sb25nSU1DbGllbnQuX21lbW9yeVN0b3JlLmNvbnZlcnNhdGlvbkxpc3QubGVuZ3RoPjAmJmcuZ2V0Q29udmVyc2F0aW9uTGlzdCh7b25TdWNjZXNzOmZ1bmN0aW9uKGEpe0FycmF5LmZvckVhY2goYSxmdW5jdGlvbihhKXthLmNvbnZlcnNhdGlvblR5cGU9PWImJmEudGFyZ2V0SWQ9PWMmJihhLnVucmVhZE1lc3NhZ2VDb3VudD0wKX0pfSxvbkVycm9yOmZ1bmN0aW9uKGEpe3NldFRpbWVvdXQoZnVuY3Rpb24oKXtmLm9uRXJyb3IoYSl9KX19LG51bGwpLHNldFRpbWVvdXQoZnVuY3Rpb24oKXtmLm9uU3VjY2VzcyghMCl9KX0sYi5wcm90b3R5cGUuZ2V0Q29udmVyc2F0aW9uPWZ1bmN0aW9uKGIsYyxkKXtmb3IodmFyIGU9bnVsbCxmPTAsZz1hLlJvbmdJTUNsaWVudC5fbWVtb3J5U3RvcmUuY29udmVyc2F0aW9uTGlzdC5sZW5ndGg7ZjxnO2YrKylpZihhLlJvbmdJTUNsaWVudC5fbWVtb3J5U3RvcmUuY29udmVyc2F0aW9uTGlzdFtmXS5jb252ZXJzYXRpb25UeXBlPT1iJiZhLlJvbmdJTUNsaWVudC5fbWVtb3J5U3RvcmUuY29udmVyc2F0aW9uTGlzdFtmXS50YXJnZXRJZD09YyYmKGU9YS5Sb25nSU1DbGllbnQuX21lbW9yeVN0b3JlLmNvbnZlcnNhdGlvbkxpc3RbZl0sYS5Sb25nVXRpbC5zdXBwb3J0TG9jYWxTdG9yYWdlKCkpKXt2YXIgaD1hLlJvbmdJTUNsaWVudC5fc3RvcmFnZVByb3ZpZGVyLmdldEl0ZW0oXCJjdVwiK2EuQnJpZGdlLl9jbGllbnQudXNlcklkK2IrYyk7MD09ZS51bnJlYWRNZXNzYWdlQ291bnQmJihlLnVucmVhZE1lc3NhZ2VDb3VudD1OdW1iZXIoaCkpfXJldHVybiBzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7ZCYmZC5vblN1Y2Nlc3MoZSl9KSxlfSxiLnByb3RvdHlwZS5maWx0ZXJDb252ZXJzYXRpb25zPWZ1bmN0aW9uKGIsYyl7dmFyIGQ9W107cmV0dXJuIGEuUm9uZ1V0aWwuZm9yRWFjaChiLGZ1bmN0aW9uKGIpe2EuUm9uZ1V0aWwuZm9yRWFjaChjLGZ1bmN0aW9uKGEpe2EuY29udmVyc2F0aW9uVHlwZT09YiYmZC5wdXNoKGEpfSl9KSxkfSxiLnByb3RvdHlwZS5nZXRDb252ZXJzYXRpb25MaXN0PWZ1bmN0aW9uKGIsYyxkLGUpe3ZhciBmPXRoaXMsZz1hLlJvbmdJTUNsaWVudC5fbWVtb3J5U3RvcmUuaXNTeW5jUmVtb3RlQ29udmVyTGlzdCxoPWEuUm9uZ0lNQ2xpZW50Ll9tZW1vcnlTdG9yZS5jb252ZXJzYXRpb25MaXN0LGk9aC5sZW5ndGg+ZDtpZighZyYmaSlyZXR1cm4gdm9pZCBzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7dmFyIGE9aC5zbGljZSgwLGQpO2MmJihhPWYuZmlsdGVyQ29udmVyc2F0aW9ucyhjLGEpKSxiLm9uU3VjY2VzcyhhKX0pO2EuUm9uZ0lNQ2xpZW50LmdldEluc3RhbmNlKCkuZ2V0UmVtb3RlQ29udmVyc2F0aW9uTGlzdCh7b25TdWNjZXNzOmZ1bmN0aW9uKGMpe2EuUm9uZ1V0aWwuc3VwcG9ydExvY2FsU3RvcmFnZSgpJiZBcnJheS5mb3JFYWNoKGEuUm9uZ0lNQ2xpZW50Ll9tZW1vcnlTdG9yZS5jb252ZXJzYXRpb25MaXN0LGZ1bmN0aW9uKGIpe3ZhciBjPWEuUm9uZ0lNQ2xpZW50Ll9zdG9yYWdlUHJvdmlkZXIuZ2V0SXRlbShcImN1XCIrYS5CcmlkZ2UuX2NsaWVudC51c2VySWQrYi5jb252ZXJzYXRpb25UeXBlK2IudGFyZ2V0SWQpOzA9PWIudW5yZWFkTWVzc2FnZUNvdW50JiYoYi51bnJlYWRNZXNzYWdlQ291bnQ9TnVtYmVyKGMpKX0pLGEuUm9uZ0lNQ2xpZW50Ll9tZW1vcnlTdG9yZS5pc1N5bmNSZW1vdGVDb252ZXJMaXN0PSExLHNldFRpbWVvdXQoZnVuY3Rpb24oKXtiLm9uU3VjY2VzcyhjKX0pfSxvbkVycm9yOmZ1bmN0aW9uKGEpe3NldFRpbWVvdXQoZnVuY3Rpb24oKXtiLm9uRXJyb3IoYSl9KX19LGMsZCxlKX0sYi5wcm90b3R5cGUuY2xlYXJDYWNoZT1mdW5jdGlvbigpe3ZhciBiPWEuUm9uZ0lNQ2xpZW50Ll9tZW1vcnlTdG9yZXx8e307Yi5jb252ZXJzYXRpb25MaXN0PVtdLGIuaXNTeW5jUmVtb3RlQ29udmVyTGlzdD0hMH0sYi5wcm90b3R5cGUuY2xlYXJDb252ZXJzYXRpb25zPWZ1bmN0aW9uKGIsYyl7QXJyYXkuZm9yRWFjaChiLGZ1bmN0aW9uKGIpe0FycmF5LmZvckVhY2goYS5Sb25nSU1DbGllbnQuX21lbW9yeVN0b3JlLmNvbnZlcnNhdGlvbkxpc3QsZnVuY3Rpb24oYyl7Yj09Yy5jb252ZXJzYXRpb25UeXBlJiZhLlJvbmdJTUNsaWVudC5nZXRJbnN0YW5jZSgpLnJlbW92ZUNvbnZlcnNhdGlvbihjLmNvbnZlcnNhdGlvblR5cGUsYy50YXJnZXRJZCx7b25TdWNjZXNzOmZ1bmN0aW9uKCl7fSxvbkVycm9yOmZ1bmN0aW9uKCl7fX0pfSl9KSxzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7Yy5vblN1Y2Nlc3MoITApfSl9LGIucHJvdG90eXBlLnNldE1lc3NhZ2VDb250ZW50PWZ1bmN0aW9uKGEsYixjKXt9LGIucHJvdG90eXBlLnNldE1lc3NhZ2VTZWFyY2hGaWVsZD1mdW5jdGlvbihhLGIsYyl7fSxiLnByb3RvdHlwZS5nZXRIaXN0b3J5TWVzc2FnZXM9ZnVuY3Rpb24oYixjLGQsZSxmLGcsaCl7dmFyIGk9e29iamVjdG5hbWU6ZyxvcmRlcjpofTthLlJvbmdJTUNsaWVudC5nZXRJbnN0YW5jZSgpLmdldFJlbW90ZUhpc3RvcnlNZXNzYWdlcyhiLGMsZCxlLGYsaSl9LGIucHJvdG90eXBlLmdldFRvdGFsVW5yZWFkQ291bnQ9ZnVuY3Rpb24oYixjKXt2YXIgZD0wLGU9YS5Sb25nSU1DbGllbnQuX3N0b3JhZ2VQcm92aWRlcjtpZihjKWEuUm9uZ1V0aWwuZm9yRWFjaChjLGZ1bmN0aW9uKGIpe3ZhciBjPWUuZ2V0SXRlbUtleUxpc3QoXCJjdVwiK2EuQnJpZGdlLl9jbGllbnQudXNlcklkK2IpO2EuUm9uZ1V0aWwuZm9yRWFjaChjLGZ1bmN0aW9uKGEpe3ZhciBiPWUuZ2V0SXRlbShhKSxjPU51bWJlcihiKXx8MDtkKz1jfSl9KTtlbHNle3ZhciBmPWUuZ2V0SXRlbUtleUxpc3QoXCJjdVwiK2EuQnJpZGdlLl9jbGllbnQudXNlcklkKTthLlJvbmdVdGlsLmZvckVhY2goZixmdW5jdGlvbihhKXt2YXIgYj1lLmdldEl0ZW0oYSksYz1OdW1iZXIoYil8fDA7ZCs9Y30pfWIub25TdWNjZXNzKGQpfSxiLnByb3RvdHlwZS5nZXRDb252ZXJzYXRpb25VbnJlYWRDb3VudD1mdW5jdGlvbihiLGMpe3ZhciBkPTA7QXJyYXkuZm9yRWFjaChiLGZ1bmN0aW9uKGIpe0FycmF5LmZvckVhY2goYS5Sb25nSU1DbGllbnQuX21lbW9yeVN0b3JlLmNvbnZlcnNhdGlvbkxpc3QsZnVuY3Rpb24oYSl7YS5jb252ZXJzYXRpb25UeXBlPT1iJiYoZCs9YS51bnJlYWRNZXNzYWdlQ291bnQpfSl9KSxzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7Yy5vblN1Y2Nlc3MoZCl9KX0sYi5wcm90b3R5cGUuc2V0VW5yZWFkQ291bnQ9ZnVuY3Rpb24oYixjLGQpe3ZhciBlPWEuUm9uZ0lNQ2xpZW50Ll9zdG9yYWdlUHJvdmlkZXIsZj1cImN1XCIrYS5CcmlkZ2UuX2NsaWVudC51c2VySWQrYitjO2Uuc2V0SXRlbShmLGQpfSxiLnByb3RvdHlwZS5nZXRVbnJlYWRDb3VudD1mdW5jdGlvbihiLGMsZCl7dmFyIGU9XCJjdVwiK2EuQnJpZGdlLl9jbGllbnQudXNlcklkK2IrYyxmPWEuUm9uZ0lNQ2xpZW50Ll9zdG9yYWdlUHJvdmlkZXIuZ2V0SXRlbShlKSxnPU51bWJlcihmKTtzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7ZC5vblN1Y2Nlc3MoZ3x8MCl9KX0sYi5wcm90b3R5cGUuY2xlYW5NZW50aW9uZWRzPWZ1bmN0aW9uKGIpe2lmKGIpe2IubWVudGlvbmVkTXNnPW51bGw7dmFyIGM9Yi50YXJnZXRJZCxkPWIuY29udmVyc2F0aW9uVHlwZSxlPWEuUm9uZ0lNQ2xpZW50Ll9zdG9yYWdlUHJvdmlkZXIuZ2V0SXRlbShcIm1lbnRpb25lZHNfXCIrYS5CcmlkZ2UuX2NsaWVudC51c2VySWQrXCJfXCIrZCtcIl9cIitjKTtpZihlKXt2YXIgZj1KU09OLnBhcnNlKGUpO2RlbGV0ZSBmW2QrXCJfXCIrY10sYS5NZXNzYWdlVXRpbC5pc0VtcHR5KGYpP2EuUm9uZ0lNQ2xpZW50Ll9zdG9yYWdlUHJvdmlkZXIucmVtb3ZlSXRlbShcIm1lbnRpb25lZHNfXCIrYS5CcmlkZ2UuX2NsaWVudC51c2VySWQrXCJfXCIrZCtcIl9cIitjKTphLlJvbmdJTUNsaWVudC5fc3RvcmFnZVByb3ZpZGVyLnNldEl0ZW0oXCJtZW50aW9uZWRzX1wiK2EuQnJpZGdlLl9jbGllbnQudXNlcklkK1wiX1wiK2QrXCJfXCIrYyxKU09OLnN0cmluZ2lmeShmKSl9fX0sYi5wcm90b3R5cGUuY2xlYXJVbnJlYWRDb3VudEJ5VGltZXN0YW1wPWZ1bmN0aW9uKGEsYixjLGQpe3NldFRpbWVvdXQoZnVuY3Rpb24oKXtkLm9uU3VjY2VzcyghMCl9KX0sYi5wcm90b3R5cGUuY2xlYXJVbnJlYWRDb3VudD1mdW5jdGlvbihiLGMsZCl7dmFyIGU9dGhpczthLlJvbmdJTUNsaWVudC5fc3RvcmFnZVByb3ZpZGVyLnJlbW92ZUl0ZW0oXCJjdVwiK2EuQnJpZGdlLl9jbGllbnQudXNlcklkK2IrYyksdGhpcy5nZXRDb252ZXJzYXRpb24oYixjLHtvblN1Y2Nlc3M6ZnVuY3Rpb24oYSl7YSYmKGEudW5yZWFkTWVzc2FnZUNvdW50PTAsZS5jbGVhbk1lbnRpb25lZHMoYSkpLHNldFRpbWVvdXQoZnVuY3Rpb24oKXtkLm9uU3VjY2VzcyghMCl9KX0sb25FcnJvcjpmdW5jdGlvbihhKXtzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7ZC5vbkVycm9yKGEpfSl9fSl9LGIucHJvdG90eXBlLmNsZWFyVG90YWxVbnJlYWRDb3VudD1mdW5jdGlvbihiKXt2YXIgYz1hLlJvbmdJTUNsaWVudC5fbWVtb3J5U3RvcmUuY29udmVyc2F0aW9uTGlzdCxkPXRoaXM7aWYoYylmb3IodmFyIGU9MDtlPGMubGVuZ3RoO2UrKyl7dmFyIGY9Y1tlXTtmJiYoZi51bnJlYWRNZXNzYWdlQ291bnQ9MCxkLmNsZWFuTWVudGlvbmVkcyhmKSl9dmFyIGc9YS5Sb25nSU1DbGllbnQuX3N0b3JhZ2VQcm92aWRlci5nZXRJdGVtS2V5TGlzdChcImN1XCIrYS5CcmlkZ2UuX2NsaWVudC51c2VySWQpO2EuUm9uZ1V0aWwuZm9yRWFjaChnLGZ1bmN0aW9uKGIpe2EuUm9uZ0lNQ2xpZW50Ll9zdG9yYWdlUHJvdmlkZXIucmVtb3ZlSXRlbShiKX0pLHNldFRpbWVvdXQoZnVuY3Rpb24oKXtiLm9uU3VjY2VzcyghMCl9KX0sYi5wcm90b3R5cGUuc2V0Q29udmVyc2F0aW9uVG9Ub3A9ZnVuY3Rpb24oYSxiLGMsZCl7dmFyIGU9dGhpczt0aGlzLmdldENvbnZlcnNhdGlvbihhLGIse29uU3VjY2VzczpmdW5jdGlvbihhKXthLmlzVG9wPWMsZS5hZGRDb252ZXJzYXRpb24oYSxkKSxzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7ZC5vblN1Y2Nlc3MoITApfSl9LG9uRXJyb3I6ZnVuY3Rpb24oYSl7c2V0VGltZW91dChmdW5jdGlvbigpe2Qub25FcnJvcihhKX0pfX0pfSxiLnByb3RvdHlwZS5nZXRDb252ZXJzYXRpb25Ob3RpZmljYXRpb25TdGF0dXM9ZnVuY3Rpb24oYixjKXt2YXIgZD1iLnRhcmdldElkLGU9Yi5jb252ZXJzYXRpb25UeXBlLGY9YS5Sb25nSU1DbGllbnQuX21lbW9yeVN0b3JlLm5vdGlmaWNhdGlvbixnPWZ1bmN0aW9uKCl7cmV0dXJuIGUrXCJfXCIrZH0saD1nKCksaT1mW2hdO2lmKFwibnVtYmVyXCI9PXR5cGVvZiBpKXJldHVybiB2b2lkIGMub25TdWNjZXNzKGkpO3ZhciBqPXsxOlwicXJ5UFB1c2hcIiwzOlwicXJ5RFB1c2hcIn0saz1qW2VdO2lmKCFrKXtyZXR1cm4gdm9pZCBjLm9uRXJyb3IoODAwMSl9dmFyIGw9bmV3IGEuUm9uZ0lNQ2xpZW50LlByb3RvYnVmLkJsb2NrUHVzaElucHV0O2wuc2V0QmxvY2tlZUlkKGQpO3ZhciBtPWEuQnJpZGdlLl9jbGllbnQudXNlcklkLG49ZnVuY3Rpb24oYSl7ZltoXT1hLHNldFRpbWVvdXQoZnVuY3Rpb24oKXtjLm9uU3VjY2VzcyhhKX0pfTthLlJvbmdJTUNsaWVudC5icmlkZ2UucXVlcnlNc2coayxhLk1lc3NhZ2VVdGlsLkFycmF5Rm9ybShsLnRvQXJyYXlCdWZmZXIoKSksbSx7b25TdWNjZXNzOmZ1bmN0aW9uKGEpe24oYSl9LG9uRXJyb3I6ZnVuY3Rpb24oYSl7MT09YT9uKGEpOnNldFRpbWVvdXQoZnVuY3Rpb24oKXtjLm9uRXJyb3IoYSl9KX19KX0sYi5wcm90b3R5cGUuc2V0Q29udmVyc2F0aW9uTm90aWZpY2F0aW9uU3RhdHVzPWZ1bmN0aW9uKGIsYyl7dmFyIGQ9Yi5jb252ZXJzYXRpb25UeXBlLGU9Yi50YXJnZXRJZCxmPWIuc3RhdHVzLGc9ZnVuY3Rpb24oKXtyZXR1cm4gZCtcIl9cIitmfSxoPXtcIjFfMVwiOlwiYmxrUFB1c2hcIixcIjNfMVwiOlwiYmxrRFB1c2hcIixcIjFfMFwiOlwidW5ibGtQUHVzaFwiLFwiM18wXCI6XCJ1bmJsa0RQdXNoXCJ9LGk9ZygpO2EuUm9uZ0lNQ2xpZW50Ll9tZW1vcnlTdG9yZS5ub3RpZmljYXRpb25baV09Zjt2YXIgaj1oW2ldO2lmKCFqKXtyZXR1cm4gdm9pZCBzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7Yy5vbkVycm9yKDgwMDEpfSl9dmFyIGs9bmV3IGEuUm9uZ0lNQ2xpZW50LlByb3RvYnVmLkJsb2NrUHVzaElucHV0O2suc2V0QmxvY2tlZUlkKGUpO3ZhciBsPWEuQnJpZGdlLl9jbGllbnQudXNlcklkO2EuUm9uZ0lNQ2xpZW50LmJyaWRnZS5xdWVyeU1zZyhqLGEuTWVzc2FnZVV0aWwuQXJyYXlGb3JtKGsudG9BcnJheUJ1ZmZlcigpKSxsLHtvblN1Y2Nlc3M6ZnVuY3Rpb24oYSl7c2V0VGltZW91dChmdW5jdGlvbigpe2Mub25TdWNjZXNzKGEpfSl9LG9uRXJyb3I6ZnVuY3Rpb24oYSl7c2V0VGltZW91dChmdW5jdGlvbigpe2Mub25FcnJvcihhKX0pfX0pfSxiLnByb3RvdHlwZS5nZXRVc2VyU3RhdHVzPWZ1bmN0aW9uKGIsYyl7dmFyIGQ9bmV3IGEuUm9uZ0lNQ2xpZW50LlByb3RvYnVmLkdldFVzZXJTdGF0dXNJbnB1dDtiPWEuQnJpZGdlLl9jbGllbnQudXNlcklkLGEuUm9uZ0lNQ2xpZW50LmJyaWRnZS5xdWVyeU1zZygzNSxhLk1lc3NhZ2VVdGlsLkFycmF5Rm9ybShkLnRvQXJyYXlCdWZmZXIoKSksYix7b25TdWNjZXNzOmZ1bmN0aW9uKGIpe2I9YS5Sb25nSW5uZXJUb29scy5jb252ZXJ0VXNlclN0YXR1cyhiKSxzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7Yy5vblN1Y2Nlc3MoYil9KX0sb25FcnJvcjpmdW5jdGlvbihhKXtzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7Yy5vbkVycm9yKGEpfSl9fSxcIkdldFVzZXJTdGF0dXNPdXRwdXRcIil9LGIucHJvdG90eXBlLnNldFVzZXJTdGF0dXM9ZnVuY3Rpb24oYixjKXt2YXIgZD1uZXcgYS5Sb25nSU1DbGllbnQuUHJvdG9idWYuU2V0VXNlclN0YXR1c0lucHV0LGU9YS5CcmlkZ2UuX2NsaWVudC51c2VySWQ7YiYmZC5zZXRTdGF0dXMoYiksYS5Sb25nSU1DbGllbnQuYnJpZGdlLnF1ZXJ5TXNnKDM2LGEuTWVzc2FnZVV0aWwuQXJyYXlGb3JtKGQudG9BcnJheUJ1ZmZlcigpKSxlLHtvblN1Y2Nlc3M6ZnVuY3Rpb24oYSl7c2V0VGltZW91dChmdW5jdGlvbigpe2Mub25TdWNjZXNzKCEwKX0pfSxvbkVycm9yOmZ1bmN0aW9uKGEpe3NldFRpbWVvdXQoZnVuY3Rpb24oKXtjLm9uRXJyb3IoYSl9KX19LFwiU2V0VXNlclN0YXR1c091dHB1dFwiKX0sYi5wcm90b3R5cGUuc3Vic2NyaWJlVXNlclN0YXR1cz1mdW5jdGlvbihiLGMpe3ZhciBkPW5ldyBhLlJvbmdJTUNsaWVudC5Qcm90b2J1Zi5TdWJVc2VyU3RhdHVzSW5wdXQsZT1hLkJyaWRnZS5fY2xpZW50LnVzZXJJZDtkLnNldFVzZXJpZChiKSxhLlJvbmdJTUNsaWVudC5icmlkZ2UucXVlcnlNc2coMzcsYS5NZXNzYWdlVXRpbC5BcnJheUZvcm0oZC50b0FycmF5QnVmZmVyKCkpLGUse29uU3VjY2VzczpmdW5jdGlvbihhKXtzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7YyYmYy5vblN1Y2Nlc3MoITApfSl9LG9uRXJyb3I6ZnVuY3Rpb24oYSl7c2V0VGltZW91dChmdW5jdGlvbigpe2MmJmMub25FcnJvcihhKX0pfX0sXCJTdWJVc2VyU3RhdHVzT3V0cHV0XCIpfSxiLnByb3RvdHlwZS5zZXRVc2VyU3RhdHVzTGlzdGVuZXI9ZnVuY3Rpb24oYixjKXthLlJvbmdJTUNsaWVudC51c2VyU3RhdHVzTGlzdGVuZXI9Yzt2YXIgZD1iLnVzZXJJZHN8fFtdO2QubGVuZ3RoJiZhLlJvbmdJTUNsaWVudC5fZGF0YUFjY2Vzc1Byb3ZpZGVyLnN1YnNjcmliZVVzZXJTdGF0dXMoZCl9LGIucHJvdG90eXBlLmNsZWFyTGlzdGVuZXJzPWZ1bmN0aW9uKCl7fSxiLnByb3RvdHlwZS5zZXRTZXJ2ZXJJbmZvPWZ1bmN0aW9uKGEpe30sYi5wcm90b3R5cGUuZ2V0VW5yZWFkTWVudGlvbmVkTWVzc2FnZXM9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gbnVsbH0sYi5wcm90b3R5cGUuc2V0Q29udmVyc2F0aW9uSGlkZGVuPWZ1bmN0aW9uKGEsYixjKXt9LGIucHJvdG90eXBlLnNldE1lc3NhZ2VFeHRyYT1mdW5jdGlvbihhLGIsYyl7c2V0VGltZW91dChmdW5jdGlvbigpe2Mub25TdWNjZXNzKCEwKX0pfSxiLnByb3RvdHlwZS5zZXRNZXNzYWdlUmVjZWl2ZWRTdGF0dXM9ZnVuY3Rpb24oYSxiLGMpe3NldFRpbWVvdXQoZnVuY3Rpb24oKXtjLm9uU3VjY2VzcyghMCl9KX0sYi5wcm90b3R5cGUuc2V0TWVzc2FnZVNlbnRTdGF0dXM9ZnVuY3Rpb24oYSxiLGMpe3NldFRpbWVvdXQoZnVuY3Rpb24oKXtjLm9uU3VjY2VzcyghMCl9KX0sYi5wcm90b3R5cGUuZ2V0QWxsQ29udmVyc2F0aW9ucz1mdW5jdGlvbihhKXtzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7YS5vblN1Y2Nlc3MoW10pfSl9LGIucHJvdG90eXBlLmdldENvbnZlcnNhdGlvbkJ5Q29udGVudD1mdW5jdGlvbihhLGIpe3NldFRpbWVvdXQoZnVuY3Rpb24oKXtiLm9uU3VjY2VzcyhbXSl9KX0sYi5wcm90b3R5cGUuZ2V0TWVzc2FnZXNGcm9tQ29udmVyc2F0aW9uPWZ1bmN0aW9uKGEsYixjLGQpe3NldFRpbWVvdXQoZnVuY3Rpb24oKXtkLm9uU3VjY2VzcyhbXSl9KX0sYi5wcm90b3R5cGUuc2VhcmNoQ29udmVyc2F0aW9uQnlDb250ZW50PWZ1bmN0aW9uKGEsYixjKXtzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7Yi5vblN1Y2Nlc3MoW10pfSl9LGIucHJvdG90eXBlLnNlYXJjaE1lc3NhZ2VCeUNvbnRlbnQ9ZnVuY3Rpb24oYSxiLGMsZCxlLGYsZyl7c2V0VGltZW91dChmdW5jdGlvbigpe2cub25TdWNjZXNzKFtdKX0pfSxiLnByb3RvdHlwZS5nZXREZWxhVGltZT1mdW5jdGlvbigpe3JldHVybiBhLlJvbmdJTUNsaWVudC5fbWVtb3J5U3RvcmUuZGVsdGFUaW1lfSxiLnByb3RvdHlwZS5nZXRDdXJyZW50Q29ubmVjdGlvblN0YXR1cz1mdW5jdGlvbigpe3ZhciBiPWEuQnJpZGdlLl9jbGllbnR8fHt9LGM9Yi5jaGFubmVsfHx7fSxkPWEuQ29ubmVjdGlvblN0YXR1cy5DT05ORUNUSU9OX0NMT1NFRDtyZXR1cm5cIm51bWJlclwiPT10eXBlb2YgYy5jb25uZWN0aW9uU3RhdHVzJiYoZD1jLmNvbm5lY3Rpb25TdGF0dXMpLGR9LGIucHJvdG90eXBlLmdldEFnb3JhRHluYW1pY0tleT1mdW5jdGlvbihiLGMsZCl7dmFyIGU9bmV3IGEuUm9uZ0lNQ2xpZW50LlByb3RvYnVmLlZvaXBEeW5hbWljSW5wdXQ7ZS5zZXRFbmdpbmVUeXBlKGIpLGUuc2V0Q2hhbm5lbE5hbWUoYyksYS5Sb25nSU1DbGllbnQuYnJpZGdlLnF1ZXJ5TXNnKDMyLGEuTWVzc2FnZVV0aWwuQXJyYXlGb3JtKGUudG9BcnJheUJ1ZmZlcigpKSxhLkJyaWRnZS5fY2xpZW50LnVzZXJJZCx7b25TdWNjZXNzOmZ1bmN0aW9uKGEpe3NldFRpbWVvdXQoZnVuY3Rpb24oKXtkLm9uU3VjY2VzcyhhKX0pfSxvbkVycm9yOmZ1bmN0aW9uKGEpe3NldFRpbWVvdXQoZnVuY3Rpb24oKXtkLm9uRXJyb3IoYSl9KX19LFwiVm9pcER5bmFtaWNPdXRwdXRcIil9LGIucHJvdG90eXBlLnNldERldmljZUluZm89ZnVuY3Rpb24oYSl7fSxiLnByb3RvdHlwZS5zZXRFbnZpcm9ubWVudD1mdW5jdGlvbihhKXt9LGIucHJvdG90eXBlLmNsZWFyRGF0YT1mdW5jdGlvbigpe3JldHVybiEwfSxiLnByb3RvdHlwZS5nZXRQdWJsaWNTZXJ2aWNlUHJvZmlsZT1mdW5jdGlvbihiLGMsZCl7dmFyIGU9YS5Sb25nSU1DbGllbnQuX21lbW9yeVN0b3JlLnB1YmxpY1NlcnZpY2VNYXAuZ2V0KGIsYyk7c2V0VGltZW91dChmdW5jdGlvbigpe2Qub25TdWNjZXNzKGUpfSl9LGIucHJvdG90eXBlLmdldFJlbW90ZVB1YmxpY1NlcnZpY2VMaXN0PWZ1bmN0aW9uKGIsYyl7aWYoYS5Sb25nSU1DbGllbnQuX21lbW9yeVN0b3JlLmRlcGVuZC5vcGVuTXApe3ZhciBkPW5ldyBhLlJvbmdJTUNsaWVudC5Qcm90b2J1Zi5QdWxsTXBJbnB1dDtjP2Quc2V0VGltZShjKTpkLnNldFRpbWUoMCksZC5zZXRNcGlkKFwiXCIpLGEuUm9uZ0lNQ2xpZW50LmJyaWRnZS5xdWVyeU1zZygyOCxhLk1lc3NhZ2VVdGlsLkFycmF5Rm9ybShkLnRvQXJyYXlCdWZmZXIoKSksYS5CcmlkZ2UuX2NsaWVudC51c2VySWQse29uU3VjY2VzczpmdW5jdGlvbihjKXthLlJvbmdJTUNsaWVudC5fbWVtb3J5U3RvcmUucHVibGljU2VydmljZU1hcC5wdWJsaWNTZXJ2aWNlTGlzdC5sZW5ndGg9MCxhLlJvbmdJTUNsaWVudC5fbWVtb3J5U3RvcmUucHVibGljU2VydmljZU1hcC5wdWJsaWNTZXJ2aWNlTGlzdD1jLHNldFRpbWVvdXQoZnVuY3Rpb24oKXtiJiZiLm9uU3VjY2VzcyhjKX0pfSxvbkVycm9yOmZ1bmN0aW9uKGEpe3NldFRpbWVvdXQoZnVuY3Rpb24oKXtiJiZiLm9uRXJyb3IoYSl9KX19LFwiUHVsbE1wT3V0cHV0XCIpfX0sYi5wcm90b3R5cGUuZ2V0UlRDVXNlckluZm9MaXN0PWZ1bmN0aW9uKGIsYyl7dmFyIGQ9bmV3IGEuUm9uZ0lNQ2xpZW50LlByb3RvYnVmLlJ0Y1F1ZXJ5TGlzdElucHV0O2Quc2V0T3JkZXIoMiksYS5Sb25nSU1DbGllbnQuYnJpZGdlLnF1ZXJ5TXNnKFwicnRjVURhdGFcIixhLk1lc3NhZ2VVdGlsLkFycmF5Rm9ybShkLnRvQXJyYXlCdWZmZXIoKSksYi5pZCx7b25TdWNjZXNzOmZ1bmN0aW9uKGIpe3ZhciBkPXt9LGU9Yi5saXN0O2EuUm9uZ1V0aWwuZm9yRWFjaChlLGZ1bmN0aW9uKGIpe3ZhciBjPWIudXNlcklkLGU9e307YS5Sb25nVXRpbC5mb3JFYWNoKGIudXNlckRhdGEsZnVuY3Rpb24oYSl7dmFyIGI9YS5rZXksYz1hLnZhbHVlO2VbYl09Y30pLGRbY109ZX0pLGMub25TdWNjZXNzKGQpfSxvbkVycm9yOmZ1bmN0aW9uKGEpe2Mub25FcnJvcihhKX19LFwiUnRjVXNlckxpc3RPdXRwdXRcIil9LGIucHJvdG90eXBlLmdldFJUQ1VzZXJMaXN0PWZ1bmN0aW9uKGIsYyl7dmFyIGQ9bmV3IGEuUm9uZ0lNQ2xpZW50LlByb3RvYnVmLlJ0Y1F1ZXJ5TGlzdElucHV0O2Quc2V0T3JkZXIoMiksYS5Sb25nSU1DbGllbnQuYnJpZGdlLnF1ZXJ5TXNnKFwicnRjVUxpc3RcIixhLk1lc3NhZ2VVdGlsLkFycmF5Rm9ybShkLnRvQXJyYXlCdWZmZXIoKSksYi5pZCx7b25TdWNjZXNzOmZ1bmN0aW9uKGEpe2Mub25TdWNjZXNzKHt1c2VyczphLmxpc3R9KX0sb25FcnJvcjpmdW5jdGlvbihhKXtjLm9uRXJyb3IoYSl9fSxcIlJ0Y1VzZXJMaXN0T3V0cHV0XCIpfSxiLnByb3RvdHlwZS5zZXRSVENVc2VySW5mbz1mdW5jdGlvbihiLGMsZCl7dmFyIGU9bmV3IGEuUm9uZ0lNQ2xpZW50LlByb3RvYnVmLlJ0Y1ZhbHVlSW5mbztlLnNldEtleShjLmtleSksZS5zZXRWYWx1ZShjLnZhbHVlKSxhLlJvbmdJTUNsaWVudC5icmlkZ2UucXVlcnlNc2coXCJydGNVUHV0XCIsYS5NZXNzYWdlVXRpbC5BcnJheUZvcm0oZS50b0FycmF5QnVmZmVyKCkpLGIuaWQse29uU3VjY2VzczpmdW5jdGlvbigpe2Qub25TdWNjZXNzKCEwKX0sb25FcnJvcjpmdW5jdGlvbihhKXtkLm9uRXJyb3IoYSl9fSl9LGIucHJvdG90eXBlLnJlbW92ZVJUQ1VzZXJJbmZvPWZ1bmN0aW9uKGIsYyxkKXt2YXIgZT1uZXcgYS5Sb25nSU1DbGllbnQuUHJvdG9idWYuUnRjS2V5RGVsZXRlSW5wdXQsZj1jLmtleXN8fFtdO2EuUm9uZ1V0aWwuaXNBcnJheShmKXx8KGY9W2ZdKSxlLnNldEtleShmKSxhLlJvbmdJTUNsaWVudC5icmlkZ2UucXVlcnlNc2coXCJydGNVRGVsXCIsYS5NZXNzYWdlVXRpbC5BcnJheUZvcm0oZS50b0FycmF5QnVmZmVyKCkpLGIuaWQse29uU3VjY2VzczpmdW5jdGlvbigpe2Qub25TdWNjZXNzKCEwKX0sb25FcnJvcjpmdW5jdGlvbihhKXtkLm9uRXJyb3IoYSl9fSl9LGIucHJvdG90eXBlLmdldFJUQ1Jvb21JbmZvPWZ1bmN0aW9uKGIsYyl7dmFyIGQ9bmV3IGEuUm9uZ0lNQ2xpZW50LlByb3RvYnVmLlJ0Y1F1ZXJ5TGlzdElucHV0O2Quc2V0T3JkZXIoMiksYS5Sb25nSU1DbGllbnQuYnJpZGdlLnF1ZXJ5TXNnKFwicnRjUkluZm9cIixhLk1lc3NhZ2VVdGlsLkFycmF5Rm9ybShkLnRvQXJyYXlCdWZmZXIoKSksYi5pZCx7b25TdWNjZXNzOmZ1bmN0aW9uKGIpe3ZhciBkPXtpZDpiLnJvb21JZCx0b3RhbDpiLnVzZXJDb3VudH07YS5Sb25nVXRpbC5mb3JFYWNoKGIucm9vbURhdGEsZnVuY3Rpb24oYSl7ZFthLmtleV09YS52YWx1ZX0pLGMub25TdWNjZXNzKGQpfSxvbkVycm9yOmZ1bmN0aW9uKGEpe2Mub25FcnJvcihhKX19LFwiUnRjUm9vbUluZm9PdXRwdXRcIil9LGIucHJvdG90eXBlLnNldFJUQ1Jvb21JbmZvPWZ1bmN0aW9uKGIsYyxkKXt2YXIgZT1uZXcgYS5Sb25nSU1DbGllbnQuUHJvdG9idWYuUnRjVmFsdWVJbmZvO2Uuc2V0S2V5KGMua2V5KSxlLnNldFZhbHVlKGMudmFsdWUpLGEuUm9uZ0lNQ2xpZW50LmJyaWRnZS5xdWVyeU1zZyhcInJ0Y1JQdXRcIixhLk1lc3NhZ2VVdGlsLkFycmF5Rm9ybShlLnRvQXJyYXlCdWZmZXIoKSksYi5pZCx7b25TdWNjZXNzOmZ1bmN0aW9uKCl7ZC5vblN1Y2Nlc3MoITApfSxvbkVycm9yOmZ1bmN0aW9uKGEpe2Qub25FcnJvcihhKX19KX0sYi5wcm90b3R5cGUucmVtb3ZlUlRDUm9vbUluZm89ZnVuY3Rpb24oYixjLGQpe3ZhciBlPW5ldyBhLlJvbmdJTUNsaWVudC5Qcm90b2J1Zi5SdGNLZXlEZWxldGVJbnB1dCxmPWMua2V5c3x8W107YS5Sb25nVXRpbC5pc0FycmF5KGYpfHwoZj1bZl0pLGUuc2V0S2V5KGYpLGEuUm9uZ0lNQ2xpZW50LmJyaWRnZS5xdWVyeU1zZyhcInJ0Y1JEZWxcIixhLk1lc3NhZ2VVdGlsLkFycmF5Rm9ybShlLnRvQXJyYXlCdWZmZXIoKSksYi5pZCx7b25TdWNjZXNzOmZ1bmN0aW9uKCl7ZC5vblN1Y2Nlc3MoITApfSxvbkVycm9yOmZ1bmN0aW9uKGEpe2Qub25FcnJvcihhKX19KX0sYi5wcm90b3R5cGUuam9pblJUQ1Jvb209ZnVuY3Rpb24oYixjKXt2YXIgZD1uZXcgYS5Sb25nSU1DbGllbnQuUHJvdG9idWYuUnRjSW5wdXQ7ZC5zZXROb3RoaW5nKGIubW9kZSksYS5Sb25nSU1DbGllbnQuYnJpZGdlLnF1ZXJ5TXNnKFwicnRjUkpvaW5fZGF0YVwiLGEuTWVzc2FnZVV0aWwuQXJyYXlGb3JtKGQudG9BcnJheUJ1ZmZlcigpKSxiLmlkLHtvblN1Y2Nlc3M6ZnVuY3Rpb24oYil7dmFyIGQ9e30sZT1iLmxpc3QsZj1iLnRva2VuO2EuUm9uZ1V0aWwuZm9yRWFjaChlLGZ1bmN0aW9uKGIpe3ZhciBjPWIudXNlcklkLGU9e307YS5Sb25nVXRpbC5mb3JFYWNoKGIudXNlckRhdGEsZnVuY3Rpb24oYSl7dmFyIGI9YS5rZXksYz1hLnZhbHVlO2VbYl09Y30pLGRbY109ZX0pLGMub25TdWNjZXNzKHt1c2VyczpkLHRva2VuOmZ9KX0sb25FcnJvcjpmdW5jdGlvbihhKXtjLm9uRXJyb3IoYSl9fSxcIlJ0Y1VzZXJMaXN0T3V0cHV0XCIpfSxiLnByb3RvdHlwZS5xdWl0UlRDUm9vbT1mdW5jdGlvbihiLGMpe3ZhciBkPW5ldyBhLlJvbmdJTUNsaWVudC5Qcm90b2J1Zi5TZXRVc2VyU3RhdHVzSW5wdXQ7YS5Sb25nSU1DbGllbnQuYnJpZGdlLnF1ZXJ5TXNnKFwicnRjUkV4aXRcIixhLk1lc3NhZ2VVdGlsLkFycmF5Rm9ybShkLnRvQXJyYXlCdWZmZXIoKSksYi5pZCx7b25TdWNjZXNzOmZ1bmN0aW9uKCl7Yy5vblN1Y2Nlc3MoITApfSxvbkVycm9yOmZ1bmN0aW9uKGEpe2Mub25FcnJvcihhKX19KX0sYi5wcm90b3R5cGUuUlRDUGluZz1mdW5jdGlvbihiLGMpe3ZhciBkPW5ldyBhLlJvbmdJTUNsaWVudC5Qcm90b2J1Zi5SdGNJbnB1dDthLlJvbmdJTUNsaWVudC5icmlkZ2UucXVlcnlNc2coXCJydGNQaW5nXCIsYS5NZXNzYWdlVXRpbC5BcnJheUZvcm0oZC50b0FycmF5QnVmZmVyKCkpLGIuaWQsYyl9LGIucHJvdG90eXBlLnNldFJUQ0RhdGE9ZnVuY3Rpb24oYixjLGQsZSxmLGcsaCl7dmFyIGk9bmV3IGEuUm9uZ0lNQ2xpZW50LlByb3RvYnVmLlJ0Y1NldERhdGFJbnB1dDtpLnNldEludGVyaW9yKGUpLGkuc2V0VGFyZ2V0KGYpLGkuc2V0S2V5KGMpLGkuc2V0VmFsdWUoZCksaD1ofHx7fTt2YXIgaj1oLm5hbWUsaz1oLmNvbnRlbnQ7aiYmaS5zZXRPYmplY3ROYW1lKGopLGsmJihhLlJvbmdVdGlsLmlzU3RyaW5nKGspfHwoaz1KU09OLnN0cmluZ2lmeShrKSksaS5zZXRDb250ZW50KGspKSxhLlJvbmdJTUNsaWVudC5icmlkZ2UucXVlcnlNc2coXCJydGNTZXREYXRhXCIsYS5NZXNzYWdlVXRpbC5BcnJheUZvcm0oaS50b0FycmF5QnVmZmVyKCkpLGIsZyxcIlJ0Y091dHB1dFwiKX0sYi5wcm90b3R5cGUuZ2V0UlRDRGF0YT1mdW5jdGlvbihiLGMsZCxlLGYpe3ZhciBnPW5ldyBhLlJvbmdJTUNsaWVudC5Qcm90b2J1Zi5SdGNEYXRhSW5wdXQ7Zy5zZXRJbnRlcmlvcihkKSxnLnNldFRhcmdldChlKSxnLnNldEtleShjKSxhLlJvbmdJTUNsaWVudC5icmlkZ2UucXVlcnlNc2coXCJydGNRcnlEYXRhXCIsYS5NZXNzYWdlVXRpbC5BcnJheUZvcm0oZy50b0FycmF5QnVmZmVyKCkpLGIse29uU3VjY2VzczpmdW5jdGlvbihiKXt2YXIgYz17fSxkPWIub3V0SW5mbzthLlJvbmdVdGlsLmZvckVhY2goZCxmdW5jdGlvbihhKXtjW2Eua2V5XT1hLnZhbHVlfSksZi5vblN1Y2Nlc3MoYyl9LG9uRXJyb3I6Zi5vbkVycm9yfSxcIlJ0Y1FyeU91dHB1dFwiKX0sYi5wcm90b3R5cGUucmVtb3ZlUlRDRGF0YT1mdW5jdGlvbihiLGMsZCxlLGYsZyl7dmFyIGg9bmV3IGEuUm9uZ0lNQ2xpZW50LlByb3RvYnVmLlJ0Y0RhdGFJbnB1dDtoLnNldEludGVyaW9yKGQpLGguc2V0VGFyZ2V0KGUpLGguc2V0S2V5KGMpLGc9Z3x8e307dmFyIGk9Zy5uYW1lLGo9Zy5jb250ZW50O2kmJmguc2V0T2JqZWN0TmFtZShpKSxqJiYoYS5Sb25nVXRpbC5pc1N0cmluZyhqKXx8KGo9SlNPTi5zdHJpbmdpZnkoaikpLGguc2V0Q29udGVudChqKSksYS5Sb25nSU1DbGllbnQuYnJpZGdlLnF1ZXJ5TXNnKFwicnRjRGVsRGF0YVwiLGEuTWVzc2FnZVV0aWwuQXJyYXlGb3JtKGgudG9BcnJheUJ1ZmZlcigpKSxiLGYsXCJSdGNPdXRwdXRcIil9LGIucHJvdG90eXBlLnNldFJUQ1VzZXJEYXRhPWZ1bmN0aW9uKGIsYyxkLGUsZixnKXt0aGlzLnNldFJUQ0RhdGEoYixjLGQsZSxhLlJUQ0FQSVR5cGUuUEVSU09OLGYsZyl9LGIucHJvdG90eXBlLmdldFJUQ1VzZXJEYXRhPWZ1bmN0aW9uKGIsYyxkLGUsZil7dGhpcy5nZXRSVENEYXRhKGIsYyxkLGEuUlRDQVBJVHlwZS5QRVJTT04sZSl9LGIucHJvdG90eXBlLnJlbW92ZVJUQ1VzZXJEYXRhPWZ1bmN0aW9uKGIsYyxkLGUsZil7dGhpcy5yZW1vdmVSVENEYXRhKGIsYyxkLGEuUlRDQVBJVHlwZS5QRVJTT04sZSxmKX0sYi5wcm90b3R5cGUuc2V0UlRDUm9vbURhdGE9ZnVuY3Rpb24oYixjLGQsZSxmLGcpe3RoaXMuc2V0UlRDRGF0YShiLGMsZCxlLGEuUlRDQVBJVHlwZS5ST09NLGYsZyl9LGIucHJvdG90eXBlLmdldFJUQ1Jvb21EYXRhPWZ1bmN0aW9uKGIsYyxkLGUsZil7dGhpcy5nZXRSVENEYXRhKGIsYyxkLGEuUlRDQVBJVHlwZS5ST09NLGUpfSxiLnByb3RvdHlwZS5yZW1vdmVSVENSb29tRGF0YT1mdW5jdGlvbihiLGMsZCxlLGYpe3RoaXMucmVtb3ZlUlRDRGF0YShiLGMsZCxhLlJUQ0FQSVR5cGUuUk9PTSxlLGYpfSxiLnByb3RvdHlwZS5nZXROYXZpPWZ1bmN0aW9uKCl7dmFyIGI9YS5Sb25nSU1DbGllbnQuX3N0b3JhZ2VQcm92aWRlci5nZXRJdGVtKFwiZnVsbG5hdmlcIil8fFwie31cIjtyZXR1cm4gSlNPTi5wYXJzZShiKX0sYi5wcm90b3R5cGUuZ2V0UlRDVG9rZW49ZnVuY3Rpb24oYixjKXt2YXIgZD1uZXcgYS5Sb25nSU1DbGllbnQuUHJvdG9idWYuUnRjSW5wdXQ7YS5Sb25nSU1DbGllbnQuYnJpZGdlLnF1ZXJ5TXNnKFwicnRjVG9rZW5cIixhLk1lc3NhZ2VVdGlsLkFycmF5Rm9ybShkLnRvQXJyYXlCdWZmZXIoKSksYi5pZCx7b25TdWNjZXNzOmZ1bmN0aW9uKGEpe2Mub25TdWNjZXNzKGEpfSxvbkVycm9yOmZ1bmN0aW9uKGEpe2Mub25FcnJvcihhKX19LFwiUnRjVG9rZW5PdXRwdXRcIil9LGJ9KCk7YS5TZXJ2ZXJEYXRhUHJvdmlkZXI9Yn0oUm9uZ0lNTGlifHwoUm9uZ0lNTGliPXt9KSk7dmFyIFJvbmdJTUxpYjshZnVuY3Rpb24oYSl7dmFyIGI9ZnVuY3Rpb24oKXtmdW5jdGlvbiBiKGEpe3RoaXMudmVyc2lvbj1cIjIuOC4yN1wiLHRoaXMudXNlcklkPVwiXCIsdGhpcy51c2VDb25zb2xlPSExLHRoaXMuYXBwS2V5PVwiXCIsdGhpcy50b2tlbj1cIlwiLHRoaXMuYWRkb249YX1yZXR1cm4gYi5wcm90b3R5cGUuaW5pdD1mdW5jdGlvbihhLGIpe3RoaXMuYXBwS2V5PWEsdGhpcy51c2VDb25zb2xlJiZjb25zb2xlLmxvZyhcImluaXRcIiksYj1ifHx7fSxiLnZlcnNpb249dGhpcy52ZXJzaW9uO3ZhciBjPXRoaXMuYWRkb24uaW5pdFdpdGhBcHBrZXkoYSxiLmRiUGF0aCxiKTtyZXR1cm4gYyYmKGM9SlNPTi5wYXJzZShjKSksdGhpcy5hZGRvbi5yZWdpc3Rlck1lc3NhZ2VUeXBlKFwiUkM6VmNNc2dcIiwzKSx0aGlzLmFkZG9uLnJlZ2lzdGVyTWVzc2FnZVR5cGUoXCJSQzpJbWdUZXh0TXNnXCIsMyksdGhpcy5hZGRvbi5yZWdpc3Rlck1lc3NhZ2VUeXBlKFwiUkM6RmlsZU1zZ1wiLDMpLHRoaXMuYWRkb24ucmVnaXN0ZXJNZXNzYWdlVHlwZShcIlJDOkxCU01zZ1wiLDMpLHRoaXMuYWRkb24ucmVnaXN0ZXJNZXNzYWdlVHlwZShcIlJDOlBTSW1nVHh0TXNnXCIsMyksdGhpcy5hZGRvbi5yZWdpc3Rlck1lc3NhZ2VUeXBlKFwiUkM6UFNNdWx0aUltZ1R4dE1zZ1wiLDMpLHRoaXMuYWRkb24ucmVnaXN0ZXJNZXNzYWdlVHlwZShcIlJDSnJtZjpScE1zZ1wiLDMpLHRoaXMuYWRkb24ucmVnaXN0ZXJNZXNzYWdlVHlwZShcIlJDSnJtZjpScE9wZW5kTXNnXCIsMSksdGhpcy5hZGRvbi5yZWdpc3Rlck1lc3NhZ2VUeXBlKFwiUkM6R3JwTnRmXCIsMSksdGhpcy5hZGRvbi5yZWdpc3Rlck1lc3NhZ2VUeXBlKFwiUkM6RGl6TnRmXCIsMCksdGhpcy5hZGRvbi5yZWdpc3Rlck1lc3NhZ2VUeXBlKFwiUkM6SW5mb050ZlwiLDApLHRoaXMuYWRkb24ucmVnaXN0ZXJNZXNzYWdlVHlwZShcIlJDOkNvbnRhY3ROdGZcIiwwKSx0aGlzLmFkZG9uLnJlZ2lzdGVyTWVzc2FnZVR5cGUoXCJSQzpQcm9maWxlTnRmXCIsMCksdGhpcy5hZGRvbi5yZWdpc3Rlck1lc3NhZ2VUeXBlKFwiUkM6Q21kTnRmXCIsMCksdGhpcy5hZGRvbi5yZWdpc3Rlck1lc3NhZ2VUeXBlKFwiUkM6Q21kTXNnXCIsMCksdGhpcy5hZGRvbi5yZWdpc3Rlck1lc3NhZ2VUeXBlKFwiUkM6VHlwU3RzXCIsMCksdGhpcy5hZGRvbi5yZWdpc3Rlck1lc3NhZ2VUeXBlKFwiUkM6Q3NDaGFSXCIsMCksdGhpcy5hZGRvbi5yZWdpc3Rlck1lc3NhZ2VUeXBlKFwiUkM6Q3NIc1JcIiwwKSx0aGlzLmFkZG9uLnJlZ2lzdGVyTWVzc2FnZVR5cGUoXCJSQzpDc0VuZFwiLDApLHRoaXMuYWRkb24ucmVnaXN0ZXJNZXNzYWdlVHlwZShcIlJDOkNzU3BcIiwwKSx0aGlzLmFkZG9uLnJlZ2lzdGVyTWVzc2FnZVR5cGUoXCJSQzpDc1VwZGF0ZVwiLDApLHRoaXMuYWRkb24ucmVnaXN0ZXJNZXNzYWdlVHlwZShcIlJDOkNzQ29udGFjdFwiLDApLHRoaXMuYWRkb24ucmVnaXN0ZXJNZXNzYWdlVHlwZShcIlJDOlJlYWROdGZcIiwwKSx0aGlzLmFkZG9uLnJlZ2lzdGVyTWVzc2FnZVR5cGUoXCJSQzpWQ0FjY2VwdFwiLDApLHRoaXMuYWRkb24ucmVnaXN0ZXJNZXNzYWdlVHlwZShcIlJDOlZDUmluZ2luZ1wiLDApLHRoaXMuYWRkb24ucmVnaXN0ZXJNZXNzYWdlVHlwZShcIlJDOlZDU3VtbWFyeVwiLDApLHRoaXMuYWRkb24ucmVnaXN0ZXJNZXNzYWdlVHlwZShcIlJDOlZDSGFuZ3VwXCIsMCksdGhpcy5hZGRvbi5yZWdpc3Rlck1lc3NhZ2VUeXBlKFwiUkM6VkNJbnZpdGVcIiwwKSx0aGlzLmFkZG9uLnJlZ2lzdGVyTWVzc2FnZVR5cGUoXCJSQzpWQ01vZGlmeU1lZGlhXCIsMCksdGhpcy5hZGRvbi5yZWdpc3Rlck1lc3NhZ2VUeXBlKFwiUkM6VkNNb2RpZnlNZW1cIiwwKSx0aGlzLmFkZG9uLnJlZ2lzdGVyTWVzc2FnZVR5cGUoXCJSQzpQU0NtZFwiLDApLHRoaXMuYWRkb24ucmVnaXN0ZXJNZXNzYWdlVHlwZShcIlJDOlJjQ21kXCIsMCksdGhpcy5hZGRvbi5yZWdpc3Rlck1lc3NhZ2VUeXBlKFwiUkM6U1JTTXNnXCIsMCksdGhpcy5hZGRvbi5yZWdpc3Rlck1lc3NhZ2VUeXBlKFwiUkM6UlJSZXFNc2dcIiwwKSx0aGlzLmFkZG9uLnJlZ2lzdGVyTWVzc2FnZVR5cGUoXCJSQzpSUlJzcE1zZ1wiLDApLGN9LGIucHJvdG90eXBlLmNvbm5lY3Q9ZnVuY3Rpb24oYixjLGQsZSl7dGhpcy51c2VDb25zb2xlJiZjb25zb2xlLmxvZyhcImNvbm5lY3RcIiksdGhpcy51c2VySWQ9ZCx0aGlzLmNvbm5lY3RDYWxsYmFjaz1jLGEuQnJpZGdlLl9jbGllbnQ9e3VzZXJJZDpkfSxlPWV8fHt9O3ZhciBmPSEhZS5vcGVuTXAsZz0hIWUub3BlblVTO2UudHlwZSYmdGhpcy5hZGRvbi5zZXRFbnZpcm9ubWVudCghMCksdGhpcy5hZGRvbi5jb25uZWN0V2l0aFRva2VuKGIsZCxlLnNlcnZlckxpc3QsZixnKX0sYi5wcm90b3R5cGUuc2V0U2VydmVySW5mbz1mdW5jdGlvbihhKXtcInNldFNlcnZlckluZm9cImluIHRoaXMuYWRkb24mJnRoaXMuYWRkb24uc2V0U2VydmVySW5mbyhhLm5hdmkpfSxiLnByb3RvdHlwZS5sb2dvdXQ9ZnVuY3Rpb24oKXt0aGlzLnVzZUNvbnNvbGUmJmNvbnNvbGUubG9nKFwibG9nb3V0XCIpLHRoaXMuZGlzY29ubmVjdCgpfSxiLnByb3RvdHlwZS5kaXNjb25uZWN0PWZ1bmN0aW9uKCl7dGhpcy51c2VDb25zb2xlJiZjb25zb2xlLmxvZyhcImRpc2Nvbm5lY3RcIiksdGhpcy5hZGRvbi5kaXNjb25uZWN0KCEwKX0sYi5wcm90b3R5cGUuY2xlYXJMaXN0ZW5lcnM9ZnVuY3Rpb24oKXt0aGlzLmFkZG9uLnNldE9uUmVjZWl2ZVN0YXR1c0xpc3RlbmVyKCksdGhpcy5hZGRvbi5zZXRDb25uZWN0aW9uU3RhdHVzTGlzdGVuZXIoKSx0aGlzLmFkZG9uLnNldE9uUmVjZWl2ZU1lc3NhZ2VMaXN0ZW5lcigpfSxiLnByb3RvdHlwZS5jbGVhckRhdGE9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy51c2VDb25zb2xlJiZjb25zb2xlLmxvZyhcImNsZWFyRGF0YVwiKSx0aGlzLmFkZG9uLmNsZWFyRGF0YSgpfSxiLnByb3RvdHlwZS5zZXRDb25uZWN0aW9uU3RhdHVzTGlzdGVuZXI9ZnVuY3Rpb24oYil7dmFyIGM9dGhpcztjLmNvbm5lY3RMaXN0ZW5lcj1iLHRoaXMudXNlQ29uc29sZSYmY29uc29sZS5sb2coXCJzZXRDb25uZWN0aW9uU3RhdHVzTGlzdGVuZXJcIiksYy5hZGRvbiYmYy5hZGRvbi5zZXRDb25uZWN0aW9uU3RhdHVzTGlzdGVuZXIoZnVuY3Rpb24oZCl7c3dpdGNoKGQpe1xyXG5jYXNlIDEwOnNldFRpbWVvdXQoZnVuY3Rpb24oKXtiLm9uQ2hhbmdlZChhLkNvbm5lY3Rpb25TdGF0dXMuQ09OTkVDVElORyl9KTticmVhaztjYXNlIDMxMDA0OnNldFRpbWVvdXQoZnVuY3Rpb24oKXtjLmNvbm5lY3RDYWxsYmFjay5vblRva2VuSW5jb3JyZWN0KCl9KTticmVhaztjYXNlIDE6Y2FzZSA4OmNhc2UgOTpjYXNlIDExOmNhc2UgMTI6Y2FzZSAzMTAxMTpjYXNlIDNlNDpjYXNlIDMwMDAyOnNldFRpbWVvdXQoZnVuY3Rpb24oKXtiLm9uQ2hhbmdlZChhLkNvbm5lY3Rpb25TdGF0dXMuRElTQ09OTkVDVEVEKX0pO2JyZWFrO2Nhc2UgMDpjYXNlIDMzMDA1OnNldFRpbWVvdXQoZnVuY3Rpb24oKXtjLmNvbm5lY3RDYWxsYmFjay5vblN1Y2Nlc3MoYy51c2VySWQpLGIub25DaGFuZ2VkKGEuQ29ubmVjdGlvblN0YXR1cy5DT05ORUNURUQpfSk7YnJlYWs7Y2FzZSA2OnNldFRpbWVvdXQoZnVuY3Rpb24oKXtiLm9uQ2hhbmdlZChhLkNvbm5lY3Rpb25TdGF0dXMuS0lDS0VEX09GRkxJTkVfQllfT1RIRVJfQ0xJRU5UKX0pO2JyZWFrO2RlZmF1bHQ6c2V0VGltZW91dChmdW5jdGlvbigpe2Iub25DaGFuZ2VkKGQpfSl9fSl9LGIucHJvdG90eXBlLnNldE9uUmVjZWl2ZU1lc3NhZ2VMaXN0ZW5lcj1mdW5jdGlvbihiKXt2YXIgYz10aGlzO2MubWVzc2FnZUxpc3RlbmVyPWIsdGhpcy51c2VDb25zb2xlJiZjb25zb2xlLmxvZyhcInNldE9uUmVjZWl2ZU1lc3NhZ2VMaXN0ZW5lclwiKSxjLmFkZG9uJiZjLmFkZG9uLnNldE9uUmVjZWl2ZU1lc3NhZ2VMaXN0ZW5lcihmdW5jdGlvbihkLGUsZixnKXt2YXIgaD1jLmJ1aWxkTWVzc2FnZShkKTtoLm9mZkxpbmVNZXNzYWdlPWYsc2V0VGltZW91dChmdW5jdGlvbigpe1tcIkFjY2VwdE1lc3NhZ2VcIixcIlJpbmdpbmdNZXNzYWdlXCIsXCJIdW5ndXBNZXNzYWdlXCIsXCJJbnZpdGVNZXNzYWdlXCIsXCJNZWRpYU1vZGlmeU1lc3NhZ2VcIixcIk1lbWJlck1vZGlmeU1lc3NhZ2VcIl0uaW5kZXhPZihoLm1lc3NhZ2VUeXBlKT4tMT9hLlJvbmdJTUNsaWVudC5fdm9pcFByb3ZpZGVyJiZhLlJvbmdJTUNsaWVudC5fdm9pcFByb3ZpZGVyLm9uUmVjZWl2ZWQoaCk6Yi5vblJlY2VpdmVkKGgsZSxnKX0pfSl9LGIucHJvdG90eXBlLnNlbmRUeXBpbmdTdGF0dXNNZXNzYWdlPWZ1bmN0aW9uKGIsYyxkLGUpe3ZhciBmPXRoaXM7dGhpcy51c2VDb25zb2xlJiZjb25zb2xlLmxvZyhcInNlbmRUeXBpbmdTdGF0dXNNZXNzYWdlXCIpLGQgaW4gYS5Sb25nSU1DbGllbnQuTWVzc2FnZVBhcmFtcyYmZi5zZW5kTWVzc2FnZShiLGMsYS5UeXBpbmdTdGF0dXNNZXNzYWdlLm9idGFpbihhLlJvbmdJTUNsaWVudC5NZXNzYWdlUGFyYW1zW2RdLm9iamVjdE5hbWUsXCJcIikse29uU3VjY2VzczpmdW5jdGlvbigpe3NldFRpbWVvdXQoZnVuY3Rpb24oKXtlLm9uU3VjY2VzcygpfSl9LG9uRXJyb3I6ZnVuY3Rpb24oYSl7c2V0VGltZW91dChmdW5jdGlvbigpe2Uub25FcnJvcihhLG51bGwpfSl9LG9uQmVmb3JlOmZ1bmN0aW9uKCl7fX0pfSxiLnByb3RvdHlwZS5zZXRNZXNzYWdlU3RhdHVzPWZ1bmN0aW9uKGEsYixjLGQsZSl7dGhpcy5hZGRvbi51cGRhdGVNZXNzYWdlUmVjZWlwdFN0YXR1cyhhLGIsYyksZS5vblN1Y2Nlc3MoITApfSxiLnByb3RvdHlwZS5zZW5kVGV4dE1lc3NhZ2U9ZnVuY3Rpb24oYixjLGQsZSl7dmFyIGY9YS5UZXh0TWVzc2FnZS5vYnRhaW4oZCk7dGhpcy51c2VDb25zb2xlJiZjb25zb2xlLmxvZyhcInNlbmRUZXh0TWVzc2FnZVwiKSx0aGlzLnNlbmRNZXNzYWdlKGIsYyxmLGUpfSxiLnByb3RvdHlwZS5nZXRSZW1vdGVIaXN0b3J5TWVzc2FnZXM9ZnVuY3Rpb24oYixjLGQsZSxmLGcpe3RyeXt2YXIgaD10aGlzO2gudXNlQ29uc29sZSYmY29uc29sZS5sb2coXCJnZXRSZW1vdGVIaXN0b3J5TWVzc2FnZXNcIiksaC5hZGRvbi5nZXRSZW1vdGVIaXN0b3J5TWVzc2FnZXMoYixjLGR8fDAsZSxmdW5jdGlvbihiLGMpe3ZhciBkPWI/SlNPTi5wYXJzZShiKS5saXN0OltdLGU9W107ZC5yZXZlcnNlKCk7Zm9yKHZhciBnPTAsaT1kLmxlbmd0aDtnPGk7ZysrKXt2YXIgaj1oLmJ1aWxkTWVzc2FnZShkW2ddLm9iaik7ai5zZW50U3RhdHVzPWEuU2VudFN0YXR1cy5SRUFELGVbZ109an1mLm9uU3VjY2VzcyhlLCEhYyl9LGZ1bmN0aW9uKGEpe2Yub25FcnJvcihhKX0pfWNhdGNoKGkpe2Yub25FcnJvcihpKX19LGIucHJvdG90eXBlLmdldFJlbW90ZUNvbnZlcnNhdGlvbkxpc3Q9ZnVuY3Rpb24oYSxiLGMsZCl7dHJ5e3RoaXMudXNlQ29uc29sZSYmY29uc29sZS5sb2coXCJnZXRSZW1vdGVDb252ZXJzYXRpb25MaXN0XCIpO3ZhciBlPWJ8fFsxLDIsMyw0LDUsNiw3LDhdLGY9dGhpcy5hZGRvbi5nZXRDb252ZXJzYXRpb25MaXN0KGUpLGc9SlNPTi5wYXJzZShmKS5saXN0LGg9W10saT10aGlzLGo9MDtnLnJldmVyc2UoKSxkPVwiYm9vbGVhblwiPT10eXBlb2YgZCYmZDtmb3IodmFyIGs9MCxsPWcubGVuZ3RoO2s8bDtrKyspe3ZhciBtPWdba10ub2JqLG49SlNPTi5wYXJzZShtKTtpZihcIlwiIT1uKXtpZigxPT1uLmlzSGlkZGVuJiZkKWNvbnRpbnVlO2hbal09aS5idWlsZENvbnZlcnNhdGlvbihtKSxqKyt9fWgucmV2ZXJzZSgpO3ZhciBvPWgubGVuZ3RoO2M9Y3x8byxvPmMmJihoLmxlbmd0aD1jKSxhLm9uU3VjY2VzcyhoKX1jYXRjaChwKXthLm9uRXJyb3IocCl9fSxiLnByb3RvdHlwZS5yZW1vdmVDb252ZXJzYXRpb249ZnVuY3Rpb24oYixjLGQpe3RyeXt0aGlzLnVzZUNvbnNvbGUmJmNvbnNvbGUubG9nKFwicmVtb3ZlQ29udmVyc2F0aW9uXCIpLHRoaXMuYWRkb24ucmVtb3ZlQ29udmVyc2F0aW9uKGIsYyk7Zm9yKHZhciBlPWEuUm9uZ0lNQ2xpZW50Ll9tZW1vcnlTdG9yZS5jb252ZXJzYXRpb25MaXN0LGY9ZS5sZW5ndGgsZz0wO2c8ZjtnKyspaWYoZVtnXS5jb252ZXJzYXRpb25UeXBlPT1iJiZjPT1lW2ddLnRhcmdldElkKXtlLnNwbGljZShnLDEpO2JyZWFrfWQub25TdWNjZXNzKCEwKX1jYXRjaChoKXtkLm9uRXJyb3IoaCl9fSxiLnByb3RvdHlwZS5qb2luQ2hhdFJvb209ZnVuY3Rpb24oYSxiLGMpe3RoaXMudXNlQ29uc29sZSYmY29uc29sZS5sb2coXCJqb2luQ2hhdFJvb21cIiksdGhpcy5hZGRvbi5qb2luQ2hhdFJvb20oYSxiLGZ1bmN0aW9uKCl7Yy5vblN1Y2Nlc3MoKX0sZnVuY3Rpb24oYSl7Yy5vbkVycm9yKGEpfSl9LGIucHJvdG90eXBlLnF1aXRDaGF0Um9vbT1mdW5jdGlvbihhLGIpe3RoaXMudXNlQ29uc29sZSYmY29uc29sZS5sb2coXCJxdWl0Q2hhdFJvb21cIiksdGhpcy5hZGRvbi5xdWl0Q2hhdFJvb20oYSxmdW5jdGlvbigpe2Iub25TdWNjZXNzKCl9LGZ1bmN0aW9uKGEpe2Iub25FcnJvcihhKX0pfSxiLnByb3RvdHlwZS5hZGRUb0JsYWNrbGlzdD1mdW5jdGlvbihhLGIpe3RoaXMudXNlQ29uc29sZSYmY29uc29sZS5sb2coXCJhZGRUb0JsYWNrbGlzdFwiKSx0aGlzLmFkZG9uLmFkZFRvQmxhY2tsaXN0KGEsZnVuY3Rpb24oKXtiLm9uU3VjY2VzcygpfSxmdW5jdGlvbihhKXtiLm9uRXJyb3IoYSl9KX0sYi5wcm90b3R5cGUuZ2V0QmxhY2tsaXN0PWZ1bmN0aW9uKGEpe3RoaXMudXNlQ29uc29sZSYmY29uc29sZS5sb2coXCJnZXRCbGFja2xpc3RcIiksdGhpcy5hZGRvbi5nZXRCbGFja2xpc3QoZnVuY3Rpb24oYil7YS5vblN1Y2Nlc3MoYil9LGZ1bmN0aW9uKGIpe2Eub25FcnJvcihiKX0pfSxiLnByb3RvdHlwZS5nZXRCbGFja2xpc3RTdGF0dXM9ZnVuY3Rpb24oYSxiKXt0aGlzLnVzZUNvbnNvbGUmJmNvbnNvbGUubG9nKFwiZ2V0QmxhY2tsaXN0U3RhdHVzXCIpLHRoaXMuYWRkb24uZ2V0QmxhY2tsaXN0U3RhdHVzKGEsZnVuY3Rpb24oYSl7Yi5vblN1Y2Nlc3MoYSl9LGZ1bmN0aW9uKGEpe2Iub25FcnJvcihhKX0pfSxiLnByb3RvdHlwZS5yZW1vdmVGcm9tQmxhY2tsaXN0PWZ1bmN0aW9uKGEsYil7dGhpcy51c2VDb25zb2xlJiZjb25zb2xlLmxvZyhcInJlbW92ZUZyb21CbGFja2xpc3RcIiksdGhpcy5hZGRvbi5yZW1vdmVGcm9tQmxhY2tsaXN0KGEsZnVuY3Rpb24oKXtiLm9uU3VjY2VzcygpfSxmdW5jdGlvbihhKXtiLm9uRXJyb3IoYSl9KX0sYi5wcm90b3R5cGUuc2VuZE1lc3NhZ2U9ZnVuY3Rpb24oYixjLGQsZSxmLGcsaCxpLGope3ZhciBrPXRoaXMsbD1bXTtrLnVzZUNvbnNvbGUmJmNvbnNvbGUubG9nKFwic2VuZE1lc3NhZ2VcIiksaj1qfHx7fTt2YXIgbT1iPT1hLkNvbnZlcnNhdGlvblR5cGUuRElTQ1VTU0lPTnx8Yj09YS5Db252ZXJzYXRpb25UeXBlLkdST1VQO2lmKG0mJmQubWVzc2FnZU5hbWU9PWEuUm9uZ0lNQ2xpZW50Lk1lc3NhZ2VUeXBlLlJlYWRSZWNlaXB0UmVzcG9uc2VNZXNzYWdlKXtsPVtdO3ZhciBuPWQ7aWYobi5yZWNlaXB0TWVzc2FnZURpYyl7dmFyIG89W107Zm9yKHZhciBwIGluIG4ucmVjZWlwdE1lc3NhZ2VEaWMpby5wdXNoKHApO2w9b319bSYmZC5tZXNzYWdlTmFtZT09YS5Sb25nSU1DbGllbnQuTWVzc2FnZVR5cGUuU3luY1JlYWRTdGF0dXNNZXNzYWdlJiYobD1bXSxsLnB1c2goay51c2VySWQpKTt2YXIgcT1qLnVzZXJJZHM7bSYmcSYmKGw9cSk7dmFyIHI9ay5hZGRvbi5zZW5kTWVzc2FnZShiLGMsYS5Sb25nSU1DbGllbnQuTWVzc2FnZVBhcmFtc1tkLm1lc3NhZ2VOYW1lXS5vYmplY3ROYW1lLGQuZW5jb2RlKCksZ3x8XCJcIixofHxcIlwiLGZ1bmN0aW9uKGEpe30sZnVuY3Rpb24oYixjKXt2YXIgZD1rLmJ1aWxkTWVzc2FnZShiKSxmPWEuRXJyb3JDb2RlLlNFTlNJVElWRV9SRVBMQUNFO2lmKGM9PWYpcmV0dXJuIGUub25FcnJvcihmLGQpO2Uub25TdWNjZXNzKGQpfSxmdW5jdGlvbihhLGIpe2Uub25FcnJvcihiLGsuYnVpbGRNZXNzYWdlKGEpKX0sbCxmKSxzPUpTT04ucGFyc2Uocik7ZS5vbkJlZm9yZSYmZS5vbkJlZm9yZShzLm1lc3NhZ2VJZCksYS5NZXNzYWdlSWRIYW5kbGVyLm1lc3NhZ2VJZD1zLm1lc3NhZ2VJZH0sYi5wcm90b3R5cGUucmVnaXN0ZXJNZXNzYWdlVHlwZT1mdW5jdGlvbihiLGMsZCxlLGYpe3RoaXMudXNlQ29uc29sZSYmY29uc29sZS5sb2coXCJyZWdpc3Rlck1lc3NhZ2VUeXBlXCIpLHRoaXMuYWRkb24ucmVnaXN0ZXJNZXNzYWdlVHlwZShjLGQuZ2V0TWVzc2FnZVRhZygpLGYpO3ZhciBnPWEuTW9kZWxVdGlsLm1vZGxlQ3JlYXRlKGUsYik7YS5Sb25nSU1DbGllbnQuUmVnaXN0ZXJNZXNzYWdlW2JdPWcsYS5Sb25nSU1DbGllbnQuUmVnaXN0ZXJNZXNzYWdlW2JdLm1lc3NhZ2VOYW1lPWIscmVnaXN0ZXJNZXNzYWdlVHlwZU1hcHBpbmdbY109YixhLlJvbmdJTUNsaWVudC5NZXNzYWdlVHlwZVtiXT1iLGEuUm9uZ0lNQ2xpZW50Lk1lc3NhZ2VQYXJhbXNbYl09e29iamVjdE5hbWU6Yyxtc2dUYWc6ZH0sdHlwZU1hcHBpbmdbY109Yn0sYi5wcm90b3R5cGUucmVnaXN0ZXJNZXNzYWdlVHlwZXM9ZnVuY3Rpb24oYil7dmFyIGM9W10sZD1mdW5jdGlvbihhKXt2YXIgYj1bXTtmb3IodmFyIGMgaW4gYSliLnB1c2goYyk7cmV0dXJuIGJ9O2Zvcih2YXIgZSBpbiBiKXt2YXIgZj1iW2VdLGc9Zi5wcm90byxoPWQoZyksaT1mLmZsYWd8fDMsaj1hLk1lc3NhZ2VUYWcuZ2V0VGFnQnlTdGF0dXMoaSk7aT1uZXcgYS5NZXNzYWdlVGFnKGouaXNDb3VudGVkLGouaXNQZXJzaXRlZCksYy5wdXNoKHt0eXBlOmUsbmFtZTpmLm5hbWUsZmxhZzppLHByb3RvczpofSl9Zm9yKHZhciBrPWZ1bmN0aW9uKGIpe3ZhciBjPWIudHlwZSxkPWIubmFtZSxlPWIuZmxhZyxmPWIucHJvdG9zO2EuUm9uZ0lNQ2xpZW50LnJlZ2lzdGVyTWVzc2FnZVR5cGUoYyxkLGUsZil9LGw9MCxtPWMubGVuZ3RoO2w8bTtsKyspe3ZhciBmPWNbbF07ayhmKX19LGIucHJvdG90eXBlLmFkZE1lc3NhZ2U9ZnVuY3Rpb24oYixjLGQsZSl7dGhpcy51c2VDb25zb2xlJiZjb25zb2xlLmxvZyhcImFkZE1lc3NhZ2VcIik7dmFyIGY9ZC5kaXJlY3Rpb24sZz10aGlzLmFkZG9uLmluc2VydE1lc3NhZ2UoYixjLGQuc2VuZGVyVXNlcklkLGQub2JqZWN0TmFtZSxKU09OLnN0cmluZ2lmeShkLmNvbnRlbnQpLGZ1bmN0aW9uKCl7ZS5vblN1Y2Nlc3MoaC5idWlsZE1lc3NhZ2UoZykpfSxmdW5jdGlvbigpe2Uub25FcnJvcihhLkVycm9yQ29kZS5NU0dfSU5TRVJUX0VSUk9SKX0sZiksaD10aGlzfSxiLnByb3RvdHlwZS5yZW1vdmVNZXNzYWdlPWZ1bmN0aW9uKGEsYixjLGQpe30sYi5wcm90b3R5cGUucmVtb3ZlTG9jYWxNZXNzYWdlPWZ1bmN0aW9uKGEsYixjLGQpe3RyeXt0aGlzLnVzZUNvbnNvbGUmJmNvbnNvbGUubG9nKFwicmVtb3ZlTG9jYWxNZXNzYWdlXCIpLHRoaXMuYWRkb24uZGVsZXRlTWVzc2FnZXMoYyksZC5vblN1Y2Nlc3MoITApfWNhdGNoKGUpe2Qub25FcnJvcihlKX19LGIucHJvdG90eXBlLmdldE1lc3NhZ2U9ZnVuY3Rpb24oYSxiKXt0cnl7dGhpcy51c2VDb25zb2xlJiZjb25zb2xlLmxvZyhcImdldE1lc3NhZ2VcIik7dmFyIGM9dGhpcy5idWlsZE1lc3NhZ2UodGhpcy5hZGRvbi5nZXRNZXNzYWdlKGEpKTtiLm9uU3VjY2VzcyhjKX1jYXRjaChkKXtiLm9uRXJyb3IoZCl9fSxiLnByb3RvdHlwZS5jbGVhck1lc3NhZ2VzPWZ1bmN0aW9uKGEsYixjKXt0cnl7dGhpcy51c2VDb25zb2xlJiZjb25zb2xlLmxvZyhcImNsZWFyTWVzc2FnZXNcIiksdGhpcy5hZGRvbi5jbGVhck1lc3NhZ2VzKGEsYiksYy5vblN1Y2Nlc3MoITApfWNhdGNoKGQpe2Mub25FcnJvcihkKX19LGIucHJvdG90eXBlLnNldFVucmVhZENvdW50PWZ1bmN0aW9uKGEsYixjKXt9LGIucHJvdG90eXBlLmdldENvbnZlcnNhdGlvbj1mdW5jdGlvbihhLGIsYyl7dHJ5e3RoaXMudXNlQ29uc29sZSYmY29uc29sZS5sb2coXCJnZXRDb252ZXJzYXRpb25cIik7dmFyIGQ9dGhpcy5hZGRvbi5nZXRDb252ZXJzYXRpb24oYSxiKTtjLm9uU3VjY2Vzcyh0aGlzLmJ1aWxkQ29udmVyc2F0aW9uKGQpKX1jYXRjaChlKXtjLm9uRXJyb3IoZSl9fSxiLnByb3RvdHlwZS5nZXRDb252ZXJzYXRpb25MaXN0PWZ1bmN0aW9uKGEsYixjLGQpe3RoaXMudXNlQ29uc29sZSYmY29uc29sZS5sb2coXCJnZXRDb252ZXJzYXRpb25MaXN0XCIpLHRoaXMuZ2V0UmVtb3RlQ29udmVyc2F0aW9uTGlzdChhLGIsYyxkKX0sYi5wcm90b3R5cGUuY2xlYXJDYWNoZT1mdW5jdGlvbigpe3ZhciBiPWEuUm9uZ0lNQ2xpZW50Ll9tZW1vcnlTdG9yZXx8e307Yi5jb252ZXJzYXRpb25MaXN0PVtdLGIuaXNTeW5jUmVtb3RlQ29udmVyTGlzdH0sYi5wcm90b3R5cGUuY2xlYXJDb252ZXJzYXRpb25zPWZ1bmN0aW9uKGEsYil7dHJ5e3RoaXMudXNlQ29uc29sZSYmY29uc29sZS5sb2coXCJjbGVhckNvbnZlcnNhdGlvbnNcIiksdGhpcy5hZGRvbi5jbGVhckNvbnZlcnNhdGlvbnMoKSxiLm9uU3VjY2VzcyghMCl9Y2F0Y2goYyl7Yi5vbkVycm9yKGMpfX0sYi5wcm90b3R5cGUuc2V0TWVzc2FnZUNvbnRlbnQ9ZnVuY3Rpb24oYSxiLGMpe2I9SlNPTi5zdHJpbmdpZnkoYiksdGhpcy5hZGRvbi5zZXRNZXNzYWdlQ29udGVudChhLGIsYyl9LGIucHJvdG90eXBlLnNldE1lc3NhZ2VTZWFyY2hGaWVsZD1mdW5jdGlvbihhLGIsYyl7Yj1KU09OLnN0cmluZ2lmeShiKSx0aGlzLmFkZG9uLnNldE1lc3NhZ2VDb250ZW50KGEsYixjKX0sYi5wcm90b3R5cGUuZ2V0SGlzdG9yeU1lc3NhZ2VzPWZ1bmN0aW9uKGIsYyxkLGUsZixnLGgpe2lmKHRoaXMudXNlQ29uc29sZSYmY29uc29sZS5sb2coXCJnZXRIaXN0b3J5TWVzc2FnZXNcIiksZTw9MClyZXR1cm4gdm9pZCBmLm9uRXJyb3IoYS5FcnJvckNvZGUuVElNRU9VVCk7Zz1nfHxcIlwiLGg9dm9pZCAwPT09aHx8aDt0cnl7dmFyIGk9dGhpcy5hZGRvbi5nZXRIaXN0b3J5TWVzc2FnZXMoYixjLGR8fDAsZSxnLGgpLGo9aT9KU09OLnBhcnNlKGkpLmxpc3Q6W10saz1bXSxsPXRoaXM7ai5yZXZlcnNlKCk7Zm9yKHZhciBtPTAsbj1qLmxlbmd0aDttPG47bSsrKXt2YXIgbz1sLmJ1aWxkTWVzc2FnZShqW21dLm9iaik7a1ttXT1vfWYub25TdWNjZXNzKGssbj09ZSl9Y2F0Y2gocCl7Zi5vbkVycm9yKHApfX0sYi5wcm90b3R5cGUuY2xlYXJSZW1vdGVIaXN0b3J5TWVzc2FnZXM9ZnVuY3Rpb24oYixjKXt2YXIgZD1iLmNvbnZlcnNhdGlvblR5cGUsZT1iLnRhcmdldElkLGY9Yi50aW1lc3RhbXA7cmV0dXJuezE6ITAsMjohMCwzOiEwLDU6ITAsNjohMH1bZF0/XCJudW1iZXJcIiE9dHlwZW9mIGY/dm9pZCBjLm9uRXJyb3IoYS5FcnJvckNvZGUuQ0xFQVJfSElTX1RJTUVfRVJST1IpOnZvaWQgdGhpcy5hZGRvbi5jbGVhclJlbW90ZUhpc3RvcnlNZXNzYWdlcygrZCxlLGYsZnVuY3Rpb24oKXtjLm9uU3VjY2VzcyghMCl9LGZ1bmN0aW9uKGIpezE9PWImJihiPWEuRXJyb3JDb2RlLkNMRUFSX0hJU19FUlJPUiksYy5vbkVycm9yKGIpfSk6dm9pZCBjLm9uRXJyb3IoYS5FcnJvckNvZGUuQ0xFQVJfSElTX1RZUEVfRVJST1IpfSxiLnByb3RvdHlwZS5jbGVhckhpc3RvcnlNZXNzYWdlcz1mdW5jdGlvbihiLGMpe3ZhciBkPStiLmNvbnZlcnNhdGlvblR5cGUsZT1iLnRhcmdldElkO3RyeXt0aGlzLmFkZG9uLmNsZWFyTWVzc2FnZXMoZCxlKTtjLm9uU3VjY2VzcyghMCl9Y2F0Y2goZil7Y29uc29sZS5sb2coZiksYy5vbkVycm9yKGEuRXJyb3JDb2RlLkNMRUFSX0hJU19FUlJPUil9fSxiLnByb3RvdHlwZS5nZXRUb3RhbFVucmVhZENvdW50PWZ1bmN0aW9uKGEsYil7dHJ5e3ZhciBjO3RoaXMudXNlQ29uc29sZSYmY29uc29sZS5sb2coXCJnZXRUb3RhbFVucmVhZENvdW50XCIpLGM9Yj90aGlzLmFkZG9uLmdldFRvdGFsVW5yZWFkQ291bnQoYik6dGhpcy5hZGRvbi5nZXRUb3RhbFVucmVhZENvdW50KCksYS5vblN1Y2Nlc3MoYyl9Y2F0Y2goZCl7YS5vbkVycm9yKGQpfX0sYi5wcm90b3R5cGUuZ2V0Q29udmVyc2F0aW9uVW5yZWFkQ291bnQ9ZnVuY3Rpb24oYSxiKXt0aGlzLnVzZUNvbnNvbGUmJmNvbnNvbGUubG9nKFwiZ2V0Q29udmVyc2F0aW9uVW5yZWFkQ291bnRcIiksdGhpcy5nZXRUb3RhbFVucmVhZENvdW50KGIsYSl9LGIucHJvdG90eXBlLmdldFVucmVhZENvdW50PWZ1bmN0aW9uKGEsYixjKXt0cnl7dGhpcy51c2VDb25zb2xlJiZjb25zb2xlLmxvZyhcImdldFVucmVhZENvdW50XCIpO3ZhciBkPXRoaXMuYWRkb24uZ2V0VW5yZWFkQ291bnQoYSxiKTtjLm9uU3VjY2VzcyhkKX1jYXRjaChlKXtjLm9uRXJyb3IoZSl9fSxiLnByb3RvdHlwZS5jbGVhclVucmVhZENvdW50PWZ1bmN0aW9uKGEsYixjKXt0cnl7dGhpcy51c2VDb25zb2xlJiZjb25zb2xlLmxvZyhcImNsZWFyVW5yZWFkQ291bnRcIik7dGhpcy5hZGRvbi5jbGVhclVucmVhZENvdW50KGEsYik7Yy5vblN1Y2Nlc3MoITApfWNhdGNoKGQpe2Mub25FcnJvcihkKX19LGIucHJvdG90eXBlLmNsZWFyVG90YWxVbnJlYWRDb3VudD1mdW5jdGlvbihhKXt0aGlzLnVzZUNvbnNvbGUmJmNvbnNvbGUubG9nKFwiY2xlYXJUb3RhbFVucmVhZENvdW50XCIpfSxiLnByb3RvdHlwZS5jbGVhclVucmVhZENvdW50QnlUaW1lc3RhbXA9ZnVuY3Rpb24oYSxiLGMsZCl7dHJ5e3RoaXMudXNlQ29uc29sZSYmY29uc29sZS5sb2coXCJjbGVhclVucmVhZENvdW50QnlUaW1lc3RhbXBcIik7dGhpcy5hZGRvbi5jbGVhclVucmVhZENvdW50QnlUaW1lc3RhbXAoYSxiLGMpO2Qub25TdWNjZXNzKCEwKX1jYXRjaChlKXtkLm9uRXJyb3IoZSl9fSxiLnByb3RvdHlwZS5zZXRDb252ZXJzYXRpb25Ub1RvcD1mdW5jdGlvbihhLGIsYyxkKXt0cnl7dGhpcy51c2VDb25zb2xlJiZjb25zb2xlLmxvZyhcInNldENvbnZlcnNhdGlvblRvVG9wXCIpLHRoaXMuYWRkb24uc2V0Q29udmVyc2F0aW9uVG9Ub3AoYSxiLGMpLGQub25TdWNjZXNzKCEwKX1jYXRjaChlKXtkLm9uRXJyb3IoZSl9fSxiLnByb3RvdHlwZS5zZXRDb252ZXJzYXRpb25IaWRkZW49ZnVuY3Rpb24oYSxiLGMpe3RoaXMuYWRkb24uc2V0Q29udmVyc2F0aW9uSGlkZGVuKGEsYixjKX0sYi5wcm90b3R5cGUuc2V0TWVzc2FnZVJlY2VpdmVkU3RhdHVzPWZ1bmN0aW9uKGEsYixjKXt0cnl7dGhpcy51c2VDb25zb2xlJiZjb25zb2xlLmxvZyhcInNldE1lc3NhZ2VSZWNlaXZlZFN0YXR1c1wiKSx0aGlzLmFkZG9uLnNldE1lc3NhZ2VSZWNlaXZlZFN0YXR1cyhhLGIpLGMub25TdWNjZXNzKCEwKX1jYXRjaChkKXtjLm9uRXJyb3IoZCl9fSxiLnByb3RvdHlwZS5zZXRNZXNzYWdlU2VudFN0YXR1cz1mdW5jdGlvbihhLGIsYyl7dHJ5e3RoaXMudXNlQ29uc29sZSYmY29uc29sZS5sb2coXCJzZXRNZXNzYWdlU2VudFN0YXR1c1wiKSx0aGlzLmFkZG9uLnNldE1lc3NhZ2VTZW50U3RhdHVzKGEsYiksYy5vblN1Y2Nlc3MoITApfWNhdGNoKGQpe2Mub25FcnJvcihkKX19LGIucHJvdG90eXBlLmdldEZpbGVUb2tlbj1mdW5jdGlvbihhLGIpe3RoaXMudXNlQ29uc29sZSYmY29uc29sZS5sb2coXCJnZXRGaWxlVG9rZW5cIiksdGhpcy5hZGRvbi5nZXRVcGxvYWRUb2tlbihhLGZ1bmN0aW9uKGEpe2Iub25TdWNjZXNzKHt0b2tlbjphfSl9LGZ1bmN0aW9uKGEpe2Iub25FcnJvcihhKX0pfSxiLnByb3RvdHlwZS5nZXRGaWxlVXJsPWZ1bmN0aW9uKGEsYixjLGQpe3RoaXMudXNlQ29uc29sZSYmY29uc29sZS5sb2coXCJnZXRGaWxlVXJsXCIpLHRoaXMuYWRkb24uZ2V0RG93bmxvYWRVcmwoYSxiLGMsZnVuY3Rpb24oYSl7ZC5vblN1Y2Nlc3Moe2Rvd25sb2FkVXJsOmF9KX0sZnVuY3Rpb24oYSl7ZC5vbkVycm9yKGEpfSl9LGIucHJvdG90eXBlLnNlYXJjaENvbnZlcnNhdGlvbkJ5Q29udGVudD1mdW5jdGlvbihhLGIsYyl7dmFyIGQ9W107ZD12b2lkIDA9PT1jP1sxLDIsMyw0LDUsNiw3XTpjO3RyeXt0aGlzLnVzZUNvbnNvbGUmJmNvbnNvbGUubG9nKFwic2VhcmNoQ29udmVyc2F0aW9uQnlDb250ZW50XCIpO3ZhciBlPXRoaXMuYWRkb24uc2VhcmNoQ29udmVyc2F0aW9uQnlDb250ZW50KGQsYSksZj1KU09OLnBhcnNlKGUpLmxpc3QsZz1bXSxoPXRoaXM7Zi5yZXZlcnNlKCk7Zm9yKHZhciBpPTAsaj1mLmxlbmd0aDtpPGo7aSsrKWdbaV09aC5idWlsZENvbnZlcnNhdGlvbihmW2ldLm9iaik7Yi5vblN1Y2Nlc3MoZyl9Y2F0Y2goayl7Yi5vbkVycm9yKGspfX0sYi5wcm90b3R5cGUuc2VhcmNoTWVzc2FnZUJ5Q29udGVudD1mdW5jdGlvbihhLGIsYyxkLGUsZixnKXt2YXIgaD10aGlzO3RyeXt0aGlzLnVzZUNvbnNvbGUmJmNvbnNvbGUubG9nKFwic2VhcmNoTWVzc2FnZUJ5Q29udGVudFwiKSx0aGlzLmFkZG9uLnNlYXJjaE1lc3NhZ2VCeUNvbnRlbnQoYSxiLGMsZCxlLGYsZnVuY3Rpb24oYSxiKXt2YXIgYz1hP0pTT04ucGFyc2UoYSkubGlzdDpbXSxkPVtdO2MucmV2ZXJzZSgpO2Zvcih2YXIgZT0wLGY9Yy5sZW5ndGg7ZTxmO2UrKylkW2VdPWguYnVpbGRNZXNzYWdlKGNbZV0ub2JqKTtnLm9uU3VjY2VzcyhkLGIpfSl9Y2F0Y2goaSl7Zy5vbkVycm9yKGkpfX0sYi5wcm90b3R5cGUuZ2V0Q2hhdFJvb21JbmZvPWZ1bmN0aW9uKGEsYixjLGQpe3RoaXMudXNlQ29uc29sZSYmY29uc29sZS5sb2coXCJnZXRDaGF0Um9vbUluZm9cIiksdGhpcy5hZGRvbi5nZXRDaGF0cm9vbUluZm8oYSxiLGMsZnVuY3Rpb24oYSxiKXt2YXIgYz1hP0pTT04ucGFyc2UoYSkubGlzdDpbXSxlPXt1c2VySW5mb3M6W10sdXNlclRvdGFsTnVtczpifTtpZihjLmxlbmd0aD4wKWZvcih2YXIgZj0wLGc9Yy5sZW5ndGg7ZjxnO2YrKyllLnVzZXJJbmZvcy5wdXNoKEpTT04ucGFyc2UoY1tmXS5vYmopKTtkLm9uU3VjY2VzcyhlKX0sZnVuY3Rpb24oYSl7ZC5vbkVycm9yKGEpfSl9LGIucHJvdG90eXBlLnNldENoYXRyb29tSGlzTWVzc2FnZVRpbWVzdGFtcD1mdW5jdGlvbihhLGIpe30sYi5wcm90b3R5cGUuZ2V0Q2hhdFJvb21IaXN0b3J5TWVzc2FnZXM9ZnVuY3Rpb24oYSxiLGMsZCl7fSxiLnByb3RvdHlwZS5nZXREZWxhVGltZT1mdW5jdGlvbigpe3JldHVybiB0aGlzLmFkZG9uLmdldERlbHRhVGltZSgpfSxiLnByb3RvdHlwZS5nZXRVc2VyU3RhdHVzPWZ1bmN0aW9uKGIsYyl7dGhpcy5hZGRvbi5nZXRVc2VyU3RhdHVzKGIsZnVuY3Rpb24oYil7dmFyIGQ9YS5Sb25nSW5uZXJUb29scy5jb252ZXJ0VXNlclN0YXR1cyh7c3RhdHVzOmIsdXNlcklkOlwiXCJ9KTtjLm9uU3VjY2VzcyhkKX0sZnVuY3Rpb24oYSl7Yy5vbkVycm9yKGEpfSl9LGIucHJvdG90eXBlLnNldFVzZXJTdGF0dXM9ZnVuY3Rpb24oYSxiKXt0aGlzLmFkZG9uLnNldFVzZXJTdGF0dXMoYSxmdW5jdGlvbigpe2Iub25TdWNjZXNzKCEwKX0sZnVuY3Rpb24oYSl7Yi5vbkVycm9yKGEpfSl9LGIucHJvdG90eXBlLnN1YnNjcmliZVVzZXJTdGF0dXM9ZnVuY3Rpb24oYSxiKXt0aGlzLmFkZG9uLnN1YnNjcmliZVVzZXJTdGF0dXMoYSxmdW5jdGlvbigpe2ImJmIub25TdWNjZXNzKCEwKX0sZnVuY3Rpb24oYSl7YiYmYi5vbkVycm9yKGEpfSl9LGIucHJvdG90eXBlLnNldFVzZXJTdGF0dXNMaXN0ZW5lcj1mdW5jdGlvbihiLGMpe3RoaXMuYWRkb24uc2V0T25SZWNlaXZlU3RhdHVzTGlzdGVuZXIoZnVuY3Rpb24oYixjKXt2YXIgZD1hLlJvbmdJbm5lclRvb2xzLmNvbnZlcnRVc2VyU3RhdHVzKHt1c2VySWQ6YixzdGF0dXM6Y30pO2EuUm9uZ0lNQ2xpZW50LnVzZXJTdGF0dXNPYnNlcnZlci5ub3RpZnkoe2tleTpiLGVudGl0eTpkfSl9KTt2YXIgZD1iLnVzZXJJZHN8fFtdO2QubGVuZ3RoJiZhLlJvbmdJTUNsaWVudC5fZGF0YUFjY2Vzc1Byb3ZpZGVyLnN1YnNjcmliZVVzZXJTdGF0dXMoZCl9LGIucHJvdG90eXBlLmdldFVucmVhZE1lbnRpb25lZE1lc3NhZ2VzPWZ1bmN0aW9uKGEsYil7Zm9yKHZhciBjPXRoaXMsZD1KU09OLnBhcnNlKGMuYWRkb24uZ2V0VW5yZWFkTWVudGlvbmVkTWVzc2FnZXMoYSxiKSkubGlzdCxlPTAsZj1kLmxlbmd0aDtlPGY7ZSsrKXt2YXIgZz1KU09OLnBhcnNlKGRbZV0ub2JqKTtnLmNvbnRlbnQ9SlNPTi5wYXJzZShnLmNvbnRlbnQpLGRbZV09Z31yZXR1cm4gZH0sYi5wcm90b3R5cGUuaGFzUmVtb3RlVW5yZWFkTWVzc2FnZXM9ZnVuY3Rpb24oYSxiKXtiLm9uU3VjY2VzcyghMSl9LGIucHJvdG90eXBlLnNlbmRSZWNhbGxNZXNzYWdlPWZ1bmN0aW9uKGEsYil7dmFyIGM9dGhpcztjLmFkZG9uLnJlY2FsbE1lc3NhZ2UoXCJSQzpSY0NtZFwiLEpTT04uc3RyaW5naWZ5KGEpLGEucHVzaHx8XCJcIixmdW5jdGlvbigpe2Eub2JqZWN0TmFtZT1cIlJDOlJjQ21kXCIsYi5vblN1Y2Nlc3MoYy5idWlsZE1lc3NhZ2UoSlNPTi5zdHJpbmdpZnkoYSkpKX0sZnVuY3Rpb24oYSl7Yi5vbkVycm9yKGEpfSl9LGIucHJvdG90eXBlLnVwZGF0ZU1lc3NhZ2U9ZnVuY3Rpb24oYSxiKXt9LGIucHJvdG90eXBlLnVwZGF0ZU1lc3NhZ2VzPWZ1bmN0aW9uKGEsYixjLGQsZSl7fSxiLnByb3RvdHlwZS5yZWNvbm5lY3Q9ZnVuY3Rpb24oYSl7fSxiLnByb3RvdHlwZS5zZW5kUmVjZWlwdFJlc3BvbnNlPWZ1bmN0aW9uKGEsYixjKXt9LGIucHJvdG90eXBlLnNldE1lc3NhZ2VFeHRyYT1mdW5jdGlvbihhLGIsYyl7fSxiLnByb3RvdHlwZS5hZGRNZW1iZXJUb0Rpc2N1c3Npb249ZnVuY3Rpb24oYSxiLGMpe30sYi5wcm90b3R5cGUuY3JlYXRlRGlzY3Vzc2lvbj1mdW5jdGlvbihhLGIsYyl7fSxiLnByb3RvdHlwZS5nZXREaXNjdXNzaW9uPWZ1bmN0aW9uKGEsYil7fSxiLnByb3RvdHlwZS5xdWl0RGlzY3Vzc2lvbj1mdW5jdGlvbihhLGIpe30sYi5wcm90b3R5cGUucmVtb3ZlTWVtYmVyRnJvbURpc2N1c3Npb249ZnVuY3Rpb24oYSxiLGMpe30sYi5wcm90b3R5cGUuc2V0RGlzY3Vzc2lvbkludml0ZVN0YXR1cz1mdW5jdGlvbihhLGIsYyl7fSxiLnByb3RvdHlwZS5zZXREaXNjdXNzaW9uTmFtZT1mdW5jdGlvbihhLGIsYyl7fSxiLnByb3RvdHlwZS5zZXRFbnZpcm9ubWVudD1mdW5jdGlvbihhKXt0aGlzLmFkZG9uLnNldEVudmlyb25tZW50KGEpfSxiLnByb3RvdHlwZS5hZGRDb252ZXJzYXRpb249ZnVuY3Rpb24oYSxiKXt9LGIucHJvdG90eXBlLnVwZGF0ZUNvbnZlcnNhdGlvbj1mdW5jdGlvbihhKXtyZXR1cm4gbnVsbH0sYi5wcm90b3R5cGUuZ2V0Q29udmVyc2F0aW9uTm90aWZpY2F0aW9uU3RhdHVzPWZ1bmN0aW9uKGIsYyl7dmFyIGQ9Yi5jb252ZXJzYXRpb25UeXBlLGU9Yi50YXJnZXRJZCxmPWEuUm9uZ0lNQ2xpZW50Ll9tZW1vcnlTdG9yZS5ub3RpZmljYXRpb24sZz1kK1wiX1wiK2UsaD1mW2ddO2lmKFwibnVtYmVyXCI9PXR5cGVvZiBoKXJldHVybiB2b2lkIGMub25TdWNjZXNzKGgpO3RoaXMuYWRkb24uZ2V0Q29udmVyc2F0aW9uTm90aWZpY2F0aW9uU3RhdHVzKGQsZSxmdW5jdGlvbihhKXtmW2ddPWEsYy5vblN1Y2Nlc3MoYSl9LGZ1bmN0aW9uKGEpe2Mub25FcnJvcihhKX0pfSxiLnByb3RvdHlwZS5zZXRDb252ZXJzYXRpb25Ob3RpZmljYXRpb25TdGF0dXM9ZnVuY3Rpb24oYixjKXt2YXIgZD1iLmNvbnZlcnNhdGlvblR5cGUsZT1iLnRhcmdldElkLGY9Yi5zdGF0dXM7YS5Sb25nSU1DbGllbnQuX21lbW9yeVN0b3JlLm5vdGlmaWNhdGlvbltkK1wiX1wiK2VdPWY7dmFyIGc9ISFmO3RoaXMuYWRkb24uc2V0Q29udmVyc2F0aW9uTm90aWZpY2F0aW9uU3RhdHVzKGQsZSxnLGZ1bmN0aW9uKCl7Yy5vblN1Y2Nlc3MoZil9LGZ1bmN0aW9uKGEpe2Mub25FcnJvcihhKX0pfSxiLnByb3RvdHlwZS5nZXRDdXJyZW50Q29ubmVjdGlvblN0YXR1cz1mdW5jdGlvbigpe3JldHVybiB0aGlzLmFkZG9uLmdldENvbm5lY3Rpb25TdGF0dXMoKX0sYi5wcm90b3R5cGUuZ2V0QWdvcmFEeW5hbWljS2V5PWZ1bmN0aW9uKGEsYixjKXt0aGlzLmFkZG9uLmdldFZvSVBLZXkoYSxiLFwiXCIsZnVuY3Rpb24oYSl7Yy5vblN1Y2Nlc3MoYSl9LGZ1bmN0aW9uKGEpe2Mub25FcnJvcihhKX0pfSxiLnByb3RvdHlwZS5nZXRQdWJsaWNTZXJ2aWNlUHJvZmlsZT1mdW5jdGlvbihiLGMsZCl7dmFyIGU9YS5Sb25nSU1DbGllbnQuX21lbW9yeVN0b3JlLnB1YmxpY1NlcnZpY2VNYXAuZ2V0KGIsYyk7ZC5vblN1Y2Nlc3MoZSl9LGIucHJvdG90eXBlLnNldERldmljZUluZm89ZnVuY3Rpb24oYSl7dmFyIGI9YS5pZHx8XCJcIjt0aGlzLmFkZG9uLnNldERldmljZUlkKGIpfSxiLnByb3RvdHlwZS5nZXRSZW1vdGVQdWJsaWNTZXJ2aWNlTGlzdD1mdW5jdGlvbihiLGMpe3ZhciBkPVtdLGU9dGhpcy5hZGRvbi5nZXRBY2NvdW50cygpLGY9ZnVuY3Rpb24oYSl7dmFyIGI9e2hhc0ZvbGxvd2VkOiExLGlzR2xvYmFsOiExLG1lbnU6bnVsbH07aWYoIWEub2JqKXt2YXIgYz17ZXJyb3I6YX07dGhyb3cgbmV3IEVycm9yKFwiw6XigKbCrMOkwrzigJTDqMK0wqbDpcKPwrfDpuKAosKww6bCjcKuw6YgwrzDpcK8wo/DqeKAneKEosOowq/CrzogXCIrSlNPTi5zdHJpbmdpZnkoYykpfXZhciBkPUpTT04ucGFyc2UoYS5vYmopLGU9e2FUeXBlOlwiY29udmVyc2F0aW9uVHlwZVwiLGFJZDpcInB1YmxpY1NlcnZpY2VJZFwiLGFOYW1lOlwiaW50cm9kdWN0aW9uXCIsYVVyaTpcInBvcnRyYWl0VXJpXCIsZm9sbG93OlwiaGFzRm9sbG93ZWRcIixpc0dsb2JhbDpcImlzR2xvYmFsXCJ9O2Zvcih2YXIgZiBpbiBkKXt2YXIgZz1kW2ZdO2lmKFwiYUV4dHJhXCI9PWYpe3ZhciBoPUpTT04ucGFyc2UoZyk7Yi5oYXNGb2xsb3dlZD1oLmZvbGxvdyxiLmlzR2xvYmFsPWguaXNHbG9iYWwsYi5tZW51PWgubWVudX12YXIgaT1lW2ZdO2kmJihiW2ldPWcpfXJldHVybiBifTtpZihlKXtlPUpTT04ucGFyc2UoZSk7Zm9yKHZhciBnPWUubGlzdCxoPTAsaT1nLmxlbmd0aDtoPGk7aCsrKXt2YXIgaj1nW2hdO2o9ZihqKSxkLnB1c2goail9fWQubGVuZ3RoPjAmJihhLlJvbmdJTUNsaWVudC5fbWVtb3J5U3RvcmUucHVibGljU2VydmljZU1hcC5wdWJsaWNTZXJ2aWNlTGlzdC5sZW5ndGg9MCxhLlJvbmdJTUNsaWVudC5fbWVtb3J5U3RvcmUucHVibGljU2VydmljZU1hcC5wdWJsaWNTZXJ2aWNlTGlzdD1kKSxiLm9uU3VjY2VzcyhhLlJvbmdJTUNsaWVudC5fbWVtb3J5U3RvcmUucHVibGljU2VydmljZU1hcC5wdWJsaWNTZXJ2aWNlTGlzdCl9LGIucHJvdG90eXBlLmJ1aWxkTWVzc2FnZT1mdW5jdGlvbihiKXt2YXIgYz1uZXcgYS5NZXNzYWdlLGQ9SlNPTi5wYXJzZShiKTtjLmNvbnZlcnNhdGlvblR5cGU9ZC5jb252ZXJzYXRpb25UeXBlLGMudGFyZ2V0SWQ9ZC50YXJnZXRJZCxjLm1lc3NhZ2VEaXJlY3Rpb249ZC5kaXJlY3Rpb24sYy5zZW5kZXJVc2VySWQ9ZC5zZW5kZXJVc2VySWQsZC5kaXJlY3Rpb249PWEuTWVzc2FnZURpcmVjdGlvbi5SRUNFSVZFP2MucmVjZWl2ZWRTdGF0dXM9ZC5zdGF0dXM6ZC5kaXJlY3Rpb249PWEuTWVzc2FnZURpcmVjdGlvbi5TRU5EJiYoYy5zZW50U3RhdHVzPWQuc3RhdHVzKSxjLnNlbnRUaW1lPWQuc2VudFRpbWUsYy5vYmplY3ROYW1lPWQub2JqZWN0TmFtZTt2YXIgZT1kLmNvbnRlbnQ/SlNPTi5wYXJzZShkLmNvbnRlbnQpOmQuY29udGVudCxmPXR5cGVNYXBwaW5nW2Qub2JqZWN0TmFtZV18fHJlZ2lzdGVyTWVzc2FnZVR5cGVNYXBwaW5nW2Qub2JqZWN0TmFtZV07cmV0dXJuIGUmJihlLm1lc3NhZ2VOYW1lPWYpLGMuY29udGVudD1lLGMubWVzc2FnZUlkPWQubWVzc2FnZUlkLGMubWVzc2FnZVVJZD1kLm1lc3NhZ2VVaWQsYy5tZXNzYWdlVHlwZT1mLGN9LGIucHJvdG90eXBlLmJ1aWxkQ29udmVyc2F0aW9uPWZ1bmN0aW9uKGIpe2lmKFwiXCI9PT1iKXJldHVybiBudWxsO3ZhciBjPW5ldyBhLkNvbnZlcnNhdGlvbixkPUpTT04ucGFyc2UoYiksZT1kLmxhc3Rlc3RNc2c/dGhpcy5idWlsZE1lc3NhZ2UoZC5sYXN0ZXN0TXNnKTp7fTtjLmNvbnZlcnNhdGlvblRpdGxlPWQudGl0bGUsYy5jb252ZXJzYXRpb25UeXBlPWQuY29udmVyc2F0aW9uVHlwZSxjLmRyYWZ0PWQuZHJhZnQsYy5pc1RvcD1kLmlzVG9wLGMuaXNIaWRkZW49ZC5pc0hpZGRlbixlLmNvbnZlcnNhdGlvblR5cGU9ZC5jb252ZXJzYXRpb25UeXBlLGUudGFyZ2V0SWQ9ZC50YXJnZXRJZCxjLmxhdGVzdE1lc3NhZ2U9ZSxjLmxhdGVzdE1lc3NhZ2VJZD1lLm1lc3NhZ2VJZCxjLmxhdGVzdE1lc3NhZ2UubWVzc2FnZVR5cGU9dHlwZU1hcHBpbmdbZS5vYmplY3ROYW1lXXx8cmVnaXN0ZXJNZXNzYWdlVHlwZU1hcHBpbmdbZS5vYmplY3ROYW1lXSxjLm9iamVjdE5hbWU9ZS5vYmplY3ROYW1lLGMucmVjZWl2ZWRTdGF0dXM9YS5SZWNlaXZlZFN0YXR1cy5SRUFELGMuc2VudFRpbWU9ZS5zZW50VGltZSxjLnNlbmRlclVzZXJJZD1lLnNlbmRlclVzZXJJZCxjLnNlbnRTdGF0dXM9ZS5zdGF0dXMsYy50YXJnZXRJZD1kLnRhcmdldElkLGMudW5yZWFkTWVzc2FnZUNvdW50PWQudW5yZWFkQ291bnQsYy5oYXNVbnJlYWRNZW50aW9uPWQubV9oYXNVbnJlYWRNZW50aW9uO3ZhciBmPXRoaXMuZ2V0VW5yZWFkTWVudGlvbmVkTWVzc2FnZXMoZC5jb252ZXJzYXRpb25UeXBlLGQudGFyZ2V0SWQpO2lmKGYubGVuZ3RoPjApe3ZhciBnPWYucG9wKCk7Yy5tZW50aW9uZWRNc2c9e3VpZDpnLm1lc3NhZ2VVaWQsdGltZTpnLnNlbnRUaW1lLG1lbnRpb25lZEluZm86Zy5jb250ZW50Lm1lbnRpb25lZEluZm8sc2VuZFVzZXJJZDpnLnNlbmRlclVzZXJJZH19cmV0dXJuIGN9LGIucHJvdG90eXBlLmdldFJUQ1VzZXJJbmZvTGlzdD1mdW5jdGlvbihhLGIpe30sYi5wcm90b3R5cGUuc2V0UlRDVXNlckluZm89ZnVuY3Rpb24oYSxiLGMpe30sYi5wcm90b3R5cGUucmVtb3ZlUlRDVXNlckluZm89ZnVuY3Rpb24oYSxiLGMpe30sYi5wcm90b3R5cGUuZ2V0UlRDVXNlckxpc3Q9ZnVuY3Rpb24oYSxiKXt9LGIucHJvdG90eXBlLmdldFJUQ1Jvb21JbmZvPWZ1bmN0aW9uKGEsYil7fSxiLnByb3RvdHlwZS5zZXRSVENSb29tSW5mbz1mdW5jdGlvbihhLGIsYyl7fSxiLnByb3RvdHlwZS5yZW1vdmVSVENSb29tSW5mbz1mdW5jdGlvbihhLGIsYyl7fSxiLnByb3RvdHlwZS5qb2luUlRDUm9vbT1mdW5jdGlvbihhLGIpe30sYi5wcm90b3R5cGUucXVpdFJUQ1Jvb209ZnVuY3Rpb24oYSxiKXt9LGIucHJvdG90eXBlLlJUQ1Bpbmc9ZnVuY3Rpb24oYSxiKXt9LGIucHJvdG90eXBlLnNldFJUQ1VzZXJEYXRhPWZ1bmN0aW9uKGEsYixjLGQsZSxmKXt9LGIucHJvdG90eXBlLmdldFJUQ1VzZXJEYXRhPWZ1bmN0aW9uKGEsYixjLGQsZSl7fSxiLnByb3RvdHlwZS5yZW1vdmVSVENVc2VyRGF0YT1mdW5jdGlvbihhLGIsYyxkLGUpe30sYi5wcm90b3R5cGUuc2V0UlRDUm9vbURhdGE9ZnVuY3Rpb24oYSxiLGMsZCxlLGYpe30sYi5wcm90b3R5cGUuZ2V0UlRDUm9vbURhdGE9ZnVuY3Rpb24oYSxiLGMsZCxlKXt9LGIucHJvdG90eXBlLnJlbW92ZVJUQ1Jvb21EYXRhPWZ1bmN0aW9uKGEsYixjLGQsZSl7fSxiLnByb3RvdHlwZS5nZXROYXZpPWZ1bmN0aW9uKCl7fSxiLnByb3RvdHlwZS5nZXRSVENUb2tlbj1mdW5jdGlvbihhLGIpe30sYn0oKTthLlZDRGF0YVByb3ZpZGVyPWJ9KFJvbmdJTUxpYnx8KFJvbmdJTUxpYj17fSkpO3ZhciBSb25nSU1MaWI7IWZ1bmN0aW9uKGEpe3ZhciBiPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gYSgpe3RoaXMuX21lbWVvcnlTdG9yZT17fSx0aGlzLnByZWZpeD1cInJvbmdfXCJ9cmV0dXJuIGEucHJvdG90eXBlLnNldEl0ZW09ZnVuY3Rpb24oYSxiKXt0aGlzLl9tZW1lb3J5U3RvcmVbYV09ZGVjb2RlVVJJQ29tcG9uZW50KGIpfSxhLnByb3RvdHlwZS5nZXRJdGVtPWZ1bmN0aW9uKGEpe3JldHVybiB0aGlzLl9tZW1lb3J5U3RvcmVbYV19LGEucHJvdG90eXBlLnJlbW92ZUl0ZW09ZnVuY3Rpb24oYSl7dGhpcy5nZXRJdGVtKGEpJiZkZWxldGUgdGhpcy5fbWVtZW9yeVN0b3JlW2FdfSxhLnByb3RvdHlwZS5nZXRJdGVtS2V5PWZ1bmN0aW9uKGEpe3ZhciBiPXRoaXMsYz1udWxsLGQ9bmV3IFJlZ0V4cChhK1wiXFxcXHcrXCIpO2Zvcih2YXIgZSBpbiBiLl9tZW1lb3J5U3RvcmUpe2UubWF0Y2goZCkmJihjPWUpfXJldHVybiBjfSxhLnByb3RvdHlwZS5nZXRJdGVtS2V5TGlzdD1mdW5jdGlvbihhKXt2YXIgYj10aGlzLnByZWZpeCxjPXRoaXMsZD1bXSxlPW5ldyBSZWdFeHAoYStcIlxcXFx3K1wiKTtmb3IodmFyIGYgaW4gYy5fbWVtZW9yeVN0b3JlKXtmLm1hdGNoKGUpJiYoZj1mLnN1YnN0cmluZyhiLmxlbmd0aCksZC5wdXNoKGYpKX1yZXR1cm4gZH0sYS5wcm90b3R5cGUuY2xlYXJJdGVtPWZ1bmN0aW9uKCl7dmFyIGE9dGhpcztmb3IodmFyIGIgaW4gYS5fbWVtZW9yeVN0b3JlKWRlbGV0ZSBhLl9tZW1lb3J5U3RvcmVbYl19LGEucHJvdG90eXBlLm9uT3V0T2ZRdW90YT1mdW5jdGlvbigpe3JldHVybiA0MDk2fSxhfSgpO2EuTWVtZW9yeVByb3ZpZGVyPWJ9KFJvbmdJTUxpYnx8KFJvbmdJTUxpYj17fSkpO3ZhciBSb25nSU1MaWI7IWZ1bmN0aW9uKGEpe3ZhciBiPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gYigpe3RoaXMucHJlZml4PVwicm9uZ19cIix0aGlzLl9ob3N0PVwiXCI7dmFyIGI9bmV3IERhdGUsYz1iLmdldE1vbnRoKCkrMSxkPWIuZ2V0RnVsbFllYXIoKStcIi9cIisoMT09Yy50b1N0cmluZygpLmxlbmd0aD9cIjBcIitjOmMpK1wiL1wiK2IuZ2V0RGF0ZSgpLGU9bmV3IERhdGUoZCkuZ2V0VGltZSgpO2Zvcih2YXIgZiBpbiBsb2NhbFN0b3JhZ2Upe2lmKGYubGFzdEluZGV4T2YoXCJSRUNFSVZFRFwiKT4tMSl7dmFyIGc9SlNPTi5wYXJzZShsb2NhbFN0b3JhZ2UuZ2V0SXRlbShmKSk7Zm9yKHZhciBoIGluIGcpZS1nW2hdLmRlYWx0aW1lPjAmJmRlbGV0ZSBnW2hdO2EuUm9uZ1V0aWwuaXNFbXB0eShnKT9sb2NhbFN0b3JhZ2UucmVtb3ZlSXRlbShmKTpsb2NhbFN0b3JhZ2Uuc2V0SXRlbShmLEpTT04uc3RyaW5naWZ5KGcpKX1pZihmLmxhc3RJbmRleE9mKFwiU0VOVFwiKT4tMSl7ZS1KU09OLnBhcnNlKGxvY2FsU3RvcmFnZS5nZXRJdGVtKGYpKS5kZWFsdGltZT4wJiZsb2NhbFN0b3JhZ2UucmVtb3ZlSXRlbShmKX19fXJldHVybiBiLnByb3RvdHlwZS5zZXRJdGVtPWZ1bmN0aW9uKGEsYil7YSYmKC0xPT1hLmluZGV4T2YodGhpcy5wcmVmaXgpJiYoYT10aGlzLnByZWZpeCthKSxsb2NhbFN0b3JhZ2Uuc2V0SXRlbShhLGIpKX0sYi5wcm90b3R5cGUuZ2V0SXRlbT1mdW5jdGlvbihhKXtyZXR1cm4gYT8oLTE9PWEuaW5kZXhPZih0aGlzLnByZWZpeCkmJihhPXRoaXMucHJlZml4K2EpLGxvY2FsU3RvcmFnZS5nZXRJdGVtKGF8fFwiXCIpKTpcIlwifSxiLnByb3RvdHlwZS5nZXRJdGVtS2V5PWZ1bmN0aW9uKGEpe3ZhciBiPVwiXCIsYz10aGlzLnByZWZpeCthO2Zvcih2YXIgZCBpbiBsb2NhbFN0b3JhZ2UpaWYoMD09ZC5pbmRleE9mKGMpKXtiPWQ7YnJlYWt9cmV0dXJuIGJ9LGIucHJvdG90eXBlLmdldEl0ZW1LZXlMaXN0PWZ1bmN0aW9uKGEpe3ZhciBiPVtdLGM9dGhpcy5wcmVmaXgsZD1jK2E7Zm9yKHZhciBlIGluIGxvY2FsU3RvcmFnZSkwPT1lLmluZGV4T2YoZCkmJihlPWUuc3Vic3RyaW5nKGMubGVuZ3RoKSxiLnB1c2goZSkpO3JldHVybiBifSxiLnByb3RvdHlwZS5yZW1vdmVJdGVtPWZ1bmN0aW9uKGEpe2EmJigtMT09YS5pbmRleE9mKHRoaXMucHJlZml4KSYmKGE9dGhpcy5wcmVmaXgrYSksbG9jYWxTdG9yYWdlLnJlbW92ZUl0ZW0oYS50b1N0cmluZygpKSl9LGIucHJvdG90eXBlLmNsZWFySXRlbT1mdW5jdGlvbigpe3ZhciBhPXRoaXM7Zm9yKHZhciBiIGluIGxvY2FsU3RvcmFnZSliLmluZGV4T2YoYS5wcmVmaXgpPi0xJiZhLnJlbW92ZUl0ZW0oYil9LGIucHJvdG90eXBlLm9uT3V0T2ZRdW90YT1mdW5jdGlvbigpe3JldHVybiBKU09OLnN0cmluZ2lmeShsb2NhbFN0b3JhZ2UpLmxlbmd0aH0sYn0oKTthLkxvY2FsU3RvcmFnZVByb3ZpZGVyPWJ9KFJvbmdJTUxpYnx8KFJvbmdJTUxpYj17fSkpO3ZhciBSb25nSU1MaWI7IWZ1bmN0aW9uKGEpe3ZhciBiPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gYSgpe3RoaXMub3BlcnNpc3ROYW1lPVwiUm9uZ0lNTGliXCIsdGhpcy5rZXlNYW5hZ2VyPVwiUm9uZ1VzZXJEYXRhS2V5TWFuYWdlclwiLHRoaXMuX2hvc3Q9XCJcIix0aGlzLnByZWZpeD1cInJvbmdfXCIsdGhpcy5vUGVyc2lzdD1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpLHRoaXMub1BlcnNpc3Quc3R5bGUuZGlzcGxheT1cIm5vbmVcIix0aGlzLm9QZXJzaXN0LnN0eWxlLmJlaGF2aW9yPVwidXJsKCcjZGVmYXVsdCN1c2VyRGF0YScpXCIsZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZCh0aGlzLm9QZXJzaXN0KSx0aGlzLm9QZXJzaXN0LmxvYWQodGhpcy5vcGVyc2lzdE5hbWUpfXJldHVybiBhLnByb3RvdHlwZS5zZXRJdGVtPWZ1bmN0aW9uKGEsYil7YSYmLTE9PWEuaW5kZXhPZih0aGlzLnByZWZpeCkmJihhPXRoaXMucHJlZml4K2EpLHRoaXMub1BlcnNpc3Quc2V0QXR0cmlidXRlKGEsYik7dmFyIGM9dGhpcy5nZXRJdGVtKHRoaXMua2V5TWFuYWdlcik7Yz8tMT09Yy5pbmRleE9mKGEpJiYoYys9XCIsXCIrYSk6Yz1hLHRoaXMub1BlcnNpc3Quc2V0QXR0cmlidXRlKHRoaXMucHJlZml4K3RoaXMua2V5TWFuYWdlcixjKSx0aGlzLm9QZXJzaXN0LnNhdmUodGhpcy5vcGVyc2lzdE5hbWUpfSxhLnByb3RvdHlwZS5nZXRJdGVtPWZ1bmN0aW9uKGEpe3JldHVybiBhJiYtMT09YS5pbmRleE9mKHRoaXMucHJlZml4KSYmKGE9dGhpcy5wcmVmaXgrYSksYT90aGlzLm9QZXJzaXN0LmdldEF0dHJpYnV0ZShhKTphfSxhLnByb3RvdHlwZS5yZW1vdmVJdGVtPWZ1bmN0aW9uKGEpe2EmJi0xPT1hLmluZGV4T2YodGhpcy5wcmVmaXgpJiYoYT10aGlzLnByZWZpeCthKSx0aGlzLm9QZXJzaXN0LnJlbW92ZUF0dHJpYnV0ZShhKSx0aGlzLm9QZXJzaXN0LnNhdmUodGhpcy5vcGVyc2lzdE5hbWUpO2Zvcih2YXIgYj10aGlzLmdldEl0ZW0odGhpcy5rZXlNYW5hZ2VyKSxjPWImJmIuc3BsaXQoXCIsXCIpfHxbXSxkPTAsZT1jLmxlbmd0aDtkPGU7ZCsrKWNbZF09PWEmJmMuc3BsaWNlKGQsMSk7dGhpcy5vUGVyc2lzdC5zZXRBdHRyaWJ1dGUodGhpcy5wcmVmaXgrdGhpcy5rZXlNYW5hZ2VyLGMuam9pbihcIixcIikpLHRoaXMub1BlcnNpc3Quc2F2ZSh0aGlzLm9wZXJzaXN0TmFtZSl9LGEucHJvdG90eXBlLmdldEl0ZW1LZXk9ZnVuY3Rpb24oYSl7dmFyIGI9bnVsbCxjPXRoaXMuZ2V0SXRlbSh0aGlzLmtleU1hbmFnZXIpLGQ9YyYmYy5zcGxpdChcIixcIil8fFtdLGU9dGhpcy5wcmVmaXgrYTtpZihkLmxlbmd0aClmb3IodmFyIGY9MCxnPWQubGVuZ3RoO2Y8ZztmKyspaWYoZFtmXSYmMD09ZFtmXS5pbmRleE9mKGUpKXtiPWRbZl07YnJlYWt9cmV0dXJuIGJ9LGEucHJvdG90eXBlLmdldEl0ZW1LZXlMaXN0PWZ1bmN0aW9uKGEpe3ZhciBiPVtdLGM9dGhpcy5nZXRJdGVtKHRoaXMua2V5TWFuYWdlciksZD1jJiZjLnNwbGl0KFwiLFwiKXx8W10sZT10aGlzLnByZWZpeCxmPWUrYTtpZihkLmxlbmd0aClmb3IodmFyIGc9MCxoPWQubGVuZ3RoO2c8aDtnKyspaWYoZFtnXSYmMD09ZFtnXS5pbmRleE9mKGYpKXt2YXIgaT1kW2ddO2k9aS5zdWJzdHJpbmcoZS5sZW5ndGgpLGIucHVzaChkW2ddKX1yZXR1cm4gYn0sYS5wcm90b3R5cGUuY2xlYXJJdGVtPWZ1bmN0aW9uKCl7dmFyIGE9dGhpcy5nZXRJdGVtKHRoaXMua2V5TWFuYWdlciksYj1bXSxjPXRoaXM7aWYoYSYmKGI9YS5zcGxpdChcIixcIikpLGIubGVuZ3RoKXtmb3IodmFyIGQ9MCxlPWIubGVuZ3RoO2Q8ZTtkKyspYltkXSYmYy5yZW1vdmVJdGVtKGJbZF0pO2MucmVtb3ZlSXRlbShjLmtleU1hbmFnZXIpfX0sYS5wcm90b3R5cGUub25PdXRPZlF1b3RhPWZ1bmN0aW9uKCl7cmV0dXJuIDEwNDg1NzYwfSxhfSgpO2EuVXNlckRhdGFQcm92aWRlcj1ifShSb25nSU1MaWJ8fChSb25nSU1MaWI9e30pKTt2YXIgUm9uZ0lNTGliOyFmdW5jdGlvbihhKXt2YXIgYj1mdW5jdGlvbigpe2Z1bmN0aW9uIGIoYil7aWYodGhpcy5zY3JpcHQ9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInNjcmlwdFwiKSx0aGlzLmhlYWQ9ZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoXCJoZWFkXCIpWzBdLFwiV2ViU29ja2V0XCJpbiB3aW5kb3cmJlwiQXJyYXlCdWZmZXJcImluIHdpbmRvdyYmMz09PVdlYlNvY2tldC5wcm90b3R5cGUuQ0xPU0VEJiYhYS5Sb25nSU1DbGllbnQuX21lbW9yeVN0b3JlLmRlcGVuZC5pc1BvbGxpbmcpe2lmKGEuVHJhbnNwb3J0YXRpb25zLl9UcmFuc3BvcnRUeXBlPWEuU29ja2V0LldFQlNPQ0tFVCwhYS5Sb25nSU1DbGllbnQuUHJvdG9idWYpe3ZhciBjPWEuUm9uZ0lNQ2xpZW50Ll9tZW1vcnlTdG9yZS5kZXBlbmQucHJvdG9idWYsZD10aGlzLnNjcmlwdDtkLnNyYz1jLHRoaXMuaGVhZC5hcHBlbmRDaGlsZChkKSxkLm9ubG9hZD1kLm9ucmVhZHlzdGF0ZWNoYW5nZT1mdW5jdGlvbigpe2lmKCEodGhpcy5yZWFkeVN0YXRlJiZcImxvYWRlZFwiIT10aGlzLnJlYWR5U3RhdGUmJlwiY29tcGxldGVcIiE9dGhpcy5yZWFkeVN0YXRlfHwoZC5vbmxvYWQ9ZC5vbnJlYWR5c3RhdGVjaGFuZ2U9bnVsbCxiJiZiKCksYikpKXt2YXIgYz1hLlJvbmdJTUNsaWVudC5fbWVtb3J5U3RvcmUudG9rZW4sZT1hLlJvbmdJTUNsaWVudC5fbWVtb3J5U3RvcmUuY2FsbGJhY2s7YyYmYS5Sb25nSU1DbGllbnQuY29ubmVjdChjLGUpfX19fWVsc2UgYS5UcmFuc3BvcnRhdGlvbnMuX1RyYW5zcG9ydFR5cGU9XCJ4aHItcG9sbGluZ1wiLGEuUm9uZ0lNQ2xpZW50LlByb3RvYnVmPVBvbGxpbmd9cmV0dXJuIGJ9KCk7YS5GZWF0dXJlRGVjdGVjdG9yPWJ9KFJvbmdJTUxpYnx8KFJvbmdJTUxpYj17fSkpO3ZhciBSb25nSU1MaWI7IWZ1bmN0aW9uKFJvbmdJTUxpYil7dmFyIEZlYXR1cmVQYXRjaGVyPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gRmVhdHVyZVBhdGNoZXIoKXt9cmV0dXJuIEZlYXR1cmVQYXRjaGVyLnByb3RvdHlwZS5wYXRjaEFsbD1mdW5jdGlvbigpe3RoaXMucGF0Y2hKU09OKCksdGhpcy5wYXRjaEZvckVhY2goKX0sRmVhdHVyZVBhdGNoZXIucHJvdG90eXBlLnBhdGNoRm9yRWFjaD1mdW5jdGlvbigpe0FycmF5LmZvckVhY2h8fChBcnJheS5mb3JFYWNoPWZ1bmN0aW9uKGEsYil7Zm9yKHZhciBjPTA7YzxhLmxlbmd0aDtjKyspYi5jYWxsKGEsYVtjXSxjLGEpfSl9LEZlYXR1cmVQYXRjaGVyLnByb3RvdHlwZS5wYXRjaEpTT049ZnVuY3Rpb24oKXt3aW5kb3cuSlNPTnx8KHdpbmRvdy5KU09OPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gSlNPTigpe31yZXR1cm4gSlNPTi5wYXJzZT1mdW5jdGlvbihzSlNPTil7cmV0dXJuIGV2YWwoXCIoXCIrc0pTT04rXCIpXCIpfSxKU09OLnN0cmluZ2lmeT1mdW5jdGlvbihhKXtyZXR1cm4gdGhpcy5zdHIoXCJcIix7XCJcIjphfSl9LEpTT04uc3RyPWZ1bmN0aW9uKGEsYil7dmFyIGMsZCxlLGYsZyxoPWJbYV0saT10aGlzO3N3aXRjaChoJiZcIm9iamVjdFwiPT10eXBlb2YgaCYmXCJmdW5jdGlvblwiPT10eXBlb2YgaC50b0pTT04mJihoPWgudG9KU09OKGEpKSx0eXBlb2YgaCl7Y2FzZVwic3RyaW5nXCI6cmV0dXJuIGkucXVvdGUoaCk7Y2FzZVwibnVtYmVyXCI6cmV0dXJuIGlzRmluaXRlKGgpP1N0cmluZyhoKTpcIm51bGxcIjtjYXNlXCJib29sZWFuXCI6Y2FzZVwibnVsbFwiOnJldHVybiBTdHJpbmcoaCk7Y2FzZVwib2JqZWN0XCI6aWYoIWgpcmV0dXJuXCJudWxsXCI7aWYoZz1bXSxcIltvYmplY3QgQXJyYXldXCI9PT1PYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmFwcGx5KGgpKXtmb3IoZj1oLmxlbmd0aCxjPTA7YzxmO2MrPTEpZ1tjXT1pLnN0cihjLGgpfHxcIm51bGxcIjtyZXR1cm4gZT0wPT09Zy5sZW5ndGg/XCJbXVwiOlwiW1wiK2cuam9pbihcIixcIikrXCJdXCJ9Zm9yKGQgaW4gaClPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoaCxkKSYmKGU9aS5zdHIoZCxoKSkmJmcucHVzaChpLnF1b3RlKGQpK1wiOlwiK2UpO3JldHVybiBlPTA9PT1nLmxlbmd0aD9cInt9XCI6XCJ7XCIrZy5qb2luKFwiLFwiKStcIn1cIn19LEpTT04ucXVvdGU9ZnVuY3Rpb24oYSl7dmFyIGI9dGhpcztyZXR1cm4gYi5yeF9lc2NhcGFibGUubGFzdEluZGV4PTAsYi5yeF9lc2NhcGFibGUudGVzdChhKT8nXCInK2EucmVwbGFjZShiLnJ4X2VzY2FwYWJsZSxmdW5jdGlvbihhKXt2YXIgYz1iLm1ldGFbYV07cmV0dXJuXCJzdHJpbmdcIj09dHlwZW9mIGM/YzpcIlxcXFx1XCIrKFwiMDAwMFwiK2EuY2hhckNvZGVBdCgwKS50b1N0cmluZygxNikpLnNsaWNlKC00KX0pKydcIic6J1wiJythKydcIid9LEpTT04ucnhfZXNjYXBhYmxlPW5ldyBSZWdFeHAoJ1tcXFxcXCJcXFxcXFxcXFwiXFwwLVx1MDAxZn8tw4LFuMOCwq3DmOKCrC3DmOKAnsOcwo/DocW+wrTDocW+wrXDouKCrMWSLcOi4oKswo9cXHUyMDI4LcOi4oKswq/DosKBIC3DosKBwq9cXHVmZWZmw6/Cv8KwLcOvwr/Cv10nLFwiZ1wiKSxKU09OLm1ldGE9e1wiXFxiXCI6XCJcXFxcYlwiLFwiXFx0XCI6XCJcXFxcdFwiLFwiXFxuXCI6XCJcXFxcblwiLFwiXFxmXCI6XCJcXFxcZlwiLFwiXFxyXCI6XCJcXFxcclwiLCdcIic6J1xcXFxcIicsXCInJ1wiOlwiXFxcXCcnXCIsXCJcXFxcXCI6XCJcXFxcXFxcXFwifSxKU09OfSgpKX0sRmVhdHVyZVBhdGNoZXJ9KCk7Um9uZ0lNTGliLkZlYXR1cmVQYXRjaGVyPUZlYXR1cmVQYXRjaGVyfShSb25nSU1MaWJ8fChSb25nSU1MaWI9e30pKTt2YXIgUm9uZ0lNTGliOyFmdW5jdGlvbihhKXshZnVuY3Rpb24oKXtmdW5jdGlvbiBhKCl7fWEucHJvdG90eXBlLmxvYWQ9ZnVuY3Rpb24oYSxiLGMpe3ZhciBkPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzY3JpcHRcIik7ZC5hc3luYz0hMCxiJiYoZC5hZGRFdmVudExpc3RlbmVyP2QuYWRkRXZlbnRMaXN0ZW5lcihcImxvYWRcIixmdW5jdGlvbihhKXt2YXIgYz1hLnRhcmdldHx8YS5zcmNFbGVtZW50O2IoYy5zcmMpfSwhMSk6ZC5yZWFkeVN0YXRlJiYoZC5vbnJlYWR5c3RhdGVjaGFuZ2U9ZnVuY3Rpb24oYSl7dmFyIGM9YS5zcmNFbGVtZW50O2IoYy5zcmMpfSkpLGMmJihkLm9uZXJyb3I9ZnVuY3Rpb24oYSl7dmFyIGI9YS50YXJnZXR8fGEuc3JjRWxlbWVudDtjKGIuc3JjKX0pLChkb2N1bWVudC5oZWFkfHxkb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZShcImhlYWRcIilbMF0pLmFwcGVuZENoaWxkKGQpLGQuc3JjPWF9fSgpfShSb25nSU1MaWJ8fChSb25nSU1MaWI9e30pKTt2YXIgUm9uZ0lNTGliO3JldHVybiBmdW5jdGlvbihhKXt2YXIgYj1mdW5jdGlvbigpe2Z1bmN0aW9uIGEoKXt0aGlzLnB1YmxpY1NlcnZpY2VMaXN0PVtdfXJldHVybiBhLnByb3RvdHlwZS5nZXQ9ZnVuY3Rpb24oYSxiKXtmb3IodmFyIGM9MCxkPXRoaXMucHVibGljU2VydmljZUxpc3QubGVuZ3RoO2M8ZDtjKyspaWYodGhpcy5wdWJsaWNTZXJ2aWNlTGlzdFtjXS5jb252ZXJzYXRpb25UeXBlPT1hJiZiPT10aGlzLnB1YmxpY1NlcnZpY2VMaXN0W2NdLnB1YmxpY1NlcnZpY2VJZClyZXR1cm4gdGhpcy5wdWJsaWNTZXJ2aWNlTGlzdFtjXX0sYS5wcm90b3R5cGUuYWRkPWZ1bmN0aW9uKGEpe2Zvcih2YXIgYj0hMCxjPXRoaXMsZD0wLGU9dGhpcy5wdWJsaWNTZXJ2aWNlTGlzdC5sZW5ndGg7ZDxlO2QrKylpZihjLnB1YmxpY1NlcnZpY2VMaXN0W2RdLmNvbnZlcnNhdGlvblR5cGU9PWEuY29udmVyc2F0aW9uVHlwZSYmYS5wdWJsaWNTZXJ2aWNlSWQ9PWMucHVibGljU2VydmljZUxpc3RbZF0ucHVibGljU2VydmljZUlkKXt0aGlzLnB1YmxpY1NlcnZpY2VMaXN0LnVuc2hpZnQodGhpcy5wdWJsaWNTZXJ2aWNlTGlzdC5zcGxpY2UoZCwxKVswXSksYj0hMTticmVha31iJiZ0aGlzLnB1YmxpY1NlcnZpY2VMaXN0LnVuc2hpZnQoYSl9LGEucHJvdG90eXBlLnJlcGxhY2U9ZnVuY3Rpb24oYSl7Zm9yKHZhciBiPXRoaXMsYz0wLGQ9dGhpcy5wdWJsaWNTZXJ2aWNlTGlzdC5sZW5ndGg7YzxkO2MrKylpZihiLnB1YmxpY1NlcnZpY2VMaXN0W2NdLmNvbnZlcnNhdGlvblR5cGU9PWEuY29udmVyc2F0aW9uVHlwZSYmYS5wdWJsaWNTZXJ2aWNlSWQ9PWIucHVibGljU2VydmljZUxpc3RbY10ucHVibGljU2VydmljZUlkKXtiLnB1YmxpY1NlcnZpY2VMaXN0LnNwbGljZShjLDEsYSk7YnJlYWt9fSxhLnByb3RvdHlwZS5yZW1vdmU9ZnVuY3Rpb24oYSxiKXtmb3IodmFyIGM9dGhpcyxkPTAsZT10aGlzLnB1YmxpY1NlcnZpY2VMaXN0Lmxlbmd0aDtkPGU7ZCsrKWlmKGMucHVibGljU2VydmljZUxpc3RbZF0uY29udmVyc2F0aW9uVHlwZT09YSYmYj09Yy5wdWJsaWNTZXJ2aWNlTGlzdFtkXS5wdWJsaWNTZXJ2aWNlSWQpe3RoaXMucHVibGljU2VydmljZUxpc3Quc3BsaWNlKGQsMSk7YnJlYWt9fSxhfSgpO2EuUHVibGljU2VydmljZU1hcD1iO3ZhciBjPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gYSgpe3RoaXMuY29udmVyc2F0aW9uTGlzdD1bXX1yZXR1cm4gYS5wcm90b3R5cGUuZ2V0PWZ1bmN0aW9uKGEsYil7Zm9yKHZhciBjPTAsZD10aGlzLmNvbnZlcnNhdGlvbkxpc3QubGVuZ3RoO2M8ZDtjKyspaWYodGhpcy5jb252ZXJzYXRpb25MaXN0W2NdLmNvbnZlcnNhdGlvblR5cGU9PWEmJnRoaXMuY29udmVyc2F0aW9uTGlzdFtjXS50YXJnZXRJZD09YilyZXR1cm4gdGhpcy5jb252ZXJzYXRpb25MaXN0W2NdO3JldHVybiBudWxsfSxhLnByb3RvdHlwZS5hZGQ9ZnVuY3Rpb24oYSl7Zm9yKHZhciBiPSEwLGM9MCxkPXRoaXMuY29udmVyc2F0aW9uTGlzdC5sZW5ndGg7YzxkO2MrKylpZih0aGlzLmNvbnZlcnNhdGlvbkxpc3RbY10uY29udmVyc2F0aW9uVHlwZT09PWEuY29udmVyc2F0aW9uVHlwZSYmdGhpcy5jb252ZXJzYXRpb25MaXN0W2NdLnRhcmdldElkPT09YS50YXJnZXRJZCl7dGhpcy5jb252ZXJzYXRpb25MaXN0LnVuc2hpZnQodGhpcy5jb252ZXJzYXRpb25MaXN0LnNwbGljZShjLDEpWzBdKSxiPSExO2JyZWFrfWImJnRoaXMuY29udmVyc2F0aW9uTGlzdC51bnNoaWZ0KGEpfSxhLnByb3RvdHlwZS5yZXBsYWNlPWZ1bmN0aW9uKGEpe2Zvcih2YXIgYj0wLGM9dGhpcy5jb252ZXJzYXRpb25MaXN0Lmxlbmd0aDtiPGM7YisrKWlmKHRoaXMuY29udmVyc2F0aW9uTGlzdFtiXS5jb252ZXJzYXRpb25UeXBlPT09YS5jb252ZXJzYXRpb25UeXBlJiZ0aGlzLmNvbnZlcnNhdGlvbkxpc3RbYl0udGFyZ2V0SWQ9PT1hLnRhcmdldElkKXt0aGlzLmNvbnZlcnNhdGlvbkxpc3Quc3BsaWNlKGIsMSxhKTticmVha319LGEucHJvdG90eXBlLnJlbW92ZT1mdW5jdGlvbihhKXtmb3IodmFyIGI9MCxjPXRoaXMuY29udmVyc2F0aW9uTGlzdC5sZW5ndGg7YjxjO2IrKylpZih0aGlzLmNvbnZlcnNhdGlvbkxpc3RbYl0uY29udmVyc2F0aW9uVHlwZT09PWEuY29udmVyc2F0aW9uVHlwZSYmdGhpcy5jb252ZXJzYXRpb25MaXN0W2JdLnRhcmdldElkPT09YS50YXJnZXRJZCl7dGhpcy5jb252ZXJzYXRpb25MaXN0LnNwbGljZShiLDEpO2JyZWFrfX0sYX0oKTthLkNvbnZlcnNhdGlvbk1hcD1jO3ZhciBkPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gYigpe31yZXR1cm4gYi5nZXRJbnN0YW5jZT1mdW5jdGlvbigpe3JldHVybiBiLl9pbnN0YW5jZXx8KGIuX2luc3RhbmNlPW5ldyBiKSxiLl9pbnN0YW5jZX0sYi5wcm90b3R5cGUubG9nZ2VyPWZ1bmN0aW9uKGIsYyxkKXthLlJvbmdJTUNsaWVudC5sb2dnZXIoe2NvZGU6YixmdW5jTmFtZTpjLG1zZzpkfSl9LGIucHJvdG90eXBlLmNoZWNrPWZ1bmN0aW9uKGIsYyxkLGUpe2lmKGEuUm9uZ0lNQ2xpZW50Ll9kYXRhQWNjZXNzUHJvdmlkZXJ8fGQpe2Zvcih2YXIgZj0wLGc9ZS5sZW5ndGg7ZjxnO2YrKylpZighbmV3IFJlZ0V4cCh0aGlzLmdldFR5cGUoZVtmXSkpLnRlc3QoYltmXSkpe3ZhciBoPVwiw6fCrMKsXCIrKGYrMSkrXCLDpMK4wqrDpcKP4oCaw6bigKLCsMOp4oCd4oSiw6jCr8KvLCDDqeKAneKEosOowq/Cr8OnwrHCu8Olxb7igLnDr8K8xaFcIit0aGlzLmdldFR5cGUoZVtmXSkrXCIgW1wiK2JbZl0rXCJdIC0+IMOkwr3CjcOnwr3CrjpcIitjO3RoaXMubG9nZ2VyKFwiLTNcIixjLGgpfX1lbHNle3ZhciBoPVwiw6jCr8Klw6XCj+KAmsOm4oCiwrDDpMK4wo3DpsKtwqPDp8Khwq7DpsuG4oCTw6XCsMWhw6bFk8Kqw6XCrsW+w6TCvuKAucOlxZLigJNSb25nSU1DbGllbnQgLT4gw6TCvcKNw6fCvcKuOlwiK2M7dGhpcy5sb2dnZXIoXCItNFwiLGMsaCl9fSxiLnByb3RvdHlwZS5nZXRUeXBlPWZ1bmN0aW9uKGEpe3ZhciBiPU9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChhKS50b0xvd2VyQ2FzZSgpO3JldHVybiBiLnNsaWNlKDgsYi5sZW5ndGgtMSl9LGIucHJvdG90eXBlLmNoZWNrQ29va2llRGlzYWJsZT1mdW5jdGlvbigpe2RvY3VtZW50LmNvb2tpZT1cImNoZWNrQ29va2llPTFcIjt2YXIgYT1kb2N1bWVudC5jb29raWUubWF0Y2gobmV3IFJlZ0V4cChcIihefCApY2hlY2tDb29raWU9KFteO10qKSg7fCQpXCIpKSxiPSExO3JldHVybiBhfHwoYj0hMCksZG9jdW1lbnQuY29va2llPVwiY2hlY2tDb29raWU9MTtleHBpcmVzPVRodSwgMDEtSmFuLTE5NzAgMDA6MDA6MDEgR01UXCIsYn0sYn0oKTthLkNoZWNrUGFyYW09ZDt2YXIgZT1mdW5jdGlvbigpe2Z1bmN0aW9uIGEoYSl7dGhpcy5tYXA9e30sdGhpcy5rZXlzPVtdLHRoaXMubGltaXQ9YXx8MTB9cmV0dXJuIGEucHJvdG90eXBlLnNldD1mdW5jdGlvbihhLGIpe3RoaXMubWFwW2FdPWJ9LGEucHJvdG90eXBlLmdldD1mdW5jdGlvbihhKXtyZXR1cm4gdGhpcy5tYXBbYV18fDB9LGEucHJvdG90eXBlLnJlbW92ZT1mdW5jdGlvbihhKXtkZWxldGUgdGhpcy5tYXBbYV19LGF9KCk7YS5MaW1pdGFibGVNYXA9ZTt2YXIgZj1mdW5jdGlvbigpe2Z1bmN0aW9uIGEoKXt0aGlzLmNhY2hlPXt9fXJldHVybiBhLnByb3RvdHlwZS5zZXQ9ZnVuY3Rpb24oYSxiKXt0aGlzLmNhY2hlW2FdPWJ9LGEucHJvdG90eXBlLmdldD1mdW5jdGlvbihhKXtyZXR1cm4gdGhpcy5jYWNoZVthXX0sYS5wcm90b3R5cGUucmVtb3ZlPWZ1bmN0aW9uKGEpe2RlbGV0ZSB0aGlzLmNhY2hlW2FdfSxhfSgpO2EuTWVtb3J5Q2FjaGU9Zjt2YXIgZz1mdW5jdGlvbigpe2Z1bmN0aW9uIGEoYSl7dmFyIGI9dGhpcztiLnhtbGh0dHA9bnVsbCxiLm9wdGlvbnM9YTt2YXIgYz1cInVuZGVmaW5lZFwiIT10eXBlb2YgWE1MSHR0cFJlcXVlc3QmJlwid2l0aENyZWRlbnRpYWxzXCJpbiBuZXcgWE1MSHR0cFJlcXVlc3Q7XCJ1bmRlZmluZWRcIiE9dHlwZW9mIFhNTEh0dHBSZXF1ZXN0JiZjP2IueG1saHR0cD1uZXcgWE1MSHR0cFJlcXVlc3Q6XCJ1bmRlZmluZWRcIiE9dHlwZW9mIFhEb21haW5SZXF1ZXN0P2IueG1saHR0cD1uZXcgWERvbWFpblJlcXVlc3Q6Yi54bWxodHRwPW5ldyBBY3RpdmVYT2JqZWN0KFwiTWljcm9zb2Z0LlhNTEhUVFBcIil9cmV0dXJuIGEucHJvdG90eXBlLnNlbmQ9ZnVuY3Rpb24oYSl7dmFyIGI9dGhpcztiLm9wdGlvbnMudXJsfHwoYi5vcHRpb25zLnVybD1cImh0dHA6Ly91cGxvYWQucWluaXUuY29tL3B1dGI2NC8tMVwiKSxiLnhtbGh0dHAub25yZWFkeXN0YXRlY2hhbmdlPWZ1bmN0aW9uKCl7ND09Yi54bWxodHRwLnJlYWR5U3RhdGUmJihiLm9wdGlvbnMudHlwZT9hKCk6YShKU09OLnBhcnNlKGIueG1saHR0cC5yZXNwb25zZVRleHQucmVwbGFjZSgvJy9nLCdcIicpKSkpfSxiLnhtbGh0dHAub3BlbihcIlBPU1RcIixiLm9wdGlvbnMudXJsLCEwKSxiLnhtbGh0dHAud2l0aENyZWRlbnRpYWxzPSExLFwic2V0UmVxdWVzdEhlYWRlclwiaW4gYi54bWxodHRwJiYoYi5vcHRpb25zLnR5cGU/Yi54bWxodHRwLnNldFJlcXVlc3RIZWFkZXIoXCJDb250ZW50LXR5cGVcIixcImFwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZDsgY2hhcnNldD11dGYtOFwiKTooYi54bWxodHRwLnNldFJlcXVlc3RIZWFkZXIoXCJDb250ZW50LXR5cGVcIixcImFwcGxpY2F0aW9uL29jdGV0LXN0cmVhbVwiKSxiLnhtbGh0dHAuc2V0UmVxdWVzdEhlYWRlcihcIkF1dGhvcml6YXRpb25cIixcIlVwVG9rZW4gXCIrYi5vcHRpb25zLnRva2VuKSkpLGIueG1saHR0cC5zZW5kKGIub3B0aW9ucy50eXBlP1wiYXBwS2V5PVwiK2Iub3B0aW9ucy5hcHBLZXkrXCImZGV2aWNlSWQ9XCIrYi5vcHRpb25zLmRldmljZUlkK1wiJnRpbWVzdGFtcD1cIitiLm9wdGlvbnMudGltZXN0YW1wK1wiJmRldmljZUluZm89XCIrYi5vcHRpb25zLmRldmljZUluZm8rXCImcHJpdmF0ZUluZm89XCIrSlNPTi5zdHJpbmdpZnkoYi5vcHRpb25zLnByaXZhdGVJbmZvKTpiLm9wdGlvbnMuYmFzZTY0KX0sYX0oKTthLlJvbmdBamF4PWc7dmFyIGg9ZnVuY3Rpb24oKXtmdW5jdGlvbiBhKCl7fXJldHVybiBhLm5vb3A9ZnVuY3Rpb24oKXt9LGEuaXNFbXB0eT1mdW5jdGlvbihhKXt2YXIgYj0hMDtmb3IodmFyIGMgaW4gYSl7Yj0hMTticmVha31yZXR1cm4gYn0sYS5NRDU9ZnVuY3Rpb24oYSxiLGMpe3JldHVybiBtZDUoYSxiLGMpfSxhLmlzT2JqZWN0PWZ1bmN0aW9uKGEpe3JldHVyblwiW29iamVjdCBPYmplY3RdXCI9PU9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChhKX0sYS5pc0FycmF5PWZ1bmN0aW9uKGEpe3JldHVyblwiW29iamVjdCBBcnJheV1cIj09T2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGEpfSxhLmlzU3RyaW5nPWZ1bmN0aW9uKGEpe3JldHVyblwiW29iamVjdCBTdHJpbmddXCI9PU9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChhKX0sYS5pc0Z1bmN0aW9uPWZ1bmN0aW9uKGEpe3JldHVyblwiW29iamVjdCBGdW5jdGlvbl1cIj09T2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGEpfSxhLmlzVW5kZWZpbmVkPWZ1bmN0aW9uKGEpe3JldHVyblwiW29iamVjdCBVbmRlZmluZWRdXCI9PU9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChhKX0sYS5pc0VxdWFsPWZ1bmN0aW9uKGEsYil7cmV0dXJuIGE9PT1ifSxhLmluZGV4T2Y9ZnVuY3Rpb24oYSxiKXtmb3IodmFyIGM9LTEsZD0wO2Q8YS5sZW5ndGg7ZCsrKWlmKGI9PT1hW2RdKXtjPWQ7YnJlYWt9cmV0dXJuIGN9LGEuc3RyaW5nRm9ybWF0PWZ1bmN0aW9uKGEsYil7Zm9yKHZhciBjPTAsZD1iLmxlbmd0aDtjPGQ7YysrKXt2YXIgZT1iW2NdLGY9bmV3IFJlZ0V4cChcIlxcXFx7XCIrYytcIlxcXFx9XCIsXCJnXCIpO2E9YS5yZXBsYWNlKGYsZSl9cmV0dXJuIGF9LGEudHBsRW5naW5lPWZ1bmN0aW9uKGEsYixjKXtmdW5jdGlvbiBkKGIpe3JldHVybiBhLnJlcGxhY2UoY3x8L3soW159XSspfS9nLGZ1bmN0aW9uKGEsYyl7cmV0dXJuXCJcXFxcXCI9PWEuY2hhckF0KDApP2Euc2xpY2UoMSk6dm9pZCAwIT1iW2NdP2JbY106XCJ7XCIrYytcIn1cIn0pfVwiW29iamVjdCBBcnJheV1cIiE9PU9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChiKSYmKGI9W2JdKTtmb3IodmFyIGU9W10sZj0wLGc9Yi5sZW5ndGg7ZjxnO2YrKyllLnB1c2goZChiW2ZdKSk7cmV0dXJuIGUuam9pbihcIlwiKX0sYS5mb3JFYWNoPWZ1bmN0aW9uKGIsYyl7Yz1jfHxhLm5vb3A7dmFyIGQ9ZnVuY3Rpb24oKXtmb3IodmFyIGEgaW4gYiliLmhhc093blByb3BlcnR5KGEpJiZjKGJbYV0sYSxiKX0sZT1mdW5jdGlvbigpe2Zvcih2YXIgYT0wLGQ9Yi5sZW5ndGg7YTxkO2ErKyljKGJbYV0sYSl9O2EuaXNPYmplY3QoYikmJmQoKSxhLmlzQXJyYXkoYikmJmUoKX0sYS5leHRlbmQ9ZnVuY3Rpb24oYixjLGQsZSl7cmV0dXJuIGEuZm9yRWFjaChiLGZ1bmN0aW9uKGEsYil7dmFyIGQ9YiBpbiBjO2UmJmQmJihjW2JdPWEpLGR8fChjW2JdPWEpfSksY30sYS5jcmVhdGVYSFI9ZnVuY3Rpb24oKXt2YXIgYT17WE1MSHR0cFJlcXVlc3Q6ZnVuY3Rpb24oKXtyZXR1cm4gbmV3IFhNTEh0dHBSZXF1ZXN0fSxYRG9tYWluUmVxdWVzdDpmdW5jdGlvbigpe3JldHVybiBuZXcgWERvbWFpblJlcXVlc3R9LEFjdGl2ZVhPYmplY3Q6ZnVuY3Rpb24oKXtyZXR1cm4gbmV3IEFjdGl2ZVhPYmplY3QoXCJNaWNyb3NvZnQuWE1MSFRUUFwiKX19LGI9XCJmdW5jdGlvblwiPT10eXBlb2YgWE1MSHR0cFJlcXVlc3QsYz1cImZ1bmN0aW9uXCI9PXR5cGVvZiBYRG9tYWluUmVxdWVzdDtyZXR1cm4gYVtiP1wiWE1MSHR0cFJlcXVlc3RcIjpjP1wiWERvbWFpblJlcXVlc3RcIjpcIkFjdGl2ZVhPYmplY3RcIl0oKX0sYS5yZXF1ZXN0PWZ1bmN0aW9uKGIpe3ZhciBjPWIudXJsLGQ9Yi5zdWNjZXNzLGU9Yi5lcnJvcixmPWIubWV0aG9kfHxcIkdFVFwiLGc9YS5jcmVhdGVYSFIoKTtyZXR1cm4gZy5vbnJlYWR5c3RhdGVjaGFuZ2U9ZnVuY3Rpb24oKXtcclxuaWYoND09Zy5yZWFkeVN0YXRlKXt2YXIgYT1nLnN0YXR1czsyMDA9PWE/ZChnLnJlc3BvbnNlVGV4dCk6ZShhLGcucmVzcG9uc2VUZXh0KX19LGcub3BlbihmLGMsITApLGcuc2VuZChudWxsKSxnfSxhLmZvcm1hdFByb3RvY2xQYXRoPWZ1bmN0aW9uKGIpe3ZhciBjPWIucGF0aCxkPWIucHJvdG9jb2wsZT1iLnRtcGx8fFwiezB9ezF9XCIsZj1iLnN1YixnPVwiOi8vXCIsaD1jLmluZGV4T2YoZyk7KGg+LTEmJihoKz1nLmxlbmd0aCxjPWMuc3Vic3RyaW5nKGgpKSxmKSYmKChoPWMuaW5kZXhPZihcIi9cIikpPi0xJiYoYz1jLnN1YnN0cigwLGgpKSk7cmV0dXJuIGEuc3RyaW5nRm9ybWF0KGUsW2QsY10pfSxhLnN1cHBvcnRMb2NhbFN0b3JhZ2U9ZnVuY3Rpb24oKXt2YXIgYT0hMTtpZihcIm9iamVjdFwiPT10eXBlb2YgbG9jYWxTdG9yYWdlKXRyeXt2YXIgYj1cIlJDX1RNUF9LRVlcIixjPVwiUkNfVE1QX1ZBTFwiO2xvY2FsU3RvcmFnZS5zZXRJdGVtKGIsYyk7bG9jYWxTdG9yYWdlLmdldEl0ZW0oYik9PWMmJihhPSEwKX1jYXRjaChkKXtjb25zb2xlLmxvZyhcImxvY2FsU3RvcmFnZSBpcyBkaXNhYmxlZC5cIil9cmV0dXJuIGF9LGEucmVuYW1lPWZ1bmN0aW9uKGIsYyl7dmFyIGQ9YS5pc09iamVjdChiKTtkJiYoYj1bYl0pLGI9SlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeShiKSk7dmFyIGU9ZnVuY3Rpb24oYSxiLGQpe2RlbGV0ZSBkW2JdLGI9Y1tiXSxkW2JdPWF9O3JldHVybiBhLmZvckVhY2goYixmdW5jdGlvbihiKXthLmZvckVhY2goYixmdW5jdGlvbihiLGQsZil7KGQgaW4gYz9lOmEubm9vcCkoYixkLGYpfSl9KSxkP2JbMF06Yn0sYS5zb21lPWZ1bmN0aW9uKGEsYil7Zm9yKHZhciBjPSExLGQ9MCxlPWEubGVuZ3RoO2Q8ZTtkKyspaWYoYihhW2RdKSl7Yz0hMDticmVha31yZXR1cm4gY30sYS5rZXlzPWZ1bmN0aW9uKGEpe3ZhciBiPVtdO2Zvcih2YXIgYyBpbiBhKWIucHVzaChjKTtyZXR1cm4gYn0sYS5pc051bWJlcj1mdW5jdGlvbihhKXtyZXR1cm5cIltvYmplY3QgTnVtYmVyXVwiPT1PYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoYSl9LGEuZ2V0VGltZXN0YW1wPWZ1bmN0aW9uKCl7cmV0dXJuKG5ldyBEYXRlKS5nZXRUaW1lKCl9LGF9KCk7YS5Sb25nVXRpbD1oO3ZhciBpPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gYSgpe3RoaXMud2F0Y2hlcnM9e319cmV0dXJuIGEucHJvdG90eXBlLmdlblVJZD1mdW5jdGlvbihhKXtyZXR1cm5bYSwobmV3IERhdGUpLmdldFRpbWUoKV0uam9pbihcIl9cIil9LGEucHJvdG90eXBlLndhdGNoPWZ1bmN0aW9uKGEpe3ZhciBiPXRoaXMsYz1hLmtleSxkPWEubXVsdGlwbGU7Yz1oLmlzQXJyYXkoYyk/YzpbY107dmFyIGU9YS5mdW5jO2guZm9yRWFjaChjLGZ1bmN0aW9uKGEpe2E9ZD9iLmdlblVJZChhKTphLGIud2F0Y2hlcnNbYV09ZX0pfSxhLnByb3RvdHlwZS5ub3RpZnk9ZnVuY3Rpb24oYSl7dmFyIGI9dGhpcyxjPWEua2V5LGQ9YS5lbnRpdHk7Zm9yKHZhciBlIGluIGIud2F0Y2hlcnMpezA9PWUuaW5kZXhPZihjKSYmYi53YXRjaGVyc1tlXShkKX19LGEucHJvdG90eXBlLnJlbW92ZT1mdW5jdGlvbigpe30sYX0oKTthLlJvbmdPYnNlcnZlcj1pO3ZhciBqPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gYShhKXt0aGlzLnRpbWVvdXQ9MCx0aGlzLnRpbWVycz1bXSx0aGlzLnRpbWVvdXQ9YS50aW1lb3V0fXJldHVybiBhLnByb3RvdHlwZS5yZXN1bWU9ZnVuY3Rpb24oYSl7dmFyIGI9c2V0VGltZW91dChhLHRoaXMudGltZW91dCk7dGhpcy50aW1lcnMucHVzaChiKX0sYS5wcm90b3R5cGUucGF1c2U9ZnVuY3Rpb24oKXtoLmZvckVhY2godGhpcy50aW1lcnMsZnVuY3Rpb24oYSl7Y2xlYXJUaW1lb3V0KGEpfSl9LGF9KCk7YS5UaW1lcj1qO3ZhciBrPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gYShhKXt0aGlzLml0ZW1zPVtdLHRoaXMuaW5kZXg9MCx0aGlzLm9ud2hlZWw9ZnVuY3Rpb24oKXt9LHRoaXMuaXRlbXM9YS5pdGVtcyx0aGlzLm9ud2hlZWw9YS5vbndoZWVsfXJldHVybiBhLnByb3RvdHlwZS5nZXQ9ZnVuY3Rpb24oKXt2YXIgYT10aGlzLGI9YS5pdGVtcyxjPWEuaW5kZXgsZD1jPj1iLmxlbmd0aDtyZXR1cm4gZCYmYS5vbndoZWVsKCksZD8wOmN9LGEucHJvdG90eXBlLmFkZD1mdW5jdGlvbigpe3RoaXMuaW5kZXgrPTF9LGF9KCk7YS5JbmRleFRvb2xzPWs7dmFyIGw9ZnVuY3Rpb24oKXtmdW5jdGlvbiBhKCl7fXJldHVybiBhLmdldFVJZD1mdW5jdGlvbihhKXtyZXR1cm4gbWQ1KGEpLnNsaWNlKDgsMTYpfSxhfSgpO2EuSW5uZXJVdGlsPWx9KFJvbmdJTUxpYnx8KFJvbmdJTUxpYj17fSkpLFJvbmdJTUxpYn0pOyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///23\n");

/***/ }),

/***/ 24:
/*!***************************************************!*\
  !*** D:/kxsx_app/rongyunIM/protobuf-2.3.5.min.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(process) {var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (c, d) {if (true) {!(__WEBPACK_AMD_DEFINE_FACTORY__ = (d),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :\n\t\t\t\t__WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));} else {}})(void 0, function (a) {var d = function () {function E(an, ap, ao) {this.low = an | 0;this.high = ap | 0;this.unsigned = !!ao;}E.prototype.__isLong__;Object.defineProperty(E.prototype, \"__isLong__\", { value: true, enumerable: false, configurable: false });function k(an) {return (an && an.__isLong__) === true;}E.isLong = k;var aa = {};var M = {};function ah(ap, ao) {var aq, ar, an;if (ao) {ap >>>= 0;if (an = 0 <= ap && ap < 256) {ar = M[ap];if (ar) {return ar;}}aq = S(ap, (ap | 0) < 0 ? -1 : 0, true);if (an) {M[ap] = aq;}return aq;} else {ap |= 0;if (an = -128 <= ap && ap < 128) {ar = aa[ap];if (ar) {return ar;}}aq = S(ap, ap < 0 ? -1 : 0, false);if (an) {aa[ap] = aq;}return aq;}}E.fromInt = ah;function q(ao, an) {if (isNaN(ao) || !isFinite(ao)) {return an ? m : F;}if (an) {if (ao < 0) {return m;}if (ao >= h) {return D;}} else {if (ao <= -C) {return T;}if (ao + 1 >= C) {return b;}}if (ao < 0) {return q(-ao, an).neg();}return S(ao % i | 0, ao / i | 0, an);}E.fromNumber = q;function S(an, ap, ao) {return new E(an, ap, ao);}E.fromBits = S;var B = Math.pow;function L(ar, ap, at) {if (ar.length === 0) {throw Error(\"empty string\");}if (ar === \"NaN\" || ar === \"Infinity\" || ar === \"+Infinity\" || ar === \"-Infinity\") {return F;}if (typeof ap === \"number\") {at = ap, ap = false;} else {ap = !!ap;}at = at || 10;if (at < 2 || 36 < at) {throw RangeError(\"radix\");}var ao;if ((ao = ar.indexOf(\"-\")) > 0) {throw Error(\"interior hyphen\");} else {if (ao === 0) {return L(ar.substring(1), ap, at).neg();}}var av = q(B(at, 8));var ax = F;for (var aq = 0; aq < ar.length; aq += 8) {var aw = Math.min(8, ar.length - aq),au = parseInt(ar.substring(aq, aq + aw), at);if (aw < 8) {var an = q(B(at, aw));ax = ax.mul(an).add(q(au));} else {ax = ax.mul(av);ax = ax.add(q(au));}}ax.unsigned = ap;return ax;}E.fromString = L;function K(an) {if (an instanceof E) {return an;}if (typeof an === \"number\") {return q(an);}if (typeof an === \"string\") {return L(an);}return S(an.low, an.high, an.unsigned);}E.fromValue = K;var ai = 1 << 16;var al = 1 << 24;var i = ai * ai;var h = i * i;var C = h / 2;var u = ah(al);var F = ah(0);E.ZERO = F;var m = ah(0, true);E.UZERO = m;var W = ah(1);E.ONE = W;var O = ah(1, true);E.UONE = O;var f = ah(-1);E.NEG_ONE = f;var b = S(4294967295 | 0, 2147483647 | 0, false);E.MAX_VALUE = b;var D = S(4294967295 | 0, 4294967295 | 0, true);E.MAX_UNSIGNED_VALUE = D;var T = S(0, 2147483648 | 0, false);E.MIN_VALUE = T;var z = E.prototype;z.toInt = function v() {return this.unsigned ? this.low >>> 0 : this.low;};z.toNumber = function ae() {if (this.unsigned) {return (this.high >>> 0) * i + (this.low >>> 0);}return this.high * i + (this.low >>> 0);};z.toString = function n(at) {at = at || 10;if (at < 2 || 36 < at) {throw RangeError(\"radix\");}if (this.isZero()) {return \"0\";}if (this.isNegative()) {if (this.eq(T)) {var aq = q(at),an = this.div(aq),ap = an.mul(aq).sub(this);return an.toString(at) + ap.toInt().toString(at);} else {return \"-\" + this.neg().toString(at);}}var aw = q(B(at, 6), this.unsigned),av = this;var ax = \"\";while (true) {var au = av.div(aw),ar = av.sub(au.mul(aw)).toInt() >>> 0,ao = ar.toString(at);av = au;if (av.isZero()) {return ao + ax;} else {while (ao.length < 6) {ao = \"0\" + ao;}ax = \"\" + ao + ax;}}};z.getHighBits = function af() {return this.high;};z.getHighBitsUnsigned = function p() {return this.high >>> 0;};z.getLowBits = function y() {return this.low;};z.getLowBitsUnsigned = function U() {return this.low >>> 0;};z.getNumBitsAbs = function aj() {if (this.isNegative()) {return this.eq(T) ? 64 : this.neg().getNumBitsAbs();}var ao = this.high != 0 ? this.high : this.low;for (var an = 31; an > 0; an--) {if ((ao & 1 << an) != 0) {break;}}return this.high != 0 ? an + 33 : an + 1;};z.isZero = function R() {return this.high === 0 && this.low === 0;};z.isNegative = function X() {return !this.unsigned && this.high < 0;};z.isPositive = function ad() {return this.unsigned || this.high >= 0;};z.isOdd = function V() {return (this.low & 1) === 1;};z.isEven = function x() {return (this.low & 1) === 0;};z.equals = function N(an) {if (!k(an)) {an = K(an);}if (this.unsigned !== an.unsigned && this.high >>> 31 === 1 && an.high >>> 31 === 1) {return false;}return this.high === an.high && this.low === an.low;};z.eq = z.equals;z.notEquals = function ag(an) {return !this.eq(an);};z.neq = z.notEquals;z.lessThan = function t(an) {return this.comp(an) < 0;};z.lt = z.lessThan;z.lessThanOrEqual = function Z(an) {return this.comp(an) <= 0;};z.lte = z.lessThanOrEqual;z.greaterThan = function o(an) {return this.comp(an) > 0;};z.gt = z.greaterThan;z.greaterThanOrEqual = function Q(an) {return this.comp(an) >= 0;};z.gte = z.greaterThanOrEqual;z.compare = function s(ao) {if (!k(ao)) {ao = K(ao);}if (this.eq(ao)) {return 0;}var an = this.isNegative(),ap = ao.isNegative();if (an && !ap) {return -1;}if (!an && ap) {return 1;}if (!this.unsigned) {return this.sub(ao).isNegative() ? -1 : 1;}return ao.high >>> 0 > this.high >>> 0 || ao.high === this.high && ao.low >>> 0 > this.low >>> 0 ? -1 : 1;};z.comp = z.compare;z.negate = function w() {if (!this.unsigned && this.eq(T)) {return T;}return this.not().add(W);};z.neg = z.negate;z.add = function j(aq) {if (!k(aq)) {aq = K(aq);}var au = this.high >>> 16;var ao = this.high & 65535;var aw = this.low >>> 16;var ap = this.low & 65535;var ay = aq.high >>> 16;var ar = aq.high & 65535;var az = aq.low >>> 16;var at = aq.low & 65535;var aA = 0,av = 0,an = 0,ax = 0;ax += ap + at;an += ax >>> 16;ax &= 65535;an += aw + az;av += an >>> 16;an &= 65535;av += ao + ar;aA += av >>> 16;av &= 65535;aA += au + ay;aA &= 65535;return S(an << 16 | ax, aA << 16 | av, this.unsigned);};z.subtract = function r(an) {if (!k(an)) {an = K(an);}return this.add(an.neg());};z.sub = z.subtract;z.multiply = function I(az) {if (this.isZero()) {return F;}if (!k(az)) {az = K(az);}if (az.isZero()) {return F;}if (this.eq(T)) {return az.isOdd() ? T : F;}if (az.eq(T)) {return this.isOdd() ? T : F;}if (this.isNegative()) {if (az.isNegative()) {return this.neg().mul(az.neg());} else {return this.neg().mul(az).neg();}} else {if (az.isNegative()) {return this.mul(az.neg()).neg();}}if (this.lt(u) && az.lt(u)) {return q(this.toNumber() * az.toNumber(), this.unsigned);}var at = this.high >>> 16;var ao = this.high & 65535;var av = this.low >>> 16;var ap = this.low & 65535;var ax = az.high >>> 16;var aq = az.high & 65535;var ay = az.low >>> 16;var ar = az.low & 65535;var aA = 0,au = 0,an = 0,aw = 0;aw += ap * ar;an += aw >>> 16;aw &= 65535;an += av * ar;au += an >>> 16;an &= 65535;an += ap * ay;au += an >>> 16;an &= 65535;au += ao * ar;aA += au >>> 16;au &= 65535;au += av * ay;aA += au >>> 16;au &= 65535;au += ap * aq;aA += au >>> 16;au &= 65535;aA += at * ar + ao * ay + av * aq + ap * ax;aA &= 65535;return S(an << 16 | aw, aA << 16 | au, this.unsigned);};z.mul = z.multiply;z.divide = function J(an) {if (!k(an)) {an = K(an);}if (an.isZero()) {throw Error(\"division by zero\");}if (this.isZero()) {return this.unsigned ? m : F;}var at, av, aq;if (!this.unsigned) {if (this.eq(T)) {if (an.eq(W) || an.eq(f)) {return T;} else {if (an.eq(T)) {return W;} else {var ao = this.shr(1);at = ao.div(an).shl(1);if (at.eq(F)) {return an.isNegative() ? W : f;} else {av = this.sub(an.mul(at));aq = at.add(av.div(an));return aq;}}}} else {if (an.eq(T)) {return this.unsigned ? m : F;}}if (this.isNegative()) {if (an.isNegative()) {return this.neg().div(an.neg());}return this.neg().div(an).neg();} else {if (an.isNegative()) {return this.div(an.neg()).neg();}}aq = F;} else {if (!an.unsigned) {an = an.toUnsigned();}if (an.gt(this)) {return m;}if (an.gt(this.shru(1))) {return O;}aq = m;}av = this;while (av.gte(an)) {at = Math.max(1, Math.floor(av.toNumber() / an.toNumber()));var aw = Math.ceil(Math.log(at) / Math.LN2),au = aw <= 48 ? 1 : B(2, aw - 48),ap = q(at),ar = ap.mul(an);while (ar.isNegative() || ar.gt(av)) {at -= au;ap = q(at, this.unsigned);ar = ap.mul(an);}if (ap.isZero()) {ap = W;}aq = aq.add(ap);av = av.sub(ar);}return aq;};z.div = z.divide;z.modulo = function ak(an) {if (!k(an)) {an = K(an);}return this.sub(this.div(an).mul(an));};z.mod = z.modulo;z.not = function ac() {return S(~this.low, ~this.high, this.unsigned);};z.and = function ab(an) {if (!k(an)) {an = K(an);}return S(this.low & an.low, this.high & an.high, this.unsigned);};z.or = function P(an) {if (!k(an)) {an = K(an);}return S(this.low | an.low, this.high | an.high, this.unsigned);};z.xor = function Y(an) {if (!k(an)) {an = K(an);}return S(this.low ^ an.low, this.high ^ an.high, this.unsigned);};z.shiftLeft = function A(an) {if (k(an)) {an = an.toInt();}if ((an &= 63) === 0) {return this;} else {if (an < 32) {return S(this.low << an, this.high << an | this.low >>> 32 - an, this.unsigned);} else {return S(0, this.low << an - 32, this.unsigned);}}};z.shl = z.shiftLeft;z.shiftRight = function l(an) {if (k(an)) {an = an.toInt();}if ((an &= 63) === 0) {return this;} else {if (an < 32) {return S(this.low >>> an | this.high << 32 - an, this.high >> an, this.unsigned);} else {return S(this.high >> an - 32, this.high >= 0 ? 0 : -1, this.unsigned);}}};z.shr = z.shiftRight;z.shiftRightUnsigned = function G(ap) {if (k(ap)) {ap = ap.toInt();}ap &= 63;if (ap === 0) {return this;} else {var ao = this.high;if (ap < 32) {var an = this.low;return S(an >>> ap | ao << 32 - ap, ao >>> ap, this.unsigned);} else {if (ap === 32) {return S(ao, 0, this.unsigned);} else {return S(ao >>> ap - 32, 0, this.unsigned);}}}};z.shru = z.shiftRightUnsigned;z.toSigned = function am() {if (!this.unsigned) {return this;}return S(this.low, this.high, false);};z.toUnsigned = function H() {if (this.unsigned) {return this;}return S(this.low, this.high, true);};z.toBytes = function (an) {return an ? this.toBytesLE() : this.toBytesBE();};z.toBytesLE = function () {var an = this.high,ao = this.low;return [ao & 255, ao >>> 8 & 255, ao >>> 16 & 255, ao >>> 24 & 255, an & 255, an >>> 8 & 255, an >>> 16 & 255, an >>> 24 & 255];};z.toBytesBE = function () {var an = this.high,ao = this.low;return [an >>> 24 & 255, an >>> 16 & 255, an >>> 8 & 255, an & 255, ao >>> 24 & 255, ao >>> 16 & 255, ao >>> 8 & 255, ao & 255];};return E;}();var c = function (k) {var n = function n(q, s, r) {if (typeof q === \"undefined\") {q = n.DEFAULT_CAPACITY;}if (typeof s === \"undefined\") {s = n.DEFAULT_ENDIAN;}if (typeof r === \"undefined\") {r = n.DEFAULT_NOASSERT;}if (!r) {q = q | 0;if (q < 0) {throw RangeError(\"Illegal capacity\");}s = !!s;r = !!r;}this.buffer = q === 0 ? p : new ArrayBuffer(q);this.view = q === 0 ? null : new Uint8Array(this.buffer);this.offset = 0;this.markedOffset = -1;this.limit = q;this.littleEndian = s;this.noAssert = r;};n.VERSION = \"5.0.1\";n.LITTLE_ENDIAN = true;n.BIG_ENDIAN = false;n.DEFAULT_CAPACITY = 16;n.DEFAULT_ENDIAN = n.BIG_ENDIAN;n.DEFAULT_NOASSERT = false;n.Long = k || null;var l = n.prototype;l.__isByteBuffer__;Object.defineProperty(l, \"__isByteBuffer__\", { value: true, enumerable: false, configurable: false });var p = new ArrayBuffer(0);var m = String.fromCharCode;function b(r) {var q = 0;return function () {return q < r.length ? r.charCodeAt(q++) : null;};}function f() {var q = [],r = [];return function () {if (arguments.length === 0) {return r.join(\"\") + m.apply(String, q);}if (q.length + arguments.length > 1024) {r.push(m.apply(String, q)), q.length = 0;}Array.prototype.push.apply(q, arguments);};}n.accessor = function () {return Uint8Array;};n.allocate = function (q, s, r) {return new n(q, s, r);};n.concat = function (z, s, r, y) {if (typeof s === \"boolean\" || typeof s !== \"string\") {y = r;r = s;s = undefined;}var q = 0;for (var w = 0, v = z.length, t; w < v; ++w) {if (!n.isByteBuffer(z[w])) {z[w] = n.wrap(z[w], s);}t = z[w].limit - z[w].offset;if (t > 0) {q += t;}}if (q === 0) {return new n(0, r, y);}var x = new n(q, r, y),u;w = 0;while (w < v) {u = z[w++];t = u.limit - u.offset;if (t <= 0) {continue;}x.view.set(u.view.subarray(u.offset, u.limit), x.offset);x.offset += t;}x.limit = x.offset;x.offset = 0;return x;};n.isByteBuffer = function (q) {return (q && q.__isByteBuffer__) === true;};n.type = function () {return ArrayBuffer;};n.wrap = function (q, s, u, t) {if (typeof s !== \"string\") {t = u;u = s;s = undefined;}if (typeof q === \"string\") {if (typeof s === \"undefined\") {s = \"utf8\";}switch (s) {case \"base64\":return n.fromBase64(q, u);case \"hex\":return n.fromHex(q, u);case \"binary\":return n.fromBinary(q, u);case \"utf8\":return n.fromUTF8(q, u);case \"debug\":return n.fromDebug(q, u);default:throw Error(\"Unsupported encoding: \" + s);}}if (q === null || typeof q !== \"object\") {throw TypeError(\"Illegal buffer\");}var v;if (n.isByteBuffer(q)) {v = l.clone.call(q);v.markedOffset = -1;return v;}if (q instanceof Uint8Array) {v = new n(0, u, t);if (q.length > 0) {v.buffer = q.buffer;v.offset = q.byteOffset;v.limit = q.byteOffset + q.byteLength;v.view = new Uint8Array(q.buffer);}} else {if (q instanceof ArrayBuffer) {v = new n(0, u, t);if (q.byteLength > 0) {v.buffer = q;v.offset = 0;v.limit = q.byteLength;v.view = q.byteLength > 0 ? new Uint8Array(q) : null;}} else {if (Object.prototype.toString.call(q) === \"[object Array]\") {v = new n(q.length, u, t);v.limit = q.length;for (var r = 0; r < q.length; ++r) {v.view[r] = q[r];}} else {throw TypeError(\"Illegal buffer\");}}}return v;};l.writeBitSet = function (w, u) {var q = typeof u === \"undefined\";if (q) {u = this.offset;}if (!this.noAssert) {if (!(w instanceof Array)) {throw TypeError(\"Illegal BitSet: Not an array\");}if (typeof u !== \"number\" || u % 1 !== 0) {throw TypeError(\"Illegal offset: \" + u + \" (not an integer)\");}u >>>= 0;if (u < 0 || u + 0 > this.buffer.byteLength) {throw RangeError(\"Illegal offset: 0 <= \" + u + \" (+\" + 0 + \") <= \" + this.buffer.byteLength);}}var r = u,x = w.length,y = x >> 3,v = 0,t;u += this.writeVarint32(x, u);while (y--) {t = !!w[v++] & 1 | (!!w[v++] & 1) << 1 | (!!w[v++] & 1) << 2 | (!!w[v++] & 1) << 3 | (!!w[v++] & 1) << 4 | (!!w[v++] & 1) << 5 | (!!w[v++] & 1) << 6 | (!!w[v++] & 1) << 7;this.writeByte(t, u++);}if (v < x) {var s = 0;t = 0;while (v < x) {t = t | (!!w[v++] & 1) << s++;}this.writeByte(t, u++);}if (q) {this.offset = u;return this;}return u - r;};l.readBitSet = function (t) {var q = typeof t === \"undefined\";if (q) {t = this.offset;}var u = this.readVarint32(t),x = u.value,y = x >> 3,v = 0,w = [],s;t += u.length;while (y--) {s = this.readByte(t++);w[v++] = !!(s & 1);w[v++] = !!(s & 2);w[v++] = !!(s & 4);w[v++] = !!(s & 8);w[v++] = !!(s & 16);w[v++] = !!(s & 32);w[v++] = !!(s & 64);w[v++] = !!(s & 128);}if (v < x) {var r = 0;s = this.readByte(t++);while (v < x) {w[v++] = !!(s >> r++ & 1);}}if (q) {this.offset = t;}return w;};l.readBytes = function (q, t) {var r = typeof t === \"undefined\";if (r) {t = this.offset;}if (!this.noAssert) {if (typeof t !== \"number\" || t % 1 !== 0) {throw TypeError(\"Illegal offset: \" + t + \" (not an integer)\");}t >>>= 0;if (t < 0 || t + q > this.buffer.byteLength) {throw RangeError(\"Illegal offset: 0 <= \" + t + \" (+\" + q + \") <= \" + this.buffer.byteLength);}}var s = this.slice(t, t + q);if (r) {this.offset += q;}return s;};l.writeBytes = l.append;l.writeInt8 = function (s, t) {var r = typeof t === \"undefined\";if (r) {t = this.offset;}if (!this.noAssert) {if (typeof s !== \"number\" || s % 1 !== 0) {throw TypeError(\"Illegal value: \" + s + \" (not an integer)\");}s |= 0;if (typeof t !== \"number\" || t % 1 !== 0) {throw TypeError(\"Illegal offset: \" + t + \" (not an integer)\");}t >>>= 0;if (t < 0 || t + 0 > this.buffer.byteLength) {throw RangeError(\"Illegal offset: 0 <= \" + t + \" (+\" + 0 + \") <= \" + this.buffer.byteLength);}}t += 1;var q = this.buffer.byteLength;if (t > q) {this.resize((q *= 2) > t ? q : t);}t -= 1;this.view[t] = s;if (r) {this.offset += 1;}return this;};l.writeByte = l.writeInt8;l.readInt8 = function (s) {var r = typeof s === \"undefined\";if (r) {s = this.offset;}if (!this.noAssert) {if (typeof s !== \"number\" || s % 1 !== 0) {throw TypeError(\"Illegal offset: \" + s + \" (not an integer)\");}s >>>= 0;if (s < 0 || s + 1 > this.buffer.byteLength) {throw RangeError(\"Illegal offset: 0 <= \" + s + \" (+\" + 1 + \") <= \" + this.buffer.byteLength);}}var q = this.view[s];if ((q & 128) === 128) {q = -(255 - q + 1);}if (r) {this.offset += 1;}return q;};l.readByte = l.readInt8;l.writeUint8 = function (s, t) {var r = typeof t === \"undefined\";if (r) {t = this.offset;}if (!this.noAssert) {if (typeof s !== \"number\" || s % 1 !== 0) {throw TypeError(\"Illegal value: \" + s + \" (not an integer)\");}s >>>= 0;if (typeof t !== \"number\" || t % 1 !== 0) {throw TypeError(\"Illegal offset: \" + t + \" (not an integer)\");}t >>>= 0;if (t < 0 || t + 0 > this.buffer.byteLength) {throw RangeError(\"Illegal offset: 0 <= \" + t + \" (+\" + 0 + \") <= \" + this.buffer.byteLength);}}t += 1;var q = this.buffer.byteLength;if (t > q) {this.resize((q *= 2) > t ? q : t);}t -= 1;this.view[t] = s;if (r) {this.offset += 1;}return this;};l.writeUInt8 = l.writeUint8;l.readUint8 = function (s) {var r = typeof s === \"undefined\";if (r) {s = this.offset;}if (!this.noAssert) {if (typeof s !== \"number\" || s % 1 !== 0) {throw TypeError(\"Illegal offset: \" + s + \" (not an integer)\");}s >>>= 0;if (s < 0 || s + 1 > this.buffer.byteLength) {throw RangeError(\"Illegal offset: 0 <= \" + s + \" (+\" + 1 + \") <= \" + this.buffer.byteLength);}}var q = this.view[s];if (r) {this.offset += 1;}return q;};l.readUInt8 = l.readUint8;l.writeInt16 = function (s, t) {var r = typeof t === \"undefined\";if (r) {t = this.offset;}if (!this.noAssert) {if (typeof s !== \"number\" || s % 1 !== 0) {throw TypeError(\"Illegal value: \" + s + \" (not an integer)\");}s |= 0;if (typeof t !== \"number\" || t % 1 !== 0) {throw TypeError(\"Illegal offset: \" + t + \" (not an integer)\");}t >>>= 0;if (t < 0 || t + 0 > this.buffer.byteLength) {throw RangeError(\"Illegal offset: 0 <= \" + t + \" (+\" + 0 + \") <= \" + this.buffer.byteLength);}}t += 2;var q = this.buffer.byteLength;if (t > q) {this.resize((q *= 2) > t ? q : t);}t -= 2;if (this.littleEndian) {this.view[t + 1] = (s & 65280) >>> 8;this.view[t] = s & 255;} else {this.view[t] = (s & 65280) >>> 8;this.view[t + 1] = s & 255;}if (r) {this.offset += 2;}return this;};l.writeShort = l.writeInt16;l.readInt16 = function (s) {var r = typeof s === \"undefined\";if (r) {s = this.offset;}if (!this.noAssert) {if (typeof s !== \"number\" || s % 1 !== 0) {throw TypeError(\"Illegal offset: \" + s + \" (not an integer)\");}s >>>= 0;if (s < 0 || s + 2 > this.buffer.byteLength) {throw RangeError(\"Illegal offset: 0 <= \" + s + \" (+\" + 2 + \") <= \" + this.buffer.byteLength);}}var q = 0;if (this.littleEndian) {q = this.view[s];q |= this.view[s + 1] << 8;} else {q = this.view[s] << 8;q |= this.view[s + 1];}if ((q & 32768) === 32768) {q = -(65535 - q + 1);}if (r) {this.offset += 2;}return q;};l.readShort = l.readInt16;l.writeUint16 = function (s, t) {var r = typeof t === \"undefined\";if (r) {t = this.offset;}if (!this.noAssert) {if (typeof s !== \"number\" || s % 1 !== 0) {throw TypeError(\"Illegal value: \" + s + \" (not an integer)\");}s >>>= 0;if (typeof t !== \"number\" || t % 1 !== 0) {throw TypeError(\"Illegal offset: \" + t + \" (not an integer)\");}t >>>= 0;if (t < 0 || t + 0 > this.buffer.byteLength) {throw RangeError(\"Illegal offset: 0 <= \" + t + \" (+\" + 0 + \") <= \" + this.buffer.byteLength);}}t += 2;var q = this.buffer.byteLength;if (t > q) {this.resize((q *= 2) > t ? q : t);}t -= 2;if (this.littleEndian) {this.view[t + 1] = (s & 65280) >>> 8;this.view[t] = s & 255;} else {this.view[t] = (s & 65280) >>> 8;this.view[t + 1] = s & 255;}if (r) {this.offset += 2;}return this;};l.writeUInt16 = l.writeUint16;l.readUint16 = function (s) {var r = typeof s === \"undefined\";if (r) {s = this.offset;}if (!this.noAssert) {if (typeof s !== \"number\" || s % 1 !== 0) {throw TypeError(\"Illegal offset: \" + s + \" (not an integer)\");}s >>>= 0;if (s < 0 || s + 2 > this.buffer.byteLength) {throw RangeError(\"Illegal offset: 0 <= \" + s + \" (+\" + 2 + \") <= \" + this.buffer.byteLength);}}var q = 0;if (this.littleEndian) {q = this.view[s];q |= this.view[s + 1] << 8;} else {q = this.view[s] << 8;q |= this.view[s + 1];}if (r) {this.offset += 2;}return q;};l.readUInt16 = l.readUint16;l.writeInt32 = function (s, t) {var r = typeof t === \"undefined\";if (r) {t = this.offset;}if (!this.noAssert) {if (typeof s !== \"number\" || s % 1 !== 0) {throw TypeError(\"Illegal value: \" + s + \" (not an integer)\");}s |= 0;if (typeof t !== \"number\" || t % 1 !== 0) {throw TypeError(\"Illegal offset: \" + t + \" (not an integer)\");}t >>>= 0;if (t < 0 || t + 0 > this.buffer.byteLength) {throw RangeError(\"Illegal offset: 0 <= \" + t + \" (+\" + 0 + \") <= \" + this.buffer.byteLength);}}t += 4;var q = this.buffer.byteLength;if (t > q) {this.resize((q *= 2) > t ? q : t);}t -= 4;if (this.littleEndian) {this.view[t + 3] = s >>> 24 & 255;this.view[t + 2] = s >>> 16 & 255;this.view[t + 1] = s >>> 8 & 255;this.view[t] = s & 255;} else {this.view[t] = s >>> 24 & 255;this.view[t + 1] = s >>> 16 & 255;this.view[t + 2] = s >>> 8 & 255;this.view[t + 3] = s & 255;}if (r) {this.offset += 4;}return this;};l.writeInt = l.writeInt32;l.readInt32 = function (s) {var r = typeof s === \"undefined\";if (r) {s = this.offset;}if (!this.noAssert) {if (typeof s !== \"number\" || s % 1 !== 0) {throw TypeError(\"Illegal offset: \" + s + \" (not an integer)\");}s >>>= 0;if (s < 0 || s + 4 > this.buffer.byteLength) {throw RangeError(\"Illegal offset: 0 <= \" + s + \" (+\" + 4 + \") <= \" + this.buffer.byteLength);}}var q = 0;if (this.littleEndian) {q = this.view[s + 2] << 16;q |= this.view[s + 1] << 8;q |= this.view[s];q += this.view[s + 3] << 24 >>> 0;} else {q = this.view[s + 1] << 16;q |= this.view[s + 2] << 8;q |= this.view[s + 3];q += this.view[s] << 24 >>> 0;}q |= 0;if (r) {this.offset += 4;}return q;};l.readInt = l.readInt32;l.writeUint32 = function (s, t) {var r = typeof t === \"undefined\";if (r) {t = this.offset;}if (!this.noAssert) {if (typeof s !== \"number\" || s % 1 !== 0) {throw TypeError(\"Illegal value: \" + s + \" (not an integer)\");}s >>>= 0;if (typeof t !== \"number\" || t % 1 !== 0) {throw TypeError(\"Illegal offset: \" + t + \" (not an integer)\");}t >>>= 0;if (t < 0 || t + 0 > this.buffer.byteLength) {throw RangeError(\"Illegal offset: 0 <= \" + t + \" (+\" + 0 + \") <= \" + this.buffer.byteLength);}}t += 4;var q = this.buffer.byteLength;if (t > q) {this.resize((q *= 2) > t ? q : t);}t -= 4;if (this.littleEndian) {this.view[t + 3] = s >>> 24 & 255;this.view[t + 2] = s >>> 16 & 255;this.view[t + 1] = s >>> 8 & 255;this.view[t] = s & 255;} else {this.view[t] = s >>> 24 & 255;this.view[t + 1] = s >>> 16 & 255;this.view[t + 2] = s >>> 8 & 255;this.view[t + 3] = s & 255;}if (r) {this.offset += 4;}return this;};l.writeUInt32 = l.writeUint32;l.readUint32 = function (s) {var r = typeof s === \"undefined\";if (r) {s = this.offset;}if (!this.noAssert) {if (typeof s !== \"number\" || s % 1 !== 0) {throw TypeError(\"Illegal offset: \" + s + \" (not an integer)\");}s >>>= 0;if (s < 0 || s + 4 > this.buffer.byteLength) {throw RangeError(\"Illegal offset: 0 <= \" + s + \" (+\" + 4 + \") <= \" + this.buffer.byteLength);}}var q = 0;if (this.littleEndian) {q = this.view[s + 2] << 16;q |= this.view[s + 1] << 8;q |= this.view[s];q += this.view[s + 3] << 24 >>> 0;} else {q = this.view[s + 1] << 16;q |= this.view[s + 2] << 8;q |= this.view[s + 3];q += this.view[s] << 24 >>> 0;}if (r) {this.offset += 4;}return q;};l.readUInt32 = l.readUint32;if (k) {l.writeInt64 = function (t, u) {var s = typeof u === \"undefined\";if (s) {u = this.offset;}if (!this.noAssert) {if (typeof t === \"number\") {t = k.fromNumber(t);} else {if (typeof t === \"string\") {t = k.fromString(t);} else {if (!(t && t instanceof k)) {throw TypeError(\"Illegal value: \" + t + \" (not an integer or Long)\");}}}if (typeof u !== \"number\" || u % 1 !== 0) {throw TypeError(\"Illegal offset: \" + u + \" (not an integer)\");}u >>>= 0;if (u < 0 || u + 0 > this.buffer.byteLength) {throw RangeError(\"Illegal offset: 0 <= \" + u + \" (+\" + 0 + \") <= \" + this.buffer.byteLength);}}if (typeof t === \"number\") {t = k.fromNumber(t);} else {if (typeof t === \"string\") {t = k.fromString(t);}}u += 8;var v = this.buffer.byteLength;if (u > v) {this.resize((v *= 2) > u ? v : u);}u -= 8;var r = t.low,q = t.high;if (this.littleEndian) {this.view[u + 3] = r >>> 24 & 255;this.view[u + 2] = r >>> 16 & 255;this.view[u + 1] = r >>> 8 & 255;this.view[u] = r & 255;u += 4;this.view[u + 3] = q >>> 24 & 255;this.view[u + 2] = q >>> 16 & 255;this.view[u + 1] = q >>> 8 & 255;this.view[u] = q & 255;} else {this.view[u] = q >>> 24 & 255;this.view[u + 1] = q >>> 16 & 255;this.view[u + 2] = q >>> 8 & 255;this.view[u + 3] = q & 255;u += 4;this.view[u] = r >>> 24 & 255;this.view[u + 1] = r >>> 16 & 255;this.view[u + 2] = r >>> 8 & 255;this.view[u + 3] = r & 255;}if (s) {this.offset += 8;}return this;};l.writeLong = l.writeInt64;l.readInt64 = function (u) {var t = typeof u === \"undefined\";if (t) {u = this.offset;}if (!this.noAssert) {if (typeof u !== \"number\" || u % 1 !== 0) {throw TypeError(\"Illegal offset: \" + u + \" (not an integer)\");}u >>>= 0;if (u < 0 || u + 8 > this.buffer.byteLength) {throw RangeError(\"Illegal offset: 0 <= \" + u + \" (+\" + 8 + \") <= \" + this.buffer.byteLength);}}var r = 0,q = 0;if (this.littleEndian) {r = this.view[u + 2] << 16;r |= this.view[u + 1] << 8;r |= this.view[u];r += this.view[u + 3] << 24 >>> 0;u += 4;q = this.view[u + 2] << 16;q |= this.view[u + 1] << 8;q |= this.view[u];q += this.view[u + 3] << 24 >>> 0;} else {q = this.view[u + 1] << 16;q |= this.view[u + 2] << 8;q |= this.view[u + 3];q += this.view[u] << 24 >>> 0;u += 4;r = this.view[u + 1] << 16;r |= this.view[u + 2] << 8;r |= this.view[u + 3];r += this.view[u] << 24 >>> 0;}var s = new k(r, q, false);if (t) {this.offset += 8;}return s;};l.readLong = l.readInt64;l.writeUint64 = function (t, v) {var s = typeof v === \"undefined\";if (s) {v = this.offset;}if (!this.noAssert) {if (typeof t === \"number\") {t = k.fromNumber(t);} else {if (typeof t === \"string\") {t = k.fromString(t);} else {if (!(t && t instanceof k)) {throw TypeError(\"Illegal value: \" + t + \" (not an integer or Long)\");}}}if (typeof v !== \"number\" || v % 1 !== 0) {throw TypeError(\"Illegal offset: \" + v + \" (not an integer)\");}v >>>= 0;if (v < 0 || v + 0 > this.buffer.byteLength) {throw RangeError(\"Illegal offset: 0 <= \" + v + \" (+\" + 0 + \") <= \" + this.buffer.byteLength);}}if (typeof t === \"number\") {t = k.fromNumber(t);} else {if (typeof t === \"string\") {t = k.fromString(t);}}v += 8;var u = this.buffer.byteLength;if (v > u) {this.resize((u *= 2) > v ? u : v);}v -= 8;var r = t.low,q = t.high;if (this.littleEndian) {this.view[v + 3] = r >>> 24 & 255;this.view[v + 2] = r >>> 16 & 255;this.view[v + 1] = r >>> 8 & 255;this.view[v] = r & 255;v += 4;this.view[v + 3] = q >>> 24 & 255;this.view[v + 2] = q >>> 16 & 255;this.view[v + 1] = q >>> 8 & 255;this.view[v] = q & 255;} else {this.view[v] = q >>> 24 & 255;this.view[v + 1] = q >>> 16 & 255;this.view[v + 2] = q >>> 8 & 255;this.view[v + 3] = q & 255;v += 4;this.view[v] = r >>> 24 & 255;this.view[v + 1] = r >>> 16 & 255;this.view[v + 2] = r >>> 8 & 255;this.view[v + 3] = r & 255;}if (s) {this.offset += 8;}return this;};l.writeUInt64 = l.writeUint64;l.readUint64 = function (u) {var t = typeof u === \"undefined\";if (t) {u = this.offset;}if (!this.noAssert) {if (typeof u !== \"number\" || u % 1 !== 0) {throw TypeError(\"Illegal offset: \" + u + \" (not an integer)\");}u >>>= 0;if (u < 0 || u + 8 > this.buffer.byteLength) {throw RangeError(\"Illegal offset: 0 <= \" + u + \" (+\" + 8 + \") <= \" + this.buffer.byteLength);}}var r = 0,q = 0;if (this.littleEndian) {r = this.view[u + 2] << 16;r |= this.view[u + 1] << 8;r |= this.view[u];r += this.view[u + 3] << 24 >>> 0;u += 4;q = this.view[u + 2] << 16;q |= this.view[u + 1] << 8;q |= this.view[u];q += this.view[u + 3] << 24 >>> 0;} else {q = this.view[u + 1] << 16;q |= this.view[u + 2] << 8;q |= this.view[u + 3];q += this.view[u] << 24 >>> 0;u += 4;r = this.view[u + 1] << 16;r |= this.view[u + 2] << 8;r |= this.view[u + 3];r += this.view[u] << 24 >>> 0;}var s = new k(r, q, true);if (t) {this.offset += 8;}return s;};l.readUInt64 = l.readUint64;}function i(x, w, t, r, A) {var B,v,u = A * 8 - r - 1,z = (1 << u) - 1,q = z >> 1,D = -7,y = t ? A - 1 : 0,C = t ? -1 : 1,E = x[w + y];y += C;B = E & (1 << -D) - 1;E >>= -D;D += u;for (; D > 0; B = B * 256 + x[w + y], y += C, D -= 8) {}v = B & (1 << -D) - 1;B >>= -D;D += r;for (; D > 0; v = v * 256 + x[w + y], y += C, D -= 8) {}if (B === 0) {B = 1 - q;} else {if (B === z) {return v ? NaN : (E ? -1 : 1) * Infinity;} else {v = v + Math.pow(2, r);B = B - q;}}return (E ? -1 : 1) * v * Math.pow(2, B - r);}function j(y, F, x, t, r, B) {var C,v,E,u = B * 8 - r - 1,A = (1 << u) - 1,q = A >> 1,w = r === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0,z = t ? 0 : B - 1,D = t ? 1 : -1,G = F < 0 || F === 0 && 1 / F < 0 ? 1 : 0;F = Math.abs(F);if (isNaN(F) || F === Infinity) {v = isNaN(F) ? 1 : 0;C = A;} else {C = Math.floor(Math.log(F) / Math.LN2);if (F * (E = Math.pow(2, -C)) < 1) {C--;E *= 2;}if (C + q >= 1) {F += w / E;} else {F += w * Math.pow(2, 1 - q);}if (F * E >= 2) {C++;E /= 2;}if (C + q >= A) {v = 0;C = A;} else {if (C + q >= 1) {v = (F * E - 1) * Math.pow(2, r);C = C + q;} else {v = F * Math.pow(2, q - 1) * Math.pow(2, r);C = 0;}}}for (; r >= 8; y[x + z] = v & 255, z += D, v /= 256, r -= 8) {}C = C << r | v;u += r;for (; u > 0; y[x + z] = C & 255, z += D, C /= 256, u -= 8) {}y[x + z - D] |= G * 128;}l.writeFloat32 = function (r, t) {var q = typeof t === \"undefined\";if (q) {t = this.offset;}if (!this.noAssert) {if (typeof r !== \"number\") {throw TypeError(\"Illegal value: \" + r + \" (not a number)\");}if (typeof t !== \"number\" || t % 1 !== 0) {throw TypeError(\"Illegal offset: \" + t + \" (not an integer)\");}t >>>= 0;if (t < 0 || t + 0 > this.buffer.byteLength) {throw RangeError(\"Illegal offset: 0 <= \" + t + \" (+\" + 0 + \") <= \" + this.buffer.byteLength);}}t += 4;var s = this.buffer.byteLength;if (t > s) {this.resize((s *= 2) > t ? s : t);}t -= 4;j(this.view, r, t, this.littleEndian, 23, 4);if (q) {this.offset += 4;}return this;};l.writeFloat = l.writeFloat32;l.readFloat32 = function (s) {var r = typeof s === \"undefined\";if (r) {s = this.offset;}if (!this.noAssert) {if (typeof s !== \"number\" || s % 1 !== 0) {throw TypeError(\"Illegal offset: \" + s + \" (not an integer)\");}s >>>= 0;if (s < 0 || s + 4 > this.buffer.byteLength) {throw RangeError(\"Illegal offset: 0 <= \" + s + \" (+\" + 4 + \") <= \" + this.buffer.byteLength);}}var q = i(this.view, s, this.littleEndian, 23, 4);if (r) {this.offset += 4;}return q;};l.readFloat = l.readFloat32;l.writeFloat64 = function (s, t) {var r = typeof t === \"undefined\";if (r) {t = this.offset;}if (!this.noAssert) {if (typeof s !== \"number\") {throw TypeError(\"Illegal value: \" + s + \" (not a number)\");}if (typeof t !== \"number\" || t % 1 !== 0) {throw TypeError(\"Illegal offset: \" + t + \" (not an integer)\");}t >>>= 0;if (t < 0 || t + 0 > this.buffer.byteLength) {throw RangeError(\"Illegal offset: 0 <= \" + t + \" (+\" + 0 + \") <= \" + this.buffer.byteLength);}}t += 8;var q = this.buffer.byteLength;if (t > q) {this.resize((q *= 2) > t ? q : t);}t -= 8;j(this.view, s, t, this.littleEndian, 52, 8);if (r) {this.offset += 8;}return this;};l.writeDouble = l.writeFloat64;l.readFloat64 = function (s) {var r = typeof s === \"undefined\";if (r) {s = this.offset;}if (!this.noAssert) {if (typeof s !== \"number\" || s % 1 !== 0) {throw TypeError(\"Illegal offset: \" + s + \" (not an integer)\");}s >>>= 0;if (s < 0 || s + 8 > this.buffer.byteLength) {throw RangeError(\"Illegal offset: 0 <= \" + s + \" (+\" + 8 + \") <= \" + this.buffer.byteLength);}}var q = i(this.view, s, this.littleEndian, 52, 8);if (r) {this.offset += 8;}return q;};l.readDouble = l.readFloat64;n.MAX_VARINT32_BYTES = 5;n.calculateVarint32 = function (q) {q = q >>> 0;if (q < 1 << 7) {return 1;} else {if (q < 1 << 14) {return 2;} else {if (q < 1 << 21) {return 3;} else {if (q < 1 << 28) {return 4;} else {return 5;}}}}};n.zigZagEncode32 = function (q) {return ((q |= 0) << 1 ^ q >> 31) >>> 0;};n.zigZagDecode32 = function (q) {return q >>> 1 ^ -(q & 1) | 0;};l.writeVarint32 = function (u, v) {var t = typeof v === \"undefined\";if (t) {v = this.offset;}if (!this.noAssert) {if (typeof u !== \"number\" || u % 1 !== 0) {throw TypeError(\"Illegal value: \" + u + \" (not an integer)\");}u |= 0;if (typeof v !== \"number\" || v % 1 !== 0) {throw TypeError(\"Illegal offset: \" + v + \" (not an integer)\");}v >>>= 0;if (v < 0 || v + 0 > this.buffer.byteLength) {throw RangeError(\"Illegal offset: 0 <= \" + v + \" (+\" + 0 + \") <= \" + this.buffer.byteLength);}}var r = n.calculateVarint32(u),q;v += r;var s = this.buffer.byteLength;if (v > s) {this.resize((s *= 2) > v ? s : v);}v -= r;u >>>= 0;while (u >= 128) {q = u & 127 | 128;this.view[v++] = q;u >>>= 7;}this.view[v++] = u;if (t) {this.offset = v;return this;}return r;};l.writeVarint32ZigZag = function (q, r) {return this.writeVarint32(n.zigZagEncode32(q), r);};l.readVarint32 = function (u) {var t = typeof u === \"undefined\";if (t) {u = this.offset;}if (!this.noAssert) {if (typeof u !== \"number\" || u % 1 !== 0) {throw TypeError(\"Illegal offset: \" + u + \" (not an integer)\");}u >>>= 0;if (u < 0 || u + 1 > this.buffer.byteLength) {throw RangeError(\"Illegal offset: 0 <= \" + u + \" (+\" + 1 + \") <= \" + this.buffer.byteLength);}}var v = 0,s = 0 >>> 0,q;do {if (!this.noAssert && u > this.limit) {var r = Error(\"Truncated\");r.truncated = true;throw r;}q = this.view[u++];if (v < 5) {s |= (q & 127) << 7 * v;}++v;} while ((q & 128) !== 0);s |= 0;if (t) {this.offset = u;return s;}return { value: s, length: v };};l.readVarint32ZigZag = function (r) {var q = this.readVarint32(r);if (typeof q === \"object\") {q.value = n.zigZagDecode32(q.value);} else {q = n.zigZagDecode32(q);}return q;};if (k) {n.MAX_VARINT64_BYTES = 10;n.calculateVarint64 = function (r) {if (typeof r === \"number\") {r = k.fromNumber(r);} else {if (typeof r === \"string\") {r = k.fromString(r);}}var t = r.toInt() >>> 0,s = r.shiftRightUnsigned(28).toInt() >>> 0,q = r.shiftRightUnsigned(56).toInt() >>> 0;if (q == 0) {if (s == 0) {if (t < 1 << 14) {return t < 1 << 7 ? 1 : 2;} else {return t < 1 << 21 ? 3 : 4;}} else {if (s < 1 << 14) {return s < 1 << 7 ? 5 : 6;} else {return s < 1 << 21 ? 7 : 8;}}} else {return q < 1 << 7 ? 9 : 10;}};n.zigZagEncode64 = function (q) {if (typeof q === \"number\") {q = k.fromNumber(q, false);} else {if (typeof q === \"string\") {q = k.fromString(q, false);} else {if (q.unsigned !== false) {q = q.toSigned();}}}return q.shiftLeft(1).xor(q.shiftRight(63)).toUnsigned();};n.zigZagDecode64 = function (q) {if (typeof q === \"number\") {q = k.fromNumber(q, false);} else {if (typeof q === \"string\") {q = k.fromString(q, false);} else {if (q.unsigned !== false) {q = q.toSigned();}}}return q.shiftRightUnsigned(1).xor(q.and(k.ONE).toSigned().negate()).toSigned();};l.writeVarint64 = function (u, x) {var t = typeof x === \"undefined\";if (t) {x = this.offset;}if (!this.noAssert) {if (typeof u === \"number\") {u = k.fromNumber(u);} else {if (typeof u === \"string\") {u = k.fromString(u);} else {if (!(u && u instanceof k)) {throw TypeError(\"Illegal value: \" + u + \" (not an integer or Long)\");}}}if (typeof x !== \"number\" || x % 1 !== 0) {throw TypeError(\"Illegal offset: \" + x + \" (not an integer)\");}x >>>= 0;if (x < 0 || x + 0 > this.buffer.byteLength) {throw RangeError(\"Illegal offset: 0 <= \" + x + \" (+\" + 0 + \") <= \" + this.buffer.byteLength);}}if (typeof u === \"number\") {u = k.fromNumber(u, false);} else {if (typeof u === \"string\") {u = k.fromString(u, false);} else {if (u.unsigned !== false) {u = u.toSigned();}}}var q = n.calculateVarint64(u),w = u.toInt() >>> 0,v = u.shiftRightUnsigned(28).toInt() >>> 0,s = u.shiftRightUnsigned(56).toInt() >>> 0;x += q;var r = this.buffer.byteLength;if (x > r) {this.resize((r *= 2) > x ? r : x);}x -= q;switch (q) {case 10:this.view[x + 9] = s >>> 7 & 1;case 9:this.view[x + 8] = q !== 9 ? s | 128 : s & 127;case 8:this.view[x + 7] = q !== 8 ? v >>> 21 | 128 : v >>> 21 & 127;case 7:this.view[x + 6] = q !== 7 ? v >>> 14 | 128 : v >>> 14 & 127;case 6:this.view[x + 5] = q !== 6 ? v >>> 7 | 128 : v >>> 7 & 127;case 5:this.view[x + 4] = q !== 5 ? v | 128 : v & 127;case 4:this.view[x + 3] = q !== 4 ? w >>> 21 | 128 : w >>> 21 & 127;case 3:this.view[x + 2] = q !== 3 ? w >>> 14 | 128 : w >>> 14 & 127;case 2:this.view[x + 1] = q !== 2 ? w >>> 7 | 128 : w >>> 7 & 127;case 1:this.view[x] = q !== 1 ? w | 128 : w & 127;}if (t) {this.offset += q;return this;} else {return q;}};l.writeVarint64ZigZag = function (q, r) {return this.writeVarint64(n.zigZagEncode64(q), r);};l.readVarint64 = function (w) {var t = typeof w === \"undefined\";if (t) {w = this.offset;}if (!this.noAssert) {if (typeof w !== \"number\" || w % 1 !== 0) {throw TypeError(\"Illegal offset: \" + w + \" (not an integer)\");}w >>>= 0;if (w < 0 || w + 1 > this.buffer.byteLength) {throw RangeError(\"Illegal offset: 0 <= \" + w + \" (+\" + 1 + \") <= \" + this.buffer.byteLength);}}var x = w,v = 0,u = 0,s = 0,q = 0;q = this.view[w++];v = q & 127;if (q & 128) {q = this.view[w++];v |= (q & 127) << 7;if (q & 128 || this.noAssert && typeof q === \"undefined\") {q = this.view[w++];v |= (q & 127) << 14;if (q & 128 || this.noAssert && typeof q === \"undefined\") {q = this.view[w++];v |= (q & 127) << 21;if (q & 128 || this.noAssert && typeof q === \"undefined\") {q = this.view[w++];u = q & 127;if (q & 128 || this.noAssert && typeof q === \"undefined\") {q = this.view[w++];u |= (q & 127) << 7;if (q & 128 || this.noAssert && typeof q === \"undefined\") {q = this.view[w++];u |= (q & 127) << 14;if (q & 128 || this.noAssert && typeof q === \"undefined\") {q = this.view[w++];u |= (q & 127) << 21;if (q & 128 || this.noAssert && typeof q === \"undefined\") {q = this.view[w++];s = q & 127;if (q & 128 || this.noAssert && typeof q === \"undefined\") {q = this.view[w++];s |= (q & 127) << 7;if (q & 128 || this.noAssert && typeof q === \"undefined\") {throw Error(\"Buffer overrun\");}}}}}}}}}}var r = k.fromBits(v | u << 28, u >>> 4 | s << 24, false);if (t) {this.offset = w;return r;} else {return { value: r, length: w - x };}};l.readVarint64ZigZag = function (r) {var q = this.readVarint64(r);if (q && q.value instanceof k) {q.value = n.zigZagDecode64(q.value);} else {q = n.zigZagDecode64(q);}return q;};}l.writeCString = function (v, u) {var t = typeof u === \"undefined\";if (t) {u = this.offset;}var r,q = v.length;if (!this.noAssert) {if (typeof v !== \"string\") {throw TypeError(\"Illegal str: Not a string\");}for (r = 0; r < q; ++r) {if (v.charCodeAt(r) === 0) {throw RangeError(\"Illegal str: Contains NULL-characters\");}}if (typeof u !== \"number\" || u % 1 !== 0) {throw TypeError(\"Illegal offset: \" + u + \" (not an integer)\");}u >>>= 0;if (u < 0 || u + 0 > this.buffer.byteLength) {throw RangeError(\"Illegal offset: 0 <= \" + u + \" (+\" + 0 + \") <= \" + this.buffer.byteLength);}}q = o.calculateUTF16asUTF8(b(v))[1];u += q + 1;var s = this.buffer.byteLength;if (u > s) {this.resize((s *= 2) > u ? s : u);}u -= q + 1;o.encodeUTF16toUTF8(b(v), function (w) {this.view[u++] = w;}.bind(this));this.view[u++] = 0;if (t) {this.offset = u;return this;}return q;};l.readCString = function (u) {var s = typeof u === \"undefined\";if (s) {u = this.offset;}if (!this.noAssert) {if (typeof u !== \"number\" || u % 1 !== 0) {throw TypeError(\"Illegal offset: \" + u + \" (not an integer)\");}u >>>= 0;if (u < 0 || u + 1 > this.buffer.byteLength) {throw RangeError(\"Illegal offset: 0 <= \" + u + \" (+\" + 1 + \") <= \" + this.buffer.byteLength);}}var v = u,r;var t,q = -1;o.decodeUTF8toUTF16(function () {if (q === 0) {return null;}if (u >= this.limit) {throw RangeError(\"Illegal range: Truncated data, \" + u + \" < \" + this.limit);}q = this.view[u++];return q === 0 ? null : q;}.bind(this), t = f(), true);if (s) {this.offset = u;return t();} else {return { string: t(), length: u - v };}};l.writeIString = function (u, t) {var s = typeof t === \"undefined\";if (s) {t = this.offset;}if (!this.noAssert) {if (typeof u !== \"string\") {throw TypeError(\"Illegal str: Not a string\");}if (typeof t !== \"number\" || t % 1 !== 0) {throw TypeError(\"Illegal offset: \" + t + \" (not an integer)\");}t >>>= 0;if (t < 0 || t + 0 > this.buffer.byteLength) {throw RangeError(\"Illegal offset: 0 <= \" + t + \" (+\" + 0 + \") <= \" + this.buffer.byteLength);}}var v = t,q;q = o.calculateUTF16asUTF8(b(u), this.noAssert)[1];t += 4 + q;var r = this.buffer.byteLength;if (t > r) {this.resize((r *= 2) > t ? r : t);}t -= 4 + q;if (this.littleEndian) {this.view[t + 3] = q >>> 24 & 255;this.view[t + 2] = q >>> 16 & 255;this.view[t + 1] = q >>> 8 & 255;this.view[t] = q & 255;} else {this.view[t] = q >>> 24 & 255;this.view[t + 1] = q >>> 16 & 255;this.view[t + 2] = q >>> 8 & 255;this.view[t + 3] = q & 255;}t += 4;o.encodeUTF16toUTF8(b(u), function (w) {this.view[t++] = w;}.bind(this));if (t !== v + 4 + q) {throw RangeError(\"Illegal range: Truncated data, \" + t + \" == \" + (t + 4 + q));}if (s) {this.offset = t;return this;}return t - v;};l.readIString = function (t) {var r = typeof t === \"undefined\";if (r) {t = this.offset;}if (!this.noAssert) {if (typeof t !== \"number\" || t % 1 !== 0) {throw TypeError(\"Illegal offset: \" + t + \" (not an integer)\");}t >>>= 0;if (t < 0 || t + 4 > this.buffer.byteLength) {throw RangeError(\"Illegal offset: 0 <= \" + t + \" (+\" + 4 + \") <= \" + this.buffer.byteLength);}}var u = t;var q = this.readUint32(t);var s = this.readUTF8String(q, n.METRICS_BYTES, t += 4);t += s.length;if (r) {this.offset = t;return s.string;} else {return { string: s.string, length: t - u };}};n.METRICS_CHARS = \"c\";n.METRICS_BYTES = \"b\";l.writeUTF8String = function (u, t) {var s = typeof t === \"undefined\";if (s) {t = this.offset;}if (!this.noAssert) {if (typeof t !== \"number\" || t % 1 !== 0) {throw TypeError(\"Illegal offset: \" + t + \" (not an integer)\");}t >>>= 0;if (t < 0 || t + 0 > this.buffer.byteLength) {throw RangeError(\"Illegal offset: 0 <= \" + t + \" (+\" + 0 + \") <= \" + this.buffer.byteLength);}}var q;var v = t;q = o.calculateUTF16asUTF8(b(u))[1];t += q;var r = this.buffer.byteLength;if (t > r) {this.resize((r *= 2) > t ? r : t);}t -= q;o.encodeUTF16toUTF8(b(u), function (w) {this.view[t++] = w;}.bind(this));if (s) {this.offset = t;return this;}return t - v;};l.writeString = l.writeUTF8String;n.calculateUTF8Chars = function (q) {return o.calculateUTF16asUTF8(b(q))[0];};n.calculateUTF8Bytes = function (q) {return o.calculateUTF16asUTF8(b(q))[1];};n.calculateString = n.calculateUTF8Bytes;l.readUTF8String = function (t, s, w) {if (typeof s === \"number\") {w = s;s = undefined;}var u = typeof w === \"undefined\";if (u) {w = this.offset;}if (typeof s === \"undefined\") {s = n.METRICS_CHARS;}if (!this.noAssert) {if (typeof t !== \"number\" || t % 1 !== 0) {throw TypeError(\"Illegal length: \" + t + \" (not an integer)\");}t |= 0;if (typeof w !== \"number\" || w % 1 !== 0) {throw TypeError(\"Illegal offset: \" + w + \" (not an integer)\");}w >>>= 0;if (w < 0 || w + 0 > this.buffer.byteLength) {throw RangeError(\"Illegal offset: 0 <= \" + w + \" (+\" + 0 + \") <= \" + this.buffer.byteLength);}}var r = 0,x = w,v;if (s === n.METRICS_CHARS) {v = f();o.decodeUTF8(function () {return r < t && w < this.limit ? this.view[w++] : null;}.bind(this), function (y) {++r;o.UTF8toUTF16(y, v);});if (r !== t) {throw RangeError(\"Illegal range: Truncated data, \" + r + \" == \" + t);}if (u) {this.offset = w;return v();} else {return { string: v(), length: w - x };}} else {if (s === n.METRICS_BYTES) {if (!this.noAssert) {if (typeof w !== \"number\" || w % 1 !== 0) {throw TypeError(\"Illegal offset: \" + w + \" (not an integer)\");}w >>>= 0;if (w < 0 || w + t > this.buffer.byteLength) {throw RangeError(\"Illegal offset: 0 <= \" + w + \" (+\" + t + \") <= \" + this.buffer.byteLength);}}var q = w + t;o.decodeUTF8toUTF16(function () {return w < q ? this.view[w++] : null;}.bind(this), v = f(), this.noAssert);if (w !== q) {throw RangeError(\"Illegal range: Truncated data, \" + w + \" == \" + q);}if (u) {this.offset = w;return v();} else {return { string: v(), length: w - x };}} else {throw TypeError(\"Unsupported metrics: \" + s);}}};l.readString = l.readUTF8String;l.writeVString = function (v, u) {var t = typeof u === \"undefined\";if (t) {u = this.offset;}if (!this.noAssert) {if (typeof v !== \"string\") {throw TypeError(\"Illegal str: Not a string\");}if (typeof u !== \"number\" || u % 1 !== 0) {throw TypeError(\"Illegal offset: \" + u + \" (not an integer)\");}u >>>= 0;if (u < 0 || u + 0 > this.buffer.byteLength) {throw RangeError(\"Illegal offset: 0 <= \" + u + \" (+\" + 0 + \") <= \" + this.buffer.byteLength);}}var w = u,s,q;s = o.calculateUTF16asUTF8(b(v), this.noAssert)[1];q = n.calculateVarint32(s);u += q + s;var r = this.buffer.byteLength;if (u > r) {this.resize((r *= 2) > u ? r : u);}u -= q + s;u += this.writeVarint32(s, u);o.encodeUTF16toUTF8(b(v), function (x) {this.view[u++] = x;}.bind(this));if (u !== w + s + q) {throw RangeError(\"Illegal range: Truncated data, \" + u + \" == \" + (u + s + q));}if (t) {this.offset = u;return this;}return u - w;};l.readVString = function (t) {var r = typeof t === \"undefined\";if (r) {t = this.offset;}if (!this.noAssert) {if (typeof t !== \"number\" || t % 1 !== 0) {throw TypeError(\"Illegal offset: \" + t + \" (not an integer)\");}t >>>= 0;if (t < 0 || t + 1 > this.buffer.byteLength) {throw RangeError(\"Illegal offset: 0 <= \" + t + \" (+\" + 1 + \") <= \" + this.buffer.byteLength);}}var u = t;var q = this.readVarint32(t);var s = this.readUTF8String(q.value, n.METRICS_BYTES, t += q.length);t += s.length;if (r) {this.offset = t;return s.string;} else {return { string: s.string, length: t - u };}};l.append = function (u, s, v) {if (typeof s === \"number\" || typeof s !== \"string\") {v = s;s = undefined;}var t = typeof v === \"undefined\";if (t) {v = this.offset;}if (!this.noAssert) {if (typeof v !== \"number\" || v % 1 !== 0) {throw TypeError(\"Illegal offset: \" + v + \" (not an integer)\");}v >>>= 0;if (v < 0 || v + 0 > this.buffer.byteLength) {throw RangeError(\"Illegal offset: 0 <= \" + v + \" (+\" + 0 + \") <= \" + this.buffer.byteLength);}}if (!(u instanceof n)) {u = n.wrap(u, s);}var r = u.limit - u.offset;if (r <= 0) {return this;}v += r;var q = this.buffer.byteLength;if (v > q) {this.resize((q *= 2) > v ? q : v);}v -= r;this.view.set(u.view.subarray(u.offset, u.limit), v);u.offset += r;if (t) {this.offset += r;}return this;};l.appendTo = function (q, r) {q.append(this, r);return this;};l.assert = function (q) {this.noAssert = !q;return this;};l.capacity = function () {return this.buffer.byteLength;};l.clear = function () {this.offset = 0;this.limit = this.buffer.byteLength;this.markedOffset = -1;return this;};l.clone = function (r) {var q = new n(0, this.littleEndian, this.noAssert);if (r) {q.buffer = new ArrayBuffer(this.buffer.byteLength);q.view = new Uint8Array(q.buffer);} else {q.buffer = this.buffer;q.view = this.view;}q.offset = this.offset;q.markedOffset = this.markedOffset;q.limit = this.limit;return q;};l.compact = function (u, t) {if (typeof u === \"undefined\") {u = this.offset;}if (typeof t === \"undefined\") {t = this.limit;}if (!this.noAssert) {if (typeof u !== \"number\" || u % 1 !== 0) {throw TypeError(\"Illegal begin: Not an integer\");}u >>>= 0;if (typeof t !== \"number\" || t % 1 !== 0) {throw TypeError(\"Illegal end: Not an integer\");}t >>>= 0;if (u < 0 || u > t || t > this.buffer.byteLength) {throw RangeError(\"Illegal range: 0 <= \" + u + \" <= \" + t + \" <= \" + this.buffer.byteLength);}}if (u === 0 && t === this.buffer.byteLength) {return this;}var q = t - u;if (q === 0) {this.buffer = p;this.view = null;if (this.markedOffset >= 0) {this.markedOffset -= u;}this.offset = 0;this.limit = 0;return this;}var s = new ArrayBuffer(q);var r = new Uint8Array(s);r.set(this.view.subarray(u, t));this.buffer = s;this.view = r;if (this.markedOffset >= 0) {this.markedOffset -= u;}this.offset = 0;this.limit = q;return this;};l.copy = function (s, q) {if (typeof s === \"undefined\") {s = this.offset;}if (typeof q === \"undefined\") {q = this.limit;}if (!this.noAssert) {if (typeof s !== \"number\" || s % 1 !== 0) {throw TypeError(\"Illegal begin: Not an integer\");}s >>>= 0;if (typeof q !== \"number\" || q % 1 !== 0) {throw TypeError(\"Illegal end: Not an integer\");}q >>>= 0;if (s < 0 || s > q || q > this.buffer.byteLength) {throw RangeError(\"Illegal range: 0 <= \" + s + \" <= \" + q + \" <= \" + this.buffer.byteLength);}}if (s === q) {return new n(0, this.littleEndian, this.noAssert);}var r = q - s,t = new n(r, this.littleEndian, this.noAssert);t.offset = 0;t.limit = r;if (t.markedOffset >= 0) {t.markedOffset -= s;}this.copyTo(t, 0, s, q);return t;};l.copyTo = function (u, w, s, v) {var t, r;if (!this.noAssert) {if (!n.isByteBuffer(u)) {throw TypeError(\"Illegal target: Not a ByteBuffer\");}}w = (r = typeof w === \"undefined\") ? u.offset : w | 0;s = (t = typeof s === \"undefined\") ? this.offset : s | 0;v = typeof v === \"undefined\" ? this.limit : v | 0;if (w < 0 || w > u.buffer.byteLength) {throw RangeError(\"Illegal target range: 0 <= \" + w + \" <= \" + u.buffer.byteLength);}if (s < 0 || v > this.buffer.byteLength) {throw RangeError(\"Illegal source range: 0 <= \" + s + \" <= \" + this.buffer.byteLength);}var q = v - s;if (q === 0) {return u;}u.ensureCapacity(w + q);u.view.set(this.view.subarray(s, v), w);if (t) {this.offset += q;}if (r) {u.offset += q;}return this;};l.ensureCapacity = function (q) {var r = this.buffer.byteLength;if (r < q) {return this.resize((r *= 2) > q ? r : q);}return this;};l.fill = function (t, r, q) {var s = typeof r === \"undefined\";if (s) {r = this.offset;}if (typeof t === \"string\" && t.length > 0) {t = t.charCodeAt(0);}if (typeof r === \"undefined\") {r = this.offset;}if (typeof q === \"undefined\") {q = this.limit;}if (!this.noAssert) {if (typeof t !== \"number\" || t % 1 !== 0) {throw TypeError(\"Illegal value: \" + t + \" (not an integer)\");}t |= 0;if (typeof r !== \"number\" || r % 1 !== 0) {throw TypeError(\"Illegal begin: Not an integer\");}r >>>= 0;if (typeof q !== \"number\" || q % 1 !== 0) {throw TypeError(\"Illegal end: Not an integer\");}q >>>= 0;if (r < 0 || r > q || q > this.buffer.byteLength) {throw RangeError(\"Illegal range: 0 <= \" + r + \" <= \" + q + \" <= \" + this.buffer.byteLength);}}if (r >= q) {return this;}while (r < q) {this.view[r++] = t;}if (s) {this.offset = r;}return this;};l.flip = function () {this.limit = this.offset;this.offset = 0;return this;};l.mark = function (q) {q = typeof q === \"undefined\" ? this.offset : q;if (!this.noAssert) {if (typeof q !== \"number\" || q % 1 !== 0) {throw TypeError(\"Illegal offset: \" + q + \" (not an integer)\");}q >>>= 0;if (q < 0 || q + 0 > this.buffer.byteLength) {throw RangeError(\"Illegal offset: 0 <= \" + q + \" (+\" + 0 + \") <= \" + this.buffer.byteLength);}}this.markedOffset = q;return this;};l.order = function (q) {if (!this.noAssert) {if (typeof q !== \"boolean\") {throw TypeError(\"Illegal littleEndian: Not a boolean\");}}this.littleEndian = !!q;return this;};l.LE = function (q) {this.littleEndian = typeof q !== \"undefined\" ? !!q : true;return this;};l.BE = function (q) {this.littleEndian = typeof q !== \"undefined\" ? !q : false;return this;};l.prepend = function (q, s, t) {if (typeof s === \"number\" || typeof s !== \"string\") {t = s;s = undefined;}var r = typeof t === \"undefined\";if (r) {t = this.offset;}if (!this.noAssert) {if (typeof t !== \"number\" || t % 1 !== 0) {throw TypeError(\"Illegal offset: \" + t + \" (not an integer)\");}t >>>= 0;if (t < 0 || t + 0 > this.buffer.byteLength) {throw RangeError(\"Illegal offset: 0 <= \" + t + \" (+\" + 0 + \") <= \" + this.buffer.byteLength);}}if (!(q instanceof n)) {q = n.wrap(q, s);}var v = q.limit - q.offset;if (v <= 0) {return this;}var y = v - t;if (y > 0) {var u = new ArrayBuffer(this.buffer.byteLength + y);var x = new Uint8Array(u);x.set(this.view.subarray(t, this.buffer.byteLength), v);this.buffer = u;this.view = x;this.offset += y;if (this.markedOffset >= 0) {this.markedOffset += y;}this.limit += y;t += y;} else {var w = new Uint8Array(this.buffer);}this.view.set(q.view.subarray(q.offset, q.limit), t - v);q.offset = q.limit;if (r) {this.offset -= v;}return this;};l.prependTo = function (q, r) {q.prepend(this, r);return this;};l.printDebug = function (q) {if (typeof q !== \"function\") {q = console.log.bind(console);}q(this.toString() + \"\\n-------------------------------------------------------------------\\n\" + this.toDebug(true));};l.remaining = function () {return this.limit - this.offset;};l.reset = function () {if (this.markedOffset >= 0) {this.offset = this.markedOffset;this.markedOffset = -1;} else {this.offset = 0;}return this;};l.resize = function (s) {if (!this.noAssert) {if (typeof s !== \"number\" || s % 1 !== 0) {throw TypeError(\"Illegal capacity: \" + s + \" (not an integer)\");}s |= 0;if (s < 0) {throw RangeError(\"Illegal capacity: 0 <= \" + s);}}if (this.buffer.byteLength < s) {var r = new ArrayBuffer(s);var q = new Uint8Array(r);q.set(this.view);this.buffer = r;this.view = q;}return this;};l.reverse = function (r, q) {if (typeof r === \"undefined\") {r = this.offset;}if (typeof q === \"undefined\") {q = this.limit;}if (!this.noAssert) {if (typeof r !== \"number\" || r % 1 !== 0) {throw TypeError(\"Illegal begin: Not an integer\");}r >>>= 0;if (typeof q !== \"number\" || q % 1 !== 0) {throw TypeError(\"Illegal end: Not an integer\");}q >>>= 0;if (r < 0 || r > q || q > this.buffer.byteLength) {throw RangeError(\"Illegal range: 0 <= \" + r + \" <= \" + q + \" <= \" + this.buffer.byteLength);}}if (r === q) {return this;}Array.prototype.reverse.call(this.view.subarray(r, q));return this;};l.skip = function (q) {if (!this.noAssert) {if (typeof q !== \"number\" || q % 1 !== 0) {throw TypeError(\"Illegal length: \" + q + \" (not an integer)\");}q |= 0;}var r = this.offset + q;if (!this.noAssert) {if (r < 0 || r > this.buffer.byteLength) {throw RangeError(\"Illegal length: 0 <= \" + this.offset + \" + \" + q + \" <= \" + this.buffer.byteLength);}}this.offset = r;return this;};l.slice = function (r, q) {if (typeof r === \"undefined\") {r = this.offset;}if (typeof q === \"undefined\") {q = this.limit;}if (!this.noAssert) {if (typeof r !== \"number\" || r % 1 !== 0) {throw TypeError(\"Illegal begin: Not an integer\");}r >>>= 0;if (typeof q !== \"number\" || q % 1 !== 0) {throw TypeError(\"Illegal end: Not an integer\");}q >>>= 0;if (r < 0 || r > q || q > this.buffer.byteLength) {throw RangeError(\"Illegal range: 0 <= \" + r + \" <= \" + q + \" <= \" + this.buffer.byteLength);}}var s = this.clone();s.offset = r;s.limit = q;return s;};l.toBuffer = function (q) {var t = this.offset,s = this.limit;if (!this.noAssert) {if (typeof t !== \"number\" || t % 1 !== 0) {throw TypeError(\"Illegal offset: Not an integer\");}t >>>= 0;if (typeof s !== \"number\" || s % 1 !== 0) {throw TypeError(\"Illegal limit: Not an integer\");}s >>>= 0;if (t < 0 || t > s || s > this.buffer.byteLength) {throw RangeError(\"Illegal range: 0 <= \" + t + \" <= \" + s + \" <= \" + this.buffer.byteLength);}}if (!q && t === 0 && s === this.buffer.byteLength) {return this.buffer;}if (t === s) {return p;}var r = new ArrayBuffer(s - t);new Uint8Array(r).set(new Uint8Array(this.buffer).subarray(t, s), 0);return r;};l.toArrayBuffer = l.toBuffer;l.toString = function (s, r, q) {if (typeof s === \"undefined\") {return \"ByteBufferAB(offset=\" + this.offset + \",markedOffset=\" + this.markedOffset + \",limit=\" + this.limit + \",capacity=\" + this.capacity() + \")\";}if (typeof s === \"number\") {s = \"utf8\", r = s, q = r;}switch (s) {case \"utf8\":return this.toUTF8(r, q);case \"base64\":return this.toBase64(r, q);case \"hex\":return this.toHex(r, q);case \"binary\":return this.toBinary(r, q);case \"debug\":return this.toDebug();case \"columns\":return this.toColumns();default:throw Error(\"Unsupported encoding: \" + s);}};var h = function () {var r = {};var u = [65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 43, 47];var t = [];for (var s = 0, q = u.length; s < q; ++s) {t[u[s]] = s;}r.encode = function (x, y) {var v, w;while ((v = x()) !== null) {y(u[v >> 2 & 63]);w = (v & 3) << 4;if ((v = x()) !== null) {w |= v >> 4 & 15;y(u[(w | v >> 4 & 15) & 63]);w = (v & 15) << 2;if ((v = x()) !== null) {y(u[(w | v >> 6 & 3) & 63]), y(u[v & 63]);} else {y(u[w & 63]), y(61);}} else {y(u[w & 63]), y(61), y(61);}}};r.decode = function (y, A) {var z, x, w;function v(B) {throw Error(\"Illegal character code: \" + B);}while ((z = y()) !== null) {x = t[z];if (typeof x === \"undefined\") {v(z);}if ((z = y()) !== null) {w = t[z];if (typeof w === \"undefined\") {v(z);}A(x << 2 >>> 0 | (w & 48) >> 4);if ((z = y()) !== null) {x = t[z];if (typeof x === \"undefined\") {if (z === 61) {break;} else {v(z);}}A((w & 15) << 4 >>> 0 | (x & 60) >> 2);if ((z = y()) !== null) {w = t[z];if (typeof w === \"undefined\") {if (z === 61) {break;} else {v(z);}}A((x & 3) << 6 >>> 0 | w);}}}}};r.test = function (v) {return /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(v);};return r;}();l.toBase64 = function (r, q) {if (typeof r === \"undefined\") {r = this.offset;}if (typeof q === \"undefined\") {q = this.limit;}r = r | 0;q = q | 0;if (r < 0 || q > this.capacity || r > q) {throw RangeError(\"begin, end\");}var s;h.encode(function () {return r < q ? this.view[r++] : null;}.bind(this), s = f());return s();};n.fromBase64 = function (t, r) {if (typeof t !== \"string\") {throw TypeError(\"str\");}var s = new n(t.length / 4 * 3, r),q = 0;h.decode(b(t), function (u) {s.view[q++] = u;});s.limit = q;return s;};n.btoa = function (q) {return n.fromBinary(q).toBase64();};n.atob = function (q) {return n.fromBase64(q).toBinary();};l.toBinary = function (r, q) {if (typeof r === \"undefined\") {r = this.offset;}if (typeof q === \"undefined\") {q = this.limit;}r |= 0;q |= 0;if (r < 0 || q > this.capacity() || r > q) {throw RangeError(\"begin, end\");}if (r === q) {return \"\";}var s = [],t = [];while (r < q) {s.push(this.view[r++]);if (s.length >= 1024) {t.push(String.fromCharCode.apply(String, s)), s = [];}}return t.join(\"\") + String.fromCharCode.apply(String, s);};n.fromBinary = function (v, t) {if (typeof v !== \"string\") {throw TypeError(\"str\");}var s = 0,r = v.length,q,u = new n(r, t);while (s < r) {q = v.charCodeAt(s);if (q > 255) {throw RangeError(\"illegal char code: \" + q);}u.view[s++] = q;}u.limit = r;return u;};l.toDebug = function (u) {var t = -1,r = this.buffer.byteLength,q,w = \"\",v = \"\",s = \"\";while (t < r) {if (t !== -1) {q = this.view[t];if (q < 16) {w += \"0\" + q.toString(16).toUpperCase();} else {w += q.toString(16).toUpperCase();}if (u) {v += q > 32 && q < 127 ? String.fromCharCode(q) : \".\";}}++t;if (u) {if (t > 0 && t % 16 === 0 && t !== r) {while (w.length < 3 * 16 + 3) {w += \" \";}s += w + v + \"\\n\";w = v = \"\";}}if (t === this.offset && t === this.limit) {w += t === this.markedOffset ? \"!\" : \"|\";} else {if (t === this.offset) {w += t === this.markedOffset ? \"[\" : \"<\";} else {if (t === this.limit) {w += t === this.markedOffset ? \"]\" : \">\";} else {w += t === this.markedOffset ? \"'\" : u || t !== 0 && t !== r ? \" \" : \"\";}}}}if (u && w !== \" \") {while (w.length < 3 * 16 + 3) {w += \" \";}s += w + v + \"\\n\";}return u ? s : w;};n.fromDebug = function (A, s, C) {var w = A.length,z = new n((w + 1) / 3 | 0, s, C);var y = 0,x = 0,q,B,v = false,D = false,r = false,t = false,u = false;while (y < w) {switch (q = A.charAt(y++)) {case \"!\":if (!C) {if (D || r || t) {u = true;break;}D = r = t = true;}z.offset = z.markedOffset = z.limit = x;v = false;break;case \"|\":if (!C) {if (D || t) {u = true;break;}D = t = true;}z.offset = z.limit = x;v = false;break;case \"[\":if (!C) {if (D || r) {u = true;break;}D = r = true;}z.offset = z.markedOffset = x;v = false;break;case \"<\":if (!C) {if (D) {u = true;break;}D = true;}z.offset = x;v = false;break;case \"]\":if (!C) {if (t || r) {u = true;break;}t = r = true;}z.limit = z.markedOffset = x;v = false;break;case \">\":if (!C) {if (t) {u = true;break;}t = true;}z.limit = x;v = false;break;case \"'\":if (!C) {if (r) {u = true;break;}r = true;}z.markedOffset = x;v = false;break;case \" \":v = false;break;default:if (!C) {if (v) {u = true;break;}}B = parseInt(q + A.charAt(y++), 16);if (!C) {if (isNaN(B) || B < 0 || B > 255) {throw TypeError(\"Illegal str: Not a debug encoded string\");}}z.view[x++] = B;v = true;}if (u) {throw TypeError(\"Illegal str: Invalid symbol at \" + y);}}if (!C) {if (!D || !t) {throw TypeError(\"Illegal str: Missing offset or limit\");}if (x < z.buffer.byteLength) {throw TypeError(\"Illegal str: Not a debug encoded string (is it hex?) \" + x + \" < \" + w);}}return z;};l.toHex = function (t, r) {t = typeof t === \"undefined\" ? this.offset : t;r = typeof r === \"undefined\" ? this.limit : r;if (!this.noAssert) {if (typeof t !== \"number\" || t % 1 !== 0) {throw TypeError(\"Illegal begin: Not an integer\");}t >>>= 0;if (typeof r !== \"number\" || r % 1 !== 0) {throw TypeError(\"Illegal end: Not an integer\");}r >>>= 0;if (t < 0 || t > r || r > this.buffer.byteLength) {throw RangeError(\"Illegal range: 0 <= \" + t + \" <= \" + r + \" <= \" + this.buffer.byteLength);}}var s = new Array(r - t),q;while (t < r) {q = this.view[t++];if (q < 16) {s.push(\"0\", q.toString(16));} else {s.push(q.toString(16));}}return s.join(\"\");};n.fromHex = function (x, v, u) {if (!u) {if (typeof x !== \"string\") {throw TypeError(\"Illegal str: Not a string\");}if (x.length % 2 !== 0) {throw TypeError(\"Illegal str: Length not a multiple of 2\");}}var r = x.length,w = new n(r / 2 | 0, v),q;for (var t = 0, s = 0; t < r; t += 2) {q = parseInt(x.substring(t, t + 2), 16);if (!u) {if (!isFinite(q) || q < 0 || q > 255) {throw TypeError(\"Illegal str: Contains non-hex characters\");}}w.view[s++] = q;}w.limit = s;return w;};var o = function () {var q = {};q.MAX_CODEPOINT = 1114111;q.encodeUTF8 = function (s, t) {var r = null;if (typeof s === \"number\") {r = s, s = function s() {return null;};}while (r !== null || (r = s()) !== null) {if (r < 128) {t(r & 127);} else {if (r < 2048) {t(r >> 6 & 31 | 192), t(r & 63 | 128);} else {if (r < 65536) {t(r >> 12 & 15 | 224), t(r >> 6 & 63 | 128), t(r & 63 | 128);} else {t(r >> 18 & 7 | 240), t(r >> 12 & 63 | 128), t(r >> 6 & 63 | 128), t(r & 63 | 128);}}}r = null;}};q.decodeUTF8 = function (v, x) {var t,r,w,u,s = function s(y) {y = y.slice(0, y.indexOf(null));var z = Error(y.toString());z.name = \"TruncatedError\";z.bytes = y;throw z;};while ((t = v()) !== null) {if ((t & 128) === 0) {x(t);} else {if ((t & 224) === 192) {(r = v()) === null && s([t, r]), x((t & 31) << 6 | r & 63);} else {if ((t & 240) === 224) {((r = v()) === null || (w = v()) === null) && s([t, r, w]), x((t & 15) << 12 | (r & 63) << 6 | w & 63);} else {if ((t & 248) === 240) {((r = v()) === null || (w = v()) === null || (u = v()) === null) && s([t, r, w, u]), x((t & 7) << 18 | (r & 63) << 12 | (w & 63) << 6 | u & 63);} else {throw RangeError(\"Illegal starting byte: \" + t);}}}}}};q.UTF16toUTF8 = function (t, u) {var s,r = null;while (true) {if ((s = r !== null ? r : t()) === null) {break;}if (s >= 55296 && s <= 57343) {if ((r = t()) !== null) {if (r >= 56320 && r <= 57343) {u((s - 55296) * 1024 + r - 56320 + 65536);r = null;continue;}}}u(s);}if (r !== null) {u(r);}};q.UTF8toUTF16 = function (s, t) {var r = null;if (typeof s === \"number\") {r = s, s = function s() {return null;};}while (r !== null || (r = s()) !== null) {if (r <= 65535) {t(r);} else {r -= 65536, t((r >> 10) + 55296), t(r % 1024 + 56320);}r = null;}};q.encodeUTF16toUTF8 = function (r, s) {q.UTF16toUTF8(r, function (t) {q.encodeUTF8(t, s);});};q.decodeUTF8toUTF16 = function (r, s) {q.decodeUTF8(r, function (t) {q.UTF8toUTF16(t, s);});};q.calculateCodePoint = function (r) {return r < 128 ? 1 : r < 2048 ? 2 : r < 65536 ? 3 : 4;};q.calculateUTF8 = function (t) {var s,r = 0;while ((s = t()) !== null) {r += s < 128 ? 1 : s < 2048 ? 2 : s < 65536 ? 3 : 4;}return r;};q.calculateUTF16asUTF8 = function (s) {var t = 0,r = 0;q.UTF16toUTF8(s, function (u) {++t;r += u < 128 ? 1 : u < 2048 ? 2 : u < 65536 ? 3 : 4;});return [t, r];};return q;}();l.toUTF8 = function (r, q) {if (typeof r === \"undefined\") {r = this.offset;}if (typeof q === \"undefined\") {q = this.limit;}if (!this.noAssert) {if (typeof r !== \"number\" || r % 1 !== 0) {throw TypeError(\"Illegal begin: Not an integer\");}r >>>= 0;if (typeof q !== \"number\" || q % 1 !== 0) {throw TypeError(\"Illegal end: Not an integer\");}q >>>= 0;if (r < 0 || r > q || q > this.buffer.byteLength) {throw RangeError(\"Illegal range: 0 <= \" + r + \" <= \" + q + \" <= \" + this.buffer.byteLength);}}var t;try {o.decodeUTF8toUTF16(function () {return r < q ? this.view[r++] : null;}.bind(this), t = f());} catch (s) {if (r !== q) {throw RangeError(\"Illegal range: Truncated data, \" + r + \" != \" + q);}}return t();};n.fromUTF8 = function (u, s, r) {if (!r) {if (typeof u !== \"string\") {throw TypeError(\"Illegal str: Not a string\");}}var t = new n(o.calculateUTF16asUTF8(b(u), true)[1], s, r),q = 0;o.encodeUTF16toUTF8(b(u), function (v) {t.view[q++] = v;});t.limit = q;return t;};return n;}(d);var e = function (j, k, f) {var l = {};l.ByteBuffer = j;l.c = j;var n = j;l.Long = k || null;l.VERSION = \"5.0.1\";l.WIRE_TYPES = {};l.WIRE_TYPES.VARINT = 0;l.WIRE_TYPES.BITS64 = 1;l.WIRE_TYPES.LDELIM = 2;l.WIRE_TYPES.STARTGROUP = 3;l.WIRE_TYPES.ENDGROUP = 4;l.WIRE_TYPES.BITS32 = 5;l.PACKABLE_WIRE_TYPES = [l.WIRE_TYPES.VARINT, l.WIRE_TYPES.BITS64, l.WIRE_TYPES.BITS32];l.TYPES = { int32: { name: \"int32\", wireType: l.WIRE_TYPES.VARINT, defaultValue: 0 }, uint32: { name: \"uint32\", wireType: l.WIRE_TYPES.VARINT, defaultValue: 0 }, sint32: { name: \"sint32\", wireType: l.WIRE_TYPES.VARINT, defaultValue: 0 }, int64: { name: \"int64\", wireType: l.WIRE_TYPES.VARINT, defaultValue: l.Long ? l.Long.ZERO : undefined }, uint64: { name: \"uint64\", wireType: l.WIRE_TYPES.VARINT, defaultValue: l.Long ? l.Long.UZERO : undefined }, sint64: { name: \"sint64\", wireType: l.WIRE_TYPES.VARINT, defaultValue: l.Long ? l.Long.ZERO : undefined }, bool: { name: \"bool\", wireType: l.WIRE_TYPES.VARINT, defaultValue: false }, \"double\": { name: \"double\", wireType: l.WIRE_TYPES.BITS64, defaultValue: 0 }, string: { name: \"string\", wireType: l.WIRE_TYPES.LDELIM, defaultValue: \"\" }, bytes: { name: \"bytes\", wireType: l.WIRE_TYPES.LDELIM, defaultValue: null }, fixed32: { name: \"fixed32\", wireType: l.WIRE_TYPES.BITS32, defaultValue: 0 }, sfixed32: { name: \"sfixed32\", wireType: l.WIRE_TYPES.BITS32, defaultValue: 0 }, fixed64: { name: \"fixed64\", wireType: l.WIRE_TYPES.BITS64, defaultValue: l.Long ? l.Long.UZERO : undefined }, sfixed64: { name: \"sfixed64\", wireType: l.WIRE_TYPES.BITS64, defaultValue: l.Long ? l.Long.ZERO : undefined }, \"float\": { name: \"float\", wireType: l.WIRE_TYPES.BITS32, defaultValue: 0 }, \"enum\": { name: \"enum\", wireType: l.WIRE_TYPES.VARINT, defaultValue: 0 }, message: { name: \"message\", wireType: l.WIRE_TYPES.LDELIM, defaultValue: null }, group: { name: \"group\", wireType: l.WIRE_TYPES.STARTGROUP, defaultValue: null } };l.MAP_KEY_TYPES = [l.TYPES.int32, l.TYPES.sint32, l.TYPES.sfixed32, l.TYPES.uint32, l.TYPES.fixed32, l.TYPES.int64, l.TYPES.sint64, l.TYPES.sfixed64, l.TYPES.uint64, l.TYPES.fixed64, l.TYPES.bool, l.TYPES.string, l.TYPES.bytes];l.ID_MIN = 1;l.ID_MAX = 536870911;l.convertFieldsToCamelCase = false;l.populateAccessors = true;l.populateDefaults = true;l.Util = function () {var b = {};b.IS_NODE = !!(typeof process === \"object\" && process + \"\" === \"[object process]\" && !process.browser);b.XHR = function () {var r = [function () {return new XMLHttpRequest();}, function () {return new ActiveXObject(\"Msxml2.XMLHTTP\");}, function () {return new ActiveXObject(\"Msxml3.XMLHTTP\");}, function () {return new ActiveXObject(\"Microsoft.XMLHTTP\");}];var o = null;for (var q = 0; q < r.length; q++) {try {o = r[q]();} catch (p) {continue;}break;}if (!o) {throw Error(\"XMLHttpRequest is not supported\");}return o;};b.fetch = function (q, o) {if (o && typeof o != \"function\") {o = null;}if (b.IS_NODE) {if (o) {g.readFile(q, function (t, s) {if (t) {o(null);} else {o(\"\" + s);}});} else {try {return g.readFileSync(q);} catch (r) {return null;}}} else {var p = b.XHR();p.open(\"GET\", q, o ? true : false);p.setRequestHeader(\"Accept\", \"text/plain\");if (typeof p.overrideMimeType === \"function\") {p.overrideMimeType(\"text/plain\");}if (o) {p.onreadystatechange = function () {if (p.readyState != 4) {return;}if (p.status == 200 || p.status == 0 && typeof p.responseText === \"string\") {o(p.responseText);} else {o(null);}};if (p.readyState == 4) {return;}p.send(null);} else {p.send(null);if (p.status == 200 || p.status == 0 && typeof p.responseText === \"string\") {return p.responseText;}return null;}}};b.toCamelCase = function (o) {return o.replace(/_([a-zA-Z])/g, function (p, q) {return q.toUpperCase();});};return b;}();l.Lang = { DELIM: /[\\s\\{\\}=;:\\[\\],'\"\\(\\)<>]/g, RULE: /^(?:required|optional|repeated|map)$/, TYPE: /^(?:double|float|int32|uint32|sint32|int64|uint64|sint64|fixed32|sfixed32|fixed64|sfixed64|bool|string|bytes)$/, NAME: /^[a-zA-Z_][a-zA-Z_0-9]*$/, TYPEDEF: /^[a-zA-Z][a-zA-Z_0-9]*$/, TYPEREF: /^(?:\\.?[a-zA-Z_][a-zA-Z_0-9]*)+$/, FQTYPEREF: /^(?:\\.[a-zA-Z][a-zA-Z_0-9]*)+$/, NUMBER: /^-?(?:[1-9][0-9]*|0|0[xX][0-9a-fA-F]+|0[0-7]+|([0-9]*(\\.[0-9]*)?([Ee][+-]?[0-9]+)?)|inf|nan)$/, NUMBER_DEC: /^(?:[1-9][0-9]*|0)$/, NUMBER_HEX: /^0[xX][0-9a-fA-F]+$/, NUMBER_OCT: /^0[0-7]+$/, NUMBER_FLT: /^([0-9]*(\\.[0-9]*)?([Ee][+-]?[0-9]+)?|inf|nan)$/, BOOL: /^(?:true|false)$/i, ID: /^(?:[1-9][0-9]*|0|0[xX][0-9a-fA-F]+|0[0-7]+)$/, NEGID: /^\\-?(?:[1-9][0-9]*|0|0[xX][0-9a-fA-F]+|0[0-7]+)$/, WHITESPACE: /\\s/, STRING: /(?:\"([^\"\\\\]*(?:\\\\.[^\"\\\\]*)*)\")|(?:'([^'\\\\]*(?:\\\\.[^'\\\\]*)*)')/g, STRING_DQ: /(?:\"([^\"\\\\]*(?:\\\\.[^\"\\\\]*)*)\")/g, STRING_SQ: /(?:'([^'\\\\]*(?:\\\\.[^'\\\\]*)*)')/g };l.DotProto = function (s, t) {var q = {};var r = function r(o) {this.source = o + \"\";this.index = 0;this.line = 1;this.stack = [];this._stringOpen = null;};var b = r.prototype;b._readString = function () {var o = this._stringOpen === '\"' ? t.STRING_DQ : t.STRING_SQ;o.lastIndex = this.index - 1;var y = o.exec(this.source);if (!y) {throw Error(\"unterminated string\");}this.index = o.lastIndex;this.stack.push(this._stringOpen);this._stringOpen = null;return y[1];};b.next = function () {if (this.stack.length > 0) {return this.stack.shift();}if (this.index >= this.source.length) {return null;}if (this._stringOpen !== null) {return this._readString();}var y, z, A;do {y = false;while (t.WHITESPACE.test(A = this.source.charAt(this.index))) {if (A === \"\\n\") {++this.line;}if (++this.index === this.source.length) {return null;}}if (this.source.charAt(this.index) === \"/\") {++this.index;if (this.source.charAt(this.index) === \"/\") {while (this.source.charAt(++this.index) !== \"\\n\") {if (this.index == this.source.length) {return null;}}++this.index;++this.line;y = true;} else {if ((A = this.source.charAt(this.index)) === \"*\") {do {if (A === \"\\n\") {++this.line;}if (++this.index === this.source.length) {return null;}z = A;A = this.source.charAt(this.index);} while (z !== \"*\" || A !== \"/\");++this.index;y = true;} else {return \"/\";}}}} while (y);if (this.index === this.source.length) {return null;}var C = this.index;t.DELIM.lastIndex = 0;var o = t.DELIM.test(this.source.charAt(C++));if (!o) {while (C < this.source.length && !t.DELIM.test(this.source.charAt(C))) {++C;}}var B = this.source.substring(this.index, this.index = C);if (B === '\"' || B === \"'\") {this._stringOpen = B;}return B;};b.peek = function () {if (this.stack.length === 0) {var o = this.next();if (o === null) {return null;}this.stack.push(o);}return this.stack[0];};b.skip = function (y) {var o = this.next();if (o !== y) {throw Error(\"illegal '\" + o + \"', '\" + y + \"' expected\");}};b.omit = function (o) {if (this.peek() === o) {this.next();return true;}return false;};b.toString = function () {return \"Tokenizer (\" + this.index + \"/\" + this.source.length + \" at line \" + this.line + \")\";};q.Tokenizer = r;var u = function u(o) {this.tn = new r(o);this.proto3 = false;};var w = u.prototype;w.parse = function () {var A = { name: \"[ROOT]\", \"package\": null, messages: [], enums: [], imports: [], options: {}, services: [] };var y,z = true;try {while (y = this.tn.next()) {switch (y) {case \"package\":if (!z || A[\"package\"] !== null) {throw Error(\"unexpected 'package'\");}y = this.tn.next();if (!t.TYPEREF.test(y)) {throw Error(\"illegal package name: \" + y);}this.tn.skip(\";\");A[\"package\"] = y;break;case \"import\":if (!z) {throw Error(\"unexpected 'import'\");}y = this.tn.peek();if (y === \"public\") {this.tn.next();}y = this._readString();this.tn.skip(\";\");A.imports.push(y);break;case \"syntax\":if (!z) {throw Error(\"unexpected 'syntax'\");}this.tn.skip(\"=\");if ((A.syntax = this._readString()) === \"proto3\") {this.proto3 = true;}this.tn.skip(\";\");break;case \"message\":this._parseMessage(A, null);z = false;break;case \"enum\":this._parseEnum(A);z = false;break;case \"option\":this._parseOption(A);break;case \"service\":this._parseService(A);break;case \"extend\":this._parseExtend(A);break;default:throw Error(\"unexpected '\" + y + \"'\");}}} catch (o) {o.message = \"Parse error at line \" + this.tn.line + \": \" + o.message;throw o;}delete A.name;return A;};u.parse = function (o) {return new u(o).parse();};function x(y, z) {var o = -1,A = 1;if (y.charAt(0) == \"-\") {A = -1;y = y.substring(1);}if (t.NUMBER_DEC.test(y)) {o = parseInt(y);} else {if (t.NUMBER_HEX.test(y)) {o = parseInt(y.substring(2), 16);} else {if (t.NUMBER_OCT.test(y)) {o = parseInt(y.substring(1), 8);} else {throw Error(\"illegal id value: \" + (A < 0 ? \"-\" : \"\") + y);}}}o = A * o | 0;if (!z && o < 0) {throw Error(\"illegal id value: \" + (A < 0 ? \"-\" : \"\") + y);}return o;}function p(o) {var y = 1;if (o.charAt(0) == \"-\") {y = -1;o = o.substring(1);}if (t.NUMBER_DEC.test(o)) {return y * parseInt(o, 10);} else {if (t.NUMBER_HEX.test(o)) {return y * parseInt(o.substring(2), 16);} else {if (t.NUMBER_OCT.test(o)) {return y * parseInt(o.substring(1), 8);} else {if (o === \"inf\") {return y * Infinity;} else {if (o === \"nan\") {return NaN;} else {if (t.NUMBER_FLT.test(o)) {return y * parseFloat(o);}}}}}}throw Error(\"illegal number value: \" + (y < 0 ? \"-\" : \"\") + o);}w._readString = function () {var y = \"\",z,o;do {o = this.tn.next();if (o !== \"'\" && o !== '\"') {throw Error(\"illegal string delimiter: \" + o);}y += this.tn.next();this.tn.skip(o);z = this.tn.peek();} while (z === '\"' || z === '\"');return y;};w._readValue = function (z) {var y = this.tn.peek(),o;if (y === '\"' || y === \"'\") {return this._readString();}this.tn.next();if (t.NUMBER.test(y)) {return p(y);}if (t.BOOL.test(y)) {return y.toLowerCase() === \"true\";}if (z && t.TYPEREF.test(y)) {return y;}throw Error(\"illegal value: \" + y);};w._parseOption = function (z, o) {var A = this.tn.next(),y = false;if (A === \"(\") {y = true;A = this.tn.next();}if (!t.TYPEREF.test(A)) {throw Error(\"illegal option name: \" + A);}var B = A;if (y) {this.tn.skip(\")\");B = \"(\" + B + \")\";A = this.tn.peek();if (t.FQTYPEREF.test(A)) {B += A;this.tn.next();}}this.tn.skip(\"=\");this._parseOptionValue(z, B);if (!o) {this.tn.skip(\";\");}};function v(y, z, o) {if (typeof y[z] === \"undefined\") {y[z] = o;} else {if (!Array.isArray(y[z])) {y[z] = [y[z]];}y[z].push(o);}}w._parseOptionValue = function (o, z) {var y = this.tn.peek();if (y !== \"{\") {v(o.options, z, this._readValue(true));} else {this.tn.skip(\"{\");while ((y = this.tn.next()) !== \"}\") {if (!t.NAME.test(y)) {throw Error(\"illegal option name: \" + z + \".\" + y);}if (this.tn.omit(\":\")) {v(o.options, z + \".\" + y, this._readValue(true));} else {this._parseOptionValue(o, z + \".\" + y);}}}};w._parseService = function (y) {var z = this.tn.next();if (!t.NAME.test(z)) {throw Error(\"illegal service name at line \" + this.tn.line + \": \" + z);}var A = z;var o = { name: A, rpc: {}, options: {} };this.tn.skip(\"{\");while ((z = this.tn.next()) !== \"}\") {if (z === \"option\") {this._parseOption(o);} else {if (z === \"rpc\") {this._parseServiceRPC(o);} else {throw Error(\"illegal service token: \" + z);}}}this.tn.omit(\";\");y.services.push(o);};w._parseServiceRPC = function (y) {var z = \"rpc\",A = this.tn.next();if (!t.NAME.test(A)) {throw Error(\"illegal rpc service method name: \" + A);}var B = A;var o = { request: null, response: null, request_stream: false, response_stream: false, options: {} };this.tn.skip(\"(\");A = this.tn.next();if (A.toLowerCase() === \"stream\") {o.request_stream = true;A = this.tn.next();}if (!t.TYPEREF.test(A)) {throw Error(\"illegal rpc service request type: \" + A);}o.request = A;this.tn.skip(\")\");A = this.tn.next();if (A.toLowerCase() !== \"returns\") {throw Error(\"illegal rpc service request type delimiter: \" + A);}this.tn.skip(\"(\");A = this.tn.next();if (A.toLowerCase() === \"stream\") {o.response_stream = true;A = this.tn.next();}o.response = A;this.tn.skip(\")\");A = this.tn.peek();if (A === \"{\") {this.tn.next();while ((A = this.tn.next()) !== \"}\") {if (A === \"option\") {this._parseOption(o);} else {throw Error(\"illegal rpc service token: \" + A);}}this.tn.omit(\";\");} else {this.tn.skip(\";\");}if (typeof y[z] === \"undefined\") {y[z] = {};}y[z][B] = o;};w._parseMessage = function (z, A) {var o = !!A,B = this.tn.next();var y = { name: \"\", fields: [], enums: [], messages: [], options: {}, services: [], oneofs: {} };if (!t.NAME.test(B)) {throw Error(\"illegal \" + (o ? \"group\" : \"message\") + \" name: \" + B);}y.name = B;if (o) {this.tn.skip(\"=\");A.id = x(this.tn.next());y.isGroup = true;}B = this.tn.peek();if (B === \"[\" && A) {this._parseFieldOptions(A);}this.tn.skip(\"{\");while ((B = this.tn.next()) !== \"}\") {if (t.RULE.test(B)) {this._parseMessageField(y, B);} else {if (B === \"oneof\") {this._parseMessageOneOf(y);} else {if (B === \"enum\") {this._parseEnum(y);} else {if (B === \"message\") {this._parseMessage(y);} else {if (B === \"option\") {this._parseOption(y);} else {if (B === \"service\") {this._parseService(y);} else {if (B === \"extensions\") {y.extensions = this._parseExtensionRanges();} else {if (B === \"reserved\") {this._parseIgnored();} else {if (B === \"extend\") {this._parseExtend(y);} else {if (t.TYPEREF.test(B)) {if (!this.proto3) {throw Error(\"illegal field rule: \" + B);}this._parseMessageField(y, \"optional\", B);} else {throw Error(\"illegal message token: \" + B);}}}}}}}}}}}this.tn.omit(\";\");z.messages.push(y);return y;};w._parseIgnored = function () {while (this.tn.peek() !== \";\") {this.tn.next();}this.tn.skip(\";\");};w._parseMessageField = function (o, y, z) {if (!t.RULE.test(y)) {throw Error(\"illegal message field rule: \" + y);}var A = { rule: y, type: \"\", name: \"\", options: {}, id: 0 };var B;if (y === \"map\") {if (z) {throw Error(\"illegal type: \" + z);}this.tn.skip(\"<\");B = this.tn.next();if (!t.TYPE.test(B) && !t.TYPEREF.test(B)) {throw Error(\"illegal message field type: \" + B);}A.keytype = B;this.tn.skip(\",\");B = this.tn.next();if (!t.TYPE.test(B) && !t.TYPEREF.test(B)) {throw Error(\"illegal message field: \" + B);}A.type = B;this.tn.skip(\">\");B = this.tn.next();if (!t.NAME.test(B)) {throw Error(\"illegal message field name: \" + B);}A.name = B;this.tn.skip(\"=\");A.id = x(this.tn.next());B = this.tn.peek();if (B === \"[\") {this._parseFieldOptions(A);}this.tn.skip(\";\");} else {z = typeof z !== \"undefined\" ? z : this.tn.next();if (z === \"group\") {var C = this._parseMessage(o, A);if (!/^[A-Z]/.test(C.name)) {throw Error(\"illegal group name: \" + C.name);}A.type = C.name;A.name = C.name.toLowerCase();this.tn.omit(\";\");} else {if (!t.TYPE.test(z) && !t.TYPEREF.test(z)) {throw Error(\"illegal message field type: \" + z);}A.type = z;B = this.tn.next();if (!t.NAME.test(B)) {throw Error(\"illegal message field name: \" + B);}A.name = B;this.tn.skip(\"=\");A.id = x(this.tn.next());B = this.tn.peek();if (B === \"[\") {this._parseFieldOptions(A);}this.tn.skip(\";\");}}o.fields.push(A);return A;};w._parseMessageOneOf = function (o) {var y = this.tn.next();if (!t.NAME.test(y)) {throw Error(\"illegal oneof name: \" + y);}var A = y,z;var B = [];this.tn.skip(\"{\");while ((y = this.tn.next()) !== \"}\") {z = this._parseMessageField(o, \"optional\", y);z.oneof = A;B.push(z.id);}this.tn.omit(\";\");o.oneofs[A] = B;};w._parseFieldOptions = function (y) {this.tn.skip(\"[\");var z,o = true;while ((z = this.tn.peek()) !== \"]\") {if (!o) {this.tn.skip(\",\");}this._parseOption(y, true);o = false;}this.tn.next();};w._parseEnum = function (o) {var A = { name: \"\", values: [], options: {} };var z = this.tn.next();if (!t.NAME.test(z)) {throw Error(\"illegal name: \" + z);}A.name = z;this.tn.skip(\"{\");while ((z = this.tn.next()) !== \"}\") {if (z === \"option\") {this._parseOption(A);} else {if (!t.NAME.test(z)) {throw Error(\"illegal name: \" + z);}this.tn.skip(\"=\");var y = { name: z, id: x(this.tn.next(), true) };z = this.tn.peek();if (z === \"[\") {this._parseFieldOptions({ options: {} });}this.tn.skip(\";\");A.values.push(y);}}this.tn.omit(\";\");o.enums.push(A);};w._parseExtensionRanges = function () {var A = [];var y, z, o;do {z = [];while (true) {y = this.tn.next();switch (y) {case \"min\":o = s.ID_MIN;break;case \"max\":o = s.ID_MAX;break;default:o = p(y);break;}z.push(o);if (z.length === 2) {break;}if (this.tn.peek() !== \"to\") {z.push(o);break;}this.tn.next();}A.push(z);} while (this.tn.omit(\",\"));this.tn.skip(\";\");return A;};w._parseExtend = function (o) {var z = this.tn.next();if (!t.TYPEREF.test(z)) {throw Error(\"illegal extend reference: \" + z);}var y = { ref: z, fields: [] };this.tn.skip(\"{\");while ((z = this.tn.next()) !== \"}\") {if (t.RULE.test(z)) {this._parseMessageField(y, z);} else {if (t.TYPEREF.test(z)) {if (!this.proto3) {throw Error(\"illegal field rule: \" + z);}this._parseMessageField(y, \"optional\", z);} else {throw Error(\"illegal extend token: \" + z);}}}this.tn.omit(\";\");o.messages.push(y);return y;};w.toString = function () {return \"Parser at line \" + this.tn.line;};q.Parser = u;return q;}(l, l.Lang);l.Reflect = function (V) {var aa = {};var Z = function Z(q, o, p) {this.builder = q;this.parent = o;this.name = p;this.className;};var ab = Z.prototype;ab.fqn = function () {var p = this.name,o = this;do {o = o.parent;if (o == null) {break;}p = o.name + \".\" + p;} while (true);return p;};ab.toString = function (o) {return (o ? this.className + \" \" : \"\") + this.fqn();};ab.build = function () {throw Error(this.toString(true) + \" cannot be built directly\");};aa.T = Z;var P = function P(r, o, p, q, s) {Z.call(this, r, o, p);this.className = \"Namespace\";this.children = [];this.options = q || {};this.syntax = s || \"proto2\";};var H = P.prototype = Object.create(Z.prototype);H.getChildren = function (o) {o = o || null;if (o == null) {return this.children.slice();}var p = [];for (var q = 0, r = this.children.length; q < r; ++q) {if (this.children[q] instanceof o) {p.push(this.children[q]);}}return p;};H.addChild = function (o) {var p;if (p = this.getChild(o.name)) {if (p instanceof ad.Field && p.name !== p.originalName && this.getChild(p.originalName) === null) {p.name = p.originalName;} else {if (o instanceof ad.Field && o.name !== o.originalName && this.getChild(o.originalName) === null) {o.name = o.originalName;} else {throw Error(\"Duplicate name in namespace \" + this.toString(true) + \": \" + o.name);}}}this.children.push(o);};H.getChild = function (o) {var p = typeof o === \"number\" ? \"id\" : \"name\";for (var q = 0, r = this.children.length; q < r; ++q) {if (this.children[q][p] === o) {return this.children[q];}}return null;};H.resolve = function (q, t) {var s = typeof q === \"string\" ? q.split(\".\") : q,o = this,r = 0;if (s[r] === \"\") {while (o.parent !== null) {o = o.parent;}r++;}var p;do {do {if (!(o instanceof aa.Namespace)) {o = null;break;}p = o.getChild(s[r]);if (!p || !(p instanceof aa.T) || t && !(p instanceof aa.Namespace)) {o = null;break;}o = p;r++;} while (r < s.length);if (o != null) {break;}if (this.parent !== null) {return this.parent.resolve(q, t);}} while (o != null);return o;};H.qn = function (q) {var r = [],o = q;do {r.unshift(o.name);o = o.parent;} while (o !== null);for (var s = 1; s <= r.length; s++) {var p = r.slice(r.length - s);if (q === this.resolve(p, q instanceof aa.Namespace)) {return p.join(\".\");}}return q.fqn();};H.build = function () {var p = {};var q = this.children;for (var r = 0, s = q.length, o; r < s; ++r) {o = q[r];if (o instanceof P) {p[o.name] = o.build();}}if (Object.defineProperty) {Object.defineProperty(p, \"$options\", { value: this.buildOpt() });}return p;};H.buildOpt = function () {var q = {},p = Object.keys(this.options);for (var r = 0, t = p.length; r < t; ++r) {var s = p[r],o = this.options[p[r]];q[s] = o;}return q;};H.getOption = function (o) {if (typeof o === \"undefined\") {return this.options;}return typeof this.options[o] !== \"undefined\" ? this.options[o] : null;};aa.Namespace = P;var J = function J(o, q, p, r) {this.type = o;this.resolvedType = q;this.isMapKey = p;this.syntax = r;if (p && V.MAP_KEY_TYPES.indexOf(o) < 0) {throw Error(\"Invalid map key type: \" + o.name);}};var b = J.prototype;function F(o) {if (typeof o === \"string\") {o = V.TYPES[o];}if (typeof o.defaultValue === \"undefined\") {throw Error(\"default value for type \" + o.name + \" is not supported\");}if (o == V.TYPES.bytes) {return new n(0);}return o.defaultValue;}J.defaultFieldValue = F;function W(o, p) {if (o && typeof o.low === \"number\" && typeof o.high === \"number\" && typeof o.unsigned === \"boolean\" && o.low === o.low && o.high === o.high) {return new V.Long(o.low, o.high, typeof p === \"undefined\" ? o.unsigned : p);}if (typeof o === \"string\") {return V.Long.fromString(o, p || false, 10);}if (typeof o === \"number\") {return V.Long.fromNumber(o, p || false);}throw Error(\"not convertible to Long\");}b.verifyValue = function (q) {var t = function (v, u) {throw Error(\"Illegal value for \" + this.toString(true) + \" of type \" + this.type.name + \": \" + v + \" (\" + u + \")\");}.bind(this);switch (this.type) {case V.TYPES.int32:case V.TYPES.sint32:case V.TYPES.sfixed32:if (typeof q !== \"number\" || q === q && q % 1 !== 0) {t(typeof q, \"not an integer\");}return q > 4294967295 ? q | 0 : q;case V.TYPES.uint32:case V.TYPES.fixed32:if (typeof q !== \"number\" || q === q && q % 1 !== 0) {t(typeof q, \"not an integer\");}return q < 0 ? q >>> 0 : q;case V.TYPES.int64:case V.TYPES.sint64:case V.TYPES.sfixed64:if (V.Long) {try {return W(q, false);} catch (o) {t(typeof q, o.message);}} else {t(typeof q, \"requires Long.js\");}case V.TYPES.uint64:case V.TYPES.fixed64:if (V.Long) {try {return W(q, true);} catch (o) {t(typeof q, o.message);}} else {t(typeof q, \"requires Long.js\");}case V.TYPES.bool:if (typeof q !== \"boolean\") {t(typeof q, \"not a boolean\");}return q;case V.TYPES[\"float\"]:case V.TYPES[\"double\"]:if (typeof q !== \"number\") {t(typeof q, \"not a number\");}return q;case V.TYPES.string:if (typeof q !== \"string\" && !(q && q instanceof String)) {t(typeof q, \"not a string\");}return \"\" + q;case V.TYPES.bytes:if (j.isByteBuffer(q)) {return q;}return j.wrap(q);case V.TYPES[\"enum\"]:var s = this.resolvedType.getChildren(V.Reflect.Enum.Value);for (r = 0; r < s.length; r++) {if (s[r].name == q) {return s[r].id;} else {if (s[r].id == q) {return s[r].id;}}}if (this.syntax === \"proto3\") {if (typeof q !== \"number\" || q === q && q % 1 !== 0) {t(typeof q, \"not an integer\");}if (q > 4294967295 || q < 0) {t(typeof q, \"not in range for uint32\");}return q;} else {t(q, \"not a valid enum value\");}case V.TYPES.group:case V.TYPES.message:if (!q || typeof q !== \"object\") {t(typeof q, \"object expected\");}if (q instanceof this.resolvedType.clazz) {return q;}if (q instanceof V.Builder.Message) {var p = {};for (var r in q) {if (q.hasOwnProperty(r)) {p[r] = q[r];}}q = p;}return new this.resolvedType.clazz(q);}throw Error(\"[INTERNAL] Illegal value for \" + this.toString(true) + \": \" + q + \" (undefined type \" + this.type + \")\");};b.calculateLength = function (o, q) {if (q === null) {return 0;}var p;switch (this.type) {case V.TYPES.int32:return q < 0 ? n.calculateVarint64(q) : n.calculateVarint32(q);case V.TYPES.uint32:return n.calculateVarint32(q);case V.TYPES.sint32:return n.calculateVarint32(n.zigZagEncode32(q));case V.TYPES.fixed32:case V.TYPES.sfixed32:case V.TYPES[\"float\"]:return 4;case V.TYPES.int64:case V.TYPES.uint64:return n.calculateVarint64(q);case V.TYPES.sint64:return n.calculateVarint64(n.zigZagEncode64(q));case V.TYPES.fixed64:case V.TYPES.sfixed64:return 8;case V.TYPES.bool:return 1;case V.TYPES[\"enum\"]:return n.calculateVarint32(q);case V.TYPES[\"double\"]:return 8;case V.TYPES.string:p = n.calculateUTF8Bytes(q);return n.calculateVarint32(p) + p;case V.TYPES.bytes:if (q.remaining() < 0) {throw Error(\"Illegal value for \" + this.toString(true) + \": \" + q.remaining() + \" bytes remaining\");}return n.calculateVarint32(q.remaining()) + q.remaining();case V.TYPES.message:p = this.resolvedType.calculate(q);return n.calculateVarint32(p) + p;case V.TYPES.group:p = this.resolvedType.calculate(q);return p + n.calculateVarint32(o << 3 | V.WIRE_TYPES.ENDGROUP);}throw Error(\"[INTERNAL] Illegal value to encode in \" + this.toString(true) + \": \" + q + \" (unknown type)\");};b.encodeValue = function (o, r, s) {if (r === null) {return s;}switch (this.type) {case V.TYPES.int32:if (r < 0) {s.writeVarint64(r);} else {s.writeVarint32(r);}break;case V.TYPES.uint32:s.writeVarint32(r);break;case V.TYPES.sint32:s.writeVarint32ZigZag(r);break;case V.TYPES.fixed32:s.writeUint32(r);break;case V.TYPES.sfixed32:s.writeInt32(r);break;case V.TYPES.int64:case V.TYPES.uint64:s.writeVarint64(r);break;case V.TYPES.sint64:s.writeVarint64ZigZag(r);break;case V.TYPES.fixed64:s.writeUint64(r);break;case V.TYPES.sfixed64:s.writeInt64(r);break;case V.TYPES.bool:if (typeof r === \"string\") {s.writeVarint32(r.toLowerCase() === \"false\" ? 0 : !!r);} else {s.writeVarint32(r ? 1 : 0);}break;case V.TYPES[\"enum\"]:s.writeVarint32(r);break;case V.TYPES[\"float\"]:s.writeFloat32(r);break;case V.TYPES[\"double\"]:s.writeFloat64(r);break;case V.TYPES.string:s.writeVString(r);break;case V.TYPES.bytes:if (r.remaining() < 0) {throw Error(\"Illegal value for \" + this.toString(true) + \": \" + r.remaining() + \" bytes remaining\");}var q = r.offset;s.writeVarint32(r.remaining());s.append(r);r.offset = q;break;case V.TYPES.message:var p = new n().LE();this.resolvedType.encode(r, p);s.writeVarint32(p.offset);s.append(p.flip());break;case V.TYPES.group:this.resolvedType.encode(r, s);s.writeVarint32(o << 3 | V.WIRE_TYPES.ENDGROUP);break;default:throw Error(\"[INTERNAL] Illegal value to encode in \" + this.toString(true) + \": \" + r + \" (unknown type)\");}return s;};b.decode = function (r, s, o) {if (s != this.type.wireType) {throw Error(\"Unexpected wire type for element\");}var q, p;switch (this.type) {case V.TYPES.int32:return r.readVarint32() | 0;case V.TYPES.uint32:return r.readVarint32() >>> 0;case V.TYPES.sint32:return r.readVarint32ZigZag() | 0;case V.TYPES.fixed32:return r.readUint32() >>> 0;case V.TYPES.sfixed32:return r.readInt32() | 0;case V.TYPES.int64:return r.readVarint64();case V.TYPES.uint64:return r.readVarint64().toUnsigned();case V.TYPES.sint64:return r.readVarint64ZigZag();case V.TYPES.fixed64:return r.readUint64();case V.TYPES.sfixed64:return r.readInt64();case V.TYPES.bool:return !!r.readVarint32();case V.TYPES[\"enum\"]:return r.readVarint32();case V.TYPES[\"float\"]:return r.readFloat();case V.TYPES[\"double\"]:return r.readDouble();case V.TYPES.string:return r.readVString();case V.TYPES.bytes:p = r.readVarint32();if (r.remaining() < p) {throw Error(\"Illegal number of bytes for \" + this.toString(true) + \": \" + p + \" required but got only \" + r.remaining());}q = r.clone();q.limit = q.offset + p;r.offset += p;return q;case V.TYPES.message:p = r.readVarint32();return this.resolvedType.decode(r, p);case V.TYPES.group:return this.resolvedType.decode(r, -1, o);}throw Error(\"[INTERNAL] Illegal decode type\");};b.valueFromString = function (o) {if (!this.isMapKey) {throw Error(\"valueFromString() called on non-map-key element\");}switch (this.type) {case V.TYPES.int32:case V.TYPES.sint32:case V.TYPES.sfixed32:case V.TYPES.uint32:case V.TYPES.fixed32:return this.verifyValue(parseInt(o));case V.TYPES.int64:case V.TYPES.sint64:case V.TYPES.sfixed64:case V.TYPES.uint64:case V.TYPES.fixed64:return this.verifyValue(o);case V.TYPES.bool:return o === \"true\";case V.TYPES.string:return this.verifyValue(o);case V.TYPES.bytes:return n.fromBinary(o);}};b.valueToString = function (o) {if (!this.isMapKey) {throw Error(\"valueToString() called on non-map-key element\");}if (this.type === V.TYPES.bytes) {return o.toString(\"binary\");} else {return o.toString();}};aa.Element = J;var ad = function ad(s, p, q, r, o, t) {P.call(this, s, p, q, r, t);this.className = \"Message\";this.extensions = undefined;this.clazz = null;this.isGroup = !!o;this._fields = null;this._fieldsById = null;this._fieldsByName = null;};var L = ad.prototype = Object.create(P.prototype);L.build = function (s) {if (this.clazz && !s) {return this.clazz;}var q = function (y, E) {var A = E.getChildren(y.Reflect.Message.Field),v = E.getChildren(y.Reflect.Message.OneOf);var x = function x(ak, ag) {y.Builder.Message.call(this);for (var aj = 0, af = v.length; aj < af; ++aj) {this[v[aj].name] = null;}for (aj = 0, af = A.length; aj < af; ++aj) {var ah = A[aj];this[ah.name] = ah.repeated ? [] : ah.map ? new y.Map(ah) : null;if ((ah.required || E.syntax === \"proto3\") && ah.defaultValue !== null) {this[ah.name] = ah.defaultValue;}}if (arguments.length > 0) {var ai;if (arguments.length === 1 && ak !== null && typeof ak === \"object\" && (typeof ak.encode !== \"function\" || ak instanceof x) && !Array.isArray(ak) && !(ak instanceof y.Map) && !n.isByteBuffer(ak) && !(ak instanceof ArrayBuffer) && !(y.Long && ak instanceof y.Long)) {this.$set(ak);} else {for (aj = 0, af = arguments.length; aj < af; ++aj) {if (typeof (ai = arguments[aj]) !== \"undefined\") {this.$set(A[aj].name, ai);}}}}};var B = x.prototype = Object.create(y.Builder.Message.prototype);B.add = function (af, ai, ah) {var ag = E._fieldsByName[af];if (!ah) {if (!ag) {throw Error(this + \"#\" + af + \" is undefined\");}if (!(ag instanceof y.Reflect.Message.Field)) {throw Error(this + \"#\" + af + \" is not a field: \" + ag.toString(true));}if (!ag.repeated) {throw Error(this + \"#\" + af + \" is not a repeated field\");}ai = ag.verifyValue(ai, true);}if (this[af] === null) {this[af] = [];}this[af].push(ai);return this;};B.$add = B.add;B.set = function (ag, ak, ah) {if (ag && typeof ag === \"object\") {ah = ak;for (var aj in ag) {if (ag.hasOwnProperty(aj) && typeof (ak = ag[aj]) !== \"undefined\") {this.$set(aj, ak, ah);}}return this;}var ai = E._fieldsByName[ag];if (!ah) {if (!ai) {throw Error(this + \"#\" + ag + \" is not a field: undefined\");}if (!(ai instanceof y.Reflect.Message.Field)) {throw Error(this + \"#\" + ag + \" is not a field: \" + ai.toString(true));}this[ai.name] = ak = ai.verifyValue(ak);} else {this[ag] = ak;}if (ai && ai.oneof) {var af = this[ai.oneof.name];if (ak !== null) {if (af !== null && af !== ai.name) {this[af] = null;}this[ai.oneof.name] = ai.name;} else {if (af === ag) {this[ai.oneof.name] = null;}}}return this;};B.$set = B.set;B.get = function (af, ag) {if (ag) {return this[af];}var ah = E._fieldsByName[af];if (!ah || !(ah instanceof y.Reflect.Message.Field)) {throw Error(this + \"#\" + af + \" is not a field: undefined\");}if (!(ah instanceof y.Reflect.Message.Field)) {throw Error(this + \"#\" + af + \" is not a field: \" + ah.toString(true));}return this[ah.name];};B.$get = B.get;for (var D = 0; D < A.length; D++) {var w = A[D];if (w instanceof y.Reflect.Message.ExtensionField) {continue;}if (E.builder.options.populateAccessors) {(function (ai) {var aj = ai.originalName.replace(/(_[a-zA-Z])/g, function (ak) {return ak.toUpperCase().replace(\"_\", \"\");});aj = aj.substring(0, 1).toUpperCase() + aj.substring(1);var ah = ai.originalName.replace(/([A-Z])/g, function (ak) {return \"_\" + ak;});var ag = function ag(al, ak) {this[ai.name] = ak ? al : ai.verifyValue(al);return this;};var af = function af() {return this[ai.name];};if (E.getChild(\"set\" + aj) === null) {B[\"set\" + aj] = ag;}if (E.getChild(\"set_\" + ah) === null) {B[\"set_\" + ah] = ag;}if (E.getChild(\"get\" + aj) === null) {B[\"get\" + aj] = af;}if (E.getChild(\"get_\" + ah) === null) {B[\"get_\" + ah] = af;}})(w);}}B.encode = function (aj, ai) {if (typeof aj === \"boolean\") {ai = aj, aj = undefined;}var af = false;if (!aj) {aj = new j(), af = true;}var ah = aj.littleEndian;try {E.encode(this, aj.LE(), ai);return (af ? aj.flip() : aj).LE(ah);} catch (ag) {aj.LE(ah);throw ag;}};x.encode = function (ag, af, ah) {return new x(ag).encode(af, ah);};B.calculate = function () {return E.calculate(this);};B.encodeDelimited = function (ah) {var af = false;if (!ah) {ah = new n(), af = true;}var ag = new n().LE();E.encode(this, ag).flip();ah.writeVarint32(ag.remaining());ah.append(ag);return af ? ah.flip() : ah;};B.encodeAB = function () {try {return this.encode().toArrayBuffer();} catch (af) {if (af.encoded) {af.encoded = af.encoded.toArrayBuffer();}throw af;}};B.toArrayBuffer = B.encodeAB;B.encodeNB = function () {try {return this.encode().toBuffer();} catch (af) {if (af.encoded) {af.encoded = af.encoded.toBuffer();}throw af;}};B.toBuffer = B.encodeNB;B.encode64 = function () {try {return this.encode().toBase64();} catch (af) {if (af.encoded) {af.encoded = af.encoded.toBase64();}throw af;}};B.toBase64 = B.encode64;B.encodeHex = function () {try {return this.encode().toHex();} catch (af) {if (af.encoded) {af.encoded = af.encoded.toHex();}throw af;}};B.toHex = B.encodeHex;function u(aj, aq, at, am) {if (aj === null || typeof aj !== \"object\") {if (am && am instanceof y.Reflect.Enum) {var al = y.Reflect.Enum.getName(am.object, aj);if (al !== null) {return al;}}return aj;}if (n.isByteBuffer(aj)) {return aq ? aj.toBase64() : aj.toBuffer();}if (y.Long.isLong(aj)) {return at ? aj.toString() : y.Long.fromValue(aj);}var ao;if (Array.isArray(aj)) {ao = [];aj.forEach(function (ag, af) {ao[af] = u(ag, aq, at, am);});return ao;}ao = {};if (aj instanceof y.Map) {var ai = aj.entries();for (var ar = ai.next(); !ar.done; ar = ai.next()) {ao[aj.keyElem.valueToString(ar.value[0])] = u(ar.value[1], aq, at, aj.valueElem.resolvedType);}return ao;}var ap = aj.$type,an = undefined;for (var ak in aj) {if (aj.hasOwnProperty(ak)) {if (ap && (an = ap.getChild(ak))) {ao[ak] = u(aj[ak], aq, at, an.resolvedType);} else {ao[ak] = u(aj[ak], aq, at);}}}return ao;}B.toRaw = function (af, ag) {return u(this, !!af, !!ag, this.$type);};B.encodeJSON = function () {return JSON.stringify(u(this, true, true, this.$type));};x.decode = function (af, aj) {if (typeof af === \"string\") {af = n.wrap(af, aj ? aj : \"base64\");}af = n.isByteBuffer(af) ? af : n.wrap(af);var ai = af.littleEndian;try {var ag = E.decode(af.LE());af.LE(ai);return ag;} catch (ah) {af.LE(ai);throw ah;}};x.decodeDelimited = function (ak, aj) {if (typeof ak === \"string\") {ak = n.wrap(ak, aj ? aj : \"base64\");}ak = n.isByteBuffer(ak) ? ak : n.wrap(ak);if (ak.remaining() < 1) {return null;}var ag = ak.offset,af = ak.readVarint32();if (ak.remaining() < af) {ak.offset = ag;return null;}try {var ah = E.decode(ak.slice(ak.offset, ak.offset + af).LE());ak.offset += af;return ah;} catch (ai) {ak.offset += af;throw ai;}};x.decode64 = function (af) {return x.decode(af, \"base64\");};x.decodeHex = function (af) {return x.decode(af, \"hex\");};x.decodeJSON = function (af) {return new x(JSON.parse(af));};B.toString = function () {return E.toString();};var ae;var C;var t;var z;if (Object.defineProperty) {Object.defineProperty(x, \"$options\", { value: E.buildOpt() }), Object.defineProperty(B, \"$options\", { value: x[\"$options\"] }), Object.defineProperty(x, \"$type\", { value: E }), Object.defineProperty(B, \"$type\", { value: E });}return x;}(V, this);this._fields = [];this._fieldsById = {};this._fieldsByName = {};for (var p = 0, r = this.children.length, o; p < r; p++) {o = this.children[p];if (o instanceof M || o instanceof ad || o instanceof Q) {if (q.hasOwnProperty(o.name)) {throw Error(\"Illegal reflect child of \" + this.toString(true) + \": \" + o.toString(true) + \" cannot override static property '\" + o.name + \"'\");}q[o.name] = o.build();} else {if (o instanceof ad.Field) {o.build(), this._fields.push(o), this._fieldsById[o.id] = o, this._fieldsByName[o.name] = o;} else {if (!(o instanceof ad.OneOf) && !(o instanceof T)) {throw Error(\"Illegal reflect child of \" + this.toString(true) + \": \" + this.children[p].toString(true));}}}}return this.clazz = q;};L.encode = function (o, s, r) {var w = null,p;for (var q = 0, t = this._fields.length, v; q < t; ++q) {p = this._fields[q];v = o[p.name];if (p.required && v === null) {if (w === null) {w = p;}} else {p.encode(r ? v : p.verifyValue(v), s, o);}}if (w !== null) {var u = Error(\"Missing at least one required field for \" + this.toString(true) + \": \" + w);u.encoded = s;throw u;}return s;};L.calculate = function (r) {for (var o = 0, s = 0, t = this._fields.length, q, p; s < t; ++s) {q = this._fields[s];p = r[q.name];if (q.required && p === null) {throw Error(\"Missing at least one required field for \" + this.toString(true) + \": \" + q);} else {o += q.calculate(p, r);}}return o;};function O(p, q) {var r = q.readVarint32(),s = r & 7,o = r >>> 3;switch (s) {case V.WIRE_TYPES.VARINT:do {r = q.readUint8();} while ((r & 128) === 128);break;case V.WIRE_TYPES.BITS64:q.offset += 8;break;case V.WIRE_TYPES.LDELIM:r = q.readVarint32();q.offset += r;break;case V.WIRE_TYPES.STARTGROUP:O(o, q);break;case V.WIRE_TYPES.ENDGROUP:if (o === p) {return false;} else {throw Error(\"Illegal GROUPEND after unknown group: \" + o + \" (\" + p + \" expected)\");}case V.WIRE_TYPES.BITS32:q.offset += 4;break;default:throw Error(\"Illegal wire type in unknown group \" + p + \": \" + s);}return true;}L.decode = function (w, A, u) {A = typeof A === \"number\" ? A : -1;var C = w.offset,z = new this.clazz(),o,p,B,r;while (w.offset < C + A || A === -1 && w.remaining() > 0) {o = w.readVarint32();p = o & 7;B = o >>> 3;if (p === V.WIRE_TYPES.ENDGROUP) {if (B !== u) {throw Error(\"Illegal group end indicator for \" + this.toString(true) + \": \" + B + \" (\" + (u ? u + \" expected\" : \"not a group\") + \")\");}break;}if (!(r = this._fieldsById[B])) {switch (p) {case V.WIRE_TYPES.VARINT:w.readVarint32();break;case V.WIRE_TYPES.BITS32:w.offset += 4;break;case V.WIRE_TYPES.BITS64:w.offset += 8;break;case V.WIRE_TYPES.LDELIM:var t = w.readVarint32();w.offset += t;break;case V.WIRE_TYPES.STARTGROUP:while (O(B, w)) {}break;default:throw Error(\"Illegal wire type for unknown field \" + B + \" in \" + this.toString(true) + \"#decode: \" + p);}continue;}if (r.repeated && !r.options.packed) {z[r.name].push(r.decode(p, w));} else {if (r.map) {var s = r.decode(p, w);z[r.name].set(s[0], s[1]);} else {z[r.name] = r.decode(p, w);if (r.oneof) {var q = z[r.oneof.name];if (q !== null && q !== r.name) {z[q] = null;}z[r.oneof.name] = r.name;}}}}for (var v = 0, x = this._fields.length; v < x; ++v) {r = this._fields[v];if (z[r.name] === null) {if (this.syntax === \"proto3\") {z[r.name] = r.defaultValue;} else {if (r.required) {var y = Error(\"Missing at least one required field for \" + this.toString(true) + \": \" + r.name);y.decoded = z;throw y;} else {if (V.populateDefaults && r.defaultValue !== null) {z[r.name] = r.defaultValue;}}}}}return z;};aa.Message = ad;var X = function X(t, p, q, v, r, x, w, o, s, u) {Z.call(this, t, p, x);this.className = \"Message.Field\";this.required = q === \"required\";this.repeated = q === \"repeated\";this.map = q === \"map\";this.keyType = v || null;this.type = r;this.resolvedType = null;this.id = w;this.options = o || {};this.defaultValue = null;this.oneof = s || null;this.syntax = u || \"proto2\";this.originalName = this.name;this.element = null;this.keyElement = null;if (this.builder.options.convertFieldsToCamelCase && !(this instanceof ad.ExtensionField)) {this.name = V.Util.toCamelCase(this.name);}};var N = X.prototype = Object.create(Z.prototype);N.build = function () {this.element = new J(this.type, this.resolvedType, false, this.syntax);if (this.map) {this.keyElement = new J(this.keyType, undefined, true, this.syntax);}if (this.syntax === \"proto3\" && !this.repeated && !this.map) {this.defaultValue = J.defaultFieldValue(this.type);} else {if (typeof this.options[\"default\"] !== \"undefined\") {this.defaultValue = this.verifyValue(this.options[\"default\"]);}}};N.verifyValue = function (o, r) {r = r || false;var s = function (t, u) {throw Error(\"Illegal value for \" + this.toString(true) + \" of type \" + this.type.name + \": \" + t + \" (\" + u + \")\");}.bind(this);if (o === null) {if (this.required) {s(typeof o, \"required\");}if (this.syntax === \"proto3\" && this.type !== V.TYPES.message) {s(typeof o, \"proto3 field without field presence cannot be null\");}return null;}var p;if (this.repeated && !r) {if (!Array.isArray(o)) {o = [o];}var q = [];for (p = 0; p < o.length; p++) {q.push(this.element.verifyValue(o[p]));}return q;}if (this.map && !r) {if (!(o instanceof V.Map)) {if (!(o instanceof Object)) {s(typeof o, \"expected ProtoBuf.Map or raw object for map field\");}return new V.Map(this, o);} else {return o;}}if (!this.repeated && Array.isArray(o)) {s(typeof o, \"no array expected\");}return this.element.verifyValue(o);};N.hasWirePresence = function (o, p) {if (this.syntax !== \"proto3\") {return o !== null;}if (this.oneof && p[this.oneof.name] === this.name) {return true;}switch (this.type) {case V.TYPES.int32:case V.TYPES.sint32:case V.TYPES.sfixed32:case V.TYPES.uint32:case V.TYPES.fixed32:return o !== 0;case V.TYPES.int64:case V.TYPES.sint64:case V.TYPES.sfixed64:case V.TYPES.uint64:case V.TYPES.fixed64:return o.low !== 0 || o.high !== 0;case V.TYPES.bool:return o;case V.TYPES[\"float\"]:case V.TYPES[\"double\"]:return o !== 0;case V.TYPES.string:return o.length > 0;case V.TYPES.bytes:return o.remaining() > 0;case V.TYPES[\"enum\"]:return o !== 0;case V.TYPES.message:return o !== null;default:return true;}};N.encode = function (p, t, o) {if (this.type === null || typeof this.type !== \"object\") {throw Error(\"[INTERNAL] Unresolved type in \" + this.toString(true) + \": \" + this.type);}if (p === null || this.repeated && p.length == 0) {return t;}try {if (this.repeated) {var s;if (this.options.packed && V.PACKABLE_WIRE_TYPES.indexOf(this.type.wireType) >= 0) {t.writeVarint32(this.id << 3 | V.WIRE_TYPES.LDELIM);t.ensureCapacity(t.offset += 1);var w = t.offset;for (s = 0; s < p.length; s++) {this.element.encodeValue(this.id, p[s], t);}var r = t.offset - w,u = n.calculateVarint32(r);if (u > 1) {var v = t.slice(w, t.offset);w += u - 1;t.offset = w;t.append(v);}t.writeVarint32(r, w - u);} else {for (s = 0; s < p.length; s++) {t.writeVarint32(this.id << 3 | this.type.wireType), this.element.encodeValue(this.id, p[s], t);}}} else {if (this.map) {p.forEach(function (x, z, A) {var y = n.calculateVarint32(1 << 3 | this.keyType.wireType) + this.keyElement.calculateLength(1, z) + n.calculateVarint32(2 << 3 | this.type.wireType) + this.element.calculateLength(2, x);t.writeVarint32(this.id << 3 | V.WIRE_TYPES.LDELIM);t.writeVarint32(y);t.writeVarint32(1 << 3 | this.keyType.wireType);this.keyElement.encodeValue(1, z, t);t.writeVarint32(2 << 3 | this.type.wireType);this.element.encodeValue(2, x, t);}, this);} else {if (this.hasWirePresence(p, o)) {t.writeVarint32(this.id << 3 | this.type.wireType);this.element.encodeValue(this.id, p, t);}}}} catch (q) {throw Error(\"Illegal value for \" + this.toString(true) + \": \" + p + \" (\" + q + \")\");}return t;};N.calculate = function (q, r) {q = this.verifyValue(q);if (this.type === null || typeof this.type !== \"object\") {throw Error(\"[INTERNAL] Unresolved type in \" + this.toString(true) + \": \" + this.type);}if (q === null || this.repeated && q.length == 0) {return 0;}var o = 0;try {if (this.repeated) {var s, t;if (this.options.packed && V.PACKABLE_WIRE_TYPES.indexOf(this.type.wireType) >= 0) {o += n.calculateVarint32(this.id << 3 | V.WIRE_TYPES.LDELIM);t = 0;for (s = 0; s < q.length; s++) {t += this.element.calculateLength(this.id, q[s]);}o += n.calculateVarint32(t);o += t;} else {for (s = 0; s < q.length; s++) {o += n.calculateVarint32(this.id << 3 | this.type.wireType), o += this.element.calculateLength(this.id, q[s]);}}} else {if (this.map) {q.forEach(function (v, x, u) {var w = n.calculateVarint32(1 << 3 | this.keyType.wireType) + this.keyElement.calculateLength(1, x) + n.calculateVarint32(2 << 3 | this.type.wireType) + this.element.calculateLength(2, v);o += n.calculateVarint32(this.id << 3 | V.WIRE_TYPES.LDELIM);o += n.calculateVarint32(w);o += w;}, this);} else {if (this.hasWirePresence(q, r)) {o += n.calculateVarint32(this.id << 3 | this.type.wireType);o += this.element.calculateLength(this.id, q);}}}} catch (p) {throw Error(\"Illegal value for \" + this.toString(true) + \": \" + q + \" (\" + p + \")\");}return o;};N.decode = function (s, x, v) {var t, w;var p = !this.map && s == this.type.wireType || !v && this.repeated && this.options.packed && s == V.WIRE_TYPES.LDELIM || this.map && s == V.WIRE_TYPES.LDELIM;if (!p) {throw Error(\"Illegal wire type for field \" + this.toString(true) + \": \" + s + \" (\" + this.type.wireType + \" expected)\");}if (s == V.WIRE_TYPES.LDELIM && this.repeated && this.options.packed && V.PACKABLE_WIRE_TYPES.indexOf(this.type.wireType) >= 0) {if (!v) {w = x.readVarint32();w = x.offset + w;var q = [];while (x.offset < w) {q.push(this.decode(this.type.wireType, x, true));}return q;}}if (this.map) {var r = J.defaultFieldValue(this.keyType);t = J.defaultFieldValue(this.type);w = x.readVarint32();if (x.remaining() < w) {throw Error(\"Illegal number of bytes for \" + this.toString(true) + \": \" + w + \" required but got only \" + x.remaining());}var u = x.clone();u.limit = u.offset + w;x.offset += w;while (u.remaining() > 0) {var o = u.readVarint32();s = o & 7;var y = o >>> 3;if (y === 1) {r = this.keyElement.decode(u, s, y);} else {if (y === 2) {t = this.element.decode(u, s, y);} else {throw Error(\"Unexpected tag in map field key/value submessage\");}}}return [r, t];}return this.element.decode(x, s, this.id);};aa.Message.Field = X;var I = function I(u, q, p, r, s, o, t) {X.call(this, u, q, p, null, r, s, o, t);this.extension;};I.prototype = Object.create(X.prototype);aa.Message.ExtensionField = I;var G = function G(q, o, p) {Z.call(this, q, o, p);this.fields = [];};aa.Message.OneOf = G;var M = function M(r, o, p, q, s) {P.call(this, r, o, p, q, s);this.className = \"Enum\";this.object = null;};M.getName = function (s, o) {var p = Object.keys(s);for (var q = 0, r; q < p.length; ++q) {if (s[r = p[q]] === o) {return r;}}return null;};var Y = M.prototype = Object.create(P.prototype);Y.build = function (s) {if (this.object && !s) {return this.object;}var p = new V.Builder.Enum(),q = this.getChildren(M.Value);for (var o = 0, r = q.length; o < r; ++o) {p[q[o][\"name\"]] = q[o][\"id\"];}if (Object.defineProperty) {Object.defineProperty(p, \"$options\", { value: this.buildOpt(), enumerable: false });}return this.object = p;};aa.Enum = M;var R = function R(r, p, q, o) {Z.call(this, r, p, q);this.className = \"Enum.Value\";this.id = o;};R.prototype = Object.create(Z.prototype);aa.Enum.Value = R;var T = function T(r, p, q, o) {Z.call(this, r, p, q);this.field = o;};T.prototype = Object.create(Z.prototype);aa.Extension = T;var Q = function Q(q, r, o, p) {P.call(this, q, r, o, p);this.className = \"Service\";this.clazz = null;};var S = Q.prototype = Object.create(P.prototype);S.build = function (o) {if (this.clazz && !o) {return this.clazz;}return this.clazz = function (r, w) {var x = function x(z) {r.Builder.Service.call(this);this.rpcImpl = z || function (C, B, A) {setTimeout(A.bind(this, Error(\"Not implemented, see: https://github.com/dcodeIO/ProtoBuf.js/wiki/Services\")), 0);};};var q = x.prototype = Object.create(r.Builder.Service.prototype);var t = w.getChildren(r.Reflect.Service.RPCMethod);for (var v = 0; v < t.length; v++) {(function (z) {q[z.name] = function (B, A) {try {try {B = z.resolvedRequestType.clazz.decode(n.wrap(B));} catch (C) {if (!(C instanceof TypeError)) {throw C;}}if (B === null || typeof B !== \"object\") {throw Error(\"Illegal arguments\");}if (!(B instanceof z.resolvedRequestType.clazz)) {B = new z.resolvedRequestType.clazz(B);}this.rpcImpl(z.fqn(), B, function (E, ae) {if (E) {A(E);return;}try {ae = z.resolvedResponseType.clazz.decode(ae);} catch (D) {}if (!ae || !(ae instanceof z.resolvedResponseType.clazz)) {A(Error(\"Illegal response type received in service method \" + w.name + \"#\" + z.name));return;}A(null, ae);});} catch (C) {setTimeout(A.bind(this, C), 0);}};x[z.name] = function (C, B, A) {new x(C)[z.name](B, A);};if (Object.defineProperty) {Object.defineProperty(x[z.name], \"$options\", { value: z.buildOpt() }), Object.defineProperty(q[z.name], \"$options\", { value: x[z.name][\"$options\"] });}})(t[v]);}var y;var u;var p;var s;if (Object.defineProperty) {Object.defineProperty(x, \"$options\", { value: w.buildOpt() }), Object.defineProperty(q, \"$options\", { value: x[\"$options\"] }), Object.defineProperty(x, \"$type\", { value: w }), Object.defineProperty(q, \"$type\", { value: w });}return x;}(V, this);};aa.Service = Q;var ac = function ac(r, o, p, q) {Z.call(this, r, o, p);this.className = \"Service.Method\";this.options = q || {};};var U = ac.prototype = Object.create(Z.prototype);U.buildOpt = H.buildOpt;aa.Service.Method = ac;var K = function K(s, v, p, o, t, q, u, r) {ac.call(this, s, v, p, r);this.className = \"Service.RPCMethod\";this.requestName = o;this.responseName = t;this.requestStream = q;this.responseStream = u;this.resolvedRequestType = null;this.resolvedResponseType = null;};K.prototype = Object.create(ac.prototype);aa.Service.RPCMethod = K;return aa;}(l);l.Builder = function (p, q, b) {var o = function o(t) {this.ns = new b.Namespace(this, null, \"\");this.ptr = this.ns;this.resolved = false;this.result = null;this.files = {};this.importRoot = null;this.options = t || {};};var s = o.prototype;o.isMessage = function (t) {if (typeof t.name !== \"string\") {return false;}if (typeof t.values !== \"undefined\" || typeof t.rpc !== \"undefined\") {return false;}return true;};o.isMessageField = function (t) {if (typeof t.rule !== \"string\" || typeof t.name !== \"string\" || typeof t.type !== \"string\" || typeof t.id === \"undefined\") {return false;}return true;};o.isEnum = function (t) {if (typeof t.name !== \"string\") {return false;}if (typeof t.values === \"undefined\" || !Array.isArray(t.values) || t.values.length === 0) {return false;}return true;};o.isService = function (t) {if (typeof t.name !== \"string\" || typeof t.rpc !== \"object\" || !t.rpc) {return false;}return true;};o.isExtend = function (t) {if (typeof t.ref !== \"string\") {return false;}return true;};s.reset = function () {this.ptr = this.ns;return this;};s.define = function (t) {if (typeof t !== \"string\" || !q.TYPEREF.test(t)) {throw Error(\"illegal namespace: \" + t);}t.split(\".\").forEach(function (u) {var v = this.ptr.getChild(u);if (v === null) {this.ptr.addChild(v = new b.Namespace(this, this.ptr, u));}this.ptr = v;}, this);return this;};s.create = function (t) {if (!t) {return this;}if (!Array.isArray(t)) {t = [t];} else {if (t.length === 0) {return this;}t = t.slice();}var u = [t];while (u.length > 0) {t = u.pop();if (!Array.isArray(t)) {throw Error(\"not a valid namespace: \" + JSON.stringify(t));}while (t.length > 0) {var w = t.shift();if (o.isMessage(w)) {var v = new b.Message(this, this.ptr, w.name, w.options, w.isGroup, w.syntax);var x = {};if (w.oneofs) {Object.keys(w.oneofs).forEach(function (z) {v.addChild(x[z] = new b.Message.OneOf(this, v, z));}, this);}if (w.fields) {w.fields.forEach(function (A) {if (v.getChild(A.id | 0) !== null) {throw Error(\"duplicate or invalid field id in \" + v.name + \": \" + A.id);}if (A.options && typeof A.options !== \"object\") {throw Error(\"illegal field options in \" + v.name + \"#\" + A.name);}var z = null;if (typeof A.oneof === \"string\" && !(z = x[A.oneof])) {throw Error(\"illegal oneof in \" + v.name + \"#\" + A.name + \": \" + A.oneof);}A = new b.Message.Field(this, v, A.rule, A.keytype, A.type, A.name, A.id, A.options, z, w.syntax);if (z) {z.fields.push(A);}v.addChild(A);}, this);}var y = [];if (w.enums) {w.enums.forEach(function (z) {y.push(z);});}if (w.messages) {w.messages.forEach(function (z) {y.push(z);});}if (w.services) {w.services.forEach(function (z) {y.push(z);});}if (w.extensions) {if (typeof w.extensions[0] === \"number\") {v.extensions = [w.extensions];} else {v.extensions = w.extensions;}}this.ptr.addChild(v);if (y.length > 0) {u.push(t);t = y;y = null;this.ptr = v;v = null;continue;}y = null;} else {if (o.isEnum(w)) {v = new b.Enum(this, this.ptr, w.name, w.options, w.syntax);w.values.forEach(function (z) {v.addChild(new b.Enum.Value(this, v, z.name, z.id));}, this);this.ptr.addChild(v);} else {if (o.isService(w)) {v = new b.Service(this, this.ptr, w.name, w.options);Object.keys(w.rpc).forEach(function (z) {var A = w.rpc[z];v.addChild(new b.Service.RPCMethod(this, v, z, A.request, A.response, !!A.request_stream, !!A.response_stream, A.options));}, this);this.ptr.addChild(v);} else {if (o.isExtend(w)) {v = this.ptr.resolve(w.ref, true);if (v) {w.fields.forEach(function (C) {if (v.getChild(C.id | 0) !== null) {throw Error(\"duplicate extended field id in \" + v.name + \": \" + C.id);}if (v.extensions) {var A = false;v.extensions.forEach(function (E) {if (C.id >= E[0] && C.id <= E[1]) {A = true;}});if (!A) {throw Error(\"illegal extended field id in \" + v.name + \": \" + C.id + \" (not within valid ranges)\");}}var D = C.name;if (this.options.convertFieldsToCamelCase) {D = p.Util.toCamelCase(D);}var z = new b.Message.ExtensionField(this, v, C.rule, C.type, this.ptr.fqn() + \".\" + D, C.id, C.options);var B = new b.Extension(this, this.ptr, C.name, z);z.extension = B;this.ptr.addChild(B);v.addChild(z);}, this);} else {if (!/\\.?google\\.protobuf\\./.test(w.ref)) {throw Error(\"extended message \" + w.ref + \" is not defined\");}}} else {throw Error(\"not a valid definition: \" + JSON.stringify(w));}}}}w = null;v = null;}t = null;this.ptr = this.ptr.parent;}this.resolved = false;this.result = null;return this;};function r(t) {if (t.messages) {t.messages.forEach(function (u) {u.syntax = t.syntax;r(u);});}if (t.enums) {t.enums.forEach(function (u) {u.syntax = t.syntax;});}}s[\"import\"] = function (D, C) {var A = \"/\";if (typeof C === \"string\") {if (p.Util.IS_NODE) {}if (this.files[C] === true) {return this.reset();}this.files[C] = true;} else {if (typeof C === \"object\") {var F = C.root;if (p.Util.IS_NODE) {}if (F.indexOf(\"\\\\\") >= 0 || C.file.indexOf(\"\\\\\") >= 0) {A = \"\\\\\";}var z = F + A + C.file;if (this.files[z] === true) {return this.reset();}this.files[z] = true;}}if (D.imports && D.imports.length > 0) {var x,G = false;if (typeof C === \"object\") {this.importRoot = C.root;G = true;x = this.importRoot;C = C.file;if (x.indexOf(\"\\\\\") >= 0 || C.indexOf(\"\\\\\") >= 0) {A = \"\\\\\";}} else {if (typeof C === \"string\") {if (this.importRoot) {x = this.importRoot;} else {if (C.indexOf(\"/\") >= 0) {x = C.replace(/\\/[^\\/]*$/, \"\");if (x === \"\") {x = \"/\";}} else {if (C.indexOf(\"\\\\\") >= 0) {x = C.replace(/\\\\[^\\\\]*$/, \"\");A = \"\\\\\";} else {x = \".\";}}}} else {x = null;}}for (var w = 0; w < D.imports.length; w++) {if (typeof D.imports[w] === \"string\") {if (!x) {throw Error(\"cannot determine import root\");}var E = D.imports[w];if (E === \"google/protobuf/descriptor.proto\") {continue;}E = x + A + E;if (this.files[E] === true) {continue;}if (/\\.proto$/i.test(E) && !p.DotProto) {E = E.replace(/\\.proto$/, \".json\");}var y = p.Util.fetch(E);if (y === null) {throw Error(\"failed to import '\" + E + \"' in '\" + C + \"': file not found\");}if (/\\.json$/i.test(E)) {this[\"import\"](JSON.parse(y + \"\"), E);} else {this[\"import\"](p.DotProto.Parser.parse(y), E);}} else {if (!C) {this[\"import\"](D.imports[w]);} else {if (/\\.(\\w+)$/.test(C)) {this[\"import\"](D.imports[w], C.replace(/^(.+)\\.(\\w+)$/, function (t, u, v) {return u + \"_import\" + w + \".\" + v;}));} else {this[\"import\"](D.imports[w], C + \"_import\" + w);}}}}if (G) {this.importRoot = null;}}if (D[\"package\"]) {this.define(D[\"package\"]);}if (D.syntax) {r(D);}var B = this.ptr;if (D.options) {Object.keys(D.options).forEach(function (t) {B.options[t] = D.options[t];});}if (D.messages) {this.create(D.messages), this.ptr = B;}if (D.enums) {this.create(D.enums), this.ptr = B;}if (D.services) {this.create(D.services), this.ptr = B;}if (D[\"extends\"]) {this.create(D[\"extends\"]);}return this.reset();};s.resolveAll = function () {var t;if (this.ptr == null || typeof this.ptr.type === \"object\") {return this;}if (this.ptr instanceof b.Namespace) {this.ptr.children.forEach(function (u) {this.ptr = u;this.resolveAll();}, this);} else {if (this.ptr instanceof b.Message.Field) {if (!q.TYPE.test(this.ptr.type)) {if (!q.TYPEREF.test(this.ptr.type)) {throw Error(\"illegal type reference in \" + this.ptr.toString(true) + \": \" + this.ptr.type);}t = (this.ptr instanceof b.Message.ExtensionField ? this.ptr.extension.parent : this.ptr.parent).resolve(this.ptr.type, true);if (!t) {throw Error(\"unresolvable type reference in \" + this.ptr.toString(true) + \": \" + this.ptr.type);}this.ptr.resolvedType = t;if (t instanceof b.Enum) {this.ptr.type = p.TYPES[\"enum\"];if (this.ptr.syntax === \"proto3\" && t.syntax !== \"proto3\") {throw Error(\"proto3 message cannot reference proto2 enum\");}} else {if (t instanceof b.Message) {this.ptr.type = t.isGroup ? p.TYPES.group : p.TYPES.message;} else {throw Error(\"illegal type reference in \" + this.ptr.toString(true) + \": \" + this.ptr.type);}}} else {this.ptr.type = p.TYPES[this.ptr.type];}if (this.ptr.map) {if (!q.TYPE.test(this.ptr.keyType)) {throw Error(\"illegal key type for map field in \" + this.ptr.toString(true) + \": \" + this.ptr.keyType);}this.ptr.keyType = p.TYPES[this.ptr.keyType];}} else {if (this.ptr instanceof p.Reflect.Service.Method) {if (this.ptr instanceof p.Reflect.Service.RPCMethod) {t = this.ptr.parent.resolve(this.ptr.requestName, true);if (!t || !(t instanceof p.Reflect.Message)) {throw Error(\"Illegal type reference in \" + this.ptr.toString(true) + \": \" + this.ptr.requestName);}this.ptr.resolvedRequestType = t;t = this.ptr.parent.resolve(this.ptr.responseName, true);if (!t || !(t instanceof p.Reflect.Message)) {throw Error(\"Illegal type reference in \" + this.ptr.toString(true) + \": \" + this.ptr.responseName);}this.ptr.resolvedResponseType = t;} else {throw Error(\"illegal service type in \" + this.ptr.toString(true));}} else {if (!(this.ptr instanceof p.Reflect.Message.OneOf) && !(this.ptr instanceof p.Reflect.Extension) && !(this.ptr instanceof p.Reflect.Enum.Value)) {throw Error(\"illegal object in namespace: \" + typeof this.ptr + \": \" + this.ptr);}}}}return this.reset();};s.build = function (w) {this.reset();if (!this.resolved) {this.resolveAll(), this.resolved = true, this.result = null;}if (this.result === null) {this.result = this.ns.build();}if (!w) {return this.result;}var u = typeof w === \"string\" ? w.split(\".\") : w,v = this.result;for (var t = 0; t < u.length; t++) {if (v[u[t]]) {v = v[u[t]];} else {v = null;break;}}return v;};s.lookup = function (t, u) {return t ? this.ns.resolve(t, u) : this.ns;};s.toString = function () {return \"Builder\";};o.Message = function () {};o.Enum = function () {};o.Service = function () {};return o;}(l, l.Lang, l.Reflect);l.Map = function (q, b) {var r = function r(w, x) {if (!w.map) {throw Error(\"field is not a map\");}this.field = w;this.keyElem = new b.Element(w.keyType, null, true, w.syntax);this.valueElem = new b.Element(w.type, w.resolvedType, false, w.syntax);this.map = {};Object.defineProperty(this, \"size\", { get: function get() {return Object.keys(this.map).length;} });if (x) {var s = Object.keys(x);for (var t = 0; t < s.length; t++) {var u = this.keyElem.valueFromString(s[t]);var v = this.valueElem.verifyValue(x[s[t]]);this.map[this.keyElem.valueToString(u)] = { key: u, value: v };}}};var p = r.prototype;function o(s) {var t = 0;return { next: function next() {if (t < s.length) {return { done: false, value: s[t++] };}return { done: true };} };}p.clear = function () {this.map = {};};p[\"delete\"] = function (t) {var s = this.keyElem.valueToString(this.keyElem.verifyValue(t));var u = s in this.map;delete this.map[s];return u;};p.entries = function () {var u = [];var v = Object.keys(this.map);for (var t = 0, s; t < v.length; t++) {u.push([(s = this.map[v[t]]).key, s.value]);}return o(u);};p.keys = function () {var t = [];var s = Object.keys(this.map);for (var u = 0; u < s.length; u++) {t.push(this.map[s[u]].key);}return o(t);};p.values = function () {var u = [];var s = Object.keys(this.map);for (var t = 0; t < s.length; t++) {u.push(this.map[s[t]].value);}return o(u);};p.forEach = function (u, t) {var v = Object.keys(this.map);for (var s = 0, w; s < v.length; s++) {u.call(t, (w = this.map[v[s]]).value, w.key, this);}};p.set = function (u, s) {var v = this.keyElem.verifyValue(u);var t = this.valueElem.verifyValue(s);this.map[this.keyElem.valueToString(v)] = { key: v, value: t };return this;};p.get = function (t) {var s = this.keyElem.valueToString(this.keyElem.verifyValue(t));if (!(s in this.map)) {return undefined;}return this.map[s].value;};p.has = function (t) {var s = this.keyElem.valueToString(this.keyElem.verifyValue(t));return s in this.map;};return r;}(l, l.Reflect);l.loadProto = function (b, o, p) {if (typeof o === \"string\" || o && typeof o.file === \"string\" && typeof o.root === \"string\") {p = o, o = undefined;}return l.loadJson(l.DotProto.Parser.parse(b), o, p);};l.protoFromString = l.loadProto;l.loadProtoFile = function (p, b, q) {if (b && typeof b === \"object\") {q = b, b = null;} else {if (!b || typeof b !== \"function\") {b = null;}}if (b) {return l.Util.fetch(typeof p === \"string\" ? p : p.root + \"/\" + p.file, function (s) {if (s === null) {b(Error(\"Failed to fetch file\"));return;}try {b(null, l.loadProto(s, q, p));} catch (r) {b(r);}});}var o = l.Util.fetch(typeof p === \"object\" ? p.root + \"/\" + p.file : p);return o === null ? null : l.loadProto(o, q, p);};l.protoFromFile = l.loadProtoFile;l.newBuilder = function (b) {b = b || {};if (typeof b.convertFieldsToCamelCase === \"undefined\") {b.convertFieldsToCamelCase = l.convertFieldsToCamelCase;}if (typeof b.populateAccessors === \"undefined\") {b.populateAccessors = l.populateAccessors;}return new l.Builder(b);};l.loadJson = function (b, o, p) {if (typeof o === \"string\" || o && typeof o.file === \"string\" && typeof o.root === \"string\") {p = o, o = null;}if (!o || typeof o !== \"object\") {o = l.newBuilder();}if (typeof b === \"string\") {b = JSON.parse(b);}o[\"import\"](b, p);o.resolveAll();return o;};l.loadJsonFile = function (p, b, q) {if (b && typeof b === \"object\") {q = b, b = null;} else {if (!b || typeof b !== \"function\") {b = null;}}if (b) {return l.Util.fetch(typeof p === \"string\" ? p : p.root + \"/\" + p.file, function (s) {if (s === null) {b(Error(\"Failed to fetch file\"));return;}try {b(null, l.loadJson(JSON.parse(s), q, p));} catch (r) {b(r);}});}var o = l.Util.fetch(typeof p === \"object\" ? p.root + \"/\" + p.file : p);return o === null ? null : l.loadJson(JSON.parse(o), q, p);};var m = function m(b) {var s,u,v,w,r,p,t,q = new Array(-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 62, -1, -1, -1, 63, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, -1, -1, -1, -1, -1, -1, -1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, -1, -1, -1, -1, -1, -1, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, -1, -1, -1, -1, -1);p = b.length;r = 0;t = \"\";while (r < p) {do {s = q[b.charCodeAt(r++) & 255];} while (r < p && s == -1);if (s == -1) {break;}do {u = q[b.charCodeAt(r++) & 255];} while (r < p && u == -1);if (u == -1) {break;}t += String.fromCharCode(s << 2 | (u & 48) >> 4);do {v = b.charCodeAt(r++) & 255;if (v == 61) {return t;}v = q[v];} while (r < p && v == -1);if (v == -1) {break;}t += String.fromCharCode((u & 15) << 4 | (v & 60) >> 2);do {w = b.charCodeAt(r++) & 255;if (w == 61) {return t;}w = q[w];} while (r < p && w == -1);if (w == -1) {break;}t += String.fromCharCode((v & 3) << 6 | w);}return t;};var h = m(\"\");var i = l.loadProto(h, undefined, \"\").build(\"Modules\").probuf;return i;}(c, d, a);return e;});\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/node-libs-browser/mock/process.js */ 25)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///24\n");

/***/ }),

/***/ 25:
/*!********************************************************!*\
  !*** ./node_modules/node-libs-browser/mock/process.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("exports.nextTick = function nextTick(fn) {\n\tsetTimeout(fn, 0);\n};\n\nexports.platform = exports.arch = \nexports.execPath = exports.title = 'browser';\nexports.pid = 1;\nexports.browser = true;\nexports.env = {};\nexports.argv = [];\n\nexports.binding = function (name) {\n\tthrow new Error('No such module. (Possibly not yet loaded)')\n};\n\n(function () {\n    var cwd = '/';\n    var path;\n    exports.cwd = function () { return cwd };\n    exports.chdir = function (dir) {\n        if (!path) path = __webpack_require__(/*! path */ 26);\n        cwd = path.resolve(dir, cwd);\n    };\n})();\n\nexports.exit = exports.kill = \nexports.umask = exports.dlopen = \nexports.uptime = exports.memoryUsage = \nexports.uvCounters = function() {};\nexports.features = {};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLCtCQUErQjtBQUMvQjtBQUNBLDBCQUEwQixtQkFBTyxDQUFDLGNBQU07QUFDeEM7QUFDQTtBQUNBLENBQUM7O0FBRUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiIyNS5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydHMubmV4dFRpY2sgPSBmdW5jdGlvbiBuZXh0VGljayhmbikge1xuXHRzZXRUaW1lb3V0KGZuLCAwKTtcbn07XG5cbmV4cG9ydHMucGxhdGZvcm0gPSBleHBvcnRzLmFyY2ggPSBcbmV4cG9ydHMuZXhlY1BhdGggPSBleHBvcnRzLnRpdGxlID0gJ2Jyb3dzZXInO1xuZXhwb3J0cy5waWQgPSAxO1xuZXhwb3J0cy5icm93c2VyID0gdHJ1ZTtcbmV4cG9ydHMuZW52ID0ge307XG5leHBvcnRzLmFyZ3YgPSBbXTtcblxuZXhwb3J0cy5iaW5kaW5nID0gZnVuY3Rpb24gKG5hbWUpIHtcblx0dGhyb3cgbmV3IEVycm9yKCdObyBzdWNoIG1vZHVsZS4gKFBvc3NpYmx5IG5vdCB5ZXQgbG9hZGVkKScpXG59O1xuXG4oZnVuY3Rpb24gKCkge1xuICAgIHZhciBjd2QgPSAnLyc7XG4gICAgdmFyIHBhdGg7XG4gICAgZXhwb3J0cy5jd2QgPSBmdW5jdGlvbiAoKSB7IHJldHVybiBjd2QgfTtcbiAgICBleHBvcnRzLmNoZGlyID0gZnVuY3Rpb24gKGRpcikge1xuICAgICAgICBpZiAoIXBhdGgpIHBhdGggPSByZXF1aXJlKCdwYXRoJyk7XG4gICAgICAgIGN3ZCA9IHBhdGgucmVzb2x2ZShkaXIsIGN3ZCk7XG4gICAgfTtcbn0pKCk7XG5cbmV4cG9ydHMuZXhpdCA9IGV4cG9ydHMua2lsbCA9IFxuZXhwb3J0cy51bWFzayA9IGV4cG9ydHMuZGxvcGVuID0gXG5leHBvcnRzLnVwdGltZSA9IGV4cG9ydHMubWVtb3J5VXNhZ2UgPSBcbmV4cG9ydHMudXZDb3VudGVycyA9IGZ1bmN0aW9uKCkge307XG5leHBvcnRzLmZlYXR1cmVzID0ge307XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///25\n");

/***/ }),

/***/ 26:
/*!***********************************************!*\
  !*** ./node_modules/path-browserify/index.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(process) {// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// Split a filename into [root, dir, basename, ext], unix version\n// 'root' is just a slash, or nothing.\nvar splitPathRe =\n    /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\nvar splitPath = function(filename) {\n  return splitPathRe.exec(filename).slice(1);\n};\n\n// path.resolve([from ...], to)\n// posix version\nexports.resolve = function() {\n  var resolvedPath = '',\n      resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = (i >= 0) ? arguments[i] : process.cwd();\n\n    // Skip empty and invalid entries\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n};\n\n// path.normalize(path)\n// posix version\nexports.normalize = function(path) {\n  var isAbsolute = exports.isAbsolute(path),\n      trailingSlash = substr(path, -1) === '/';\n\n  // Normalize the path\n  path = normalizeArray(filter(path.split('/'), function(p) {\n    return !!p;\n  }), !isAbsolute).join('/');\n\n  if (!path && !isAbsolute) {\n    path = '.';\n  }\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (isAbsolute ? '/' : '') + path;\n};\n\n// posix version\nexports.isAbsolute = function(path) {\n  return path.charAt(0) === '/';\n};\n\n// posix version\nexports.join = function() {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return exports.normalize(filter(paths, function(p, index) {\n    if (typeof p !== 'string') {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n    return p;\n  }).join('/'));\n};\n\n\n// path.relative(from, to)\n// posix version\nexports.relative = function(from, to) {\n  from = exports.resolve(from).substr(1);\n  to = exports.resolve(to).substr(1);\n\n  function trim(arr) {\n    var start = 0;\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') break;\n    }\n\n    var end = arr.length - 1;\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') break;\n    }\n\n    if (start > end) return [];\n    return arr.slice(start, end - start + 1);\n  }\n\n  var fromParts = trim(from.split('/'));\n  var toParts = trim(to.split('/'));\n\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n  for (var i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  var outputParts = [];\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n};\n\nexports.sep = '/';\nexports.delimiter = ':';\n\nexports.dirname = function(path) {\n  var result = splitPath(path),\n      root = result[0],\n      dir = result[1];\n\n  if (!root && !dir) {\n    // No dirname whatsoever\n    return '.';\n  }\n\n  if (dir) {\n    // It has a dirname, strip trailing slash\n    dir = dir.substr(0, dir.length - 1);\n  }\n\n  return root + dir;\n};\n\n\nexports.basename = function(path, ext) {\n  var f = splitPath(path)[2];\n  // TODO: make this comparison case-insensitive on windows?\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n  return f;\n};\n\n\nexports.extname = function(path) {\n  return splitPath(path)[3];\n};\n\nfunction filter (xs, f) {\n    if (xs.filter) return xs.filter(f);\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        if (f(xs[i], i, xs)) res.push(xs[i]);\n    }\n    return res;\n}\n\n// String.prototype.substr - negative index don't work in IE8\nvar substr = 'ab'.substr(-1) === 'b'\n    ? function (str, start, len) { return str.substr(start, len) }\n    : function (str, start, len) {\n        if (start < 0) start = str.length + start;\n        return str.substr(start, len);\n    }\n;\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../node-libs-browser/mock/process.js */ 25)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///26\n");

/***/ }),

/***/ 265:
/*!*******************************************************!*\
  !*** D:/kxsx_app/components/uni-calendar/calendar.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("Object.defineProperty(exports, \"__esModule\", { value: true });exports.default = void 0; /**\r\n                                                                                                     * @1900-2100区间内的公历、农历互转\r\n                                                                                                     * @charset UTF-8\r\n                                                                                                     * @github  https://github.com/jjonline/calendar.js\r\n                                                                                                     * @Author  Jea杨(JJonline@JJonline.Cn)\r\n                                                                                                     * @Time    2014-7-21\r\n                                                                                                     * @Time    2016-8-13 Fixed 2033hex、Attribution Annals\r\n                                                                                                     * @Time    2016-9-25 Fixed lunar LeapMonth Param Bug\r\n                                                                                                     * @Time    2017-7-24 Fixed use getTerm Func Param Error.use solar year,NOT lunar year\r\n                                                                                                     * @Version 1.0.3\r\n                                                                                                     * @公历转农历：calendar.solar2lunar(1987,11,01); //[you can ignore params of prefix 0]\r\n                                                                                                     * @农历转公历：calendar.lunar2solar(1987,09,10); //[you can ignore params of prefix 0]\r\n                                                                                                     */\n/* eslint-disable */\nvar calendar = {\n\n  /**\r\n                     * 农历1900-2100的润大小信息表\r\n                     * @Array Of Property\r\n                     * @return Hex\r\n                     */\n  lunarInfo: [0x04bd8, 0x04ae0, 0x0a570, 0x054d5, 0x0d260, 0x0d950, 0x16554, 0x056a0, 0x09ad0, 0x055d2, // 1900-1909\n  0x04ae0, 0x0a5b6, 0x0a4d0, 0x0d250, 0x1d255, 0x0b540, 0x0d6a0, 0x0ada2, 0x095b0, 0x14977, // 1910-1919\n  0x04970, 0x0a4b0, 0x0b4b5, 0x06a50, 0x06d40, 0x1ab54, 0x02b60, 0x09570, 0x052f2, 0x04970, // 1920-1929\n  0x06566, 0x0d4a0, 0x0ea50, 0x06e95, 0x05ad0, 0x02b60, 0x186e3, 0x092e0, 0x1c8d7, 0x0c950, // 1930-1939\n  0x0d4a0, 0x1d8a6, 0x0b550, 0x056a0, 0x1a5b4, 0x025d0, 0x092d0, 0x0d2b2, 0x0a950, 0x0b557, // 1940-1949\n  0x06ca0, 0x0b550, 0x15355, 0x04da0, 0x0a5b0, 0x14573, 0x052b0, 0x0a9a8, 0x0e950, 0x06aa0, // 1950-1959\n  0x0aea6, 0x0ab50, 0x04b60, 0x0aae4, 0x0a570, 0x05260, 0x0f263, 0x0d950, 0x05b57, 0x056a0, // 1960-1969\n  0x096d0, 0x04dd5, 0x04ad0, 0x0a4d0, 0x0d4d4, 0x0d250, 0x0d558, 0x0b540, 0x0b6a0, 0x195a6, // 1970-1979\n  0x095b0, 0x049b0, 0x0a974, 0x0a4b0, 0x0b27a, 0x06a50, 0x06d40, 0x0af46, 0x0ab60, 0x09570, // 1980-1989\n  0x04af5, 0x04970, 0x064b0, 0x074a3, 0x0ea50, 0x06b58, 0x05ac0, 0x0ab60, 0x096d5, 0x092e0, // 1990-1999\n  0x0c960, 0x0d954, 0x0d4a0, 0x0da50, 0x07552, 0x056a0, 0x0abb7, 0x025d0, 0x092d0, 0x0cab5, // 2000-2009\n  0x0a950, 0x0b4a0, 0x0baa4, 0x0ad50, 0x055d9, 0x04ba0, 0x0a5b0, 0x15176, 0x052b0, 0x0a930, // 2010-2019\n  0x07954, 0x06aa0, 0x0ad50, 0x05b52, 0x04b60, 0x0a6e6, 0x0a4e0, 0x0d260, 0x0ea65, 0x0d530, // 2020-2029\n  0x05aa0, 0x076a3, 0x096d0, 0x04afb, 0x04ad0, 0x0a4d0, 0x1d0b6, 0x0d250, 0x0d520, 0x0dd45, // 2030-2039\n  0x0b5a0, 0x056d0, 0x055b2, 0x049b0, 0x0a577, 0x0a4b0, 0x0aa50, 0x1b255, 0x06d20, 0x0ada0, // 2040-2049\n  /** Add By JJonline@JJonline.Cn**/\n  0x14b63, 0x09370, 0x049f8, 0x04970, 0x064b0, 0x168a6, 0x0ea50, 0x06b20, 0x1a6c4, 0x0aae0, // 2050-2059\n  0x0a2e0, 0x0d2e3, 0x0c960, 0x0d557, 0x0d4a0, 0x0da50, 0x05d55, 0x056a0, 0x0a6d0, 0x055d4, // 2060-2069\n  0x052d0, 0x0a9b8, 0x0a950, 0x0b4a0, 0x0b6a6, 0x0ad50, 0x055a0, 0x0aba4, 0x0a5b0, 0x052b0, // 2070-2079\n  0x0b273, 0x06930, 0x07337, 0x06aa0, 0x0ad50, 0x14b55, 0x04b60, 0x0a570, 0x054e4, 0x0d160, // 2080-2089\n  0x0e968, 0x0d520, 0x0daa0, 0x16aa6, 0x056d0, 0x04ae0, 0x0a9d4, 0x0a2d0, 0x0d150, 0x0f252, // 2090-2099\n  0x0d520], // 2100\n\n  /**\r\n      * 公历每个月份的天数普通表\r\n      * @Array Of Property\r\n      * @return Number\r\n      */\n  solarMonth: [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31],\n\n  /**\r\n                                                                    * 天干地支之天干速查表\r\n                                                                    * @Array Of Property trans[\"甲\",\"乙\",\"丙\",\"丁\",\"戊\",\"己\",\"庚\",\"辛\",\"壬\",\"癸\"]\r\n                                                                    * @return Cn string\r\n                                                                    */\n  Gan: [\"\\u7532\", \"\\u4E59\", \"\\u4E19\", \"\\u4E01\", \"\\u620A\", \"\\u5DF1\", \"\\u5E9A\", \"\\u8F9B\", \"\\u58EC\", \"\\u7678\"],\n\n  /**\r\n                                                                                                                 * 天干地支之地支速查表\r\n                                                                                                                 * @Array Of Property\r\n                                                                                                                 * @trans[\"子\",\"丑\",\"寅\",\"卯\",\"辰\",\"巳\",\"午\",\"未\",\"申\",\"酉\",\"戌\",\"亥\"]\r\n                                                                                                                 * @return Cn string\r\n                                                                                                                 */\n  Zhi: [\"\\u5B50\", \"\\u4E11\", \"\\u5BC5\", \"\\u536F\", \"\\u8FB0\", \"\\u5DF3\", \"\\u5348\", \"\\u672A\", \"\\u7533\", \"\\u9149\", \"\\u620C\", \"\\u4EA5\"],\n\n  /**\r\n                                                                                                                                     * 天干地支之地支速查表<=>生肖\r\n                                                                                                                                     * @Array Of Property\r\n                                                                                                                                     * @trans[\"鼠\",\"牛\",\"虎\",\"兔\",\"龙\",\"蛇\",\"马\",\"羊\",\"猴\",\"鸡\",\"狗\",\"猪\"]\r\n                                                                                                                                     * @return Cn string\r\n                                                                                                                                     */\n  Animals: [\"\\u9F20\", \"\\u725B\", \"\\u864E\", \"\\u5154\", \"\\u9F99\", \"\\u86C7\", \"\\u9A6C\", \"\\u7F8A\", \"\\u7334\", \"\\u9E21\", \"\\u72D7\", \"\\u732A\"],\n\n  /**\r\n                                                                                                                                         * 24节气速查表\r\n                                                                                                                                         * @Array Of Property\r\n                                                                                                                                         * @trans[\"小寒\",\"大寒\",\"立春\",\"雨水\",\"惊蛰\",\"春分\",\"清明\",\"谷雨\",\"立夏\",\"小满\",\"芒种\",\"夏至\",\"小暑\",\"大暑\",\"立秋\",\"处暑\",\"白露\",\"秋分\",\"寒露\",\"霜降\",\"立冬\",\"小雪\",\"大雪\",\"冬至\"]\r\n                                                                                                                                         * @return Cn string\r\n                                                                                                                                         */\n  solarTerm: [\"\\u5C0F\\u5BD2\", \"\\u5927\\u5BD2\", \"\\u7ACB\\u6625\", \"\\u96E8\\u6C34\", \"\\u60CA\\u86F0\", \"\\u6625\\u5206\", \"\\u6E05\\u660E\", \"\\u8C37\\u96E8\", \"\\u7ACB\\u590F\", \"\\u5C0F\\u6EE1\", \"\\u8292\\u79CD\", \"\\u590F\\u81F3\", \"\\u5C0F\\u6691\", \"\\u5927\\u6691\", \"\\u7ACB\\u79CB\", \"\\u5904\\u6691\", \"\\u767D\\u9732\", \"\\u79CB\\u5206\", \"\\u5BD2\\u9732\", \"\\u971C\\u964D\", \"\\u7ACB\\u51AC\", \"\\u5C0F\\u96EA\", \"\\u5927\\u96EA\", \"\\u51AC\\u81F3\"],\n\n  /**\r\n                                                                                                                                                                                                                                                                                                                                                                                                                   * 1900-2100各年的24节气日期速查表\r\n                                                                                                                                                                                                                                                                                                                                                                                                                   * @Array Of Property\r\n                                                                                                                                                                                                                                                                                                                                                                                                                   * @return 0x string For splice\r\n                                                                                                                                                                                                                                                                                                                                                                                                                   */\n  sTermInfo: ['9778397bd097c36b0b6fc9274c91aa', '97b6b97bd19801ec9210c965cc920e', '97bcf97c3598082c95f8c965cc920f',\n  '97bd0b06bdb0722c965ce1cfcc920f', 'b027097bd097c36b0b6fc9274c91aa', '97b6b97bd19801ec9210c965cc920e',\n  '97bcf97c359801ec95f8c965cc920f', '97bd0b06bdb0722c965ce1cfcc920f', 'b027097bd097c36b0b6fc9274c91aa',\n  '97b6b97bd19801ec9210c965cc920e', '97bcf97c359801ec95f8c965cc920f', '97bd0b06bdb0722c965ce1cfcc920f',\n  'b027097bd097c36b0b6fc9274c91aa', '9778397bd19801ec9210c965cc920e', '97b6b97bd19801ec95f8c965cc920f',\n  '97bd09801d98082c95f8e1cfcc920f', '97bd097bd097c36b0b6fc9210c8dc2', '9778397bd197c36c9210c9274c91aa',\n  '97b6b97bd19801ec95f8c965cc920e', '97bd09801d98082c95f8e1cfcc920f', '97bd097bd097c36b0b6fc9210c8dc2',\n  '9778397bd097c36c9210c9274c91aa', '97b6b97bd19801ec95f8c965cc920e', '97bcf97c3598082c95f8e1cfcc920f',\n  '97bd097bd097c36b0b6fc9210c8dc2', '9778397bd097c36c9210c9274c91aa', '97b6b97bd19801ec9210c965cc920e',\n  '97bcf97c3598082c95f8c965cc920f', '97bd097bd097c35b0b6fc920fb0722', '9778397bd097c36b0b6fc9274c91aa',\n  '97b6b97bd19801ec9210c965cc920e', '97bcf97c3598082c95f8c965cc920f', '97bd097bd097c35b0b6fc920fb0722',\n  '9778397bd097c36b0b6fc9274c91aa', '97b6b97bd19801ec9210c965cc920e', '97bcf97c359801ec95f8c965cc920f',\n  '97bd097bd097c35b0b6fc920fb0722', '9778397bd097c36b0b6fc9274c91aa', '97b6b97bd19801ec9210c965cc920e',\n  '97bcf97c359801ec95f8c965cc920f', '97bd097bd097c35b0b6fc920fb0722', '9778397bd097c36b0b6fc9274c91aa',\n  '97b6b97bd19801ec9210c965cc920e', '97bcf97c359801ec95f8c965cc920f', '97bd097bd07f595b0b6fc920fb0722',\n  '9778397bd097c36b0b6fc9210c8dc2', '9778397bd19801ec9210c9274c920e', '97b6b97bd19801ec95f8c965cc920f',\n  '97bd07f5307f595b0b0bc920fb0722', '7f0e397bd097c36b0b6fc9210c8dc2', '9778397bd097c36c9210c9274c920e',\n  '97b6b97bd19801ec95f8c965cc920f', '97bd07f5307f595b0b0bc920fb0722', '7f0e397bd097c36b0b6fc9210c8dc2',\n  '9778397bd097c36c9210c9274c91aa', '97b6b97bd19801ec9210c965cc920e', '97bd07f1487f595b0b0bc920fb0722',\n  '7f0e397bd097c36b0b6fc9210c8dc2', '9778397bd097c36b0b6fc9274c91aa', '97b6b97bd19801ec9210c965cc920e',\n  '97bcf7f1487f595b0b0bb0b6fb0722', '7f0e397bd097c35b0b6fc920fb0722', '9778397bd097c36b0b6fc9274c91aa',\n  '97b6b97bd19801ec9210c965cc920e', '97bcf7f1487f595b0b0bb0b6fb0722', '7f0e397bd097c35b0b6fc920fb0722',\n  '9778397bd097c36b0b6fc9274c91aa', '97b6b97bd19801ec9210c965cc920e', '97bcf7f1487f531b0b0bb0b6fb0722',\n  '7f0e397bd097c35b0b6fc920fb0722', '9778397bd097c36b0b6fc9274c91aa', '97b6b97bd19801ec9210c965cc920e',\n  '97bcf7f1487f531b0b0bb0b6fb0722', '7f0e397bd07f595b0b6fc920fb0722', '9778397bd097c36b0b6fc9274c91aa',\n  '97b6b97bd19801ec9210c9274c920e', '97bcf7f0e47f531b0b0bb0b6fb0722', '7f0e397bd07f595b0b0bc920fb0722',\n  '9778397bd097c36b0b6fc9210c91aa', '97b6b97bd197c36c9210c9274c920e', '97bcf7f0e47f531b0b0bb0b6fb0722',\n  '7f0e397bd07f595b0b0bc920fb0722', '9778397bd097c36b0b6fc9210c8dc2', '9778397bd097c36c9210c9274c920e',\n  '97b6b7f0e47f531b0723b0b6fb0722', '7f0e37f5307f595b0b0bc920fb0722', '7f0e397bd097c36b0b6fc9210c8dc2',\n  '9778397bd097c36b0b70c9274c91aa', '97b6b7f0e47f531b0723b0b6fb0721', '7f0e37f1487f595b0b0bb0b6fb0722',\n  '7f0e397bd097c35b0b6fc9210c8dc2', '9778397bd097c36b0b6fc9274c91aa', '97b6b7f0e47f531b0723b0b6fb0721',\n  '7f0e27f1487f595b0b0bb0b6fb0722', '7f0e397bd097c35b0b6fc920fb0722', '9778397bd097c36b0b6fc9274c91aa',\n  '97b6b7f0e47f531b0723b0b6fb0721', '7f0e27f1487f531b0b0bb0b6fb0722', '7f0e397bd097c35b0b6fc920fb0722',\n  '9778397bd097c36b0b6fc9274c91aa', '97b6b7f0e47f531b0723b0b6fb0721', '7f0e27f1487f531b0b0bb0b6fb0722',\n  '7f0e397bd097c35b0b6fc920fb0722', '9778397bd097c36b0b6fc9274c91aa', '97b6b7f0e47f531b0723b0b6fb0721',\n  '7f0e27f1487f531b0b0bb0b6fb0722', '7f0e397bd07f595b0b0bc920fb0722', '9778397bd097c36b0b6fc9274c91aa',\n  '97b6b7f0e47f531b0723b0787b0721', '7f0e27f0e47f531b0b0bb0b6fb0722', '7f0e397bd07f595b0b0bc920fb0722',\n  '9778397bd097c36b0b6fc9210c91aa', '97b6b7f0e47f149b0723b0787b0721', '7f0e27f0e47f531b0723b0b6fb0722',\n  '7f0e397bd07f595b0b0bc920fb0722', '9778397bd097c36b0b6fc9210c8dc2', '977837f0e37f149b0723b0787b0721',\n  '7f07e7f0e47f531b0723b0b6fb0722', '7f0e37f5307f595b0b0bc920fb0722', '7f0e397bd097c35b0b6fc9210c8dc2',\n  '977837f0e37f14998082b0787b0721', '7f07e7f0e47f531b0723b0b6fb0721', '7f0e37f1487f595b0b0bb0b6fb0722',\n  '7f0e397bd097c35b0b6fc9210c8dc2', '977837f0e37f14998082b0787b06bd', '7f07e7f0e47f531b0723b0b6fb0721',\n  '7f0e27f1487f531b0b0bb0b6fb0722', '7f0e397bd097c35b0b6fc920fb0722', '977837f0e37f14998082b0787b06bd',\n  '7f07e7f0e47f531b0723b0b6fb0721', '7f0e27f1487f531b0b0bb0b6fb0722', '7f0e397bd097c35b0b6fc920fb0722',\n  '977837f0e37f14998082b0787b06bd', '7f07e7f0e47f531b0723b0b6fb0721', '7f0e27f1487f531b0b0bb0b6fb0722',\n  '7f0e397bd07f595b0b0bc920fb0722', '977837f0e37f14998082b0787b06bd', '7f07e7f0e47f531b0723b0b6fb0721',\n  '7f0e27f1487f531b0b0bb0b6fb0722', '7f0e397bd07f595b0b0bc920fb0722', '977837f0e37f14998082b0787b06bd',\n  '7f07e7f0e47f149b0723b0787b0721', '7f0e27f0e47f531b0b0bb0b6fb0722', '7f0e397bd07f595b0b0bc920fb0722',\n  '977837f0e37f14998082b0723b06bd', '7f07e7f0e37f149b0723b0787b0721', '7f0e27f0e47f531b0723b0b6fb0722',\n  '7f0e397bd07f595b0b0bc920fb0722', '977837f0e37f14898082b0723b02d5', '7ec967f0e37f14998082b0787b0721',\n  '7f07e7f0e47f531b0723b0b6fb0722', '7f0e37f1487f595b0b0bb0b6fb0722', '7f0e37f0e37f14898082b0723b02d5',\n  '7ec967f0e37f14998082b0787b0721', '7f07e7f0e47f531b0723b0b6fb0722', '7f0e37f1487f531b0b0bb0b6fb0722',\n  '7f0e37f0e37f14898082b0723b02d5', '7ec967f0e37f14998082b0787b06bd', '7f07e7f0e47f531b0723b0b6fb0721',\n  '7f0e37f1487f531b0b0bb0b6fb0722', '7f0e37f0e37f14898082b072297c35', '7ec967f0e37f14998082b0787b06bd',\n  '7f07e7f0e47f531b0723b0b6fb0721', '7f0e27f1487f531b0b0bb0b6fb0722', '7f0e37f0e37f14898082b072297c35',\n  '7ec967f0e37f14998082b0787b06bd', '7f07e7f0e47f531b0723b0b6fb0721', '7f0e27f1487f531b0b0bb0b6fb0722',\n  '7f0e37f0e366aa89801eb072297c35', '7ec967f0e37f14998082b0787b06bd', '7f07e7f0e47f149b0723b0787b0721',\n  '7f0e27f1487f531b0b0bb0b6fb0722', '7f0e37f0e366aa89801eb072297c35', '7ec967f0e37f14998082b0723b06bd',\n  '7f07e7f0e47f149b0723b0787b0721', '7f0e27f0e47f531b0723b0b6fb0722', '7f0e37f0e366aa89801eb072297c35',\n  '7ec967f0e37f14998082b0723b06bd', '7f07e7f0e37f14998083b0787b0721', '7f0e27f0e47f531b0723b0b6fb0722',\n  '7f0e37f0e366aa89801eb072297c35', '7ec967f0e37f14898082b0723b02d5', '7f07e7f0e37f14998082b0787b0721',\n  '7f07e7f0e47f531b0723b0b6fb0722', '7f0e36665b66aa89801e9808297c35', '665f67f0e37f14898082b0723b02d5',\n  '7ec967f0e37f14998082b0787b0721', '7f07e7f0e47f531b0723b0b6fb0722', '7f0e36665b66a449801e9808297c35',\n  '665f67f0e37f14898082b0723b02d5', '7ec967f0e37f14998082b0787b06bd', '7f07e7f0e47f531b0723b0b6fb0721',\n  '7f0e36665b66a449801e9808297c35', '665f67f0e37f14898082b072297c35', '7ec967f0e37f14998082b0787b06bd',\n  '7f07e7f0e47f531b0723b0b6fb0721', '7f0e26665b66a449801e9808297c35', '665f67f0e37f1489801eb072297c35',\n  '7ec967f0e37f14998082b0787b06bd', '7f07e7f0e47f531b0723b0b6fb0721', '7f0e27f1487f531b0b0bb0b6fb0722'],\n\n  /**\r\n                                                                                                             * 数字转中文速查表\r\n                                                                                                             * @Array Of Property\r\n                                                                                                             * @trans ['日','一','二','三','四','五','六','七','八','九','十']\r\n                                                                                                             * @return Cn string\r\n                                                                                                             */\n  nStr1: [\"\\u65E5\", \"\\u4E00\", \"\\u4E8C\", \"\\u4E09\", \"\\u56DB\", \"\\u4E94\", \"\\u516D\", \"\\u4E03\", \"\\u516B\", \"\\u4E5D\", \"\\u5341\"],\n\n  /**\r\n                                                                                                                             * 日期转农历称呼速查表\r\n                                                                                                                             * @Array Of Property\r\n                                                                                                                             * @trans ['初','十','廿','卅']\r\n                                                                                                                             * @return Cn string\r\n                                                                                                                             */\n  nStr2: [\"\\u521D\", \"\\u5341\", \"\\u5EFF\", \"\\u5345\"],\n\n  /**\r\n                                                       * 月份转农历称呼速查表\r\n                                                       * @Array Of Property\r\n                                                       * @trans ['正','一','二','三','四','五','六','七','八','九','十','冬','腊']\r\n                                                       * @return Cn string\r\n                                                       */\n  nStr3: [\"\\u6B63\", \"\\u4E8C\", \"\\u4E09\", \"\\u56DB\", \"\\u4E94\", \"\\u516D\", \"\\u4E03\", \"\\u516B\", \"\\u4E5D\", \"\\u5341\", \"\\u51AC\", \"\\u814A\"],\n\n  /**\r\n                                                                                                                                       * 返回农历y年一整年的总天数\r\n                                                                                                                                       * @param lunar Year\r\n                                                                                                                                       * @return Number\r\n                                                                                                                                       * @eg:var count = calendar.lYearDays(1987) ;//count=387\r\n                                                                                                                                       */\n  lYearDays: function lYearDays(y) {\n    var i;var sum = 348;\n    for (i = 0x8000; i > 0x8; i >>= 1) {sum += this.lunarInfo[y - 1900] & i ? 1 : 0;}\n    return sum + this.leapDays(y);\n  },\n\n  /**\r\n         * 返回农历y年闰月是哪个月；若y年没有闰月 则返回0\r\n         * @param lunar Year\r\n         * @return Number (0-12)\r\n         * @eg:var leapMonth = calendar.leapMonth(1987) ;//leapMonth=6\r\n         */\n  leapMonth: function leapMonth(y) {// 闰字编码 \\u95f0\n    return this.lunarInfo[y - 1900] & 0xf;\n  },\n\n  /**\r\n         * 返回农历y年闰月的天数 若该年没有闰月则返回0\r\n         * @param lunar Year\r\n         * @return Number (0、29、30)\r\n         * @eg:var leapMonthDay = calendar.leapDays(1987) ;//leapMonthDay=29\r\n         */\n  leapDays: function leapDays(y) {\n    if (this.leapMonth(y)) {\n      return this.lunarInfo[y - 1900] & 0x10000 ? 30 : 29;\n    }\n    return 0;\n  },\n\n  /**\r\n         * 返回农历y年m月（非闰月）的总天数，计算m为闰月时的天数请使用leapDays方法\r\n         * @param lunar Year\r\n         * @return Number (-1、29、30)\r\n         * @eg:var MonthDay = calendar.monthDays(1987,9) ;//MonthDay=29\r\n         */\n  monthDays: function monthDays(y, m) {\n    if (m > 12 || m < 1) {return -1;} // 月份参数从1至12，参数错误返回-1\n    return this.lunarInfo[y - 1900] & 0x10000 >> m ? 30 : 29;\n  },\n\n  /**\r\n         * 返回公历(!)y年m月的天数\r\n         * @param solar Year\r\n         * @return Number (-1、28、29、30、31)\r\n         * @eg:var solarMonthDay = calendar.leapDays(1987) ;//solarMonthDay=30\r\n         */\n  solarDays: function solarDays(y, m) {\n    if (m > 12 || m < 1) {return -1;} // 若参数错误 返回-1\n    var ms = m - 1;\n    if (ms == 1) {// 2月份的闰平规律测算后确认返回28或29\n      return y % 4 == 0 && y % 100 != 0 || y % 400 == 0 ? 29 : 28;\n    } else {\n      return this.solarMonth[ms];\n    }\n  },\n\n  /**\r\n        * 农历年份转换为干支纪年\r\n        * @param  lYear 农历年的年份数\r\n        * @return Cn string\r\n        */\n  toGanZhiYear: function toGanZhiYear(lYear) {\n    var ganKey = (lYear - 3) % 10;\n    var zhiKey = (lYear - 3) % 12;\n    if (ganKey == 0) ganKey = 10; // 如果余数为0则为最后一个天干\n    if (zhiKey == 0) zhiKey = 12; // 如果余数为0则为最后一个地支\n    return this.Gan[ganKey - 1] + this.Zhi[zhiKey - 1];\n  },\n\n  /**\r\n        * 公历月、日判断所属星座\r\n        * @param  cMonth [description]\r\n        * @param  cDay [description]\r\n        * @return Cn string\r\n        */\n  toAstro: function toAstro(cMonth, cDay) {\n    var s = \"\\u9B54\\u7FAF\\u6C34\\u74F6\\u53CC\\u9C7C\\u767D\\u7F8A\\u91D1\\u725B\\u53CC\\u5B50\\u5DE8\\u87F9\\u72EE\\u5B50\\u5904\\u5973\\u5929\\u79E4\\u5929\\u874E\\u5C04\\u624B\\u9B54\\u7FAF\";\n    var arr = [20, 19, 21, 21, 21, 22, 23, 23, 23, 23, 22, 22];\n    return s.substr(cMonth * 2 - (cDay < arr[cMonth - 1] ? 2 : 0), 2) + \"\\u5EA7\"; // 座\n  },\n\n  /**\r\n         * 传入offset偏移量返回干支\r\n         * @param offset 相对甲子的偏移量\r\n         * @return Cn string\r\n         */\n  toGanZhi: function toGanZhi(offset) {\n    return this.Gan[offset % 10] + this.Zhi[offset % 12];\n  },\n\n  /**\r\n         * 传入公历(!)y年获得该年第n个节气的公历日期\r\n         * @param y公历年(1900-2100)；n二十四节气中的第几个节气(1~24)；从n=1(小寒)算起\r\n         * @return day Number\r\n         * @eg:var _24 = calendar.getTerm(1987,3) ;//_24=4;意即1987年2月4日立春\r\n         */\n  getTerm: function getTerm(y, n) {\n    if (y < 1900 || y > 2100) {return -1;}\n    if (n < 1 || n > 24) {return -1;}\n    var _table = this.sTermInfo[y - 1900];\n    var _info = [\n    parseInt('0x' + _table.substr(0, 5)).toString(),\n    parseInt('0x' + _table.substr(5, 5)).toString(),\n    parseInt('0x' + _table.substr(10, 5)).toString(),\n    parseInt('0x' + _table.substr(15, 5)).toString(),\n    parseInt('0x' + _table.substr(20, 5)).toString(),\n    parseInt('0x' + _table.substr(25, 5)).toString()];\n\n    var _calday = [\n    _info[0].substr(0, 1),\n    _info[0].substr(1, 2),\n    _info[0].substr(3, 1),\n    _info[0].substr(4, 2),\n\n    _info[1].substr(0, 1),\n    _info[1].substr(1, 2),\n    _info[1].substr(3, 1),\n    _info[1].substr(4, 2),\n\n    _info[2].substr(0, 1),\n    _info[2].substr(1, 2),\n    _info[2].substr(3, 1),\n    _info[2].substr(4, 2),\n\n    _info[3].substr(0, 1),\n    _info[3].substr(1, 2),\n    _info[3].substr(3, 1),\n    _info[3].substr(4, 2),\n\n    _info[4].substr(0, 1),\n    _info[4].substr(1, 2),\n    _info[4].substr(3, 1),\n    _info[4].substr(4, 2),\n\n    _info[5].substr(0, 1),\n    _info[5].substr(1, 2),\n    _info[5].substr(3, 1),\n    _info[5].substr(4, 2)];\n\n    return parseInt(_calday[n - 1]);\n  },\n\n  /**\r\n         * 传入农历数字月份返回汉语通俗表示法\r\n         * @param lunar month\r\n         * @return Cn string\r\n         * @eg:var cnMonth = calendar.toChinaMonth(12) ;//cnMonth='腊月'\r\n         */\n  toChinaMonth: function toChinaMonth(m) {// 月 => \\u6708\n    if (m > 12 || m < 1) {return -1;} // 若参数错误 返回-1\n    var s = this.nStr3[m - 1];\n    s += \"\\u6708\"; // 加上月字\n    return s;\n  },\n\n  /**\r\n         * 传入农历日期数字返回汉字表示法\r\n         * @param lunar day\r\n         * @return Cn string\r\n         * @eg:var cnDay = calendar.toChinaDay(21) ;//cnMonth='廿一'\r\n         */\n  toChinaDay: function toChinaDay(d) {// 日 => \\u65e5\n    var s;\n    switch (d) {\n      case 10:\n        s = \"\\u521D\\u5341\";break;\n      case 20:\n        s = \"\\u4E8C\\u5341\";break;\n        break;\n      case 30:\n        s = \"\\u4E09\\u5341\";break;\n        break;\n      default:\n        s = this.nStr2[Math.floor(d / 10)];\n        s += this.nStr1[d % 10];}\n\n    return s;\n  },\n\n  /**\r\n         * 年份转生肖[!仅能大致转换] => 精确划分生肖分界线是“立春”\r\n         * @param y year\r\n         * @return Cn string\r\n         * @eg:var animal = calendar.getAnimal(1987) ;//animal='兔'\r\n         */\n  getAnimal: function getAnimal(y) {\n    return this.Animals[(y - 4) % 12];\n  },\n\n  /**\r\n         * 传入阳历年月日获得详细的公历、农历object信息 <=>JSON\r\n         * @param y  solar year\r\n         * @param m  solar month\r\n         * @param d  solar day\r\n         * @return JSON object\r\n         * @eg:console.log(calendar.solar2lunar(1987,11,01));\r\n         */\n  solar2lunar: function solar2lunar(y, m, d) {// 参数区间1900.1.31~2100.12.31\n    // 年份限定、上限\n    if (y < 1900 || y > 2100) {\n      return -1; // undefined转换为数字变为NaN\n    }\n    // 公历传参最下限\n    if (y == 1900 && m == 1 && d < 31) {\n      return -1;\n    }\n    // 未传参  获得当天\n    if (!y) {\n      var objDate = new Date();\n    } else {\n      var objDate = new Date(y, parseInt(m) - 1, d);\n    }\n    var i;var leap = 0;var temp = 0;\n    // 修正ymd参数\n    var y = objDate.getFullYear();\n    var m = objDate.getMonth() + 1;\n    var d = objDate.getDate();\n    var offset = (Date.UTC(objDate.getFullYear(), objDate.getMonth(), objDate.getDate()) - Date.UTC(1900, 0, 31)) / 86400000;\n    for (i = 1900; i < 2101 && offset > 0; i++) {\n      temp = this.lYearDays(i);\n      offset -= temp;\n    }\n    if (offset < 0) {\n      offset += temp;i--;\n    }\n\n    // 是否今天\n    var isTodayObj = new Date();\n    var isToday = false;\n    if (isTodayObj.getFullYear() == y && isTodayObj.getMonth() + 1 == m && isTodayObj.getDate() == d) {\n      isToday = true;\n    }\n    // 星期几\n    var nWeek = objDate.getDay();\n    var cWeek = this.nStr1[nWeek];\n    // 数字表示周几顺应天朝周一开始的惯例\n    if (nWeek == 0) {\n      nWeek = 7;\n    }\n    // 农历年\n    var year = i;\n    var leap = this.leapMonth(i); // 闰哪个月\n    var isLeap = false;\n\n    // 效验闰月\n    for (i = 1; i < 13 && offset > 0; i++) {\n      // 闰月\n      if (leap > 0 && i == leap + 1 && isLeap == false) {\n        --i;\n        isLeap = true;temp = this.leapDays(year); // 计算农历闰月天数\n      } else {\n        temp = this.monthDays(year, i); // 计算农历普通月天数\n      }\n      // 解除闰月\n      if (isLeap == true && i == leap + 1) {isLeap = false;}\n      offset -= temp;\n    }\n    // 闰月导致数组下标重叠取反\n    if (offset == 0 && leap > 0 && i == leap + 1) {\n      if (isLeap) {\n        isLeap = false;\n      } else {\n        isLeap = true;--i;\n      }\n    }\n    if (offset < 0) {\n      offset += temp;--i;\n    }\n    // 农历月\n    var month = i;\n    // 农历日\n    var day = offset + 1;\n    // 天干地支处理\n    var sm = m - 1;\n    var gzY = this.toGanZhiYear(year);\n\n    // 当月的两个节气\n    // bugfix-2017-7-24 11:03:38 use lunar Year Param `y` Not `year`\n    var firstNode = this.getTerm(y, m * 2 - 1); // 返回当月「节」为几日开始\n    var secondNode = this.getTerm(y, m * 2); // 返回当月「节」为几日开始\n\n    // 依据12节气修正干支月\n    var gzM = this.toGanZhi((y - 1900) * 12 + m + 11);\n    if (d >= firstNode) {\n      gzM = this.toGanZhi((y - 1900) * 12 + m + 12);\n    }\n\n    // 传入的日期的节气与否\n    var isTerm = false;\n    var Term = null;\n    if (firstNode == d) {\n      isTerm = true;\n      Term = this.solarTerm[m * 2 - 2];\n    }\n    if (secondNode == d) {\n      isTerm = true;\n      Term = this.solarTerm[m * 2 - 1];\n    }\n    // 日柱 当月一日与 1900/1/1 相差天数\n    var dayCyclical = Date.UTC(y, sm, 1, 0, 0, 0, 0) / 86400000 + 25567 + 10;\n    var gzD = this.toGanZhi(dayCyclical + d - 1);\n    // 该日期所属的星座\n    var astro = this.toAstro(m, d);\n\n    return { 'lYear': year, 'lMonth': month, 'lDay': day, 'Animal': this.getAnimal(year), 'IMonthCn': (isLeap ? \"\\u95F0\" : '') + this.toChinaMonth(month), 'IDayCn': this.toChinaDay(day), 'cYear': y, 'cMonth': m, 'cDay': d, 'gzYear': gzY, 'gzMonth': gzM, 'gzDay': gzD, 'isToday': isToday, 'isLeap': isLeap, 'nWeek': nWeek, 'ncWeek': \"\\u661F\\u671F\" + cWeek, 'isTerm': isTerm, 'Term': Term, 'astro': astro };\n  },\n\n  /**\r\n         * 传入农历年月日以及传入的月份是否闰月获得详细的公历、农历object信息 <=>JSON\r\n         * @param y  lunar year\r\n         * @param m  lunar month\r\n         * @param d  lunar day\r\n         * @param isLeapMonth  lunar month is leap or not.[如果是农历闰月第四个参数赋值true即可]\r\n         * @return JSON object\r\n         * @eg:console.log(calendar.lunar2solar(1987,9,10));\r\n         */\n  lunar2solar: function lunar2solar(y, m, d, isLeapMonth) {// 参数区间1900.1.31~2100.12.1\n    var isLeapMonth = !!isLeapMonth;\n    var leapOffset = 0;\n    var leapMonth = this.leapMonth(y);\n    var leapDay = this.leapDays(y);\n    if (isLeapMonth && leapMonth != m) {return -1;} // 传参要求计算该闰月公历 但该年得出的闰月与传参的月份并不同\n    if (y == 2100 && m == 12 && d > 1 || y == 1900 && m == 1 && d < 31) {return -1;} // 超出了最大极限值\n    var day = this.monthDays(y, m);\n    var _day = day;\n    // bugFix 2016-9-25\n    // if month is leap, _day use leapDays method\n    if (isLeapMonth) {\n      _day = this.leapDays(y, m);\n    }\n    if (y < 1900 || y > 2100 || d > _day) {return -1;} // 参数合法性效验\n\n    // 计算农历的时间差\n    var offset = 0;\n    for (var i = 1900; i < y; i++) {\n      offset += this.lYearDays(i);\n    }\n    var leap = 0;var isAdd = false;\n    for (var i = 1; i < m; i++) {\n      leap = this.leapMonth(y);\n      if (!isAdd) {// 处理闰月\n        if (leap <= i && leap > 0) {\n          offset += this.leapDays(y);isAdd = true;\n        }\n      }\n      offset += this.monthDays(y, i);\n    }\n    // 转换闰月农历 需补充该年闰月的前一个月的时差\n    if (isLeapMonth) {offset += day;}\n    // 1900年农历正月一日的公历时间为1900年1月30日0时0分0秒(该时间也是本农历的最开始起始点)\n    var stmap = Date.UTC(1900, 1, 30, 0, 0, 0);\n    var calObj = new Date((offset + d - 31) * 86400000 + stmap);\n    var cY = calObj.getUTCFullYear();\n    var cM = calObj.getUTCMonth() + 1;\n    var cD = calObj.getUTCDate();\n\n    return this.solar2lunar(cY, cM, cD);\n  } };var _default =\n\n\ncalendar;exports.default = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///265\n");

/***/ }),

/***/ 280:
/*!*************************************************************!*\
  !*** D:/kxsx_app/components/w-picker/city-data/province.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("Object.defineProperty(exports, \"__esModule\", { value: true });exports.default = void 0; /* eslint-disable */\nvar provinceData = [{\n  \"label\": \"北京市\",\n  \"value\": \"11\" },\n\n{\n  \"label\": \"天津市\",\n  \"value\": \"12\" },\n\n{\n  \"label\": \"河北省\",\n  \"value\": \"13\" },\n\n{\n  \"label\": \"山西省\",\n  \"value\": \"14\" },\n\n{\n  \"label\": \"内蒙古自治区\",\n  \"value\": \"15\" },\n\n{\n  \"label\": \"辽宁省\",\n  \"value\": \"21\" },\n\n{\n  \"label\": \"吉林省\",\n  \"value\": \"22\" },\n\n{\n  \"label\": \"黑龙江省\",\n  \"value\": \"23\" },\n\n{\n  \"label\": \"上海市\",\n  \"value\": \"31\" },\n\n{\n  \"label\": \"江苏省\",\n  \"value\": \"32\" },\n\n{\n  \"label\": \"浙江省\",\n  \"value\": \"33\" },\n\n{\n  \"label\": \"安徽省\",\n  \"value\": \"34\" },\n\n{\n  \"label\": \"福建省\",\n  \"value\": \"35\" },\n\n{\n  \"label\": \"江西省\",\n  \"value\": \"36\" },\n\n{\n  \"label\": \"山东省\",\n  \"value\": \"37\" },\n\n{\n  \"label\": \"河南省\",\n  \"value\": \"41\" },\n\n{\n  \"label\": \"湖北省\",\n  \"value\": \"42\" },\n\n{\n  \"label\": \"湖南省\",\n  \"value\": \"43\" },\n\n{\n  \"label\": \"广东省\",\n  \"value\": \"44\" },\n\n{\n  \"label\": \"广西壮族自治区\",\n  \"value\": \"45\" },\n\n{\n  \"label\": \"海南省\",\n  \"value\": \"46\" },\n\n{\n  \"label\": \"重庆市\",\n  \"value\": \"50\" },\n\n{\n  \"label\": \"四川省\",\n  \"value\": \"51\" },\n\n{\n  \"label\": \"贵州省\",\n  \"value\": \"52\" },\n\n{\n  \"label\": \"云南省\",\n  \"value\": \"53\" },\n\n{\n  \"label\": \"西藏自治区\",\n  \"value\": \"54\" },\n\n{\n  \"label\": \"陕西省\",\n  \"value\": \"61\" },\n\n{\n  \"label\": \"甘肃省\",\n  \"value\": \"62\" },\n\n{\n  \"label\": \"青海省\",\n  \"value\": \"63\" },\n\n{\n  \"label\": \"宁夏回族自治区\",\n  \"value\": \"64\" },\n\n{\n  \"label\": \"新疆维吾尔自治区\",\n  \"value\": \"65\" },\n\n{\n  \"label\": \"台湾\",\n  \"value\": \"66\" },\n\n{\n  \"label\": \"香港\",\n  \"value\": \"67\" },\n\n{\n  \"label\": \"澳门\",\n  \"value\": \"68\" }];var _default =\n\n\nprovinceData;exports.default = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVuaS1hcHA6Ly8vY29tcG9uZW50cy93LXBpY2tlci9jaXR5LWRhdGEvcHJvdmluY2UuanMiXSwibmFtZXMiOlsicHJvdmluY2VEYXRhIl0sIm1hcHBpbmdzIjoid0ZBQUE7QUFDQSxJQUFJQSxZQUFZLEdBQUcsQ0FBQztBQUNoQixXQUFTLEtBRE87QUFFaEIsV0FBUyxJQUZPLEVBQUQ7O0FBSWpCO0FBQ0UsV0FBUyxLQURYO0FBRUUsV0FBUyxJQUZYLEVBSmlCOztBQVFqQjtBQUNFLFdBQVMsS0FEWDtBQUVFLFdBQVMsSUFGWCxFQVJpQjs7QUFZakI7QUFDRSxXQUFTLEtBRFg7QUFFRSxXQUFTLElBRlgsRUFaaUI7O0FBZ0JqQjtBQUNFLFdBQVMsUUFEWDtBQUVFLFdBQVMsSUFGWCxFQWhCaUI7O0FBb0JqQjtBQUNFLFdBQVMsS0FEWDtBQUVFLFdBQVMsSUFGWCxFQXBCaUI7O0FBd0JqQjtBQUNFLFdBQVMsS0FEWDtBQUVFLFdBQVMsSUFGWCxFQXhCaUI7O0FBNEJqQjtBQUNFLFdBQVMsTUFEWDtBQUVFLFdBQVMsSUFGWCxFQTVCaUI7O0FBZ0NqQjtBQUNFLFdBQVMsS0FEWDtBQUVFLFdBQVMsSUFGWCxFQWhDaUI7O0FBb0NqQjtBQUNFLFdBQVMsS0FEWDtBQUVFLFdBQVMsSUFGWCxFQXBDaUI7O0FBd0NqQjtBQUNFLFdBQVMsS0FEWDtBQUVFLFdBQVMsSUFGWCxFQXhDaUI7O0FBNENqQjtBQUNFLFdBQVMsS0FEWDtBQUVFLFdBQVMsSUFGWCxFQTVDaUI7O0FBZ0RqQjtBQUNFLFdBQVMsS0FEWDtBQUVFLFdBQVMsSUFGWCxFQWhEaUI7O0FBb0RqQjtBQUNFLFdBQVMsS0FEWDtBQUVFLFdBQVMsSUFGWCxFQXBEaUI7O0FBd0RqQjtBQUNFLFdBQVMsS0FEWDtBQUVFLFdBQVMsSUFGWCxFQXhEaUI7O0FBNERqQjtBQUNFLFdBQVMsS0FEWDtBQUVFLFdBQVMsSUFGWCxFQTVEaUI7O0FBZ0VqQjtBQUNFLFdBQVMsS0FEWDtBQUVFLFdBQVMsSUFGWCxFQWhFaUI7O0FBb0VqQjtBQUNFLFdBQVMsS0FEWDtBQUVFLFdBQVMsSUFGWCxFQXBFaUI7O0FBd0VqQjtBQUNFLFdBQVMsS0FEWDtBQUVFLFdBQVMsSUFGWCxFQXhFaUI7O0FBNEVqQjtBQUNFLFdBQVMsU0FEWDtBQUVFLFdBQVMsSUFGWCxFQTVFaUI7O0FBZ0ZqQjtBQUNFLFdBQVMsS0FEWDtBQUVFLFdBQVMsSUFGWCxFQWhGaUI7O0FBb0ZqQjtBQUNFLFdBQVMsS0FEWDtBQUVFLFdBQVMsSUFGWCxFQXBGaUI7O0FBd0ZqQjtBQUNFLFdBQVMsS0FEWDtBQUVFLFdBQVMsSUFGWCxFQXhGaUI7O0FBNEZqQjtBQUNFLFdBQVMsS0FEWDtBQUVFLFdBQVMsSUFGWCxFQTVGaUI7O0FBZ0dqQjtBQUNFLFdBQVMsS0FEWDtBQUVFLFdBQVMsSUFGWCxFQWhHaUI7O0FBb0dqQjtBQUNFLFdBQVMsT0FEWDtBQUVFLFdBQVMsSUFGWCxFQXBHaUI7O0FBd0dqQjtBQUNFLFdBQVMsS0FEWDtBQUVFLFdBQVMsSUFGWCxFQXhHaUI7O0FBNEdqQjtBQUNFLFdBQVMsS0FEWDtBQUVFLFdBQVMsSUFGWCxFQTVHaUI7O0FBZ0hqQjtBQUNFLFdBQVMsS0FEWDtBQUVFLFdBQVMsSUFGWCxFQWhIaUI7O0FBb0hqQjtBQUNFLFdBQVMsU0FEWDtBQUVFLFdBQVMsSUFGWCxFQXBIaUI7O0FBd0hqQjtBQUNFLFdBQVMsVUFEWDtBQUVFLFdBQVMsSUFGWCxFQXhIaUI7O0FBNEhqQjtBQUNFLFdBQVMsSUFEWDtBQUVFLFdBQVMsSUFGWCxFQTVIaUI7O0FBZ0lqQjtBQUNFLFdBQVMsSUFEWDtBQUVFLFdBQVMsSUFGWCxFQWhJaUI7O0FBb0lqQjtBQUNFLFdBQVMsSUFEWDtBQUVFLFdBQVMsSUFGWCxFQXBJaUIsQ0FBbkIsQzs7O0FBeUllQSxZIiwiZmlsZSI6IjI4MC5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIGVzbGludC1kaXNhYmxlICovXHJcbnZhciBwcm92aW5jZURhdGEgPSBbe1xyXG4gICAgXCJsYWJlbFwiOiBcIuWMl+S6rOW4glwiLFxyXG4gICAgXCJ2YWx1ZVwiOiBcIjExXCJcclxuICB9LFxyXG4gIHtcclxuICAgIFwibGFiZWxcIjogXCLlpKnmtKXluIJcIixcclxuICAgIFwidmFsdWVcIjogXCIxMlwiXHJcbiAgfSxcclxuICB7XHJcbiAgICBcImxhYmVsXCI6IFwi5rKz5YyX55yBXCIsXHJcbiAgICBcInZhbHVlXCI6IFwiMTNcIlxyXG4gIH0sXHJcbiAge1xyXG4gICAgXCJsYWJlbFwiOiBcIuWxseilv+ecgVwiLFxyXG4gICAgXCJ2YWx1ZVwiOiBcIjE0XCJcclxuICB9LFxyXG4gIHtcclxuICAgIFwibGFiZWxcIjogXCLlhoXokpnlj6Toh6rmsrvljLpcIixcclxuICAgIFwidmFsdWVcIjogXCIxNVwiXHJcbiAgfSxcclxuICB7XHJcbiAgICBcImxhYmVsXCI6IFwi6L695a6B55yBXCIsXHJcbiAgICBcInZhbHVlXCI6IFwiMjFcIlxyXG4gIH0sXHJcbiAge1xyXG4gICAgXCJsYWJlbFwiOiBcIuWQieael+ecgVwiLFxyXG4gICAgXCJ2YWx1ZVwiOiBcIjIyXCJcclxuICB9LFxyXG4gIHtcclxuICAgIFwibGFiZWxcIjogXCLpu5HpvpnmsZ/nnIFcIixcclxuICAgIFwidmFsdWVcIjogXCIyM1wiXHJcbiAgfSxcclxuICB7XHJcbiAgICBcImxhYmVsXCI6IFwi5LiK5rW35biCXCIsXHJcbiAgICBcInZhbHVlXCI6IFwiMzFcIlxyXG4gIH0sXHJcbiAge1xyXG4gICAgXCJsYWJlbFwiOiBcIuaxn+iLj+ecgVwiLFxyXG4gICAgXCJ2YWx1ZVwiOiBcIjMyXCJcclxuICB9LFxyXG4gIHtcclxuICAgIFwibGFiZWxcIjogXCLmtZnmsZ/nnIFcIixcclxuICAgIFwidmFsdWVcIjogXCIzM1wiXHJcbiAgfSxcclxuICB7XHJcbiAgICBcImxhYmVsXCI6IFwi5a6J5b6955yBXCIsXHJcbiAgICBcInZhbHVlXCI6IFwiMzRcIlxyXG4gIH0sXHJcbiAge1xyXG4gICAgXCJsYWJlbFwiOiBcIuemj+W7uuecgVwiLFxyXG4gICAgXCJ2YWx1ZVwiOiBcIjM1XCJcclxuICB9LFxyXG4gIHtcclxuICAgIFwibGFiZWxcIjogXCLmsZ/opb/nnIFcIixcclxuICAgIFwidmFsdWVcIjogXCIzNlwiXHJcbiAgfSxcclxuICB7XHJcbiAgICBcImxhYmVsXCI6IFwi5bGx5Lic55yBXCIsXHJcbiAgICBcInZhbHVlXCI6IFwiMzdcIlxyXG4gIH0sXHJcbiAge1xyXG4gICAgXCJsYWJlbFwiOiBcIuays+WNl+ecgVwiLFxyXG4gICAgXCJ2YWx1ZVwiOiBcIjQxXCJcclxuICB9LFxyXG4gIHtcclxuICAgIFwibGFiZWxcIjogXCLmuZbljJfnnIFcIixcclxuICAgIFwidmFsdWVcIjogXCI0MlwiXHJcbiAgfSxcclxuICB7XHJcbiAgICBcImxhYmVsXCI6IFwi5rmW5Y2X55yBXCIsXHJcbiAgICBcInZhbHVlXCI6IFwiNDNcIlxyXG4gIH0sXHJcbiAge1xyXG4gICAgXCJsYWJlbFwiOiBcIuW5v+S4nOecgVwiLFxyXG4gICAgXCJ2YWx1ZVwiOiBcIjQ0XCJcclxuICB9LFxyXG4gIHtcclxuICAgIFwibGFiZWxcIjogXCLlub/opb/lo67ml4/oh6rmsrvljLpcIixcclxuICAgIFwidmFsdWVcIjogXCI0NVwiXHJcbiAgfSxcclxuICB7XHJcbiAgICBcImxhYmVsXCI6IFwi5rW35Y2X55yBXCIsXHJcbiAgICBcInZhbHVlXCI6IFwiNDZcIlxyXG4gIH0sXHJcbiAge1xyXG4gICAgXCJsYWJlbFwiOiBcIumHjeW6huW4glwiLFxyXG4gICAgXCJ2YWx1ZVwiOiBcIjUwXCJcclxuICB9LFxyXG4gIHtcclxuICAgIFwibGFiZWxcIjogXCLlm5vlt53nnIFcIixcclxuICAgIFwidmFsdWVcIjogXCI1MVwiXHJcbiAgfSxcclxuICB7XHJcbiAgICBcImxhYmVsXCI6IFwi6LS15bee55yBXCIsXHJcbiAgICBcInZhbHVlXCI6IFwiNTJcIlxyXG4gIH0sXHJcbiAge1xyXG4gICAgXCJsYWJlbFwiOiBcIuS6keWNl+ecgVwiLFxyXG4gICAgXCJ2YWx1ZVwiOiBcIjUzXCJcclxuICB9LFxyXG4gIHtcclxuICAgIFwibGFiZWxcIjogXCLopb/ol4/oh6rmsrvljLpcIixcclxuICAgIFwidmFsdWVcIjogXCI1NFwiXHJcbiAgfSxcclxuICB7XHJcbiAgICBcImxhYmVsXCI6IFwi6ZmV6KW/55yBXCIsXHJcbiAgICBcInZhbHVlXCI6IFwiNjFcIlxyXG4gIH0sXHJcbiAge1xyXG4gICAgXCJsYWJlbFwiOiBcIueUmOiCg+ecgVwiLFxyXG4gICAgXCJ2YWx1ZVwiOiBcIjYyXCJcclxuICB9LFxyXG4gIHtcclxuICAgIFwibGFiZWxcIjogXCLpnZLmtbfnnIFcIixcclxuICAgIFwidmFsdWVcIjogXCI2M1wiXHJcbiAgfSxcclxuICB7XHJcbiAgICBcImxhYmVsXCI6IFwi5a6B5aSP5Zue5peP6Ieq5rK75Yy6XCIsXHJcbiAgICBcInZhbHVlXCI6IFwiNjRcIlxyXG4gIH0sXHJcbiAge1xyXG4gICAgXCJsYWJlbFwiOiBcIuaWsOeWhue7tOWQvuWwlOiHquayu+WMulwiLFxyXG4gICAgXCJ2YWx1ZVwiOiBcIjY1XCJcclxuICB9LFxyXG4gIHtcclxuICAgIFwibGFiZWxcIjogXCLlj7Dmub5cIixcclxuICAgIFwidmFsdWVcIjogXCI2NlwiXHJcbiAgfSxcclxuICB7XHJcbiAgICBcImxhYmVsXCI6IFwi6aaZ5rivXCIsXHJcbiAgICBcInZhbHVlXCI6IFwiNjdcIlxyXG4gIH0sXHJcbiAge1xyXG4gICAgXCJsYWJlbFwiOiBcIua+s+mXqFwiLFxyXG4gICAgXCJ2YWx1ZVwiOiBcIjY4XCJcclxuICB9XHJcbl1cclxuZXhwb3J0IGRlZmF1bHQgcHJvdmluY2VEYXRhO1xyXG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///280\n");

/***/ }),

/***/ 281:
/*!*********************************************************!*\
  !*** D:/kxsx_app/components/w-picker/city-data/city.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("Object.defineProperty(exports, \"__esModule\", { value: true });exports.default = void 0; /* eslint-disable */\nvar cityData = [\n[{\n  \"label\": \"市辖区\",\n  \"value\": \"1101\" }],\n\n[{\n  \"label\": \"市辖区\",\n  \"value\": \"1201\" }],\n\n[{\n  \"label\": \"石家庄市\",\n  \"value\": \"1301\" },\n\n{\n  \"label\": \"唐山市\",\n  \"value\": \"1302\" },\n\n{\n  \"label\": \"秦皇岛市\",\n  \"value\": \"1303\" },\n\n{\n  \"label\": \"邯郸市\",\n  \"value\": \"1304\" },\n\n{\n  \"label\": \"邢台市\",\n  \"value\": \"1305\" },\n\n{\n  \"label\": \"保定市\",\n  \"value\": \"1306\" },\n\n{\n  \"label\": \"张家口市\",\n  \"value\": \"1307\" },\n\n{\n  \"label\": \"承德市\",\n  \"value\": \"1308\" },\n\n{\n  \"label\": \"沧州市\",\n  \"value\": \"1309\" },\n\n{\n  \"label\": \"廊坊市\",\n  \"value\": \"1310\" },\n\n{\n  \"label\": \"衡水市\",\n  \"value\": \"1311\" }],\n\n\n[{\n  \"label\": \"太原市\",\n  \"value\": \"1401\" },\n\n{\n  \"label\": \"大同市\",\n  \"value\": \"1402\" },\n\n{\n  \"label\": \"阳泉市\",\n  \"value\": \"1403\" },\n\n{\n  \"label\": \"长治市\",\n  \"value\": \"1404\" },\n\n{\n  \"label\": \"晋城市\",\n  \"value\": \"1405\" },\n\n{\n  \"label\": \"朔州市\",\n  \"value\": \"1406\" },\n\n{\n  \"label\": \"晋中市\",\n  \"value\": \"1407\" },\n\n{\n  \"label\": \"运城市\",\n  \"value\": \"1408\" },\n\n{\n  \"label\": \"忻州市\",\n  \"value\": \"1409\" },\n\n{\n  \"label\": \"临汾市\",\n  \"value\": \"1410\" },\n\n{\n  \"label\": \"吕梁市\",\n  \"value\": \"1411\" }],\n\n\n[{\n  \"label\": \"呼和浩特市\",\n  \"value\": \"1501\" },\n\n{\n  \"label\": \"包头市\",\n  \"value\": \"1502\" },\n\n{\n  \"label\": \"乌海市\",\n  \"value\": \"1503\" },\n\n{\n  \"label\": \"赤峰市\",\n  \"value\": \"1504\" },\n\n{\n  \"label\": \"通辽市\",\n  \"value\": \"1505\" },\n\n{\n  \"label\": \"鄂尔多斯市\",\n  \"value\": \"1506\" },\n\n{\n  \"label\": \"呼伦贝尔市\",\n  \"value\": \"1507\" },\n\n{\n  \"label\": \"巴彦淖尔市\",\n  \"value\": \"1508\" },\n\n{\n  \"label\": \"乌兰察布市\",\n  \"value\": \"1509\" },\n\n{\n  \"label\": \"兴安盟\",\n  \"value\": \"1522\" },\n\n{\n  \"label\": \"锡林郭勒盟\",\n  \"value\": \"1525\" },\n\n{\n  \"label\": \"阿拉善盟\",\n  \"value\": \"1529\" }],\n\n\n[{\n  \"label\": \"沈阳市\",\n  \"value\": \"2101\" },\n\n{\n  \"label\": \"大连市\",\n  \"value\": \"2102\" },\n\n{\n  \"label\": \"鞍山市\",\n  \"value\": \"2103\" },\n\n{\n  \"label\": \"抚顺市\",\n  \"value\": \"2104\" },\n\n{\n  \"label\": \"本溪市\",\n  \"value\": \"2105\" },\n\n{\n  \"label\": \"丹东市\",\n  \"value\": \"2106\" },\n\n{\n  \"label\": \"锦州市\",\n  \"value\": \"2107\" },\n\n{\n  \"label\": \"营口市\",\n  \"value\": \"2108\" },\n\n{\n  \"label\": \"阜新市\",\n  \"value\": \"2109\" },\n\n{\n  \"label\": \"辽阳市\",\n  \"value\": \"2110\" },\n\n{\n  \"label\": \"盘锦市\",\n  \"value\": \"2111\" },\n\n{\n  \"label\": \"铁岭市\",\n  \"value\": \"2112\" },\n\n{\n  \"label\": \"朝阳市\",\n  \"value\": \"2113\" },\n\n{\n  \"label\": \"葫芦岛市\",\n  \"value\": \"2114\" }],\n\n\n[{\n  \"label\": \"长春市\",\n  \"value\": \"2201\" },\n\n{\n  \"label\": \"吉林市\",\n  \"value\": \"2202\" },\n\n{\n  \"label\": \"四平市\",\n  \"value\": \"2203\" },\n\n{\n  \"label\": \"辽源市\",\n  \"value\": \"2204\" },\n\n{\n  \"label\": \"通化市\",\n  \"value\": \"2205\" },\n\n{\n  \"label\": \"白山市\",\n  \"value\": \"2206\" },\n\n{\n  \"label\": \"松原市\",\n  \"value\": \"2207\" },\n\n{\n  \"label\": \"白城市\",\n  \"value\": \"2208\" },\n\n{\n  \"label\": \"延边朝鲜族自治州\",\n  \"value\": \"2224\" }],\n\n\n[{\n  \"label\": \"哈尔滨市\",\n  \"value\": \"2301\" },\n\n{\n  \"label\": \"齐齐哈尔市\",\n  \"value\": \"2302\" },\n\n{\n  \"label\": \"鸡西市\",\n  \"value\": \"2303\" },\n\n{\n  \"label\": \"鹤岗市\",\n  \"value\": \"2304\" },\n\n{\n  \"label\": \"双鸭山市\",\n  \"value\": \"2305\" },\n\n{\n  \"label\": \"大庆市\",\n  \"value\": \"2306\" },\n\n{\n  \"label\": \"伊春市\",\n  \"value\": \"2307\" },\n\n{\n  \"label\": \"佳木斯市\",\n  \"value\": \"2308\" },\n\n{\n  \"label\": \"七台河市\",\n  \"value\": \"2309\" },\n\n{\n  \"label\": \"牡丹江市\",\n  \"value\": \"2310\" },\n\n{\n  \"label\": \"黑河市\",\n  \"value\": \"2311\" },\n\n{\n  \"label\": \"绥化市\",\n  \"value\": \"2312\" },\n\n{\n  \"label\": \"大兴安岭地区\",\n  \"value\": \"2327\" }],\n\n\n[{\n  \"label\": \"市辖区\",\n  \"value\": \"3101\" }],\n\n[{\n  \"label\": \"南京市\",\n  \"value\": \"3201\" },\n\n{\n  \"label\": \"无锡市\",\n  \"value\": \"3202\" },\n\n{\n  \"label\": \"徐州市\",\n  \"value\": \"3203\" },\n\n{\n  \"label\": \"常州市\",\n  \"value\": \"3204\" },\n\n{\n  \"label\": \"苏州市\",\n  \"value\": \"3205\" },\n\n{\n  \"label\": \"南通市\",\n  \"value\": \"3206\" },\n\n{\n  \"label\": \"连云港市\",\n  \"value\": \"3207\" },\n\n{\n  \"label\": \"淮安市\",\n  \"value\": \"3208\" },\n\n{\n  \"label\": \"盐城市\",\n  \"value\": \"3209\" },\n\n{\n  \"label\": \"扬州市\",\n  \"value\": \"3210\" },\n\n{\n  \"label\": \"镇江市\",\n  \"value\": \"3211\" },\n\n{\n  \"label\": \"泰州市\",\n  \"value\": \"3212\" },\n\n{\n  \"label\": \"宿迁市\",\n  \"value\": \"3213\" }],\n\n\n[{\n  \"label\": \"杭州市\",\n  \"value\": \"3301\" },\n\n{\n  \"label\": \"宁波市\",\n  \"value\": \"3302\" },\n\n{\n  \"label\": \"温州市\",\n  \"value\": \"3303\" },\n\n{\n  \"label\": \"嘉兴市\",\n  \"value\": \"3304\" },\n\n{\n  \"label\": \"湖州市\",\n  \"value\": \"3305\" },\n\n{\n  \"label\": \"绍兴市\",\n  \"value\": \"3306\" },\n\n{\n  \"label\": \"金华市\",\n  \"value\": \"3307\" },\n\n{\n  \"label\": \"衢州市\",\n  \"value\": \"3308\" },\n\n{\n  \"label\": \"舟山市\",\n  \"value\": \"3309\" },\n\n{\n  \"label\": \"台州市\",\n  \"value\": \"3310\" },\n\n{\n  \"label\": \"丽水市\",\n  \"value\": \"3311\" }],\n\n\n[{\n  \"label\": \"合肥市\",\n  \"value\": \"3401\" },\n\n{\n  \"label\": \"芜湖市\",\n  \"value\": \"3402\" },\n\n{\n  \"label\": \"蚌埠市\",\n  \"value\": \"3403\" },\n\n{\n  \"label\": \"淮南市\",\n  \"value\": \"3404\" },\n\n{\n  \"label\": \"马鞍山市\",\n  \"value\": \"3405\" },\n\n{\n  \"label\": \"淮北市\",\n  \"value\": \"3406\" },\n\n{\n  \"label\": \"铜陵市\",\n  \"value\": \"3407\" },\n\n{\n  \"label\": \"安庆市\",\n  \"value\": \"3408\" },\n\n{\n  \"label\": \"黄山市\",\n  \"value\": \"3410\" },\n\n{\n  \"label\": \"滁州市\",\n  \"value\": \"3411\" },\n\n{\n  \"label\": \"阜阳市\",\n  \"value\": \"3412\" },\n\n{\n  \"label\": \"宿州市\",\n  \"value\": \"3413\" },\n\n{\n  \"label\": \"六安市\",\n  \"value\": \"3415\" },\n\n{\n  \"label\": \"亳州市\",\n  \"value\": \"3416\" },\n\n{\n  \"label\": \"池州市\",\n  \"value\": \"3417\" },\n\n{\n  \"label\": \"宣城市\",\n  \"value\": \"3418\" }],\n\n\n[{\n  \"label\": \"福州市\",\n  \"value\": \"3501\" },\n\n{\n  \"label\": \"厦门市\",\n  \"value\": \"3502\" },\n\n{\n  \"label\": \"莆田市\",\n  \"value\": \"3503\" },\n\n{\n  \"label\": \"三明市\",\n  \"value\": \"3504\" },\n\n{\n  \"label\": \"泉州市\",\n  \"value\": \"3505\" },\n\n{\n  \"label\": \"漳州市\",\n  \"value\": \"3506\" },\n\n{\n  \"label\": \"南平市\",\n  \"value\": \"3507\" },\n\n{\n  \"label\": \"龙岩市\",\n  \"value\": \"3508\" },\n\n{\n  \"label\": \"宁德市\",\n  \"value\": \"3509\" }],\n\n\n[{\n  \"label\": \"南昌市\",\n  \"value\": \"3601\" },\n\n{\n  \"label\": \"景德镇市\",\n  \"value\": \"3602\" },\n\n{\n  \"label\": \"萍乡市\",\n  \"value\": \"3603\" },\n\n{\n  \"label\": \"九江市\",\n  \"value\": \"3604\" },\n\n{\n  \"label\": \"新余市\",\n  \"value\": \"3605\" },\n\n{\n  \"label\": \"鹰潭市\",\n  \"value\": \"3606\" },\n\n{\n  \"label\": \"赣州市\",\n  \"value\": \"3607\" },\n\n{\n  \"label\": \"吉安市\",\n  \"value\": \"3608\" },\n\n{\n  \"label\": \"宜春市\",\n  \"value\": \"3609\" },\n\n{\n  \"label\": \"抚州市\",\n  \"value\": \"3610\" },\n\n{\n  \"label\": \"上饶市\",\n  \"value\": \"3611\" }],\n\n\n[{\n  \"label\": \"济南市\",\n  \"value\": \"3701\" },\n\n{\n  \"label\": \"青岛市\",\n  \"value\": \"3702\" },\n\n{\n  \"label\": \"淄博市\",\n  \"value\": \"3703\" },\n\n{\n  \"label\": \"枣庄市\",\n  \"value\": \"3704\" },\n\n{\n  \"label\": \"东营市\",\n  \"value\": \"3705\" },\n\n{\n  \"label\": \"烟台市\",\n  \"value\": \"3706\" },\n\n{\n  \"label\": \"潍坊市\",\n  \"value\": \"3707\" },\n\n{\n  \"label\": \"济宁市\",\n  \"value\": \"3708\" },\n\n{\n  \"label\": \"泰安市\",\n  \"value\": \"3709\" },\n\n{\n  \"label\": \"威海市\",\n  \"value\": \"3710\" },\n\n{\n  \"label\": \"日照市\",\n  \"value\": \"3711\" },\n\n{\n  \"label\": \"莱芜市\",\n  \"value\": \"3712\" },\n\n{\n  \"label\": \"临沂市\",\n  \"value\": \"3713\" },\n\n{\n  \"label\": \"德州市\",\n  \"value\": \"3714\" },\n\n{\n  \"label\": \"聊城市\",\n  \"value\": \"3715\" },\n\n{\n  \"label\": \"滨州市\",\n  \"value\": \"3716\" },\n\n{\n  \"label\": \"菏泽市\",\n  \"value\": \"3717\" }],\n\n\n[{\n  \"label\": \"郑州市\",\n  \"value\": \"4101\" },\n\n{\n  \"label\": \"开封市\",\n  \"value\": \"4102\" },\n\n{\n  \"label\": \"洛阳市\",\n  \"value\": \"4103\" },\n\n{\n  \"label\": \"平顶山市\",\n  \"value\": \"4104\" },\n\n{\n  \"label\": \"安阳市\",\n  \"value\": \"4105\" },\n\n{\n  \"label\": \"鹤壁市\",\n  \"value\": \"4106\" },\n\n{\n  \"label\": \"新乡市\",\n  \"value\": \"4107\" },\n\n{\n  \"label\": \"焦作市\",\n  \"value\": \"4108\" },\n\n{\n  \"label\": \"濮阳市\",\n  \"value\": \"4109\" },\n\n{\n  \"label\": \"许昌市\",\n  \"value\": \"4110\" },\n\n{\n  \"label\": \"漯河市\",\n  \"value\": \"4111\" },\n\n{\n  \"label\": \"三门峡市\",\n  \"value\": \"4112\" },\n\n{\n  \"label\": \"南阳市\",\n  \"value\": \"4113\" },\n\n{\n  \"label\": \"商丘市\",\n  \"value\": \"4114\" },\n\n{\n  \"label\": \"信阳市\",\n  \"value\": \"4115\" },\n\n{\n  \"label\": \"周口市\",\n  \"value\": \"4116\" },\n\n{\n  \"label\": \"驻马店市\",\n  \"value\": \"4117\" },\n\n{\n  \"label\": \"省直辖县级行政区划\",\n  \"value\": \"4190\" }],\n\n\n[{\n  \"label\": \"武汉市\",\n  \"value\": \"4201\" },\n\n{\n  \"label\": \"黄石市\",\n  \"value\": \"4202\" },\n\n{\n  \"label\": \"十堰市\",\n  \"value\": \"4203\" },\n\n{\n  \"label\": \"宜昌市\",\n  \"value\": \"4205\" },\n\n{\n  \"label\": \"襄阳市\",\n  \"value\": \"4206\" },\n\n{\n  \"label\": \"鄂州市\",\n  \"value\": \"4207\" },\n\n{\n  \"label\": \"荆门市\",\n  \"value\": \"4208\" },\n\n{\n  \"label\": \"孝感市\",\n  \"value\": \"4209\" },\n\n{\n  \"label\": \"荆州市\",\n  \"value\": \"4210\" },\n\n{\n  \"label\": \"黄冈市\",\n  \"value\": \"4211\" },\n\n{\n  \"label\": \"咸宁市\",\n  \"value\": \"4212\" },\n\n{\n  \"label\": \"随州市\",\n  \"value\": \"4213\" },\n\n{\n  \"label\": \"恩施土家族苗族自治州\",\n  \"value\": \"4228\" },\n\n{\n  \"label\": \"省直辖县级行政区划\",\n  \"value\": \"4290\" }],\n\n\n[{\n  \"label\": \"长沙市\",\n  \"value\": \"4301\" },\n\n{\n  \"label\": \"株洲市\",\n  \"value\": \"4302\" },\n\n{\n  \"label\": \"湘潭市\",\n  \"value\": \"4303\" },\n\n{\n  \"label\": \"衡阳市\",\n  \"value\": \"4304\" },\n\n{\n  \"label\": \"邵阳市\",\n  \"value\": \"4305\" },\n\n{\n  \"label\": \"岳阳市\",\n  \"value\": \"4306\" },\n\n{\n  \"label\": \"常德市\",\n  \"value\": \"4307\" },\n\n{\n  \"label\": \"张家界市\",\n  \"value\": \"4308\" },\n\n{\n  \"label\": \"益阳市\",\n  \"value\": \"4309\" },\n\n{\n  \"label\": \"郴州市\",\n  \"value\": \"4310\" },\n\n{\n  \"label\": \"永州市\",\n  \"value\": \"4311\" },\n\n{\n  \"label\": \"怀化市\",\n  \"value\": \"4312\" },\n\n{\n  \"label\": \"娄底市\",\n  \"value\": \"4313\" },\n\n{\n  \"label\": \"湘西土家族苗族自治州\",\n  \"value\": \"4331\" }],\n\n\n[{\n  \"label\": \"广州市\",\n  \"value\": \"4401\" },\n\n{\n  \"label\": \"韶关市\",\n  \"value\": \"4402\" },\n\n{\n  \"label\": \"深圳市\",\n  \"value\": \"4403\" },\n\n{\n  \"label\": \"珠海市\",\n  \"value\": \"4404\" },\n\n{\n  \"label\": \"汕头市\",\n  \"value\": \"4405\" },\n\n{\n  \"label\": \"佛山市\",\n  \"value\": \"4406\" },\n\n{\n  \"label\": \"江门市\",\n  \"value\": \"4407\" },\n\n{\n  \"label\": \"湛江市\",\n  \"value\": \"4408\" },\n\n{\n  \"label\": \"茂名市\",\n  \"value\": \"4409\" },\n\n{\n  \"label\": \"肇庆市\",\n  \"value\": \"4412\" },\n\n{\n  \"label\": \"惠州市\",\n  \"value\": \"4413\" },\n\n{\n  \"label\": \"梅州市\",\n  \"value\": \"4414\" },\n\n{\n  \"label\": \"汕尾市\",\n  \"value\": \"4415\" },\n\n{\n  \"label\": \"河源市\",\n  \"value\": \"4416\" },\n\n{\n  \"label\": \"阳江市\",\n  \"value\": \"4417\" },\n\n{\n  \"label\": \"清远市\",\n  \"value\": \"4418\" },\n\n{\n  \"label\": \"东莞市\",\n  \"value\": \"4419\" },\n\n{\n  \"label\": \"中山市\",\n  \"value\": \"4420\" },\n\n{\n  \"label\": \"潮州市\",\n  \"value\": \"4451\" },\n\n{\n  \"label\": \"揭阳市\",\n  \"value\": \"4452\" },\n\n{\n  \"label\": \"云浮市\",\n  \"value\": \"4453\" }],\n\n\n[{\n  \"label\": \"南宁市\",\n  \"value\": \"4501\" },\n\n{\n  \"label\": \"柳州市\",\n  \"value\": \"4502\" },\n\n{\n  \"label\": \"桂林市\",\n  \"value\": \"4503\" },\n\n{\n  \"label\": \"梧州市\",\n  \"value\": \"4504\" },\n\n{\n  \"label\": \"北海市\",\n  \"value\": \"4505\" },\n\n{\n  \"label\": \"防城港市\",\n  \"value\": \"4506\" },\n\n{\n  \"label\": \"钦州市\",\n  \"value\": \"4507\" },\n\n{\n  \"label\": \"贵港市\",\n  \"value\": \"4508\" },\n\n{\n  \"label\": \"玉林市\",\n  \"value\": \"4509\" },\n\n{\n  \"label\": \"百色市\",\n  \"value\": \"4510\" },\n\n{\n  \"label\": \"贺州市\",\n  \"value\": \"4511\" },\n\n{\n  \"label\": \"河池市\",\n  \"value\": \"4512\" },\n\n{\n  \"label\": \"来宾市\",\n  \"value\": \"4513\" },\n\n{\n  \"label\": \"崇左市\",\n  \"value\": \"4514\" }],\n\n\n[{\n  \"label\": \"海口市\",\n  \"value\": \"4601\" },\n\n{\n  \"label\": \"三亚市\",\n  \"value\": \"4602\" },\n\n{\n  \"label\": \"三沙市\",\n  \"value\": \"4603\" },\n\n{\n  \"label\": \"儋州市\",\n  \"value\": \"4604\" },\n\n{\n  \"label\": \"省直辖县级行政区划\",\n  \"value\": \"4690\" }],\n\n\n[{\n  \"label\": \"市辖区\",\n  \"value\": \"5001\" },\n\n{\n  \"label\": \"县\",\n  \"value\": \"5002\" }],\n\n\n[{\n  \"label\": \"成都市\",\n  \"value\": \"5101\" },\n\n{\n  \"label\": \"自贡市\",\n  \"value\": \"5103\" },\n\n{\n  \"label\": \"攀枝花市\",\n  \"value\": \"5104\" },\n\n{\n  \"label\": \"泸州市\",\n  \"value\": \"5105\" },\n\n{\n  \"label\": \"德阳市\",\n  \"value\": \"5106\" },\n\n{\n  \"label\": \"绵阳市\",\n  \"value\": \"5107\" },\n\n{\n  \"label\": \"广元市\",\n  \"value\": \"5108\" },\n\n{\n  \"label\": \"遂宁市\",\n  \"value\": \"5109\" },\n\n{\n  \"label\": \"内江市\",\n  \"value\": \"5110\" },\n\n{\n  \"label\": \"乐山市\",\n  \"value\": \"5111\" },\n\n{\n  \"label\": \"南充市\",\n  \"value\": \"5113\" },\n\n{\n  \"label\": \"眉山市\",\n  \"value\": \"5114\" },\n\n{\n  \"label\": \"宜宾市\",\n  \"value\": \"5115\" },\n\n{\n  \"label\": \"广安市\",\n  \"value\": \"5116\" },\n\n{\n  \"label\": \"达州市\",\n  \"value\": \"5117\" },\n\n{\n  \"label\": \"雅安市\",\n  \"value\": \"5118\" },\n\n{\n  \"label\": \"巴中市\",\n  \"value\": \"5119\" },\n\n{\n  \"label\": \"资阳市\",\n  \"value\": \"5120\" },\n\n{\n  \"label\": \"阿坝藏族羌族自治州\",\n  \"value\": \"5132\" },\n\n{\n  \"label\": \"甘孜藏族自治州\",\n  \"value\": \"5133\" },\n\n{\n  \"label\": \"凉山彝族自治州\",\n  \"value\": \"5134\" }],\n\n\n[{\n  \"label\": \"贵阳市\",\n  \"value\": \"5201\" },\n\n{\n  \"label\": \"六盘水市\",\n  \"value\": \"5202\" },\n\n{\n  \"label\": \"遵义市\",\n  \"value\": \"5203\" },\n\n{\n  \"label\": \"安顺市\",\n  \"value\": \"5204\" },\n\n{\n  \"label\": \"毕节市\",\n  \"value\": \"5205\" },\n\n{\n  \"label\": \"铜仁市\",\n  \"value\": \"5206\" },\n\n{\n  \"label\": \"黔西南布依族苗族自治州\",\n  \"value\": \"5223\" },\n\n{\n  \"label\": \"黔东南苗族侗族自治州\",\n  \"value\": \"5226\" },\n\n{\n  \"label\": \"黔南布依族苗族自治州\",\n  \"value\": \"5227\" }],\n\n\n[{\n  \"label\": \"昆明市\",\n  \"value\": \"5301\" },\n\n{\n  \"label\": \"曲靖市\",\n  \"value\": \"5303\" },\n\n{\n  \"label\": \"玉溪市\",\n  \"value\": \"5304\" },\n\n{\n  \"label\": \"保山市\",\n  \"value\": \"5305\" },\n\n{\n  \"label\": \"昭通市\",\n  \"value\": \"5306\" },\n\n{\n  \"label\": \"丽江市\",\n  \"value\": \"5307\" },\n\n{\n  \"label\": \"普洱市\",\n  \"value\": \"5308\" },\n\n{\n  \"label\": \"临沧市\",\n  \"value\": \"5309\" },\n\n{\n  \"label\": \"楚雄彝族自治州\",\n  \"value\": \"5323\" },\n\n{\n  \"label\": \"红河哈尼族彝族自治州\",\n  \"value\": \"5325\" },\n\n{\n  \"label\": \"文山壮族苗族自治州\",\n  \"value\": \"5326\" },\n\n{\n  \"label\": \"西双版纳傣族自治州\",\n  \"value\": \"5328\" },\n\n{\n  \"label\": \"大理白族自治州\",\n  \"value\": \"5329\" },\n\n{\n  \"label\": \"德宏傣族景颇族自治州\",\n  \"value\": \"5331\" },\n\n{\n  \"label\": \"怒江傈僳族自治州\",\n  \"value\": \"5333\" },\n\n{\n  \"label\": \"迪庆藏族自治州\",\n  \"value\": \"5334\" }],\n\n\n[{\n  \"label\": \"拉萨市\",\n  \"value\": \"5401\" },\n\n{\n  \"label\": \"日喀则市\",\n  \"value\": \"5402\" },\n\n{\n  \"label\": \"昌都市\",\n  \"value\": \"5403\" },\n\n{\n  \"label\": \"林芝市\",\n  \"value\": \"5404\" },\n\n{\n  \"label\": \"山南市\",\n  \"value\": \"5405\" },\n\n{\n  \"label\": \"那曲地区\",\n  \"value\": \"5424\" },\n\n{\n  \"label\": \"阿里地区\",\n  \"value\": \"5425\" }],\n\n\n[{\n  \"label\": \"西安市\",\n  \"value\": \"6101\" },\n\n{\n  \"label\": \"铜川市\",\n  \"value\": \"6102\" },\n\n{\n  \"label\": \"宝鸡市\",\n  \"value\": \"6103\" },\n\n{\n  \"label\": \"咸阳市\",\n  \"value\": \"6104\" },\n\n{\n  \"label\": \"渭南市\",\n  \"value\": \"6105\" },\n\n{\n  \"label\": \"延安市\",\n  \"value\": \"6106\" },\n\n{\n  \"label\": \"汉中市\",\n  \"value\": \"6107\" },\n\n{\n  \"label\": \"榆林市\",\n  \"value\": \"6108\" },\n\n{\n  \"label\": \"安康市\",\n  \"value\": \"6109\" },\n\n{\n  \"label\": \"商洛市\",\n  \"value\": \"6110\" }],\n\n\n[{\n  \"label\": \"兰州市\",\n  \"value\": \"6201\" },\n\n{\n  \"label\": \"嘉峪关市\",\n  \"value\": \"6202\" },\n\n{\n  \"label\": \"金昌市\",\n  \"value\": \"6203\" },\n\n{\n  \"label\": \"白银市\",\n  \"value\": \"6204\" },\n\n{\n  \"label\": \"天水市\",\n  \"value\": \"6205\" },\n\n{\n  \"label\": \"武威市\",\n  \"value\": \"6206\" },\n\n{\n  \"label\": \"张掖市\",\n  \"value\": \"6207\" },\n\n{\n  \"label\": \"平凉市\",\n  \"value\": \"6208\" },\n\n{\n  \"label\": \"酒泉市\",\n  \"value\": \"6209\" },\n\n{\n  \"label\": \"庆阳市\",\n  \"value\": \"6210\" },\n\n{\n  \"label\": \"定西市\",\n  \"value\": \"6211\" },\n\n{\n  \"label\": \"陇南市\",\n  \"value\": \"6212\" },\n\n{\n  \"label\": \"临夏回族自治州\",\n  \"value\": \"6229\" },\n\n{\n  \"label\": \"甘南藏族自治州\",\n  \"value\": \"6230\" }],\n\n\n[{\n  \"label\": \"西宁市\",\n  \"value\": \"6301\" },\n\n{\n  \"label\": \"海东市\",\n  \"value\": \"6302\" },\n\n{\n  \"label\": \"海北藏族自治州\",\n  \"value\": \"6322\" },\n\n{\n  \"label\": \"黄南藏族自治州\",\n  \"value\": \"6323\" },\n\n{\n  \"label\": \"海南藏族自治州\",\n  \"value\": \"6325\" },\n\n{\n  \"label\": \"果洛藏族自治州\",\n  \"value\": \"6326\" },\n\n{\n  \"label\": \"玉树藏族自治州\",\n  \"value\": \"6327\" },\n\n{\n  \"label\": \"海西蒙古族藏族自治州\",\n  \"value\": \"6328\" }],\n\n\n[{\n  \"label\": \"银川市\",\n  \"value\": \"6401\" },\n\n{\n  \"label\": \"石嘴山市\",\n  \"value\": \"6402\" },\n\n{\n  \"label\": \"吴忠市\",\n  \"value\": \"6403\" },\n\n{\n  \"label\": \"固原市\",\n  \"value\": \"6404\" },\n\n{\n  \"label\": \"中卫市\",\n  \"value\": \"6405\" }],\n\n\n[{\n  \"label\": \"乌鲁木齐市\",\n  \"value\": \"6501\" },\n\n{\n  \"label\": \"克拉玛依市\",\n  \"value\": \"6502\" },\n\n{\n  \"label\": \"吐鲁番市\",\n  \"value\": \"6504\" },\n\n{\n  \"label\": \"哈密市\",\n  \"value\": \"6505\" },\n\n{\n  \"label\": \"昌吉回族自治州\",\n  \"value\": \"6523\" },\n\n{\n  \"label\": \"博尔塔拉蒙古自治州\",\n  \"value\": \"6527\" },\n\n{\n  \"label\": \"巴音郭楞蒙古自治州\",\n  \"value\": \"6528\" },\n\n{\n  \"label\": \"阿克苏地区\",\n  \"value\": \"6529\" },\n\n{\n  \"label\": \"克孜勒苏柯尔克孜自治州\",\n  \"value\": \"6530\" },\n\n{\n  \"label\": \"喀什地区\",\n  \"value\": \"6531\" },\n\n{\n  \"label\": \"和田地区\",\n  \"value\": \"6532\" },\n\n{\n  \"label\": \"伊犁哈萨克自治州\",\n  \"value\": \"6540\" },\n\n{\n  \"label\": \"塔城地区\",\n  \"value\": \"6542\" },\n\n{\n  \"label\": \"阿勒泰地区\",\n  \"value\": \"6543\" },\n\n{\n  \"label\": \"自治区直辖县级行政区划\",\n  \"value\": \"6590\" }],\n\n\n[{\n  \"label\": \"台北\",\n  \"value\": \"6601\" },\n\n{\n  \"label\": \"高雄\",\n  \"value\": \"6602\" },\n\n{\n  \"label\": \"基隆\",\n  \"value\": \"6603\" },\n\n{\n  \"label\": \"台中\",\n  \"value\": \"6604\" },\n\n{\n  \"label\": \"台南\",\n  \"value\": \"6605\" },\n\n{\n  \"label\": \"新竹\",\n  \"value\": \"6606\" },\n\n{\n  \"label\": \"嘉义\",\n  \"value\": \"6607\" },\n\n{\n  \"label\": \"宜兰\",\n  \"value\": \"6608\" },\n\n{\n  \"label\": \"桃园\",\n  \"value\": \"6609\" },\n\n{\n  \"label\": \"苗栗\",\n  \"value\": \"6610\" },\n\n{\n  \"label\": \"彰化\",\n  \"value\": \"6611\" },\n\n{\n  \"label\": \"南投\",\n  \"value\": \"6612\" },\n\n{\n  \"label\": \"云林\",\n  \"value\": \"6613\" },\n\n{\n  \"label\": \"屏东\",\n  \"value\": \"6614\" },\n\n{\n  \"label\": \"台东\",\n  \"value\": \"6615\" },\n\n{\n  \"label\": \"花莲\",\n  \"value\": \"6616\" },\n\n{\n  \"label\": \"澎湖\",\n  \"value\": \"6617\" }],\n\n\n[{\n  \"label\": \"香港岛\",\n  \"value\": \"6701\" },\n\n{\n  \"label\": \"九龙\",\n  \"value\": \"6702\" },\n\n{\n  \"label\": \"新界\",\n  \"value\": \"6703\" }],\n\n\n[{\n  \"label\": \"澳门半岛\",\n  \"value\": \"6801\" },\n\n{\n  \"label\": \"氹仔岛\",\n  \"value\": \"6802\" },\n\n{\n  \"label\": \"路环岛\",\n  \"value\": \"6803\" },\n\n{\n  \"label\": \"路氹城\",\n  \"value\": \"6804\" }]];var _default =\n\n\n\ncityData;exports.default = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///281\n");

/***/ }),

/***/ 282:
/*!*********************************************************!*\
  !*** D:/kxsx_app/components/w-picker/city-data/area.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("Object.defineProperty(exports, \"__esModule\", { value: true });exports.default = void 0; /* eslint-disable */\nvar areaData = [\n[\n[{\n  \"label\": \"东城区\",\n  \"value\": \"110101\" },\n\n{\n  \"label\": \"西城区\",\n  \"value\": \"110102\" },\n\n{\n  \"label\": \"朝阳区\",\n  \"value\": \"110105\" },\n\n{\n  \"label\": \"丰台区\",\n  \"value\": \"110106\" },\n\n{\n  \"label\": \"石景山区\",\n  \"value\": \"110107\" },\n\n{\n  \"label\": \"海淀区\",\n  \"value\": \"110108\" },\n\n{\n  \"label\": \"门头沟区\",\n  \"value\": \"110109\" },\n\n{\n  \"label\": \"房山区\",\n  \"value\": \"110111\" },\n\n{\n  \"label\": \"通州区\",\n  \"value\": \"110112\" },\n\n{\n  \"label\": \"顺义区\",\n  \"value\": \"110113\" },\n\n{\n  \"label\": \"昌平区\",\n  \"value\": \"110114\" },\n\n{\n  \"label\": \"大兴区\",\n  \"value\": \"110115\" },\n\n{\n  \"label\": \"怀柔区\",\n  \"value\": \"110116\" },\n\n{\n  \"label\": \"平谷区\",\n  \"value\": \"110117\" },\n\n{\n  \"label\": \"密云区\",\n  \"value\": \"110118\" },\n\n{\n  \"label\": \"延庆区\",\n  \"value\": \"110119\" }]],\n\n\n\n[\n[{\n  \"label\": \"和平区\",\n  \"value\": \"120101\" },\n\n{\n  \"label\": \"河东区\",\n  \"value\": \"120102\" },\n\n{\n  \"label\": \"河西区\",\n  \"value\": \"120103\" },\n\n{\n  \"label\": \"南开区\",\n  \"value\": \"120104\" },\n\n{\n  \"label\": \"河北区\",\n  \"value\": \"120105\" },\n\n{\n  \"label\": \"红桥区\",\n  \"value\": \"120106\" },\n\n{\n  \"label\": \"东丽区\",\n  \"value\": \"120110\" },\n\n{\n  \"label\": \"西青区\",\n  \"value\": \"120111\" },\n\n{\n  \"label\": \"津南区\",\n  \"value\": \"120112\" },\n\n{\n  \"label\": \"北辰区\",\n  \"value\": \"120113\" },\n\n{\n  \"label\": \"武清区\",\n  \"value\": \"120114\" },\n\n{\n  \"label\": \"宝坻区\",\n  \"value\": \"120115\" },\n\n{\n  \"label\": \"滨海新区\",\n  \"value\": \"120116\" },\n\n{\n  \"label\": \"宁河区\",\n  \"value\": \"120117\" },\n\n{\n  \"label\": \"静海区\",\n  \"value\": \"120118\" },\n\n{\n  \"label\": \"蓟州区\",\n  \"value\": \"120119\" }]],\n\n\n\n[\n[{\n  \"label\": \"长安区\",\n  \"value\": \"130102\" },\n\n{\n  \"label\": \"桥西区\",\n  \"value\": \"130104\" },\n\n{\n  \"label\": \"新华区\",\n  \"value\": \"130105\" },\n\n{\n  \"label\": \"井陉矿区\",\n  \"value\": \"130107\" },\n\n{\n  \"label\": \"裕华区\",\n  \"value\": \"130108\" },\n\n{\n  \"label\": \"藁城区\",\n  \"value\": \"130109\" },\n\n{\n  \"label\": \"鹿泉区\",\n  \"value\": \"130110\" },\n\n{\n  \"label\": \"栾城区\",\n  \"value\": \"130111\" },\n\n{\n  \"label\": \"井陉县\",\n  \"value\": \"130121\" },\n\n{\n  \"label\": \"正定县\",\n  \"value\": \"130123\" },\n\n{\n  \"label\": \"行唐县\",\n  \"value\": \"130125\" },\n\n{\n  \"label\": \"灵寿县\",\n  \"value\": \"130126\" },\n\n{\n  \"label\": \"高邑县\",\n  \"value\": \"130127\" },\n\n{\n  \"label\": \"深泽县\",\n  \"value\": \"130128\" },\n\n{\n  \"label\": \"赞皇县\",\n  \"value\": \"130129\" },\n\n{\n  \"label\": \"无极县\",\n  \"value\": \"130130\" },\n\n{\n  \"label\": \"平山县\",\n  \"value\": \"130131\" },\n\n{\n  \"label\": \"元氏县\",\n  \"value\": \"130132\" },\n\n{\n  \"label\": \"赵县\",\n  \"value\": \"130133\" },\n\n{\n  \"label\": \"石家庄高新技术产业开发区\",\n  \"value\": \"130171\" },\n\n{\n  \"label\": \"石家庄循环化工园区\",\n  \"value\": \"130172\" },\n\n{\n  \"label\": \"辛集市\",\n  \"value\": \"130181\" },\n\n{\n  \"label\": \"晋州市\",\n  \"value\": \"130183\" },\n\n{\n  \"label\": \"新乐市\",\n  \"value\": \"130184\" }],\n\n\n[{\n  \"label\": \"路南区\",\n  \"value\": \"130202\" },\n\n{\n  \"label\": \"路北区\",\n  \"value\": \"130203\" },\n\n{\n  \"label\": \"古冶区\",\n  \"value\": \"130204\" },\n\n{\n  \"label\": \"开平区\",\n  \"value\": \"130205\" },\n\n{\n  \"label\": \"丰南区\",\n  \"value\": \"130207\" },\n\n{\n  \"label\": \"丰润区\",\n  \"value\": \"130208\" },\n\n{\n  \"label\": \"曹妃甸区\",\n  \"value\": \"130209\" },\n\n{\n  \"label\": \"滦县\",\n  \"value\": \"130223\" },\n\n{\n  \"label\": \"滦南县\",\n  \"value\": \"130224\" },\n\n{\n  \"label\": \"乐亭县\",\n  \"value\": \"130225\" },\n\n{\n  \"label\": \"迁西县\",\n  \"value\": \"130227\" },\n\n{\n  \"label\": \"玉田县\",\n  \"value\": \"130229\" },\n\n{\n  \"label\": \"唐山市芦台经济技术开发区\",\n  \"value\": \"130271\" },\n\n{\n  \"label\": \"唐山市汉沽管理区\",\n  \"value\": \"130272\" },\n\n{\n  \"label\": \"唐山高新技术产业开发区\",\n  \"value\": \"130273\" },\n\n{\n  \"label\": \"河北唐山海港经济开发区\",\n  \"value\": \"130274\" },\n\n{\n  \"label\": \"遵化市\",\n  \"value\": \"130281\" },\n\n{\n  \"label\": \"迁安市\",\n  \"value\": \"130283\" }],\n\n\n[{\n  \"label\": \"海港区\",\n  \"value\": \"130302\" },\n\n{\n  \"label\": \"山海关区\",\n  \"value\": \"130303\" },\n\n{\n  \"label\": \"北戴河区\",\n  \"value\": \"130304\" },\n\n{\n  \"label\": \"抚宁区\",\n  \"value\": \"130306\" },\n\n{\n  \"label\": \"青龙满族自治县\",\n  \"value\": \"130321\" },\n\n{\n  \"label\": \"昌黎县\",\n  \"value\": \"130322\" },\n\n{\n  \"label\": \"卢龙县\",\n  \"value\": \"130324\" },\n\n{\n  \"label\": \"秦皇岛市经济技术开发区\",\n  \"value\": \"130371\" },\n\n{\n  \"label\": \"北戴河新区\",\n  \"value\": \"130372\" }],\n\n\n[{\n  \"label\": \"邯山区\",\n  \"value\": \"130402\" },\n\n{\n  \"label\": \"丛台区\",\n  \"value\": \"130403\" },\n\n{\n  \"label\": \"复兴区\",\n  \"value\": \"130404\" },\n\n{\n  \"label\": \"峰峰矿区\",\n  \"value\": \"130406\" },\n\n{\n  \"label\": \"肥乡区\",\n  \"value\": \"130407\" },\n\n{\n  \"label\": \"永年区\",\n  \"value\": \"130408\" },\n\n{\n  \"label\": \"临漳县\",\n  \"value\": \"130423\" },\n\n{\n  \"label\": \"成安县\",\n  \"value\": \"130424\" },\n\n{\n  \"label\": \"大名县\",\n  \"value\": \"130425\" },\n\n{\n  \"label\": \"涉县\",\n  \"value\": \"130426\" },\n\n{\n  \"label\": \"磁县\",\n  \"value\": \"130427\" },\n\n{\n  \"label\": \"邱县\",\n  \"value\": \"130430\" },\n\n{\n  \"label\": \"鸡泽县\",\n  \"value\": \"130431\" },\n\n{\n  \"label\": \"广平县\",\n  \"value\": \"130432\" },\n\n{\n  \"label\": \"馆陶县\",\n  \"value\": \"130433\" },\n\n{\n  \"label\": \"魏县\",\n  \"value\": \"130434\" },\n\n{\n  \"label\": \"曲周县\",\n  \"value\": \"130435\" },\n\n{\n  \"label\": \"邯郸经济技术开发区\",\n  \"value\": \"130471\" },\n\n{\n  \"label\": \"邯郸冀南新区\",\n  \"value\": \"130473\" },\n\n{\n  \"label\": \"武安市\",\n  \"value\": \"130481\" }],\n\n\n[{\n  \"label\": \"桥东区\",\n  \"value\": \"130502\" },\n\n{\n  \"label\": \"桥西区\",\n  \"value\": \"130503\" },\n\n{\n  \"label\": \"邢台县\",\n  \"value\": \"130521\" },\n\n{\n  \"label\": \"临城县\",\n  \"value\": \"130522\" },\n\n{\n  \"label\": \"内丘县\",\n  \"value\": \"130523\" },\n\n{\n  \"label\": \"柏乡县\",\n  \"value\": \"130524\" },\n\n{\n  \"label\": \"隆尧县\",\n  \"value\": \"130525\" },\n\n{\n  \"label\": \"任县\",\n  \"value\": \"130526\" },\n\n{\n  \"label\": \"南和县\",\n  \"value\": \"130527\" },\n\n{\n  \"label\": \"宁晋县\",\n  \"value\": \"130528\" },\n\n{\n  \"label\": \"巨鹿县\",\n  \"value\": \"130529\" },\n\n{\n  \"label\": \"新河县\",\n  \"value\": \"130530\" },\n\n{\n  \"label\": \"广宗县\",\n  \"value\": \"130531\" },\n\n{\n  \"label\": \"平乡县\",\n  \"value\": \"130532\" },\n\n{\n  \"label\": \"威县\",\n  \"value\": \"130533\" },\n\n{\n  \"label\": \"清河县\",\n  \"value\": \"130534\" },\n\n{\n  \"label\": \"临西县\",\n  \"value\": \"130535\" },\n\n{\n  \"label\": \"河北邢台经济开发区\",\n  \"value\": \"130571\" },\n\n{\n  \"label\": \"南宫市\",\n  \"value\": \"130581\" },\n\n{\n  \"label\": \"沙河市\",\n  \"value\": \"130582\" }],\n\n\n[{\n  \"label\": \"竞秀区\",\n  \"value\": \"130602\" },\n\n{\n  \"label\": \"莲池区\",\n  \"value\": \"130606\" },\n\n{\n  \"label\": \"满城区\",\n  \"value\": \"130607\" },\n\n{\n  \"label\": \"清苑区\",\n  \"value\": \"130608\" },\n\n{\n  \"label\": \"徐水区\",\n  \"value\": \"130609\" },\n\n{\n  \"label\": \"涞水县\",\n  \"value\": \"130623\" },\n\n{\n  \"label\": \"阜平县\",\n  \"value\": \"130624\" },\n\n{\n  \"label\": \"定兴县\",\n  \"value\": \"130626\" },\n\n{\n  \"label\": \"唐县\",\n  \"value\": \"130627\" },\n\n{\n  \"label\": \"高阳县\",\n  \"value\": \"130628\" },\n\n{\n  \"label\": \"容城县\",\n  \"value\": \"130629\" },\n\n{\n  \"label\": \"涞源县\",\n  \"value\": \"130630\" },\n\n{\n  \"label\": \"望都县\",\n  \"value\": \"130631\" },\n\n{\n  \"label\": \"安新县\",\n  \"value\": \"130632\" },\n\n{\n  \"label\": \"易县\",\n  \"value\": \"130633\" },\n\n{\n  \"label\": \"曲阳县\",\n  \"value\": \"130634\" },\n\n{\n  \"label\": \"蠡县\",\n  \"value\": \"130635\" },\n\n{\n  \"label\": \"顺平县\",\n  \"value\": \"130636\" },\n\n{\n  \"label\": \"博野县\",\n  \"value\": \"130637\" },\n\n{\n  \"label\": \"雄县\",\n  \"value\": \"130638\" },\n\n{\n  \"label\": \"保定高新技术产业开发区\",\n  \"value\": \"130671\" },\n\n{\n  \"label\": \"保定白沟新城\",\n  \"value\": \"130672\" },\n\n{\n  \"label\": \"涿州市\",\n  \"value\": \"130681\" },\n\n{\n  \"label\": \"定州市\",\n  \"value\": \"130682\" },\n\n{\n  \"label\": \"安国市\",\n  \"value\": \"130683\" },\n\n{\n  \"label\": \"高碑店市\",\n  \"value\": \"130684\" }],\n\n\n[{\n  \"label\": \"桥东区\",\n  \"value\": \"130702\" },\n\n{\n  \"label\": \"桥西区\",\n  \"value\": \"130703\" },\n\n{\n  \"label\": \"宣化区\",\n  \"value\": \"130705\" },\n\n{\n  \"label\": \"下花园区\",\n  \"value\": \"130706\" },\n\n{\n  \"label\": \"万全区\",\n  \"value\": \"130708\" },\n\n{\n  \"label\": \"崇礼区\",\n  \"value\": \"130709\" },\n\n{\n  \"label\": \"张北县\",\n  \"value\": \"130722\" },\n\n{\n  \"label\": \"康保县\",\n  \"value\": \"130723\" },\n\n{\n  \"label\": \"沽源县\",\n  \"value\": \"130724\" },\n\n{\n  \"label\": \"尚义县\",\n  \"value\": \"130725\" },\n\n{\n  \"label\": \"蔚县\",\n  \"value\": \"130726\" },\n\n{\n  \"label\": \"阳原县\",\n  \"value\": \"130727\" },\n\n{\n  \"label\": \"怀安县\",\n  \"value\": \"130728\" },\n\n{\n  \"label\": \"怀来县\",\n  \"value\": \"130730\" },\n\n{\n  \"label\": \"涿鹿县\",\n  \"value\": \"130731\" },\n\n{\n  \"label\": \"赤城县\",\n  \"value\": \"130732\" },\n\n{\n  \"label\": \"张家口市高新技术产业开发区\",\n  \"value\": \"130771\" },\n\n{\n  \"label\": \"张家口市察北管理区\",\n  \"value\": \"130772\" },\n\n{\n  \"label\": \"张家口市塞北管理区\",\n  \"value\": \"130773\" }],\n\n\n[{\n  \"label\": \"双桥区\",\n  \"value\": \"130802\" },\n\n{\n  \"label\": \"双滦区\",\n  \"value\": \"130803\" },\n\n{\n  \"label\": \"鹰手营子矿区\",\n  \"value\": \"130804\" },\n\n{\n  \"label\": \"承德县\",\n  \"value\": \"130821\" },\n\n{\n  \"label\": \"兴隆县\",\n  \"value\": \"130822\" },\n\n{\n  \"label\": \"滦平县\",\n  \"value\": \"130824\" },\n\n{\n  \"label\": \"隆化县\",\n  \"value\": \"130825\" },\n\n{\n  \"label\": \"丰宁满族自治县\",\n  \"value\": \"130826\" },\n\n{\n  \"label\": \"宽城满族自治县\",\n  \"value\": \"130827\" },\n\n{\n  \"label\": \"围场满族蒙古族自治县\",\n  \"value\": \"130828\" },\n\n{\n  \"label\": \"承德高新技术产业开发区\",\n  \"value\": \"130871\" },\n\n{\n  \"label\": \"平泉市\",\n  \"value\": \"130881\" }],\n\n\n[{\n  \"label\": \"新华区\",\n  \"value\": \"130902\" },\n\n{\n  \"label\": \"运河区\",\n  \"value\": \"130903\" },\n\n{\n  \"label\": \"沧县\",\n  \"value\": \"130921\" },\n\n{\n  \"label\": \"青县\",\n  \"value\": \"130922\" },\n\n{\n  \"label\": \"东光县\",\n  \"value\": \"130923\" },\n\n{\n  \"label\": \"海兴县\",\n  \"value\": \"130924\" },\n\n{\n  \"label\": \"盐山县\",\n  \"value\": \"130925\" },\n\n{\n  \"label\": \"肃宁县\",\n  \"value\": \"130926\" },\n\n{\n  \"label\": \"南皮县\",\n  \"value\": \"130927\" },\n\n{\n  \"label\": \"吴桥县\",\n  \"value\": \"130928\" },\n\n{\n  \"label\": \"献县\",\n  \"value\": \"130929\" },\n\n{\n  \"label\": \"孟村回族自治县\",\n  \"value\": \"130930\" },\n\n{\n  \"label\": \"河北沧州经济开发区\",\n  \"value\": \"130971\" },\n\n{\n  \"label\": \"沧州高新技术产业开发区\",\n  \"value\": \"130972\" },\n\n{\n  \"label\": \"沧州渤海新区\",\n  \"value\": \"130973\" },\n\n{\n  \"label\": \"泊头市\",\n  \"value\": \"130981\" },\n\n{\n  \"label\": \"任丘市\",\n  \"value\": \"130982\" },\n\n{\n  \"label\": \"黄骅市\",\n  \"value\": \"130983\" },\n\n{\n  \"label\": \"河间市\",\n  \"value\": \"130984\" }],\n\n\n[{\n  \"label\": \"安次区\",\n  \"value\": \"131002\" },\n\n{\n  \"label\": \"广阳区\",\n  \"value\": \"131003\" },\n\n{\n  \"label\": \"固安县\",\n  \"value\": \"131022\" },\n\n{\n  \"label\": \"永清县\",\n  \"value\": \"131023\" },\n\n{\n  \"label\": \"香河县\",\n  \"value\": \"131024\" },\n\n{\n  \"label\": \"大城县\",\n  \"value\": \"131025\" },\n\n{\n  \"label\": \"文安县\",\n  \"value\": \"131026\" },\n\n{\n  \"label\": \"大厂回族自治县\",\n  \"value\": \"131028\" },\n\n{\n  \"label\": \"廊坊经济技术开发区\",\n  \"value\": \"131071\" },\n\n{\n  \"label\": \"霸州市\",\n  \"value\": \"131081\" },\n\n{\n  \"label\": \"三河市\",\n  \"value\": \"131082\" }],\n\n\n[{\n  \"label\": \"桃城区\",\n  \"value\": \"131102\" },\n\n{\n  \"label\": \"冀州区\",\n  \"value\": \"131103\" },\n\n{\n  \"label\": \"枣强县\",\n  \"value\": \"131121\" },\n\n{\n  \"label\": \"武邑县\",\n  \"value\": \"131122\" },\n\n{\n  \"label\": \"武强县\",\n  \"value\": \"131123\" },\n\n{\n  \"label\": \"饶阳县\",\n  \"value\": \"131124\" },\n\n{\n  \"label\": \"安平县\",\n  \"value\": \"131125\" },\n\n{\n  \"label\": \"故城县\",\n  \"value\": \"131126\" },\n\n{\n  \"label\": \"景县\",\n  \"value\": \"131127\" },\n\n{\n  \"label\": \"阜城县\",\n  \"value\": \"131128\" },\n\n{\n  \"label\": \"河北衡水经济开发区\",\n  \"value\": \"131171\" },\n\n{\n  \"label\": \"衡水滨湖新区\",\n  \"value\": \"131172\" },\n\n{\n  \"label\": \"深州市\",\n  \"value\": \"131182\" }]],\n\n\n\n[\n[{\n  \"label\": \"小店区\",\n  \"value\": \"140105\" },\n\n{\n  \"label\": \"迎泽区\",\n  \"value\": \"140106\" },\n\n{\n  \"label\": \"杏花岭区\",\n  \"value\": \"140107\" },\n\n{\n  \"label\": \"尖草坪区\",\n  \"value\": \"140108\" },\n\n{\n  \"label\": \"万柏林区\",\n  \"value\": \"140109\" },\n\n{\n  \"label\": \"晋源区\",\n  \"value\": \"140110\" },\n\n{\n  \"label\": \"清徐县\",\n  \"value\": \"140121\" },\n\n{\n  \"label\": \"阳曲县\",\n  \"value\": \"140122\" },\n\n{\n  \"label\": \"娄烦县\",\n  \"value\": \"140123\" },\n\n{\n  \"label\": \"山西转型综合改革示范区\",\n  \"value\": \"140171\" },\n\n{\n  \"label\": \"古交市\",\n  \"value\": \"140181\" }],\n\n\n[{\n  \"label\": \"城区\",\n  \"value\": \"140202\" },\n\n{\n  \"label\": \"矿区\",\n  \"value\": \"140203\" },\n\n{\n  \"label\": \"南郊区\",\n  \"value\": \"140211\" },\n\n{\n  \"label\": \"新荣区\",\n  \"value\": \"140212\" },\n\n{\n  \"label\": \"阳高县\",\n  \"value\": \"140221\" },\n\n{\n  \"label\": \"天镇县\",\n  \"value\": \"140222\" },\n\n{\n  \"label\": \"广灵县\",\n  \"value\": \"140223\" },\n\n{\n  \"label\": \"灵丘县\",\n  \"value\": \"140224\" },\n\n{\n  \"label\": \"浑源县\",\n  \"value\": \"140225\" },\n\n{\n  \"label\": \"左云县\",\n  \"value\": \"140226\" },\n\n{\n  \"label\": \"大同县\",\n  \"value\": \"140227\" },\n\n{\n  \"label\": \"山西大同经济开发区\",\n  \"value\": \"140271\" }],\n\n\n[{\n  \"label\": \"城区\",\n  \"value\": \"140302\" },\n\n{\n  \"label\": \"矿区\",\n  \"value\": \"140303\" },\n\n{\n  \"label\": \"郊区\",\n  \"value\": \"140311\" },\n\n{\n  \"label\": \"平定县\",\n  \"value\": \"140321\" },\n\n{\n  \"label\": \"盂县\",\n  \"value\": \"140322\" },\n\n{\n  \"label\": \"山西阳泉经济开发区\",\n  \"value\": \"140371\" }],\n\n\n[{\n  \"label\": \"城区\",\n  \"value\": \"140402\" },\n\n{\n  \"label\": \"郊区\",\n  \"value\": \"140411\" },\n\n{\n  \"label\": \"长治县\",\n  \"value\": \"140421\" },\n\n{\n  \"label\": \"襄垣县\",\n  \"value\": \"140423\" },\n\n{\n  \"label\": \"屯留县\",\n  \"value\": \"140424\" },\n\n{\n  \"label\": \"平顺县\",\n  \"value\": \"140425\" },\n\n{\n  \"label\": \"黎城县\",\n  \"value\": \"140426\" },\n\n{\n  \"label\": \"壶关县\",\n  \"value\": \"140427\" },\n\n{\n  \"label\": \"长子县\",\n  \"value\": \"140428\" },\n\n{\n  \"label\": \"武乡县\",\n  \"value\": \"140429\" },\n\n{\n  \"label\": \"沁县\",\n  \"value\": \"140430\" },\n\n{\n  \"label\": \"沁源县\",\n  \"value\": \"140431\" },\n\n{\n  \"label\": \"山西长治高新技术产业园区\",\n  \"value\": \"140471\" },\n\n{\n  \"label\": \"潞城市\",\n  \"value\": \"140481\" }],\n\n\n[{\n  \"label\": \"城区\",\n  \"value\": \"140502\" },\n\n{\n  \"label\": \"沁水县\",\n  \"value\": \"140521\" },\n\n{\n  \"label\": \"阳城县\",\n  \"value\": \"140522\" },\n\n{\n  \"label\": \"陵川县\",\n  \"value\": \"140524\" },\n\n{\n  \"label\": \"泽州县\",\n  \"value\": \"140525\" },\n\n{\n  \"label\": \"高平市\",\n  \"value\": \"140581\" }],\n\n\n[{\n  \"label\": \"朔城区\",\n  \"value\": \"140602\" },\n\n{\n  \"label\": \"平鲁区\",\n  \"value\": \"140603\" },\n\n{\n  \"label\": \"山阴县\",\n  \"value\": \"140621\" },\n\n{\n  \"label\": \"应县\",\n  \"value\": \"140622\" },\n\n{\n  \"label\": \"右玉县\",\n  \"value\": \"140623\" },\n\n{\n  \"label\": \"怀仁县\",\n  \"value\": \"140624\" },\n\n{\n  \"label\": \"山西朔州经济开发区\",\n  \"value\": \"140671\" }],\n\n\n[{\n  \"label\": \"榆次区\",\n  \"value\": \"140702\" },\n\n{\n  \"label\": \"榆社县\",\n  \"value\": \"140721\" },\n\n{\n  \"label\": \"左权县\",\n  \"value\": \"140722\" },\n\n{\n  \"label\": \"和顺县\",\n  \"value\": \"140723\" },\n\n{\n  \"label\": \"昔阳县\",\n  \"value\": \"140724\" },\n\n{\n  \"label\": \"寿阳县\",\n  \"value\": \"140725\" },\n\n{\n  \"label\": \"太谷县\",\n  \"value\": \"140726\" },\n\n{\n  \"label\": \"祁县\",\n  \"value\": \"140727\" },\n\n{\n  \"label\": \"平遥县\",\n  \"value\": \"140728\" },\n\n{\n  \"label\": \"灵石县\",\n  \"value\": \"140729\" },\n\n{\n  \"label\": \"介休市\",\n  \"value\": \"140781\" }],\n\n\n[{\n  \"label\": \"盐湖区\",\n  \"value\": \"140802\" },\n\n{\n  \"label\": \"临猗县\",\n  \"value\": \"140821\" },\n\n{\n  \"label\": \"万荣县\",\n  \"value\": \"140822\" },\n\n{\n  \"label\": \"闻喜县\",\n  \"value\": \"140823\" },\n\n{\n  \"label\": \"稷山县\",\n  \"value\": \"140824\" },\n\n{\n  \"label\": \"新绛县\",\n  \"value\": \"140825\" },\n\n{\n  \"label\": \"绛县\",\n  \"value\": \"140826\" },\n\n{\n  \"label\": \"垣曲县\",\n  \"value\": \"140827\" },\n\n{\n  \"label\": \"夏县\",\n  \"value\": \"140828\" },\n\n{\n  \"label\": \"平陆县\",\n  \"value\": \"140829\" },\n\n{\n  \"label\": \"芮城县\",\n  \"value\": \"140830\" },\n\n{\n  \"label\": \"永济市\",\n  \"value\": \"140881\" },\n\n{\n  \"label\": \"河津市\",\n  \"value\": \"140882\" }],\n\n\n[{\n  \"label\": \"忻府区\",\n  \"value\": \"140902\" },\n\n{\n  \"label\": \"定襄县\",\n  \"value\": \"140921\" },\n\n{\n  \"label\": \"五台县\",\n  \"value\": \"140922\" },\n\n{\n  \"label\": \"代县\",\n  \"value\": \"140923\" },\n\n{\n  \"label\": \"繁峙县\",\n  \"value\": \"140924\" },\n\n{\n  \"label\": \"宁武县\",\n  \"value\": \"140925\" },\n\n{\n  \"label\": \"静乐县\",\n  \"value\": \"140926\" },\n\n{\n  \"label\": \"神池县\",\n  \"value\": \"140927\" },\n\n{\n  \"label\": \"五寨县\",\n  \"value\": \"140928\" },\n\n{\n  \"label\": \"岢岚县\",\n  \"value\": \"140929\" },\n\n{\n  \"label\": \"河曲县\",\n  \"value\": \"140930\" },\n\n{\n  \"label\": \"保德县\",\n  \"value\": \"140931\" },\n\n{\n  \"label\": \"偏关县\",\n  \"value\": \"140932\" },\n\n{\n  \"label\": \"五台山风景名胜区\",\n  \"value\": \"140971\" },\n\n{\n  \"label\": \"原平市\",\n  \"value\": \"140981\" }],\n\n\n[{\n  \"label\": \"尧都区\",\n  \"value\": \"141002\" },\n\n{\n  \"label\": \"曲沃县\",\n  \"value\": \"141021\" },\n\n{\n  \"label\": \"翼城县\",\n  \"value\": \"141022\" },\n\n{\n  \"label\": \"襄汾县\",\n  \"value\": \"141023\" },\n\n{\n  \"label\": \"洪洞县\",\n  \"value\": \"141024\" },\n\n{\n  \"label\": \"古县\",\n  \"value\": \"141025\" },\n\n{\n  \"label\": \"安泽县\",\n  \"value\": \"141026\" },\n\n{\n  \"label\": \"浮山县\",\n  \"value\": \"141027\" },\n\n{\n  \"label\": \"吉县\",\n  \"value\": \"141028\" },\n\n{\n  \"label\": \"乡宁县\",\n  \"value\": \"141029\" },\n\n{\n  \"label\": \"大宁县\",\n  \"value\": \"141030\" },\n\n{\n  \"label\": \"隰县\",\n  \"value\": \"141031\" },\n\n{\n  \"label\": \"永和县\",\n  \"value\": \"141032\" },\n\n{\n  \"label\": \"蒲县\",\n  \"value\": \"141033\" },\n\n{\n  \"label\": \"汾西县\",\n  \"value\": \"141034\" },\n\n{\n  \"label\": \"侯马市\",\n  \"value\": \"141081\" },\n\n{\n  \"label\": \"霍州市\",\n  \"value\": \"141082\" }],\n\n\n[{\n  \"label\": \"离石区\",\n  \"value\": \"141102\" },\n\n{\n  \"label\": \"文水县\",\n  \"value\": \"141121\" },\n\n{\n  \"label\": \"交城县\",\n  \"value\": \"141122\" },\n\n{\n  \"label\": \"兴县\",\n  \"value\": \"141123\" },\n\n{\n  \"label\": \"临县\",\n  \"value\": \"141124\" },\n\n{\n  \"label\": \"柳林县\",\n  \"value\": \"141125\" },\n\n{\n  \"label\": \"石楼县\",\n  \"value\": \"141126\" },\n\n{\n  \"label\": \"岚县\",\n  \"value\": \"141127\" },\n\n{\n  \"label\": \"方山县\",\n  \"value\": \"141128\" },\n\n{\n  \"label\": \"中阳县\",\n  \"value\": \"141129\" },\n\n{\n  \"label\": \"交口县\",\n  \"value\": \"141130\" },\n\n{\n  \"label\": \"孝义市\",\n  \"value\": \"141181\" },\n\n{\n  \"label\": \"汾阳市\",\n  \"value\": \"141182\" }]],\n\n\n\n[\n[{\n  \"label\": \"新城区\",\n  \"value\": \"150102\" },\n\n{\n  \"label\": \"回民区\",\n  \"value\": \"150103\" },\n\n{\n  \"label\": \"玉泉区\",\n  \"value\": \"150104\" },\n\n{\n  \"label\": \"赛罕区\",\n  \"value\": \"150105\" },\n\n{\n  \"label\": \"土默特左旗\",\n  \"value\": \"150121\" },\n\n{\n  \"label\": \"托克托县\",\n  \"value\": \"150122\" },\n\n{\n  \"label\": \"和林格尔县\",\n  \"value\": \"150123\" },\n\n{\n  \"label\": \"清水河县\",\n  \"value\": \"150124\" },\n\n{\n  \"label\": \"武川县\",\n  \"value\": \"150125\" },\n\n{\n  \"label\": \"呼和浩特金海工业园区\",\n  \"value\": \"150171\" },\n\n{\n  \"label\": \"呼和浩特经济技术开发区\",\n  \"value\": \"150172\" }],\n\n\n[{\n  \"label\": \"东河区\",\n  \"value\": \"150202\" },\n\n{\n  \"label\": \"昆都仑区\",\n  \"value\": \"150203\" },\n\n{\n  \"label\": \"青山区\",\n  \"value\": \"150204\" },\n\n{\n  \"label\": \"石拐区\",\n  \"value\": \"150205\" },\n\n{\n  \"label\": \"白云鄂博矿区\",\n  \"value\": \"150206\" },\n\n{\n  \"label\": \"九原区\",\n  \"value\": \"150207\" },\n\n{\n  \"label\": \"土默特右旗\",\n  \"value\": \"150221\" },\n\n{\n  \"label\": \"固阳县\",\n  \"value\": \"150222\" },\n\n{\n  \"label\": \"达尔罕茂明安联合旗\",\n  \"value\": \"150223\" },\n\n{\n  \"label\": \"包头稀土高新技术产业开发区\",\n  \"value\": \"150271\" }],\n\n\n[{\n  \"label\": \"海勃湾区\",\n  \"value\": \"150302\" },\n\n{\n  \"label\": \"海南区\",\n  \"value\": \"150303\" },\n\n{\n  \"label\": \"乌达区\",\n  \"value\": \"150304\" }],\n\n\n[{\n  \"label\": \"红山区\",\n  \"value\": \"150402\" },\n\n{\n  \"label\": \"元宝山区\",\n  \"value\": \"150403\" },\n\n{\n  \"label\": \"松山区\",\n  \"value\": \"150404\" },\n\n{\n  \"label\": \"阿鲁科尔沁旗\",\n  \"value\": \"150421\" },\n\n{\n  \"label\": \"巴林左旗\",\n  \"value\": \"150422\" },\n\n{\n  \"label\": \"巴林右旗\",\n  \"value\": \"150423\" },\n\n{\n  \"label\": \"林西县\",\n  \"value\": \"150424\" },\n\n{\n  \"label\": \"克什克腾旗\",\n  \"value\": \"150425\" },\n\n{\n  \"label\": \"翁牛特旗\",\n  \"value\": \"150426\" },\n\n{\n  \"label\": \"喀喇沁旗\",\n  \"value\": \"150428\" },\n\n{\n  \"label\": \"宁城县\",\n  \"value\": \"150429\" },\n\n{\n  \"label\": \"敖汉旗\",\n  \"value\": \"150430\" }],\n\n\n[{\n  \"label\": \"科尔沁区\",\n  \"value\": \"150502\" },\n\n{\n  \"label\": \"科尔沁左翼中旗\",\n  \"value\": \"150521\" },\n\n{\n  \"label\": \"科尔沁左翼后旗\",\n  \"value\": \"150522\" },\n\n{\n  \"label\": \"开鲁县\",\n  \"value\": \"150523\" },\n\n{\n  \"label\": \"库伦旗\",\n  \"value\": \"150524\" },\n\n{\n  \"label\": \"奈曼旗\",\n  \"value\": \"150525\" },\n\n{\n  \"label\": \"扎鲁特旗\",\n  \"value\": \"150526\" },\n\n{\n  \"label\": \"通辽经济技术开发区\",\n  \"value\": \"150571\" },\n\n{\n  \"label\": \"霍林郭勒市\",\n  \"value\": \"150581\" }],\n\n\n[{\n  \"label\": \"东胜区\",\n  \"value\": \"150602\" },\n\n{\n  \"label\": \"康巴什区\",\n  \"value\": \"150603\" },\n\n{\n  \"label\": \"达拉特旗\",\n  \"value\": \"150621\" },\n\n{\n  \"label\": \"准格尔旗\",\n  \"value\": \"150622\" },\n\n{\n  \"label\": \"鄂托克前旗\",\n  \"value\": \"150623\" },\n\n{\n  \"label\": \"鄂托克旗\",\n  \"value\": \"150624\" },\n\n{\n  \"label\": \"杭锦旗\",\n  \"value\": \"150625\" },\n\n{\n  \"label\": \"乌审旗\",\n  \"value\": \"150626\" },\n\n{\n  \"label\": \"伊金霍洛旗\",\n  \"value\": \"150627\" }],\n\n\n[{\n  \"label\": \"海拉尔区\",\n  \"value\": \"150702\" },\n\n{\n  \"label\": \"扎赉诺尔区\",\n  \"value\": \"150703\" },\n\n{\n  \"label\": \"阿荣旗\",\n  \"value\": \"150721\" },\n\n{\n  \"label\": \"莫力达瓦达斡尔族自治旗\",\n  \"value\": \"150722\" },\n\n{\n  \"label\": \"鄂伦春自治旗\",\n  \"value\": \"150723\" },\n\n{\n  \"label\": \"鄂温克族自治旗\",\n  \"value\": \"150724\" },\n\n{\n  \"label\": \"陈巴尔虎旗\",\n  \"value\": \"150725\" },\n\n{\n  \"label\": \"新巴尔虎左旗\",\n  \"value\": \"150726\" },\n\n{\n  \"label\": \"新巴尔虎右旗\",\n  \"value\": \"150727\" },\n\n{\n  \"label\": \"满洲里市\",\n  \"value\": \"150781\" },\n\n{\n  \"label\": \"牙克石市\",\n  \"value\": \"150782\" },\n\n{\n  \"label\": \"扎兰屯市\",\n  \"value\": \"150783\" },\n\n{\n  \"label\": \"额尔古纳市\",\n  \"value\": \"150784\" },\n\n{\n  \"label\": \"根河市\",\n  \"value\": \"150785\" }],\n\n\n[{\n  \"label\": \"临河区\",\n  \"value\": \"150802\" },\n\n{\n  \"label\": \"五原县\",\n  \"value\": \"150821\" },\n\n{\n  \"label\": \"磴口县\",\n  \"value\": \"150822\" },\n\n{\n  \"label\": \"乌拉特前旗\",\n  \"value\": \"150823\" },\n\n{\n  \"label\": \"乌拉特中旗\",\n  \"value\": \"150824\" },\n\n{\n  \"label\": \"乌拉特后旗\",\n  \"value\": \"150825\" },\n\n{\n  \"label\": \"杭锦后旗\",\n  \"value\": \"150826\" }],\n\n\n[{\n  \"label\": \"集宁区\",\n  \"value\": \"150902\" },\n\n{\n  \"label\": \"卓资县\",\n  \"value\": \"150921\" },\n\n{\n  \"label\": \"化德县\",\n  \"value\": \"150922\" },\n\n{\n  \"label\": \"商都县\",\n  \"value\": \"150923\" },\n\n{\n  \"label\": \"兴和县\",\n  \"value\": \"150924\" },\n\n{\n  \"label\": \"凉城县\",\n  \"value\": \"150925\" },\n\n{\n  \"label\": \"察哈尔右翼前旗\",\n  \"value\": \"150926\" },\n\n{\n  \"label\": \"察哈尔右翼中旗\",\n  \"value\": \"150927\" },\n\n{\n  \"label\": \"察哈尔右翼后旗\",\n  \"value\": \"150928\" },\n\n{\n  \"label\": \"四子王旗\",\n  \"value\": \"150929\" },\n\n{\n  \"label\": \"丰镇市\",\n  \"value\": \"150981\" }],\n\n\n[{\n  \"label\": \"乌兰浩特市\",\n  \"value\": \"152201\" },\n\n{\n  \"label\": \"阿尔山市\",\n  \"value\": \"152202\" },\n\n{\n  \"label\": \"科尔沁右翼前旗\",\n  \"value\": \"152221\" },\n\n{\n  \"label\": \"科尔沁右翼中旗\",\n  \"value\": \"152222\" },\n\n{\n  \"label\": \"扎赉特旗\",\n  \"value\": \"152223\" },\n\n{\n  \"label\": \"突泉县\",\n  \"value\": \"152224\" }],\n\n\n[{\n  \"label\": \"二连浩特市\",\n  \"value\": \"152501\" },\n\n{\n  \"label\": \"锡林浩特市\",\n  \"value\": \"152502\" },\n\n{\n  \"label\": \"阿巴嘎旗\",\n  \"value\": \"152522\" },\n\n{\n  \"label\": \"苏尼特左旗\",\n  \"value\": \"152523\" },\n\n{\n  \"label\": \"苏尼特右旗\",\n  \"value\": \"152524\" },\n\n{\n  \"label\": \"东乌珠穆沁旗\",\n  \"value\": \"152525\" },\n\n{\n  \"label\": \"西乌珠穆沁旗\",\n  \"value\": \"152526\" },\n\n{\n  \"label\": \"太仆寺旗\",\n  \"value\": \"152527\" },\n\n{\n  \"label\": \"镶黄旗\",\n  \"value\": \"152528\" },\n\n{\n  \"label\": \"正镶白旗\",\n  \"value\": \"152529\" },\n\n{\n  \"label\": \"正蓝旗\",\n  \"value\": \"152530\" },\n\n{\n  \"label\": \"多伦县\",\n  \"value\": \"152531\" },\n\n{\n  \"label\": \"乌拉盖管委会\",\n  \"value\": \"152571\" }],\n\n\n[{\n  \"label\": \"阿拉善左旗\",\n  \"value\": \"152921\" },\n\n{\n  \"label\": \"阿拉善右旗\",\n  \"value\": \"152922\" },\n\n{\n  \"label\": \"额济纳旗\",\n  \"value\": \"152923\" },\n\n{\n  \"label\": \"内蒙古阿拉善经济开发区\",\n  \"value\": \"152971\" }]],\n\n\n\n[\n[{\n  \"label\": \"和平区\",\n  \"value\": \"210102\" },\n\n{\n  \"label\": \"沈河区\",\n  \"value\": \"210103\" },\n\n{\n  \"label\": \"大东区\",\n  \"value\": \"210104\" },\n\n{\n  \"label\": \"皇姑区\",\n  \"value\": \"210105\" },\n\n{\n  \"label\": \"铁西区\",\n  \"value\": \"210106\" },\n\n{\n  \"label\": \"苏家屯区\",\n  \"value\": \"210111\" },\n\n{\n  \"label\": \"浑南区\",\n  \"value\": \"210112\" },\n\n{\n  \"label\": \"沈北新区\",\n  \"value\": \"210113\" },\n\n{\n  \"label\": \"于洪区\",\n  \"value\": \"210114\" },\n\n{\n  \"label\": \"辽中区\",\n  \"value\": \"210115\" },\n\n{\n  \"label\": \"康平县\",\n  \"value\": \"210123\" },\n\n{\n  \"label\": \"法库县\",\n  \"value\": \"210124\" },\n\n{\n  \"label\": \"新民市\",\n  \"value\": \"210181\" }],\n\n\n[{\n  \"label\": \"中山区\",\n  \"value\": \"210202\" },\n\n{\n  \"label\": \"西岗区\",\n  \"value\": \"210203\" },\n\n{\n  \"label\": \"沙河口区\",\n  \"value\": \"210204\" },\n\n{\n  \"label\": \"甘井子区\",\n  \"value\": \"210211\" },\n\n{\n  \"label\": \"旅顺口区\",\n  \"value\": \"210212\" },\n\n{\n  \"label\": \"金州区\",\n  \"value\": \"210213\" },\n\n{\n  \"label\": \"普兰店区\",\n  \"value\": \"210214\" },\n\n{\n  \"label\": \"长海县\",\n  \"value\": \"210224\" },\n\n{\n  \"label\": \"瓦房店市\",\n  \"value\": \"210281\" },\n\n{\n  \"label\": \"庄河市\",\n  \"value\": \"210283\" }],\n\n\n[{\n  \"label\": \"铁东区\",\n  \"value\": \"210302\" },\n\n{\n  \"label\": \"铁西区\",\n  \"value\": \"210303\" },\n\n{\n  \"label\": \"立山区\",\n  \"value\": \"210304\" },\n\n{\n  \"label\": \"千山区\",\n  \"value\": \"210311\" },\n\n{\n  \"label\": \"台安县\",\n  \"value\": \"210321\" },\n\n{\n  \"label\": \"岫岩满族自治县\",\n  \"value\": \"210323\" },\n\n{\n  \"label\": \"海城市\",\n  \"value\": \"210381\" }],\n\n\n[{\n  \"label\": \"新抚区\",\n  \"value\": \"210402\" },\n\n{\n  \"label\": \"东洲区\",\n  \"value\": \"210403\" },\n\n{\n  \"label\": \"望花区\",\n  \"value\": \"210404\" },\n\n{\n  \"label\": \"顺城区\",\n  \"value\": \"210411\" },\n\n{\n  \"label\": \"抚顺县\",\n  \"value\": \"210421\" },\n\n{\n  \"label\": \"新宾满族自治县\",\n  \"value\": \"210422\" },\n\n{\n  \"label\": \"清原满族自治县\",\n  \"value\": \"210423\" }],\n\n\n[{\n  \"label\": \"平山区\",\n  \"value\": \"210502\" },\n\n{\n  \"label\": \"溪湖区\",\n  \"value\": \"210503\" },\n\n{\n  \"label\": \"明山区\",\n  \"value\": \"210504\" },\n\n{\n  \"label\": \"南芬区\",\n  \"value\": \"210505\" },\n\n{\n  \"label\": \"本溪满族自治县\",\n  \"value\": \"210521\" },\n\n{\n  \"label\": \"桓仁满族自治县\",\n  \"value\": \"210522\" }],\n\n\n[{\n  \"label\": \"元宝区\",\n  \"value\": \"210602\" },\n\n{\n  \"label\": \"振兴区\",\n  \"value\": \"210603\" },\n\n{\n  \"label\": \"振安区\",\n  \"value\": \"210604\" },\n\n{\n  \"label\": \"宽甸满族自治县\",\n  \"value\": \"210624\" },\n\n{\n  \"label\": \"东港市\",\n  \"value\": \"210681\" },\n\n{\n  \"label\": \"凤城市\",\n  \"value\": \"210682\" }],\n\n\n[{\n  \"label\": \"古塔区\",\n  \"value\": \"210702\" },\n\n{\n  \"label\": \"凌河区\",\n  \"value\": \"210703\" },\n\n{\n  \"label\": \"太和区\",\n  \"value\": \"210711\" },\n\n{\n  \"label\": \"黑山县\",\n  \"value\": \"210726\" },\n\n{\n  \"label\": \"义县\",\n  \"value\": \"210727\" },\n\n{\n  \"label\": \"凌海市\",\n  \"value\": \"210781\" },\n\n{\n  \"label\": \"北镇市\",\n  \"value\": \"210782\" }],\n\n\n[{\n  \"label\": \"站前区\",\n  \"value\": \"210802\" },\n\n{\n  \"label\": \"西市区\",\n  \"value\": \"210803\" },\n\n{\n  \"label\": \"鲅鱼圈区\",\n  \"value\": \"210804\" },\n\n{\n  \"label\": \"老边区\",\n  \"value\": \"210811\" },\n\n{\n  \"label\": \"盖州市\",\n  \"value\": \"210881\" },\n\n{\n  \"label\": \"大石桥市\",\n  \"value\": \"210882\" }],\n\n\n[{\n  \"label\": \"海州区\",\n  \"value\": \"210902\" },\n\n{\n  \"label\": \"新邱区\",\n  \"value\": \"210903\" },\n\n{\n  \"label\": \"太平区\",\n  \"value\": \"210904\" },\n\n{\n  \"label\": \"清河门区\",\n  \"value\": \"210905\" },\n\n{\n  \"label\": \"细河区\",\n  \"value\": \"210911\" },\n\n{\n  \"label\": \"阜新蒙古族自治县\",\n  \"value\": \"210921\" },\n\n{\n  \"label\": \"彰武县\",\n  \"value\": \"210922\" }],\n\n\n[{\n  \"label\": \"白塔区\",\n  \"value\": \"211002\" },\n\n{\n  \"label\": \"文圣区\",\n  \"value\": \"211003\" },\n\n{\n  \"label\": \"宏伟区\",\n  \"value\": \"211004\" },\n\n{\n  \"label\": \"弓长岭区\",\n  \"value\": \"211005\" },\n\n{\n  \"label\": \"太子河区\",\n  \"value\": \"211011\" },\n\n{\n  \"label\": \"辽阳县\",\n  \"value\": \"211021\" },\n\n{\n  \"label\": \"灯塔市\",\n  \"value\": \"211081\" }],\n\n\n[{\n  \"label\": \"双台子区\",\n  \"value\": \"211102\" },\n\n{\n  \"label\": \"兴隆台区\",\n  \"value\": \"211103\" },\n\n{\n  \"label\": \"大洼区\",\n  \"value\": \"211104\" },\n\n{\n  \"label\": \"盘山县\",\n  \"value\": \"211122\" }],\n\n\n[{\n  \"label\": \"银州区\",\n  \"value\": \"211202\" },\n\n{\n  \"label\": \"清河区\",\n  \"value\": \"211204\" },\n\n{\n  \"label\": \"铁岭县\",\n  \"value\": \"211221\" },\n\n{\n  \"label\": \"西丰县\",\n  \"value\": \"211223\" },\n\n{\n  \"label\": \"昌图县\",\n  \"value\": \"211224\" },\n\n{\n  \"label\": \"调兵山市\",\n  \"value\": \"211281\" },\n\n{\n  \"label\": \"开原市\",\n  \"value\": \"211282\" }],\n\n\n[{\n  \"label\": \"双塔区\",\n  \"value\": \"211302\" },\n\n{\n  \"label\": \"龙城区\",\n  \"value\": \"211303\" },\n\n{\n  \"label\": \"朝阳县\",\n  \"value\": \"211321\" },\n\n{\n  \"label\": \"建平县\",\n  \"value\": \"211322\" },\n\n{\n  \"label\": \"喀喇沁左翼蒙古族自治县\",\n  \"value\": \"211324\" },\n\n{\n  \"label\": \"北票市\",\n  \"value\": \"211381\" },\n\n{\n  \"label\": \"凌源市\",\n  \"value\": \"211382\" }],\n\n\n[{\n  \"label\": \"连山区\",\n  \"value\": \"211402\" },\n\n{\n  \"label\": \"龙港区\",\n  \"value\": \"211403\" },\n\n{\n  \"label\": \"南票区\",\n  \"value\": \"211404\" },\n\n{\n  \"label\": \"绥中县\",\n  \"value\": \"211421\" },\n\n{\n  \"label\": \"建昌县\",\n  \"value\": \"211422\" },\n\n{\n  \"label\": \"兴城市\",\n  \"value\": \"211481\" }]],\n\n\n\n[\n[{\n  \"label\": \"南关区\",\n  \"value\": \"220102\" },\n\n{\n  \"label\": \"宽城区\",\n  \"value\": \"220103\" },\n\n{\n  \"label\": \"朝阳区\",\n  \"value\": \"220104\" },\n\n{\n  \"label\": \"二道区\",\n  \"value\": \"220105\" },\n\n{\n  \"label\": \"绿园区\",\n  \"value\": \"220106\" },\n\n{\n  \"label\": \"双阳区\",\n  \"value\": \"220112\" },\n\n{\n  \"label\": \"九台区\",\n  \"value\": \"220113\" },\n\n{\n  \"label\": \"农安县\",\n  \"value\": \"220122\" },\n\n{\n  \"label\": \"长春经济技术开发区\",\n  \"value\": \"220171\" },\n\n{\n  \"label\": \"长春净月高新技术产业开发区\",\n  \"value\": \"220172\" },\n\n{\n  \"label\": \"长春高新技术产业开发区\",\n  \"value\": \"220173\" },\n\n{\n  \"label\": \"长春汽车经济技术开发区\",\n  \"value\": \"220174\" },\n\n{\n  \"label\": \"榆树市\",\n  \"value\": \"220182\" },\n\n{\n  \"label\": \"德惠市\",\n  \"value\": \"220183\" }],\n\n\n[{\n  \"label\": \"昌邑区\",\n  \"value\": \"220202\" },\n\n{\n  \"label\": \"龙潭区\",\n  \"value\": \"220203\" },\n\n{\n  \"label\": \"船营区\",\n  \"value\": \"220204\" },\n\n{\n  \"label\": \"丰满区\",\n  \"value\": \"220211\" },\n\n{\n  \"label\": \"永吉县\",\n  \"value\": \"220221\" },\n\n{\n  \"label\": \"吉林经济开发区\",\n  \"value\": \"220271\" },\n\n{\n  \"label\": \"吉林高新技术产业开发区\",\n  \"value\": \"220272\" },\n\n{\n  \"label\": \"吉林中国新加坡食品区\",\n  \"value\": \"220273\" },\n\n{\n  \"label\": \"蛟河市\",\n  \"value\": \"220281\" },\n\n{\n  \"label\": \"桦甸市\",\n  \"value\": \"220282\" },\n\n{\n  \"label\": \"舒兰市\",\n  \"value\": \"220283\" },\n\n{\n  \"label\": \"磐石市\",\n  \"value\": \"220284\" }],\n\n\n[{\n  \"label\": \"铁西区\",\n  \"value\": \"220302\" },\n\n{\n  \"label\": \"铁东区\",\n  \"value\": \"220303\" },\n\n{\n  \"label\": \"梨树县\",\n  \"value\": \"220322\" },\n\n{\n  \"label\": \"伊通满族自治县\",\n  \"value\": \"220323\" },\n\n{\n  \"label\": \"公主岭市\",\n  \"value\": \"220381\" },\n\n{\n  \"label\": \"双辽市\",\n  \"value\": \"220382\" }],\n\n\n[{\n  \"label\": \"龙山区\",\n  \"value\": \"220402\" },\n\n{\n  \"label\": \"西安区\",\n  \"value\": \"220403\" },\n\n{\n  \"label\": \"东丰县\",\n  \"value\": \"220421\" },\n\n{\n  \"label\": \"东辽县\",\n  \"value\": \"220422\" }],\n\n\n[{\n  \"label\": \"东昌区\",\n  \"value\": \"220502\" },\n\n{\n  \"label\": \"二道江区\",\n  \"value\": \"220503\" },\n\n{\n  \"label\": \"通化县\",\n  \"value\": \"220521\" },\n\n{\n  \"label\": \"辉南县\",\n  \"value\": \"220523\" },\n\n{\n  \"label\": \"柳河县\",\n  \"value\": \"220524\" },\n\n{\n  \"label\": \"梅河口市\",\n  \"value\": \"220581\" },\n\n{\n  \"label\": \"集安市\",\n  \"value\": \"220582\" }],\n\n\n[{\n  \"label\": \"浑江区\",\n  \"value\": \"220602\" },\n\n{\n  \"label\": \"江源区\",\n  \"value\": \"220605\" },\n\n{\n  \"label\": \"抚松县\",\n  \"value\": \"220621\" },\n\n{\n  \"label\": \"靖宇县\",\n  \"value\": \"220622\" },\n\n{\n  \"label\": \"长白朝鲜族自治县\",\n  \"value\": \"220623\" },\n\n{\n  \"label\": \"临江市\",\n  \"value\": \"220681\" }],\n\n\n[{\n  \"label\": \"宁江区\",\n  \"value\": \"220702\" },\n\n{\n  \"label\": \"前郭尔罗斯蒙古族自治县\",\n  \"value\": \"220721\" },\n\n{\n  \"label\": \"长岭县\",\n  \"value\": \"220722\" },\n\n{\n  \"label\": \"乾安县\",\n  \"value\": \"220723\" },\n\n{\n  \"label\": \"吉林松原经济开发区\",\n  \"value\": \"220771\" },\n\n{\n  \"label\": \"扶余市\",\n  \"value\": \"220781\" }],\n\n\n[{\n  \"label\": \"洮北区\",\n  \"value\": \"220802\" },\n\n{\n  \"label\": \"镇赉县\",\n  \"value\": \"220821\" },\n\n{\n  \"label\": \"通榆县\",\n  \"value\": \"220822\" },\n\n{\n  \"label\": \"吉林白城经济开发区\",\n  \"value\": \"220871\" },\n\n{\n  \"label\": \"洮南市\",\n  \"value\": \"220881\" },\n\n{\n  \"label\": \"大安市\",\n  \"value\": \"220882\" }],\n\n\n[{\n  \"label\": \"延吉市\",\n  \"value\": \"222401\" },\n\n{\n  \"label\": \"图们市\",\n  \"value\": \"222402\" },\n\n{\n  \"label\": \"敦化市\",\n  \"value\": \"222403\" },\n\n{\n  \"label\": \"珲春市\",\n  \"value\": \"222404\" },\n\n{\n  \"label\": \"龙井市\",\n  \"value\": \"222405\" },\n\n{\n  \"label\": \"和龙市\",\n  \"value\": \"222406\" },\n\n{\n  \"label\": \"汪清县\",\n  \"value\": \"222424\" },\n\n{\n  \"label\": \"安图县\",\n  \"value\": \"222426\" }]],\n\n\n\n[\n[{\n  \"label\": \"道里区\",\n  \"value\": \"230102\" },\n\n{\n  \"label\": \"南岗区\",\n  \"value\": \"230103\" },\n\n{\n  \"label\": \"道外区\",\n  \"value\": \"230104\" },\n\n{\n  \"label\": \"平房区\",\n  \"value\": \"230108\" },\n\n{\n  \"label\": \"松北区\",\n  \"value\": \"230109\" },\n\n{\n  \"label\": \"香坊区\",\n  \"value\": \"230110\" },\n\n{\n  \"label\": \"呼兰区\",\n  \"value\": \"230111\" },\n\n{\n  \"label\": \"阿城区\",\n  \"value\": \"230112\" },\n\n{\n  \"label\": \"双城区\",\n  \"value\": \"230113\" },\n\n{\n  \"label\": \"依兰县\",\n  \"value\": \"230123\" },\n\n{\n  \"label\": \"方正县\",\n  \"value\": \"230124\" },\n\n{\n  \"label\": \"宾县\",\n  \"value\": \"230125\" },\n\n{\n  \"label\": \"巴彦县\",\n  \"value\": \"230126\" },\n\n{\n  \"label\": \"木兰县\",\n  \"value\": \"230127\" },\n\n{\n  \"label\": \"通河县\",\n  \"value\": \"230128\" },\n\n{\n  \"label\": \"延寿县\",\n  \"value\": \"230129\" },\n\n{\n  \"label\": \"尚志市\",\n  \"value\": \"230183\" },\n\n{\n  \"label\": \"五常市\",\n  \"value\": \"230184\" }],\n\n\n[{\n  \"label\": \"龙沙区\",\n  \"value\": \"230202\" },\n\n{\n  \"label\": \"建华区\",\n  \"value\": \"230203\" },\n\n{\n  \"label\": \"铁锋区\",\n  \"value\": \"230204\" },\n\n{\n  \"label\": \"昂昂溪区\",\n  \"value\": \"230205\" },\n\n{\n  \"label\": \"富拉尔基区\",\n  \"value\": \"230206\" },\n\n{\n  \"label\": \"碾子山区\",\n  \"value\": \"230207\" },\n\n{\n  \"label\": \"梅里斯达斡尔族区\",\n  \"value\": \"230208\" },\n\n{\n  \"label\": \"龙江县\",\n  \"value\": \"230221\" },\n\n{\n  \"label\": \"依安县\",\n  \"value\": \"230223\" },\n\n{\n  \"label\": \"泰来县\",\n  \"value\": \"230224\" },\n\n{\n  \"label\": \"甘南县\",\n  \"value\": \"230225\" },\n\n{\n  \"label\": \"富裕县\",\n  \"value\": \"230227\" },\n\n{\n  \"label\": \"克山县\",\n  \"value\": \"230229\" },\n\n{\n  \"label\": \"克东县\",\n  \"value\": \"230230\" },\n\n{\n  \"label\": \"拜泉县\",\n  \"value\": \"230231\" },\n\n{\n  \"label\": \"讷河市\",\n  \"value\": \"230281\" }],\n\n\n[{\n  \"label\": \"鸡冠区\",\n  \"value\": \"230302\" },\n\n{\n  \"label\": \"恒山区\",\n  \"value\": \"230303\" },\n\n{\n  \"label\": \"滴道区\",\n  \"value\": \"230304\" },\n\n{\n  \"label\": \"梨树区\",\n  \"value\": \"230305\" },\n\n{\n  \"label\": \"城子河区\",\n  \"value\": \"230306\" },\n\n{\n  \"label\": \"麻山区\",\n  \"value\": \"230307\" },\n\n{\n  \"label\": \"鸡东县\",\n  \"value\": \"230321\" },\n\n{\n  \"label\": \"虎林市\",\n  \"value\": \"230381\" },\n\n{\n  \"label\": \"密山市\",\n  \"value\": \"230382\" }],\n\n\n[{\n  \"label\": \"向阳区\",\n  \"value\": \"230402\" },\n\n{\n  \"label\": \"工农区\",\n  \"value\": \"230403\" },\n\n{\n  \"label\": \"南山区\",\n  \"value\": \"230404\" },\n\n{\n  \"label\": \"兴安区\",\n  \"value\": \"230405\" },\n\n{\n  \"label\": \"东山区\",\n  \"value\": \"230406\" },\n\n{\n  \"label\": \"兴山区\",\n  \"value\": \"230407\" },\n\n{\n  \"label\": \"萝北县\",\n  \"value\": \"230421\" },\n\n{\n  \"label\": \"绥滨县\",\n  \"value\": \"230422\" }],\n\n\n[{\n  \"label\": \"尖山区\",\n  \"value\": \"230502\" },\n\n{\n  \"label\": \"岭东区\",\n  \"value\": \"230503\" },\n\n{\n  \"label\": \"四方台区\",\n  \"value\": \"230505\" },\n\n{\n  \"label\": \"宝山区\",\n  \"value\": \"230506\" },\n\n{\n  \"label\": \"集贤县\",\n  \"value\": \"230521\" },\n\n{\n  \"label\": \"友谊县\",\n  \"value\": \"230522\" },\n\n{\n  \"label\": \"宝清县\",\n  \"value\": \"230523\" },\n\n{\n  \"label\": \"饶河县\",\n  \"value\": \"230524\" }],\n\n\n[{\n  \"label\": \"萨尔图区\",\n  \"value\": \"230602\" },\n\n{\n  \"label\": \"龙凤区\",\n  \"value\": \"230603\" },\n\n{\n  \"label\": \"让胡路区\",\n  \"value\": \"230604\" },\n\n{\n  \"label\": \"红岗区\",\n  \"value\": \"230605\" },\n\n{\n  \"label\": \"大同区\",\n  \"value\": \"230606\" },\n\n{\n  \"label\": \"肇州县\",\n  \"value\": \"230621\" },\n\n{\n  \"label\": \"肇源县\",\n  \"value\": \"230622\" },\n\n{\n  \"label\": \"林甸县\",\n  \"value\": \"230623\" },\n\n{\n  \"label\": \"杜尔伯特蒙古族自治县\",\n  \"value\": \"230624\" },\n\n{\n  \"label\": \"大庆高新技术产业开发区\",\n  \"value\": \"230671\" }],\n\n\n[{\n  \"label\": \"伊春区\",\n  \"value\": \"230702\" },\n\n{\n  \"label\": \"南岔区\",\n  \"value\": \"230703\" },\n\n{\n  \"label\": \"友好区\",\n  \"value\": \"230704\" },\n\n{\n  \"label\": \"西林区\",\n  \"value\": \"230705\" },\n\n{\n  \"label\": \"翠峦区\",\n  \"value\": \"230706\" },\n\n{\n  \"label\": \"新青区\",\n  \"value\": \"230707\" },\n\n{\n  \"label\": \"美溪区\",\n  \"value\": \"230708\" },\n\n{\n  \"label\": \"金山屯区\",\n  \"value\": \"230709\" },\n\n{\n  \"label\": \"五营区\",\n  \"value\": \"230710\" },\n\n{\n  \"label\": \"乌马河区\",\n  \"value\": \"230711\" },\n\n{\n  \"label\": \"汤旺河区\",\n  \"value\": \"230712\" },\n\n{\n  \"label\": \"带岭区\",\n  \"value\": \"230713\" },\n\n{\n  \"label\": \"乌伊岭区\",\n  \"value\": \"230714\" },\n\n{\n  \"label\": \"红星区\",\n  \"value\": \"230715\" },\n\n{\n  \"label\": \"上甘岭区\",\n  \"value\": \"230716\" },\n\n{\n  \"label\": \"嘉荫县\",\n  \"value\": \"230722\" },\n\n{\n  \"label\": \"铁力市\",\n  \"value\": \"230781\" }],\n\n\n[{\n  \"label\": \"向阳区\",\n  \"value\": \"230803\" },\n\n{\n  \"label\": \"前进区\",\n  \"value\": \"230804\" },\n\n{\n  \"label\": \"东风区\",\n  \"value\": \"230805\" },\n\n{\n  \"label\": \"郊区\",\n  \"value\": \"230811\" },\n\n{\n  \"label\": \"桦南县\",\n  \"value\": \"230822\" },\n\n{\n  \"label\": \"桦川县\",\n  \"value\": \"230826\" },\n\n{\n  \"label\": \"汤原县\",\n  \"value\": \"230828\" },\n\n{\n  \"label\": \"同江市\",\n  \"value\": \"230881\" },\n\n{\n  \"label\": \"富锦市\",\n  \"value\": \"230882\" },\n\n{\n  \"label\": \"抚远市\",\n  \"value\": \"230883\" }],\n\n\n[{\n  \"label\": \"新兴区\",\n  \"value\": \"230902\" },\n\n{\n  \"label\": \"桃山区\",\n  \"value\": \"230903\" },\n\n{\n  \"label\": \"茄子河区\",\n  \"value\": \"230904\" },\n\n{\n  \"label\": \"勃利县\",\n  \"value\": \"230921\" }],\n\n\n[{\n  \"label\": \"东安区\",\n  \"value\": \"231002\" },\n\n{\n  \"label\": \"阳明区\",\n  \"value\": \"231003\" },\n\n{\n  \"label\": \"爱民区\",\n  \"value\": \"231004\" },\n\n{\n  \"label\": \"西安区\",\n  \"value\": \"231005\" },\n\n{\n  \"label\": \"林口县\",\n  \"value\": \"231025\" },\n\n{\n  \"label\": \"牡丹江经济技术开发区\",\n  \"value\": \"231071\" },\n\n{\n  \"label\": \"绥芬河市\",\n  \"value\": \"231081\" },\n\n{\n  \"label\": \"海林市\",\n  \"value\": \"231083\" },\n\n{\n  \"label\": \"宁安市\",\n  \"value\": \"231084\" },\n\n{\n  \"label\": \"穆棱市\",\n  \"value\": \"231085\" },\n\n{\n  \"label\": \"东宁市\",\n  \"value\": \"231086\" }],\n\n\n[{\n  \"label\": \"爱辉区\",\n  \"value\": \"231102\" },\n\n{\n  \"label\": \"嫩江县\",\n  \"value\": \"231121\" },\n\n{\n  \"label\": \"逊克县\",\n  \"value\": \"231123\" },\n\n{\n  \"label\": \"孙吴县\",\n  \"value\": \"231124\" },\n\n{\n  \"label\": \"北安市\",\n  \"value\": \"231181\" },\n\n{\n  \"label\": \"五大连池市\",\n  \"value\": \"231182\" }],\n\n\n[{\n  \"label\": \"北林区\",\n  \"value\": \"231202\" },\n\n{\n  \"label\": \"望奎县\",\n  \"value\": \"231221\" },\n\n{\n  \"label\": \"兰西县\",\n  \"value\": \"231222\" },\n\n{\n  \"label\": \"青冈县\",\n  \"value\": \"231223\" },\n\n{\n  \"label\": \"庆安县\",\n  \"value\": \"231224\" },\n\n{\n  \"label\": \"明水县\",\n  \"value\": \"231225\" },\n\n{\n  \"label\": \"绥棱县\",\n  \"value\": \"231226\" },\n\n{\n  \"label\": \"安达市\",\n  \"value\": \"231281\" },\n\n{\n  \"label\": \"肇东市\",\n  \"value\": \"231282\" },\n\n{\n  \"label\": \"海伦市\",\n  \"value\": \"231283\" }],\n\n\n[{\n  \"label\": \"加格达奇区\",\n  \"value\": \"232701\" },\n\n{\n  \"label\": \"松岭区\",\n  \"value\": \"232702\" },\n\n{\n  \"label\": \"新林区\",\n  \"value\": \"232703\" },\n\n{\n  \"label\": \"呼中区\",\n  \"value\": \"232704\" },\n\n{\n  \"label\": \"呼玛县\",\n  \"value\": \"232721\" },\n\n{\n  \"label\": \"塔河县\",\n  \"value\": \"232722\" },\n\n{\n  \"label\": \"漠河县\",\n  \"value\": \"232723\" }]],\n\n\n\n[\n[{\n  \"label\": \"黄浦区\",\n  \"value\": \"310101\" },\n\n{\n  \"label\": \"徐汇区\",\n  \"value\": \"310104\" },\n\n{\n  \"label\": \"长宁区\",\n  \"value\": \"310105\" },\n\n{\n  \"label\": \"静安区\",\n  \"value\": \"310106\" },\n\n{\n  \"label\": \"普陀区\",\n  \"value\": \"310107\" },\n\n{\n  \"label\": \"虹口区\",\n  \"value\": \"310109\" },\n\n{\n  \"label\": \"杨浦区\",\n  \"value\": \"310110\" },\n\n{\n  \"label\": \"闵行区\",\n  \"value\": \"310112\" },\n\n{\n  \"label\": \"宝山区\",\n  \"value\": \"310113\" },\n\n{\n  \"label\": \"嘉定区\",\n  \"value\": \"310114\" },\n\n{\n  \"label\": \"浦东新区\",\n  \"value\": \"310115\" },\n\n{\n  \"label\": \"金山区\",\n  \"value\": \"310116\" },\n\n{\n  \"label\": \"松江区\",\n  \"value\": \"310117\" },\n\n{\n  \"label\": \"青浦区\",\n  \"value\": \"310118\" },\n\n{\n  \"label\": \"奉贤区\",\n  \"value\": \"310120\" },\n\n{\n  \"label\": \"崇明区\",\n  \"value\": \"310151\" }]],\n\n\n\n[\n[{\n  \"label\": \"玄武区\",\n  \"value\": \"320102\" },\n\n{\n  \"label\": \"秦淮区\",\n  \"value\": \"320104\" },\n\n{\n  \"label\": \"建邺区\",\n  \"value\": \"320105\" },\n\n{\n  \"label\": \"鼓楼区\",\n  \"value\": \"320106\" },\n\n{\n  \"label\": \"浦口区\",\n  \"value\": \"320111\" },\n\n{\n  \"label\": \"栖霞区\",\n  \"value\": \"320113\" },\n\n{\n  \"label\": \"雨花台区\",\n  \"value\": \"320114\" },\n\n{\n  \"label\": \"江宁区\",\n  \"value\": \"320115\" },\n\n{\n  \"label\": \"六合区\",\n  \"value\": \"320116\" },\n\n{\n  \"label\": \"溧水区\",\n  \"value\": \"320117\" },\n\n{\n  \"label\": \"高淳区\",\n  \"value\": \"320118\" }],\n\n\n[{\n  \"label\": \"锡山区\",\n  \"value\": \"320205\" },\n\n{\n  \"label\": \"惠山区\",\n  \"value\": \"320206\" },\n\n{\n  \"label\": \"滨湖区\",\n  \"value\": \"320211\" },\n\n{\n  \"label\": \"梁溪区\",\n  \"value\": \"320213\" },\n\n{\n  \"label\": \"新吴区\",\n  \"value\": \"320214\" },\n\n{\n  \"label\": \"江阴市\",\n  \"value\": \"320281\" },\n\n{\n  \"label\": \"宜兴市\",\n  \"value\": \"320282\" }],\n\n\n[{\n  \"label\": \"鼓楼区\",\n  \"value\": \"320302\" },\n\n{\n  \"label\": \"云龙区\",\n  \"value\": \"320303\" },\n\n{\n  \"label\": \"贾汪区\",\n  \"value\": \"320305\" },\n\n{\n  \"label\": \"泉山区\",\n  \"value\": \"320311\" },\n\n{\n  \"label\": \"铜山区\",\n  \"value\": \"320312\" },\n\n{\n  \"label\": \"丰县\",\n  \"value\": \"320321\" },\n\n{\n  \"label\": \"沛县\",\n  \"value\": \"320322\" },\n\n{\n  \"label\": \"睢宁县\",\n  \"value\": \"320324\" },\n\n{\n  \"label\": \"徐州经济技术开发区\",\n  \"value\": \"320371\" },\n\n{\n  \"label\": \"新沂市\",\n  \"value\": \"320381\" },\n\n{\n  \"label\": \"邳州市\",\n  \"value\": \"320382\" }],\n\n\n[{\n  \"label\": \"天宁区\",\n  \"value\": \"320402\" },\n\n{\n  \"label\": \"钟楼区\",\n  \"value\": \"320404\" },\n\n{\n  \"label\": \"新北区\",\n  \"value\": \"320411\" },\n\n{\n  \"label\": \"武进区\",\n  \"value\": \"320412\" },\n\n{\n  \"label\": \"金坛区\",\n  \"value\": \"320413\" },\n\n{\n  \"label\": \"溧阳市\",\n  \"value\": \"320481\" }],\n\n\n[{\n  \"label\": \"虎丘区\",\n  \"value\": \"320505\" },\n\n{\n  \"label\": \"吴中区\",\n  \"value\": \"320506\" },\n\n{\n  \"label\": \"相城区\",\n  \"value\": \"320507\" },\n\n{\n  \"label\": \"姑苏区\",\n  \"value\": \"320508\" },\n\n{\n  \"label\": \"吴江区\",\n  \"value\": \"320509\" },\n\n{\n  \"label\": \"苏州工业园区\",\n  \"value\": \"320571\" },\n\n{\n  \"label\": \"常熟市\",\n  \"value\": \"320581\" },\n\n{\n  \"label\": \"张家港市\",\n  \"value\": \"320582\" },\n\n{\n  \"label\": \"昆山市\",\n  \"value\": \"320583\" },\n\n{\n  \"label\": \"太仓市\",\n  \"value\": \"320585\" }],\n\n\n[{\n  \"label\": \"崇川区\",\n  \"value\": \"320602\" },\n\n{\n  \"label\": \"港闸区\",\n  \"value\": \"320611\" },\n\n{\n  \"label\": \"通州区\",\n  \"value\": \"320612\" },\n\n{\n  \"label\": \"海安县\",\n  \"value\": \"320621\" },\n\n{\n  \"label\": \"如东县\",\n  \"value\": \"320623\" },\n\n{\n  \"label\": \"南通经济技术开发区\",\n  \"value\": \"320671\" },\n\n{\n  \"label\": \"启东市\",\n  \"value\": \"320681\" },\n\n{\n  \"label\": \"如皋市\",\n  \"value\": \"320682\" },\n\n{\n  \"label\": \"海门市\",\n  \"value\": \"320684\" }],\n\n\n[{\n  \"label\": \"连云区\",\n  \"value\": \"320703\" },\n\n{\n  \"label\": \"海州区\",\n  \"value\": \"320706\" },\n\n{\n  \"label\": \"赣榆区\",\n  \"value\": \"320707\" },\n\n{\n  \"label\": \"东海县\",\n  \"value\": \"320722\" },\n\n{\n  \"label\": \"灌云县\",\n  \"value\": \"320723\" },\n\n{\n  \"label\": \"灌南县\",\n  \"value\": \"320724\" },\n\n{\n  \"label\": \"连云港经济技术开发区\",\n  \"value\": \"320771\" },\n\n{\n  \"label\": \"连云港高新技术产业开发区\",\n  \"value\": \"320772\" }],\n\n\n[{\n  \"label\": \"淮安区\",\n  \"value\": \"320803\" },\n\n{\n  \"label\": \"淮阴区\",\n  \"value\": \"320804\" },\n\n{\n  \"label\": \"清江浦区\",\n  \"value\": \"320812\" },\n\n{\n  \"label\": \"洪泽区\",\n  \"value\": \"320813\" },\n\n{\n  \"label\": \"涟水县\",\n  \"value\": \"320826\" },\n\n{\n  \"label\": \"盱眙县\",\n  \"value\": \"320830\" },\n\n{\n  \"label\": \"金湖县\",\n  \"value\": \"320831\" },\n\n{\n  \"label\": \"淮安经济技术开发区\",\n  \"value\": \"320871\" }],\n\n\n[{\n  \"label\": \"亭湖区\",\n  \"value\": \"320902\" },\n\n{\n  \"label\": \"盐都区\",\n  \"value\": \"320903\" },\n\n{\n  \"label\": \"大丰区\",\n  \"value\": \"320904\" },\n\n{\n  \"label\": \"响水县\",\n  \"value\": \"320921\" },\n\n{\n  \"label\": \"滨海县\",\n  \"value\": \"320922\" },\n\n{\n  \"label\": \"阜宁县\",\n  \"value\": \"320923\" },\n\n{\n  \"label\": \"射阳县\",\n  \"value\": \"320924\" },\n\n{\n  \"label\": \"建湖县\",\n  \"value\": \"320925\" },\n\n{\n  \"label\": \"盐城经济技术开发区\",\n  \"value\": \"320971\" },\n\n{\n  \"label\": \"东台市\",\n  \"value\": \"320981\" }],\n\n\n[{\n  \"label\": \"广陵区\",\n  \"value\": \"321002\" },\n\n{\n  \"label\": \"邗江区\",\n  \"value\": \"321003\" },\n\n{\n  \"label\": \"江都区\",\n  \"value\": \"321012\" },\n\n{\n  \"label\": \"宝应县\",\n  \"value\": \"321023\" },\n\n{\n  \"label\": \"扬州经济技术开发区\",\n  \"value\": \"321071\" },\n\n{\n  \"label\": \"仪征市\",\n  \"value\": \"321081\" },\n\n{\n  \"label\": \"高邮市\",\n  \"value\": \"321084\" }],\n\n\n[{\n  \"label\": \"京口区\",\n  \"value\": \"321102\" },\n\n{\n  \"label\": \"润州区\",\n  \"value\": \"321111\" },\n\n{\n  \"label\": \"丹徒区\",\n  \"value\": \"321112\" },\n\n{\n  \"label\": \"镇江新区\",\n  \"value\": \"321171\" },\n\n{\n  \"label\": \"丹阳市\",\n  \"value\": \"321181\" },\n\n{\n  \"label\": \"扬中市\",\n  \"value\": \"321182\" },\n\n{\n  \"label\": \"句容市\",\n  \"value\": \"321183\" }],\n\n\n[{\n  \"label\": \"海陵区\",\n  \"value\": \"321202\" },\n\n{\n  \"label\": \"高港区\",\n  \"value\": \"321203\" },\n\n{\n  \"label\": \"姜堰区\",\n  \"value\": \"321204\" },\n\n{\n  \"label\": \"泰州医药高新技术产业开发区\",\n  \"value\": \"321271\" },\n\n{\n  \"label\": \"兴化市\",\n  \"value\": \"321281\" },\n\n{\n  \"label\": \"靖江市\",\n  \"value\": \"321282\" },\n\n{\n  \"label\": \"泰兴市\",\n  \"value\": \"321283\" }],\n\n\n[{\n  \"label\": \"宿城区\",\n  \"value\": \"321302\" },\n\n{\n  \"label\": \"宿豫区\",\n  \"value\": \"321311\" },\n\n{\n  \"label\": \"沭阳县\",\n  \"value\": \"321322\" },\n\n{\n  \"label\": \"泗阳县\",\n  \"value\": \"321323\" },\n\n{\n  \"label\": \"泗洪县\",\n  \"value\": \"321324\" },\n\n{\n  \"label\": \"宿迁经济技术开发区\",\n  \"value\": \"321371\" }]],\n\n\n\n[\n[{\n  \"label\": \"上城区\",\n  \"value\": \"330102\" },\n\n{\n  \"label\": \"下城区\",\n  \"value\": \"330103\" },\n\n{\n  \"label\": \"江干区\",\n  \"value\": \"330104\" },\n\n{\n  \"label\": \"拱墅区\",\n  \"value\": \"330105\" },\n\n{\n  \"label\": \"西湖区\",\n  \"value\": \"330106\" },\n\n{\n  \"label\": \"滨江区\",\n  \"value\": \"330108\" },\n\n{\n  \"label\": \"萧山区\",\n  \"value\": \"330109\" },\n\n{\n  \"label\": \"余杭区\",\n  \"value\": \"330110\" },\n\n{\n  \"label\": \"富阳区\",\n  \"value\": \"330111\" },\n\n{\n  \"label\": \"临安区\",\n  \"value\": \"330112\" },\n\n{\n  \"label\": \"桐庐县\",\n  \"value\": \"330122\" },\n\n{\n  \"label\": \"淳安县\",\n  \"value\": \"330127\" },\n\n{\n  \"label\": \"建德市\",\n  \"value\": \"330182\" }],\n\n\n[{\n  \"label\": \"海曙区\",\n  \"value\": \"330203\" },\n\n{\n  \"label\": \"江北区\",\n  \"value\": \"330205\" },\n\n{\n  \"label\": \"北仑区\",\n  \"value\": \"330206\" },\n\n{\n  \"label\": \"镇海区\",\n  \"value\": \"330211\" },\n\n{\n  \"label\": \"鄞州区\",\n  \"value\": \"330212\" },\n\n{\n  \"label\": \"奉化区\",\n  \"value\": \"330213\" },\n\n{\n  \"label\": \"象山县\",\n  \"value\": \"330225\" },\n\n{\n  \"label\": \"宁海县\",\n  \"value\": \"330226\" },\n\n{\n  \"label\": \"余姚市\",\n  \"value\": \"330281\" },\n\n{\n  \"label\": \"慈溪市\",\n  \"value\": \"330282\" }],\n\n\n[{\n  \"label\": \"鹿城区\",\n  \"value\": \"330302\" },\n\n{\n  \"label\": \"龙湾区\",\n  \"value\": \"330303\" },\n\n{\n  \"label\": \"瓯海区\",\n  \"value\": \"330304\" },\n\n{\n  \"label\": \"洞头区\",\n  \"value\": \"330305\" },\n\n{\n  \"label\": \"永嘉县\",\n  \"value\": \"330324\" },\n\n{\n  \"label\": \"平阳县\",\n  \"value\": \"330326\" },\n\n{\n  \"label\": \"苍南县\",\n  \"value\": \"330327\" },\n\n{\n  \"label\": \"文成县\",\n  \"value\": \"330328\" },\n\n{\n  \"label\": \"泰顺县\",\n  \"value\": \"330329\" },\n\n{\n  \"label\": \"温州经济技术开发区\",\n  \"value\": \"330371\" },\n\n{\n  \"label\": \"瑞安市\",\n  \"value\": \"330381\" },\n\n{\n  \"label\": \"乐清市\",\n  \"value\": \"330382\" }],\n\n\n[{\n  \"label\": \"南湖区\",\n  \"value\": \"330402\" },\n\n{\n  \"label\": \"秀洲区\",\n  \"value\": \"330411\" },\n\n{\n  \"label\": \"嘉善县\",\n  \"value\": \"330421\" },\n\n{\n  \"label\": \"海盐县\",\n  \"value\": \"330424\" },\n\n{\n  \"label\": \"海宁市\",\n  \"value\": \"330481\" },\n\n{\n  \"label\": \"平湖市\",\n  \"value\": \"330482\" },\n\n{\n  \"label\": \"桐乡市\",\n  \"value\": \"330483\" }],\n\n\n[{\n  \"label\": \"吴兴区\",\n  \"value\": \"330502\" },\n\n{\n  \"label\": \"南浔区\",\n  \"value\": \"330503\" },\n\n{\n  \"label\": \"德清县\",\n  \"value\": \"330521\" },\n\n{\n  \"label\": \"长兴县\",\n  \"value\": \"330522\" },\n\n{\n  \"label\": \"安吉县\",\n  \"value\": \"330523\" }],\n\n\n[{\n  \"label\": \"越城区\",\n  \"value\": \"330602\" },\n\n{\n  \"label\": \"柯桥区\",\n  \"value\": \"330603\" },\n\n{\n  \"label\": \"上虞区\",\n  \"value\": \"330604\" },\n\n{\n  \"label\": \"新昌县\",\n  \"value\": \"330624\" },\n\n{\n  \"label\": \"诸暨市\",\n  \"value\": \"330681\" },\n\n{\n  \"label\": \"嵊州市\",\n  \"value\": \"330683\" }],\n\n\n[{\n  \"label\": \"婺城区\",\n  \"value\": \"330702\" },\n\n{\n  \"label\": \"金东区\",\n  \"value\": \"330703\" },\n\n{\n  \"label\": \"武义县\",\n  \"value\": \"330723\" },\n\n{\n  \"label\": \"浦江县\",\n  \"value\": \"330726\" },\n\n{\n  \"label\": \"磐安县\",\n  \"value\": \"330727\" },\n\n{\n  \"label\": \"兰溪市\",\n  \"value\": \"330781\" },\n\n{\n  \"label\": \"义乌市\",\n  \"value\": \"330782\" },\n\n{\n  \"label\": \"东阳市\",\n  \"value\": \"330783\" },\n\n{\n  \"label\": \"永康市\",\n  \"value\": \"330784\" }],\n\n\n[{\n  \"label\": \"柯城区\",\n  \"value\": \"330802\" },\n\n{\n  \"label\": \"衢江区\",\n  \"value\": \"330803\" },\n\n{\n  \"label\": \"常山县\",\n  \"value\": \"330822\" },\n\n{\n  \"label\": \"开化县\",\n  \"value\": \"330824\" },\n\n{\n  \"label\": \"龙游县\",\n  \"value\": \"330825\" },\n\n{\n  \"label\": \"江山市\",\n  \"value\": \"330881\" }],\n\n\n[{\n  \"label\": \"定海区\",\n  \"value\": \"330902\" },\n\n{\n  \"label\": \"普陀区\",\n  \"value\": \"330903\" },\n\n{\n  \"label\": \"岱山县\",\n  \"value\": \"330921\" },\n\n{\n  \"label\": \"嵊泗县\",\n  \"value\": \"330922\" }],\n\n\n[{\n  \"label\": \"椒江区\",\n  \"value\": \"331002\" },\n\n{\n  \"label\": \"黄岩区\",\n  \"value\": \"331003\" },\n\n{\n  \"label\": \"路桥区\",\n  \"value\": \"331004\" },\n\n{\n  \"label\": \"三门县\",\n  \"value\": \"331022\" },\n\n{\n  \"label\": \"天台县\",\n  \"value\": \"331023\" },\n\n{\n  \"label\": \"仙居县\",\n  \"value\": \"331024\" },\n\n{\n  \"label\": \"温岭市\",\n  \"value\": \"331081\" },\n\n{\n  \"label\": \"临海市\",\n  \"value\": \"331082\" },\n\n{\n  \"label\": \"玉环市\",\n  \"value\": \"331083\" }],\n\n\n[{\n  \"label\": \"莲都区\",\n  \"value\": \"331102\" },\n\n{\n  \"label\": \"青田县\",\n  \"value\": \"331121\" },\n\n{\n  \"label\": \"缙云县\",\n  \"value\": \"331122\" },\n\n{\n  \"label\": \"遂昌县\",\n  \"value\": \"331123\" },\n\n{\n  \"label\": \"松阳县\",\n  \"value\": \"331124\" },\n\n{\n  \"label\": \"云和县\",\n  \"value\": \"331125\" },\n\n{\n  \"label\": \"庆元县\",\n  \"value\": \"331126\" },\n\n{\n  \"label\": \"景宁畲族自治县\",\n  \"value\": \"331127\" },\n\n{\n  \"label\": \"龙泉市\",\n  \"value\": \"331181\" }]],\n\n\n\n[\n[{\n  \"label\": \"瑶海区\",\n  \"value\": \"340102\" },\n\n{\n  \"label\": \"庐阳区\",\n  \"value\": \"340103\" },\n\n{\n  \"label\": \"蜀山区\",\n  \"value\": \"340104\" },\n\n{\n  \"label\": \"包河区\",\n  \"value\": \"340111\" },\n\n{\n  \"label\": \"长丰县\",\n  \"value\": \"340121\" },\n\n{\n  \"label\": \"肥东县\",\n  \"value\": \"340122\" },\n\n{\n  \"label\": \"肥西县\",\n  \"value\": \"340123\" },\n\n{\n  \"label\": \"庐江县\",\n  \"value\": \"340124\" },\n\n{\n  \"label\": \"合肥高新技术产业开发区\",\n  \"value\": \"340171\" },\n\n{\n  \"label\": \"合肥经济技术开发区\",\n  \"value\": \"340172\" },\n\n{\n  \"label\": \"合肥新站高新技术产业开发区\",\n  \"value\": \"340173\" },\n\n{\n  \"label\": \"巢湖市\",\n  \"value\": \"340181\" }],\n\n\n[{\n  \"label\": \"镜湖区\",\n  \"value\": \"340202\" },\n\n{\n  \"label\": \"弋江区\",\n  \"value\": \"340203\" },\n\n{\n  \"label\": \"鸠江区\",\n  \"value\": \"340207\" },\n\n{\n  \"label\": \"三山区\",\n  \"value\": \"340208\" },\n\n{\n  \"label\": \"芜湖县\",\n  \"value\": \"340221\" },\n\n{\n  \"label\": \"繁昌县\",\n  \"value\": \"340222\" },\n\n{\n  \"label\": \"南陵县\",\n  \"value\": \"340223\" },\n\n{\n  \"label\": \"无为县\",\n  \"value\": \"340225\" },\n\n{\n  \"label\": \"芜湖经济技术开发区\",\n  \"value\": \"340271\" },\n\n{\n  \"label\": \"安徽芜湖长江大桥经济开发区\",\n  \"value\": \"340272\" }],\n\n\n[{\n  \"label\": \"龙子湖区\",\n  \"value\": \"340302\" },\n\n{\n  \"label\": \"蚌山区\",\n  \"value\": \"340303\" },\n\n{\n  \"label\": \"禹会区\",\n  \"value\": \"340304\" },\n\n{\n  \"label\": \"淮上区\",\n  \"value\": \"340311\" },\n\n{\n  \"label\": \"怀远县\",\n  \"value\": \"340321\" },\n\n{\n  \"label\": \"五河县\",\n  \"value\": \"340322\" },\n\n{\n  \"label\": \"固镇县\",\n  \"value\": \"340323\" },\n\n{\n  \"label\": \"蚌埠市高新技术开发区\",\n  \"value\": \"340371\" },\n\n{\n  \"label\": \"蚌埠市经济开发区\",\n  \"value\": \"340372\" }],\n\n\n[{\n  \"label\": \"大通区\",\n  \"value\": \"340402\" },\n\n{\n  \"label\": \"田家庵区\",\n  \"value\": \"340403\" },\n\n{\n  \"label\": \"谢家集区\",\n  \"value\": \"340404\" },\n\n{\n  \"label\": \"八公山区\",\n  \"value\": \"340405\" },\n\n{\n  \"label\": \"潘集区\",\n  \"value\": \"340406\" },\n\n{\n  \"label\": \"凤台县\",\n  \"value\": \"340421\" },\n\n{\n  \"label\": \"寿县\",\n  \"value\": \"340422\" }],\n\n\n[{\n  \"label\": \"花山区\",\n  \"value\": \"340503\" },\n\n{\n  \"label\": \"雨山区\",\n  \"value\": \"340504\" },\n\n{\n  \"label\": \"博望区\",\n  \"value\": \"340506\" },\n\n{\n  \"label\": \"当涂县\",\n  \"value\": \"340521\" },\n\n{\n  \"label\": \"含山县\",\n  \"value\": \"340522\" },\n\n{\n  \"label\": \"和县\",\n  \"value\": \"340523\" }],\n\n\n[{\n  \"label\": \"杜集区\",\n  \"value\": \"340602\" },\n\n{\n  \"label\": \"相山区\",\n  \"value\": \"340603\" },\n\n{\n  \"label\": \"烈山区\",\n  \"value\": \"340604\" },\n\n{\n  \"label\": \"濉溪县\",\n  \"value\": \"340621\" }],\n\n\n[{\n  \"label\": \"铜官区\",\n  \"value\": \"340705\" },\n\n{\n  \"label\": \"义安区\",\n  \"value\": \"340706\" },\n\n{\n  \"label\": \"郊区\",\n  \"value\": \"340711\" },\n\n{\n  \"label\": \"枞阳县\",\n  \"value\": \"340722\" }],\n\n\n[{\n  \"label\": \"迎江区\",\n  \"value\": \"340802\" },\n\n{\n  \"label\": \"大观区\",\n  \"value\": \"340803\" },\n\n{\n  \"label\": \"宜秀区\",\n  \"value\": \"340811\" },\n\n{\n  \"label\": \"怀宁县\",\n  \"value\": \"340822\" },\n\n{\n  \"label\": \"潜山县\",\n  \"value\": \"340824\" },\n\n{\n  \"label\": \"太湖县\",\n  \"value\": \"340825\" },\n\n{\n  \"label\": \"宿松县\",\n  \"value\": \"340826\" },\n\n{\n  \"label\": \"望江县\",\n  \"value\": \"340827\" },\n\n{\n  \"label\": \"岳西县\",\n  \"value\": \"340828\" },\n\n{\n  \"label\": \"安徽安庆经济开发区\",\n  \"value\": \"340871\" },\n\n{\n  \"label\": \"桐城市\",\n  \"value\": \"340881\" }],\n\n\n[{\n  \"label\": \"屯溪区\",\n  \"value\": \"341002\" },\n\n{\n  \"label\": \"黄山区\",\n  \"value\": \"341003\" },\n\n{\n  \"label\": \"徽州区\",\n  \"value\": \"341004\" },\n\n{\n  \"label\": \"歙县\",\n  \"value\": \"341021\" },\n\n{\n  \"label\": \"休宁县\",\n  \"value\": \"341022\" },\n\n{\n  \"label\": \"黟县\",\n  \"value\": \"341023\" },\n\n{\n  \"label\": \"祁门县\",\n  \"value\": \"341024\" }],\n\n\n[{\n  \"label\": \"琅琊区\",\n  \"value\": \"341102\" },\n\n{\n  \"label\": \"南谯区\",\n  \"value\": \"341103\" },\n\n{\n  \"label\": \"来安县\",\n  \"value\": \"341122\" },\n\n{\n  \"label\": \"全椒县\",\n  \"value\": \"341124\" },\n\n{\n  \"label\": \"定远县\",\n  \"value\": \"341125\" },\n\n{\n  \"label\": \"凤阳县\",\n  \"value\": \"341126\" },\n\n{\n  \"label\": \"苏滁现代产业园\",\n  \"value\": \"341171\" },\n\n{\n  \"label\": \"滁州经济技术开发区\",\n  \"value\": \"341172\" },\n\n{\n  \"label\": \"天长市\",\n  \"value\": \"341181\" },\n\n{\n  \"label\": \"明光市\",\n  \"value\": \"341182\" }],\n\n\n[{\n  \"label\": \"颍州区\",\n  \"value\": \"341202\" },\n\n{\n  \"label\": \"颍东区\",\n  \"value\": \"341203\" },\n\n{\n  \"label\": \"颍泉区\",\n  \"value\": \"341204\" },\n\n{\n  \"label\": \"临泉县\",\n  \"value\": \"341221\" },\n\n{\n  \"label\": \"太和县\",\n  \"value\": \"341222\" },\n\n{\n  \"label\": \"阜南县\",\n  \"value\": \"341225\" },\n\n{\n  \"label\": \"颍上县\",\n  \"value\": \"341226\" },\n\n{\n  \"label\": \"阜阳合肥现代产业园区\",\n  \"value\": \"341271\" },\n\n{\n  \"label\": \"阜阳经济技术开发区\",\n  \"value\": \"341272\" },\n\n{\n  \"label\": \"界首市\",\n  \"value\": \"341282\" }],\n\n\n[{\n  \"label\": \"埇桥区\",\n  \"value\": \"341302\" },\n\n{\n  \"label\": \"砀山县\",\n  \"value\": \"341321\" },\n\n{\n  \"label\": \"萧县\",\n  \"value\": \"341322\" },\n\n{\n  \"label\": \"灵璧县\",\n  \"value\": \"341323\" },\n\n{\n  \"label\": \"泗县\",\n  \"value\": \"341324\" },\n\n{\n  \"label\": \"宿州马鞍山现代产业园区\",\n  \"value\": \"341371\" },\n\n{\n  \"label\": \"宿州经济技术开发区\",\n  \"value\": \"341372\" }],\n\n\n[{\n  \"label\": \"金安区\",\n  \"value\": \"341502\" },\n\n{\n  \"label\": \"裕安区\",\n  \"value\": \"341503\" },\n\n{\n  \"label\": \"叶集区\",\n  \"value\": \"341504\" },\n\n{\n  \"label\": \"霍邱县\",\n  \"value\": \"341522\" },\n\n{\n  \"label\": \"舒城县\",\n  \"value\": \"341523\" },\n\n{\n  \"label\": \"金寨县\",\n  \"value\": \"341524\" },\n\n{\n  \"label\": \"霍山县\",\n  \"value\": \"341525\" }],\n\n\n[{\n  \"label\": \"谯城区\",\n  \"value\": \"341602\" },\n\n{\n  \"label\": \"涡阳县\",\n  \"value\": \"341621\" },\n\n{\n  \"label\": \"蒙城县\",\n  \"value\": \"341622\" },\n\n{\n  \"label\": \"利辛县\",\n  \"value\": \"341623\" }],\n\n\n[{\n  \"label\": \"贵池区\",\n  \"value\": \"341702\" },\n\n{\n  \"label\": \"东至县\",\n  \"value\": \"341721\" },\n\n{\n  \"label\": \"石台县\",\n  \"value\": \"341722\" },\n\n{\n  \"label\": \"青阳县\",\n  \"value\": \"341723\" }],\n\n\n[{\n  \"label\": \"宣州区\",\n  \"value\": \"341802\" },\n\n{\n  \"label\": \"郎溪县\",\n  \"value\": \"341821\" },\n\n{\n  \"label\": \"广德县\",\n  \"value\": \"341822\" },\n\n{\n  \"label\": \"泾县\",\n  \"value\": \"341823\" },\n\n{\n  \"label\": \"绩溪县\",\n  \"value\": \"341824\" },\n\n{\n  \"label\": \"旌德县\",\n  \"value\": \"341825\" },\n\n{\n  \"label\": \"宣城市经济开发区\",\n  \"value\": \"341871\" },\n\n{\n  \"label\": \"宁国市\",\n  \"value\": \"341881\" }]],\n\n\n\n[\n[{\n  \"label\": \"鼓楼区\",\n  \"value\": \"350102\" },\n\n{\n  \"label\": \"台江区\",\n  \"value\": \"350103\" },\n\n{\n  \"label\": \"仓山区\",\n  \"value\": \"350104\" },\n\n{\n  \"label\": \"马尾区\",\n  \"value\": \"350105\" },\n\n{\n  \"label\": \"晋安区\",\n  \"value\": \"350111\" },\n\n{\n  \"label\": \"闽侯县\",\n  \"value\": \"350121\" },\n\n{\n  \"label\": \"连江县\",\n  \"value\": \"350122\" },\n\n{\n  \"label\": \"罗源县\",\n  \"value\": \"350123\" },\n\n{\n  \"label\": \"闽清县\",\n  \"value\": \"350124\" },\n\n{\n  \"label\": \"永泰县\",\n  \"value\": \"350125\" },\n\n{\n  \"label\": \"平潭县\",\n  \"value\": \"350128\" },\n\n{\n  \"label\": \"福清市\",\n  \"value\": \"350181\" },\n\n{\n  \"label\": \"长乐市\",\n  \"value\": \"350182\" }],\n\n\n[{\n  \"label\": \"思明区\",\n  \"value\": \"350203\" },\n\n{\n  \"label\": \"海沧区\",\n  \"value\": \"350205\" },\n\n{\n  \"label\": \"湖里区\",\n  \"value\": \"350206\" },\n\n{\n  \"label\": \"集美区\",\n  \"value\": \"350211\" },\n\n{\n  \"label\": \"同安区\",\n  \"value\": \"350212\" },\n\n{\n  \"label\": \"翔安区\",\n  \"value\": \"350213\" }],\n\n\n[{\n  \"label\": \"城厢区\",\n  \"value\": \"350302\" },\n\n{\n  \"label\": \"涵江区\",\n  \"value\": \"350303\" },\n\n{\n  \"label\": \"荔城区\",\n  \"value\": \"350304\" },\n\n{\n  \"label\": \"秀屿区\",\n  \"value\": \"350305\" },\n\n{\n  \"label\": \"仙游县\",\n  \"value\": \"350322\" }],\n\n\n[{\n  \"label\": \"梅列区\",\n  \"value\": \"350402\" },\n\n{\n  \"label\": \"三元区\",\n  \"value\": \"350403\" },\n\n{\n  \"label\": \"明溪县\",\n  \"value\": \"350421\" },\n\n{\n  \"label\": \"清流县\",\n  \"value\": \"350423\" },\n\n{\n  \"label\": \"宁化县\",\n  \"value\": \"350424\" },\n\n{\n  \"label\": \"大田县\",\n  \"value\": \"350425\" },\n\n{\n  \"label\": \"尤溪县\",\n  \"value\": \"350426\" },\n\n{\n  \"label\": \"沙县\",\n  \"value\": \"350427\" },\n\n{\n  \"label\": \"将乐县\",\n  \"value\": \"350428\" },\n\n{\n  \"label\": \"泰宁县\",\n  \"value\": \"350429\" },\n\n{\n  \"label\": \"建宁县\",\n  \"value\": \"350430\" },\n\n{\n  \"label\": \"永安市\",\n  \"value\": \"350481\" }],\n\n\n[{\n  \"label\": \"鲤城区\",\n  \"value\": \"350502\" },\n\n{\n  \"label\": \"丰泽区\",\n  \"value\": \"350503\" },\n\n{\n  \"label\": \"洛江区\",\n  \"value\": \"350504\" },\n\n{\n  \"label\": \"泉港区\",\n  \"value\": \"350505\" },\n\n{\n  \"label\": \"惠安县\",\n  \"value\": \"350521\" },\n\n{\n  \"label\": \"安溪县\",\n  \"value\": \"350524\" },\n\n{\n  \"label\": \"永春县\",\n  \"value\": \"350525\" },\n\n{\n  \"label\": \"德化县\",\n  \"value\": \"350526\" },\n\n{\n  \"label\": \"金门县\",\n  \"value\": \"350527\" },\n\n{\n  \"label\": \"石狮市\",\n  \"value\": \"350581\" },\n\n{\n  \"label\": \"晋江市\",\n  \"value\": \"350582\" },\n\n{\n  \"label\": \"南安市\",\n  \"value\": \"350583\" }],\n\n\n[{\n  \"label\": \"芗城区\",\n  \"value\": \"350602\" },\n\n{\n  \"label\": \"龙文区\",\n  \"value\": \"350603\" },\n\n{\n  \"label\": \"云霄县\",\n  \"value\": \"350622\" },\n\n{\n  \"label\": \"漳浦县\",\n  \"value\": \"350623\" },\n\n{\n  \"label\": \"诏安县\",\n  \"value\": \"350624\" },\n\n{\n  \"label\": \"长泰县\",\n  \"value\": \"350625\" },\n\n{\n  \"label\": \"东山县\",\n  \"value\": \"350626\" },\n\n{\n  \"label\": \"南靖县\",\n  \"value\": \"350627\" },\n\n{\n  \"label\": \"平和县\",\n  \"value\": \"350628\" },\n\n{\n  \"label\": \"华安县\",\n  \"value\": \"350629\" },\n\n{\n  \"label\": \"龙海市\",\n  \"value\": \"350681\" }],\n\n\n[{\n  \"label\": \"延平区\",\n  \"value\": \"350702\" },\n\n{\n  \"label\": \"建阳区\",\n  \"value\": \"350703\" },\n\n{\n  \"label\": \"顺昌县\",\n  \"value\": \"350721\" },\n\n{\n  \"label\": \"浦城县\",\n  \"value\": \"350722\" },\n\n{\n  \"label\": \"光泽县\",\n  \"value\": \"350723\" },\n\n{\n  \"label\": \"松溪县\",\n  \"value\": \"350724\" },\n\n{\n  \"label\": \"政和县\",\n  \"value\": \"350725\" },\n\n{\n  \"label\": \"邵武市\",\n  \"value\": \"350781\" },\n\n{\n  \"label\": \"武夷山市\",\n  \"value\": \"350782\" },\n\n{\n  \"label\": \"建瓯市\",\n  \"value\": \"350783\" }],\n\n\n[{\n  \"label\": \"新罗区\",\n  \"value\": \"350802\" },\n\n{\n  \"label\": \"永定区\",\n  \"value\": \"350803\" },\n\n{\n  \"label\": \"长汀县\",\n  \"value\": \"350821\" },\n\n{\n  \"label\": \"上杭县\",\n  \"value\": \"350823\" },\n\n{\n  \"label\": \"武平县\",\n  \"value\": \"350824\" },\n\n{\n  \"label\": \"连城县\",\n  \"value\": \"350825\" },\n\n{\n  \"label\": \"漳平市\",\n  \"value\": \"350881\" }],\n\n\n[{\n  \"label\": \"蕉城区\",\n  \"value\": \"350902\" },\n\n{\n  \"label\": \"霞浦县\",\n  \"value\": \"350921\" },\n\n{\n  \"label\": \"古田县\",\n  \"value\": \"350922\" },\n\n{\n  \"label\": \"屏南县\",\n  \"value\": \"350923\" },\n\n{\n  \"label\": \"寿宁县\",\n  \"value\": \"350924\" },\n\n{\n  \"label\": \"周宁县\",\n  \"value\": \"350925\" },\n\n{\n  \"label\": \"柘荣县\",\n  \"value\": \"350926\" },\n\n{\n  \"label\": \"福安市\",\n  \"value\": \"350981\" },\n\n{\n  \"label\": \"福鼎市\",\n  \"value\": \"350982\" }]],\n\n\n\n[\n[{\n  \"label\": \"东湖区\",\n  \"value\": \"360102\" },\n\n{\n  \"label\": \"西湖区\",\n  \"value\": \"360103\" },\n\n{\n  \"label\": \"青云谱区\",\n  \"value\": \"360104\" },\n\n{\n  \"label\": \"湾里区\",\n  \"value\": \"360105\" },\n\n{\n  \"label\": \"青山湖区\",\n  \"value\": \"360111\" },\n\n{\n  \"label\": \"新建区\",\n  \"value\": \"360112\" },\n\n{\n  \"label\": \"南昌县\",\n  \"value\": \"360121\" },\n\n{\n  \"label\": \"安义县\",\n  \"value\": \"360123\" },\n\n{\n  \"label\": \"进贤县\",\n  \"value\": \"360124\" }],\n\n\n[{\n  \"label\": \"昌江区\",\n  \"value\": \"360202\" },\n\n{\n  \"label\": \"珠山区\",\n  \"value\": \"360203\" },\n\n{\n  \"label\": \"浮梁县\",\n  \"value\": \"360222\" },\n\n{\n  \"label\": \"乐平市\",\n  \"value\": \"360281\" }],\n\n\n[{\n  \"label\": \"安源区\",\n  \"value\": \"360302\" },\n\n{\n  \"label\": \"湘东区\",\n  \"value\": \"360313\" },\n\n{\n  \"label\": \"莲花县\",\n  \"value\": \"360321\" },\n\n{\n  \"label\": \"上栗县\",\n  \"value\": \"360322\" },\n\n{\n  \"label\": \"芦溪县\",\n  \"value\": \"360323\" }],\n\n\n[{\n  \"label\": \"濂溪区\",\n  \"value\": \"360402\" },\n\n{\n  \"label\": \"浔阳区\",\n  \"value\": \"360403\" },\n\n{\n  \"label\": \"柴桑区\",\n  \"value\": \"360404\" },\n\n{\n  \"label\": \"武宁县\",\n  \"value\": \"360423\" },\n\n{\n  \"label\": \"修水县\",\n  \"value\": \"360424\" },\n\n{\n  \"label\": \"永修县\",\n  \"value\": \"360425\" },\n\n{\n  \"label\": \"德安县\",\n  \"value\": \"360426\" },\n\n{\n  \"label\": \"都昌县\",\n  \"value\": \"360428\" },\n\n{\n  \"label\": \"湖口县\",\n  \"value\": \"360429\" },\n\n{\n  \"label\": \"彭泽县\",\n  \"value\": \"360430\" },\n\n{\n  \"label\": \"瑞昌市\",\n  \"value\": \"360481\" },\n\n{\n  \"label\": \"共青城市\",\n  \"value\": \"360482\" },\n\n{\n  \"label\": \"庐山市\",\n  \"value\": \"360483\" }],\n\n\n[{\n  \"label\": \"渝水区\",\n  \"value\": \"360502\" },\n\n{\n  \"label\": \"分宜县\",\n  \"value\": \"360521\" }],\n\n\n[{\n  \"label\": \"月湖区\",\n  \"value\": \"360602\" },\n\n{\n  \"label\": \"余江县\",\n  \"value\": \"360622\" },\n\n{\n  \"label\": \"贵溪市\",\n  \"value\": \"360681\" }],\n\n\n[{\n  \"label\": \"章贡区\",\n  \"value\": \"360702\" },\n\n{\n  \"label\": \"南康区\",\n  \"value\": \"360703\" },\n\n{\n  \"label\": \"赣县区\",\n  \"value\": \"360704\" },\n\n{\n  \"label\": \"信丰县\",\n  \"value\": \"360722\" },\n\n{\n  \"label\": \"大余县\",\n  \"value\": \"360723\" },\n\n{\n  \"label\": \"上犹县\",\n  \"value\": \"360724\" },\n\n{\n  \"label\": \"崇义县\",\n  \"value\": \"360725\" },\n\n{\n  \"label\": \"安远县\",\n  \"value\": \"360726\" },\n\n{\n  \"label\": \"龙南县\",\n  \"value\": \"360727\" },\n\n{\n  \"label\": \"定南县\",\n  \"value\": \"360728\" },\n\n{\n  \"label\": \"全南县\",\n  \"value\": \"360729\" },\n\n{\n  \"label\": \"宁都县\",\n  \"value\": \"360730\" },\n\n{\n  \"label\": \"于都县\",\n  \"value\": \"360731\" },\n\n{\n  \"label\": \"兴国县\",\n  \"value\": \"360732\" },\n\n{\n  \"label\": \"会昌县\",\n  \"value\": \"360733\" },\n\n{\n  \"label\": \"寻乌县\",\n  \"value\": \"360734\" },\n\n{\n  \"label\": \"石城县\",\n  \"value\": \"360735\" },\n\n{\n  \"label\": \"瑞金市\",\n  \"value\": \"360781\" }],\n\n\n[{\n  \"label\": \"吉州区\",\n  \"value\": \"360802\" },\n\n{\n  \"label\": \"青原区\",\n  \"value\": \"360803\" },\n\n{\n  \"label\": \"吉安县\",\n  \"value\": \"360821\" },\n\n{\n  \"label\": \"吉水县\",\n  \"value\": \"360822\" },\n\n{\n  \"label\": \"峡江县\",\n  \"value\": \"360823\" },\n\n{\n  \"label\": \"新干县\",\n  \"value\": \"360824\" },\n\n{\n  \"label\": \"永丰县\",\n  \"value\": \"360825\" },\n\n{\n  \"label\": \"泰和县\",\n  \"value\": \"360826\" },\n\n{\n  \"label\": \"遂川县\",\n  \"value\": \"360827\" },\n\n{\n  \"label\": \"万安县\",\n  \"value\": \"360828\" },\n\n{\n  \"label\": \"安福县\",\n  \"value\": \"360829\" },\n\n{\n  \"label\": \"永新县\",\n  \"value\": \"360830\" },\n\n{\n  \"label\": \"井冈山市\",\n  \"value\": \"360881\" }],\n\n\n[{\n  \"label\": \"袁州区\",\n  \"value\": \"360902\" },\n\n{\n  \"label\": \"奉新县\",\n  \"value\": \"360921\" },\n\n{\n  \"label\": \"万载县\",\n  \"value\": \"360922\" },\n\n{\n  \"label\": \"上高县\",\n  \"value\": \"360923\" },\n\n{\n  \"label\": \"宜丰县\",\n  \"value\": \"360924\" },\n\n{\n  \"label\": \"靖安县\",\n  \"value\": \"360925\" },\n\n{\n  \"label\": \"铜鼓县\",\n  \"value\": \"360926\" },\n\n{\n  \"label\": \"丰城市\",\n  \"value\": \"360981\" },\n\n{\n  \"label\": \"樟树市\",\n  \"value\": \"360982\" },\n\n{\n  \"label\": \"高安市\",\n  \"value\": \"360983\" }],\n\n\n[{\n  \"label\": \"临川区\",\n  \"value\": \"361002\" },\n\n{\n  \"label\": \"东乡区\",\n  \"value\": \"361003\" },\n\n{\n  \"label\": \"南城县\",\n  \"value\": \"361021\" },\n\n{\n  \"label\": \"黎川县\",\n  \"value\": \"361022\" },\n\n{\n  \"label\": \"南丰县\",\n  \"value\": \"361023\" },\n\n{\n  \"label\": \"崇仁县\",\n  \"value\": \"361024\" },\n\n{\n  \"label\": \"乐安县\",\n  \"value\": \"361025\" },\n\n{\n  \"label\": \"宜黄县\",\n  \"value\": \"361026\" },\n\n{\n  \"label\": \"金溪县\",\n  \"value\": \"361027\" },\n\n{\n  \"label\": \"资溪县\",\n  \"value\": \"361028\" },\n\n{\n  \"label\": \"广昌县\",\n  \"value\": \"361030\" }],\n\n\n[{\n  \"label\": \"信州区\",\n  \"value\": \"361102\" },\n\n{\n  \"label\": \"广丰区\",\n  \"value\": \"361103\" },\n\n{\n  \"label\": \"上饶县\",\n  \"value\": \"361121\" },\n\n{\n  \"label\": \"玉山县\",\n  \"value\": \"361123\" },\n\n{\n  \"label\": \"铅山县\",\n  \"value\": \"361124\" },\n\n{\n  \"label\": \"横峰县\",\n  \"value\": \"361125\" },\n\n{\n  \"label\": \"弋阳县\",\n  \"value\": \"361126\" },\n\n{\n  \"label\": \"余干县\",\n  \"value\": \"361127\" },\n\n{\n  \"label\": \"鄱阳县\",\n  \"value\": \"361128\" },\n\n{\n  \"label\": \"万年县\",\n  \"value\": \"361129\" },\n\n{\n  \"label\": \"婺源县\",\n  \"value\": \"361130\" },\n\n{\n  \"label\": \"德兴市\",\n  \"value\": \"361181\" }]],\n\n\n\n[\n[{\n  \"label\": \"历下区\",\n  \"value\": \"370102\" },\n\n{\n  \"label\": \"市中区\",\n  \"value\": \"370103\" },\n\n{\n  \"label\": \"槐荫区\",\n  \"value\": \"370104\" },\n\n{\n  \"label\": \"天桥区\",\n  \"value\": \"370105\" },\n\n{\n  \"label\": \"历城区\",\n  \"value\": \"370112\" },\n\n{\n  \"label\": \"长清区\",\n  \"value\": \"370113\" },\n\n{\n  \"label\": \"章丘区\",\n  \"value\": \"370114\" },\n\n{\n  \"label\": \"平阴县\",\n  \"value\": \"370124\" },\n\n{\n  \"label\": \"济阳县\",\n  \"value\": \"370125\" },\n\n{\n  \"label\": \"商河县\",\n  \"value\": \"370126\" },\n\n{\n  \"label\": \"济南高新技术产业开发区\",\n  \"value\": \"370171\" }],\n\n\n[{\n  \"label\": \"市南区\",\n  \"value\": \"370202\" },\n\n{\n  \"label\": \"市北区\",\n  \"value\": \"370203\" },\n\n{\n  \"label\": \"黄岛区\",\n  \"value\": \"370211\" },\n\n{\n  \"label\": \"崂山区\",\n  \"value\": \"370212\" },\n\n{\n  \"label\": \"李沧区\",\n  \"value\": \"370213\" },\n\n{\n  \"label\": \"城阳区\",\n  \"value\": \"370214\" },\n\n{\n  \"label\": \"即墨区\",\n  \"value\": \"370215\" },\n\n{\n  \"label\": \"青岛高新技术产业开发区\",\n  \"value\": \"370271\" },\n\n{\n  \"label\": \"胶州市\",\n  \"value\": \"370281\" },\n\n{\n  \"label\": \"平度市\",\n  \"value\": \"370283\" },\n\n{\n  \"label\": \"莱西市\",\n  \"value\": \"370285\" }],\n\n\n[{\n  \"label\": \"淄川区\",\n  \"value\": \"370302\" },\n\n{\n  \"label\": \"张店区\",\n  \"value\": \"370303\" },\n\n{\n  \"label\": \"博山区\",\n  \"value\": \"370304\" },\n\n{\n  \"label\": \"临淄区\",\n  \"value\": \"370305\" },\n\n{\n  \"label\": \"周村区\",\n  \"value\": \"370306\" },\n\n{\n  \"label\": \"桓台县\",\n  \"value\": \"370321\" },\n\n{\n  \"label\": \"高青县\",\n  \"value\": \"370322\" },\n\n{\n  \"label\": \"沂源县\",\n  \"value\": \"370323\" }],\n\n\n[{\n  \"label\": \"市中区\",\n  \"value\": \"370402\" },\n\n{\n  \"label\": \"薛城区\",\n  \"value\": \"370403\" },\n\n{\n  \"label\": \"峄城区\",\n  \"value\": \"370404\" },\n\n{\n  \"label\": \"台儿庄区\",\n  \"value\": \"370405\" },\n\n{\n  \"label\": \"山亭区\",\n  \"value\": \"370406\" },\n\n{\n  \"label\": \"滕州市\",\n  \"value\": \"370481\" }],\n\n\n[{\n  \"label\": \"东营区\",\n  \"value\": \"370502\" },\n\n{\n  \"label\": \"河口区\",\n  \"value\": \"370503\" },\n\n{\n  \"label\": \"垦利区\",\n  \"value\": \"370505\" },\n\n{\n  \"label\": \"利津县\",\n  \"value\": \"370522\" },\n\n{\n  \"label\": \"广饶县\",\n  \"value\": \"370523\" },\n\n{\n  \"label\": \"东营经济技术开发区\",\n  \"value\": \"370571\" },\n\n{\n  \"label\": \"东营港经济开发区\",\n  \"value\": \"370572\" }],\n\n\n[{\n  \"label\": \"芝罘区\",\n  \"value\": \"370602\" },\n\n{\n  \"label\": \"福山区\",\n  \"value\": \"370611\" },\n\n{\n  \"label\": \"牟平区\",\n  \"value\": \"370612\" },\n\n{\n  \"label\": \"莱山区\",\n  \"value\": \"370613\" },\n\n{\n  \"label\": \"长岛县\",\n  \"value\": \"370634\" },\n\n{\n  \"label\": \"烟台高新技术产业开发区\",\n  \"value\": \"370671\" },\n\n{\n  \"label\": \"烟台经济技术开发区\",\n  \"value\": \"370672\" },\n\n{\n  \"label\": \"龙口市\",\n  \"value\": \"370681\" },\n\n{\n  \"label\": \"莱阳市\",\n  \"value\": \"370682\" },\n\n{\n  \"label\": \"莱州市\",\n  \"value\": \"370683\" },\n\n{\n  \"label\": \"蓬莱市\",\n  \"value\": \"370684\" },\n\n{\n  \"label\": \"招远市\",\n  \"value\": \"370685\" },\n\n{\n  \"label\": \"栖霞市\",\n  \"value\": \"370686\" },\n\n{\n  \"label\": \"海阳市\",\n  \"value\": \"370687\" }],\n\n\n[{\n  \"label\": \"潍城区\",\n  \"value\": \"370702\" },\n\n{\n  \"label\": \"寒亭区\",\n  \"value\": \"370703\" },\n\n{\n  \"label\": \"坊子区\",\n  \"value\": \"370704\" },\n\n{\n  \"label\": \"奎文区\",\n  \"value\": \"370705\" },\n\n{\n  \"label\": \"临朐县\",\n  \"value\": \"370724\" },\n\n{\n  \"label\": \"昌乐县\",\n  \"value\": \"370725\" },\n\n{\n  \"label\": \"潍坊滨海经济技术开发区\",\n  \"value\": \"370772\" },\n\n{\n  \"label\": \"青州市\",\n  \"value\": \"370781\" },\n\n{\n  \"label\": \"诸城市\",\n  \"value\": \"370782\" },\n\n{\n  \"label\": \"寿光市\",\n  \"value\": \"370783\" },\n\n{\n  \"label\": \"安丘市\",\n  \"value\": \"370784\" },\n\n{\n  \"label\": \"高密市\",\n  \"value\": \"370785\" },\n\n{\n  \"label\": \"昌邑市\",\n  \"value\": \"370786\" }],\n\n\n[{\n  \"label\": \"任城区\",\n  \"value\": \"370811\" },\n\n{\n  \"label\": \"兖州区\",\n  \"value\": \"370812\" },\n\n{\n  \"label\": \"微山县\",\n  \"value\": \"370826\" },\n\n{\n  \"label\": \"鱼台县\",\n  \"value\": \"370827\" },\n\n{\n  \"label\": \"金乡县\",\n  \"value\": \"370828\" },\n\n{\n  \"label\": \"嘉祥县\",\n  \"value\": \"370829\" },\n\n{\n  \"label\": \"汶上县\",\n  \"value\": \"370830\" },\n\n{\n  \"label\": \"泗水县\",\n  \"value\": \"370831\" },\n\n{\n  \"label\": \"梁山县\",\n  \"value\": \"370832\" },\n\n{\n  \"label\": \"济宁高新技术产业开发区\",\n  \"value\": \"370871\" },\n\n{\n  \"label\": \"曲阜市\",\n  \"value\": \"370881\" },\n\n{\n  \"label\": \"邹城市\",\n  \"value\": \"370883\" }],\n\n\n[{\n  \"label\": \"泰山区\",\n  \"value\": \"370902\" },\n\n{\n  \"label\": \"岱岳区\",\n  \"value\": \"370911\" },\n\n{\n  \"label\": \"宁阳县\",\n  \"value\": \"370921\" },\n\n{\n  \"label\": \"东平县\",\n  \"value\": \"370923\" },\n\n{\n  \"label\": \"新泰市\",\n  \"value\": \"370982\" },\n\n{\n  \"label\": \"肥城市\",\n  \"value\": \"370983\" }],\n\n\n[{\n  \"label\": \"环翠区\",\n  \"value\": \"371002\" },\n\n{\n  \"label\": \"文登区\",\n  \"value\": \"371003\" },\n\n{\n  \"label\": \"威海火炬高技术产业开发区\",\n  \"value\": \"371071\" },\n\n{\n  \"label\": \"威海经济技术开发区\",\n  \"value\": \"371072\" },\n\n{\n  \"label\": \"威海临港经济技术开发区\",\n  \"value\": \"371073\" },\n\n{\n  \"label\": \"荣成市\",\n  \"value\": \"371082\" },\n\n{\n  \"label\": \"乳山市\",\n  \"value\": \"371083\" }],\n\n\n[{\n  \"label\": \"东港区\",\n  \"value\": \"371102\" },\n\n{\n  \"label\": \"岚山区\",\n  \"value\": \"371103\" },\n\n{\n  \"label\": \"五莲县\",\n  \"value\": \"371121\" },\n\n{\n  \"label\": \"莒县\",\n  \"value\": \"371122\" },\n\n{\n  \"label\": \"日照经济技术开发区\",\n  \"value\": \"371171\" },\n\n{\n  \"label\": \"日照国际海洋城\",\n  \"value\": \"371172\" }],\n\n\n[{\n  \"label\": \"莱城区\",\n  \"value\": \"371202\" },\n\n{\n  \"label\": \"钢城区\",\n  \"value\": \"371203\" }],\n\n\n[{\n  \"label\": \"兰山区\",\n  \"value\": \"371302\" },\n\n{\n  \"label\": \"罗庄区\",\n  \"value\": \"371311\" },\n\n{\n  \"label\": \"河东区\",\n  \"value\": \"371312\" },\n\n{\n  \"label\": \"沂南县\",\n  \"value\": \"371321\" },\n\n{\n  \"label\": \"郯城县\",\n  \"value\": \"371322\" },\n\n{\n  \"label\": \"沂水县\",\n  \"value\": \"371323\" },\n\n{\n  \"label\": \"兰陵县\",\n  \"value\": \"371324\" },\n\n{\n  \"label\": \"费县\",\n  \"value\": \"371325\" },\n\n{\n  \"label\": \"平邑县\",\n  \"value\": \"371326\" },\n\n{\n  \"label\": \"莒南县\",\n  \"value\": \"371327\" },\n\n{\n  \"label\": \"蒙阴县\",\n  \"value\": \"371328\" },\n\n{\n  \"label\": \"临沭县\",\n  \"value\": \"371329\" },\n\n{\n  \"label\": \"临沂高新技术产业开发区\",\n  \"value\": \"371371\" },\n\n{\n  \"label\": \"临沂经济技术开发区\",\n  \"value\": \"371372\" },\n\n{\n  \"label\": \"临沂临港经济开发区\",\n  \"value\": \"371373\" }],\n\n\n[{\n  \"label\": \"德城区\",\n  \"value\": \"371402\" },\n\n{\n  \"label\": \"陵城区\",\n  \"value\": \"371403\" },\n\n{\n  \"label\": \"宁津县\",\n  \"value\": \"371422\" },\n\n{\n  \"label\": \"庆云县\",\n  \"value\": \"371423\" },\n\n{\n  \"label\": \"临邑县\",\n  \"value\": \"371424\" },\n\n{\n  \"label\": \"齐河县\",\n  \"value\": \"371425\" },\n\n{\n  \"label\": \"平原县\",\n  \"value\": \"371426\" },\n\n{\n  \"label\": \"夏津县\",\n  \"value\": \"371427\" },\n\n{\n  \"label\": \"武城县\",\n  \"value\": \"371428\" },\n\n{\n  \"label\": \"德州经济技术开发区\",\n  \"value\": \"371471\" },\n\n{\n  \"label\": \"德州运河经济开发区\",\n  \"value\": \"371472\" },\n\n{\n  \"label\": \"乐陵市\",\n  \"value\": \"371481\" },\n\n{\n  \"label\": \"禹城市\",\n  \"value\": \"371482\" }],\n\n\n[{\n  \"label\": \"东昌府区\",\n  \"value\": \"371502\" },\n\n{\n  \"label\": \"阳谷县\",\n  \"value\": \"371521\" },\n\n{\n  \"label\": \"莘县\",\n  \"value\": \"371522\" },\n\n{\n  \"label\": \"茌平县\",\n  \"value\": \"371523\" },\n\n{\n  \"label\": \"东阿县\",\n  \"value\": \"371524\" },\n\n{\n  \"label\": \"冠县\",\n  \"value\": \"371525\" },\n\n{\n  \"label\": \"高唐县\",\n  \"value\": \"371526\" },\n\n{\n  \"label\": \"临清市\",\n  \"value\": \"371581\" }],\n\n\n[{\n  \"label\": \"滨城区\",\n  \"value\": \"371602\" },\n\n{\n  \"label\": \"沾化区\",\n  \"value\": \"371603\" },\n\n{\n  \"label\": \"惠民县\",\n  \"value\": \"371621\" },\n\n{\n  \"label\": \"阳信县\",\n  \"value\": \"371622\" },\n\n{\n  \"label\": \"无棣县\",\n  \"value\": \"371623\" },\n\n{\n  \"label\": \"博兴县\",\n  \"value\": \"371625\" },\n\n{\n  \"label\": \"邹平县\",\n  \"value\": \"371626\" }],\n\n\n[{\n  \"label\": \"牡丹区\",\n  \"value\": \"371702\" },\n\n{\n  \"label\": \"定陶区\",\n  \"value\": \"371703\" },\n\n{\n  \"label\": \"曹县\",\n  \"value\": \"371721\" },\n\n{\n  \"label\": \"单县\",\n  \"value\": \"371722\" },\n\n{\n  \"label\": \"成武县\",\n  \"value\": \"371723\" },\n\n{\n  \"label\": \"巨野县\",\n  \"value\": \"371724\" },\n\n{\n  \"label\": \"郓城县\",\n  \"value\": \"371725\" },\n\n{\n  \"label\": \"鄄城县\",\n  \"value\": \"371726\" },\n\n{\n  \"label\": \"东明县\",\n  \"value\": \"371728\" },\n\n{\n  \"label\": \"菏泽经济技术开发区\",\n  \"value\": \"371771\" },\n\n{\n  \"label\": \"菏泽高新技术开发区\",\n  \"value\": \"371772\" }]],\n\n\n\n[\n[{\n  \"label\": \"中原区\",\n  \"value\": \"410102\" },\n\n{\n  \"label\": \"二七区\",\n  \"value\": \"410103\" },\n\n{\n  \"label\": \"管城回族区\",\n  \"value\": \"410104\" },\n\n{\n  \"label\": \"金水区\",\n  \"value\": \"410105\" },\n\n{\n  \"label\": \"上街区\",\n  \"value\": \"410106\" },\n\n{\n  \"label\": \"惠济区\",\n  \"value\": \"410108\" },\n\n{\n  \"label\": \"中牟县\",\n  \"value\": \"410122\" },\n\n{\n  \"label\": \"郑州经济技术开发区\",\n  \"value\": \"410171\" },\n\n{\n  \"label\": \"郑州高新技术产业开发区\",\n  \"value\": \"410172\" },\n\n{\n  \"label\": \"郑州航空港经济综合实验区\",\n  \"value\": \"410173\" },\n\n{\n  \"label\": \"巩义市\",\n  \"value\": \"410181\" },\n\n{\n  \"label\": \"荥阳市\",\n  \"value\": \"410182\" },\n\n{\n  \"label\": \"新密市\",\n  \"value\": \"410183\" },\n\n{\n  \"label\": \"新郑市\",\n  \"value\": \"410184\" },\n\n{\n  \"label\": \"登封市\",\n  \"value\": \"410185\" }],\n\n\n[{\n  \"label\": \"龙亭区\",\n  \"value\": \"410202\" },\n\n{\n  \"label\": \"顺河回族区\",\n  \"value\": \"410203\" },\n\n{\n  \"label\": \"鼓楼区\",\n  \"value\": \"410204\" },\n\n{\n  \"label\": \"禹王台区\",\n  \"value\": \"410205\" },\n\n{\n  \"label\": \"祥符区\",\n  \"value\": \"410212\" },\n\n{\n  \"label\": \"杞县\",\n  \"value\": \"410221\" },\n\n{\n  \"label\": \"通许县\",\n  \"value\": \"410222\" },\n\n{\n  \"label\": \"尉氏县\",\n  \"value\": \"410223\" },\n\n{\n  \"label\": \"兰考县\",\n  \"value\": \"410225\" }],\n\n\n[{\n  \"label\": \"老城区\",\n  \"value\": \"410302\" },\n\n{\n  \"label\": \"西工区\",\n  \"value\": \"410303\" },\n\n{\n  \"label\": \"瀍河回族区\",\n  \"value\": \"410304\" },\n\n{\n  \"label\": \"涧西区\",\n  \"value\": \"410305\" },\n\n{\n  \"label\": \"吉利区\",\n  \"value\": \"410306\" },\n\n{\n  \"label\": \"洛龙区\",\n  \"value\": \"410311\" },\n\n{\n  \"label\": \"孟津县\",\n  \"value\": \"410322\" },\n\n{\n  \"label\": \"新安县\",\n  \"value\": \"410323\" },\n\n{\n  \"label\": \"栾川县\",\n  \"value\": \"410324\" },\n\n{\n  \"label\": \"嵩县\",\n  \"value\": \"410325\" },\n\n{\n  \"label\": \"汝阳县\",\n  \"value\": \"410326\" },\n\n{\n  \"label\": \"宜阳县\",\n  \"value\": \"410327\" },\n\n{\n  \"label\": \"洛宁县\",\n  \"value\": \"410328\" },\n\n{\n  \"label\": \"伊川县\",\n  \"value\": \"410329\" },\n\n{\n  \"label\": \"洛阳高新技术产业开发区\",\n  \"value\": \"410371\" },\n\n{\n  \"label\": \"偃师市\",\n  \"value\": \"410381\" }],\n\n\n[{\n  \"label\": \"新华区\",\n  \"value\": \"410402\" },\n\n{\n  \"label\": \"卫东区\",\n  \"value\": \"410403\" },\n\n{\n  \"label\": \"石龙区\",\n  \"value\": \"410404\" },\n\n{\n  \"label\": \"湛河区\",\n  \"value\": \"410411\" },\n\n{\n  \"label\": \"宝丰县\",\n  \"value\": \"410421\" },\n\n{\n  \"label\": \"叶县\",\n  \"value\": \"410422\" },\n\n{\n  \"label\": \"鲁山县\",\n  \"value\": \"410423\" },\n\n{\n  \"label\": \"郏县\",\n  \"value\": \"410425\" },\n\n{\n  \"label\": \"平顶山高新技术产业开发区\",\n  \"value\": \"410471\" },\n\n{\n  \"label\": \"平顶山市新城区\",\n  \"value\": \"410472\" },\n\n{\n  \"label\": \"舞钢市\",\n  \"value\": \"410481\" },\n\n{\n  \"label\": \"汝州市\",\n  \"value\": \"410482\" }],\n\n\n[{\n  \"label\": \"文峰区\",\n  \"value\": \"410502\" },\n\n{\n  \"label\": \"北关区\",\n  \"value\": \"410503\" },\n\n{\n  \"label\": \"殷都区\",\n  \"value\": \"410505\" },\n\n{\n  \"label\": \"龙安区\",\n  \"value\": \"410506\" },\n\n{\n  \"label\": \"安阳县\",\n  \"value\": \"410522\" },\n\n{\n  \"label\": \"汤阴县\",\n  \"value\": \"410523\" },\n\n{\n  \"label\": \"滑县\",\n  \"value\": \"410526\" },\n\n{\n  \"label\": \"内黄县\",\n  \"value\": \"410527\" },\n\n{\n  \"label\": \"安阳高新技术产业开发区\",\n  \"value\": \"410571\" },\n\n{\n  \"label\": \"林州市\",\n  \"value\": \"410581\" }],\n\n\n[{\n  \"label\": \"鹤山区\",\n  \"value\": \"410602\" },\n\n{\n  \"label\": \"山城区\",\n  \"value\": \"410603\" },\n\n{\n  \"label\": \"淇滨区\",\n  \"value\": \"410611\" },\n\n{\n  \"label\": \"浚县\",\n  \"value\": \"410621\" },\n\n{\n  \"label\": \"淇县\",\n  \"value\": \"410622\" },\n\n{\n  \"label\": \"鹤壁经济技术开发区\",\n  \"value\": \"410671\" }],\n\n\n[{\n  \"label\": \"红旗区\",\n  \"value\": \"410702\" },\n\n{\n  \"label\": \"卫滨区\",\n  \"value\": \"410703\" },\n\n{\n  \"label\": \"凤泉区\",\n  \"value\": \"410704\" },\n\n{\n  \"label\": \"牧野区\",\n  \"value\": \"410711\" },\n\n{\n  \"label\": \"新乡县\",\n  \"value\": \"410721\" },\n\n{\n  \"label\": \"获嘉县\",\n  \"value\": \"410724\" },\n\n{\n  \"label\": \"原阳县\",\n  \"value\": \"410725\" },\n\n{\n  \"label\": \"延津县\",\n  \"value\": \"410726\" },\n\n{\n  \"label\": \"封丘县\",\n  \"value\": \"410727\" },\n\n{\n  \"label\": \"长垣县\",\n  \"value\": \"410728\" },\n\n{\n  \"label\": \"新乡高新技术产业开发区\",\n  \"value\": \"410771\" },\n\n{\n  \"label\": \"新乡经济技术开发区\",\n  \"value\": \"410772\" },\n\n{\n  \"label\": \"新乡市平原城乡一体化示范区\",\n  \"value\": \"410773\" },\n\n{\n  \"label\": \"卫辉市\",\n  \"value\": \"410781\" },\n\n{\n  \"label\": \"辉县市\",\n  \"value\": \"410782\" }],\n\n\n[{\n  \"label\": \"解放区\",\n  \"value\": \"410802\" },\n\n{\n  \"label\": \"中站区\",\n  \"value\": \"410803\" },\n\n{\n  \"label\": \"马村区\",\n  \"value\": \"410804\" },\n\n{\n  \"label\": \"山阳区\",\n  \"value\": \"410811\" },\n\n{\n  \"label\": \"修武县\",\n  \"value\": \"410821\" },\n\n{\n  \"label\": \"博爱县\",\n  \"value\": \"410822\" },\n\n{\n  \"label\": \"武陟县\",\n  \"value\": \"410823\" },\n\n{\n  \"label\": \"温县\",\n  \"value\": \"410825\" },\n\n{\n  \"label\": \"焦作城乡一体化示范区\",\n  \"value\": \"410871\" },\n\n{\n  \"label\": \"沁阳市\",\n  \"value\": \"410882\" },\n\n{\n  \"label\": \"孟州市\",\n  \"value\": \"410883\" }],\n\n\n[{\n  \"label\": \"华龙区\",\n  \"value\": \"410902\" },\n\n{\n  \"label\": \"清丰县\",\n  \"value\": \"410922\" },\n\n{\n  \"label\": \"南乐县\",\n  \"value\": \"410923\" },\n\n{\n  \"label\": \"范县\",\n  \"value\": \"410926\" },\n\n{\n  \"label\": \"台前县\",\n  \"value\": \"410927\" },\n\n{\n  \"label\": \"濮阳县\",\n  \"value\": \"410928\" },\n\n{\n  \"label\": \"河南濮阳工业园区\",\n  \"value\": \"410971\" },\n\n{\n  \"label\": \"濮阳经济技术开发区\",\n  \"value\": \"410972\" }],\n\n\n[{\n  \"label\": \"魏都区\",\n  \"value\": \"411002\" },\n\n{\n  \"label\": \"建安区\",\n  \"value\": \"411003\" },\n\n{\n  \"label\": \"鄢陵县\",\n  \"value\": \"411024\" },\n\n{\n  \"label\": \"襄城县\",\n  \"value\": \"411025\" },\n\n{\n  \"label\": \"许昌经济技术开发区\",\n  \"value\": \"411071\" },\n\n{\n  \"label\": \"禹州市\",\n  \"value\": \"411081\" },\n\n{\n  \"label\": \"长葛市\",\n  \"value\": \"411082\" }],\n\n\n[{\n  \"label\": \"源汇区\",\n  \"value\": \"411102\" },\n\n{\n  \"label\": \"郾城区\",\n  \"value\": \"411103\" },\n\n{\n  \"label\": \"召陵区\",\n  \"value\": \"411104\" },\n\n{\n  \"label\": \"舞阳县\",\n  \"value\": \"411121\" },\n\n{\n  \"label\": \"临颍县\",\n  \"value\": \"411122\" },\n\n{\n  \"label\": \"漯河经济技术开发区\",\n  \"value\": \"411171\" }],\n\n\n[{\n  \"label\": \"湖滨区\",\n  \"value\": \"411202\" },\n\n{\n  \"label\": \"陕州区\",\n  \"value\": \"411203\" },\n\n{\n  \"label\": \"渑池县\",\n  \"value\": \"411221\" },\n\n{\n  \"label\": \"卢氏县\",\n  \"value\": \"411224\" },\n\n{\n  \"label\": \"河南三门峡经济开发区\",\n  \"value\": \"411271\" },\n\n{\n  \"label\": \"义马市\",\n  \"value\": \"411281\" },\n\n{\n  \"label\": \"灵宝市\",\n  \"value\": \"411282\" }],\n\n\n[{\n  \"label\": \"宛城区\",\n  \"value\": \"411302\" },\n\n{\n  \"label\": \"卧龙区\",\n  \"value\": \"411303\" },\n\n{\n  \"label\": \"南召县\",\n  \"value\": \"411321\" },\n\n{\n  \"label\": \"方城县\",\n  \"value\": \"411322\" },\n\n{\n  \"label\": \"西峡县\",\n  \"value\": \"411323\" },\n\n{\n  \"label\": \"镇平县\",\n  \"value\": \"411324\" },\n\n{\n  \"label\": \"内乡县\",\n  \"value\": \"411325\" },\n\n{\n  \"label\": \"淅川县\",\n  \"value\": \"411326\" },\n\n{\n  \"label\": \"社旗县\",\n  \"value\": \"411327\" },\n\n{\n  \"label\": \"唐河县\",\n  \"value\": \"411328\" },\n\n{\n  \"label\": \"新野县\",\n  \"value\": \"411329\" },\n\n{\n  \"label\": \"桐柏县\",\n  \"value\": \"411330\" },\n\n{\n  \"label\": \"南阳高新技术产业开发区\",\n  \"value\": \"411371\" },\n\n{\n  \"label\": \"南阳市城乡一体化示范区\",\n  \"value\": \"411372\" },\n\n{\n  \"label\": \"邓州市\",\n  \"value\": \"411381\" }],\n\n\n[{\n  \"label\": \"梁园区\",\n  \"value\": \"411402\" },\n\n{\n  \"label\": \"睢阳区\",\n  \"value\": \"411403\" },\n\n{\n  \"label\": \"民权县\",\n  \"value\": \"411421\" },\n\n{\n  \"label\": \"睢县\",\n  \"value\": \"411422\" },\n\n{\n  \"label\": \"宁陵县\",\n  \"value\": \"411423\" },\n\n{\n  \"label\": \"柘城县\",\n  \"value\": \"411424\" },\n\n{\n  \"label\": \"虞城县\",\n  \"value\": \"411425\" },\n\n{\n  \"label\": \"夏邑县\",\n  \"value\": \"411426\" },\n\n{\n  \"label\": \"豫东综合物流产业聚集区\",\n  \"value\": \"411471\" },\n\n{\n  \"label\": \"河南商丘经济开发区\",\n  \"value\": \"411472\" },\n\n{\n  \"label\": \"永城市\",\n  \"value\": \"411481\" }],\n\n\n[{\n  \"label\": \"浉河区\",\n  \"value\": \"411502\" },\n\n{\n  \"label\": \"平桥区\",\n  \"value\": \"411503\" },\n\n{\n  \"label\": \"罗山县\",\n  \"value\": \"411521\" },\n\n{\n  \"label\": \"光山县\",\n  \"value\": \"411522\" },\n\n{\n  \"label\": \"新县\",\n  \"value\": \"411523\" },\n\n{\n  \"label\": \"商城县\",\n  \"value\": \"411524\" },\n\n{\n  \"label\": \"固始县\",\n  \"value\": \"411525\" },\n\n{\n  \"label\": \"潢川县\",\n  \"value\": \"411526\" },\n\n{\n  \"label\": \"淮滨县\",\n  \"value\": \"411527\" },\n\n{\n  \"label\": \"息县\",\n  \"value\": \"411528\" },\n\n{\n  \"label\": \"信阳高新技术产业开发区\",\n  \"value\": \"411571\" }],\n\n\n[{\n  \"label\": \"川汇区\",\n  \"value\": \"411602\" },\n\n{\n  \"label\": \"扶沟县\",\n  \"value\": \"411621\" },\n\n{\n  \"label\": \"西华县\",\n  \"value\": \"411622\" },\n\n{\n  \"label\": \"商水县\",\n  \"value\": \"411623\" },\n\n{\n  \"label\": \"沈丘县\",\n  \"value\": \"411624\" },\n\n{\n  \"label\": \"郸城县\",\n  \"value\": \"411625\" },\n\n{\n  \"label\": \"淮阳县\",\n  \"value\": \"411626\" },\n\n{\n  \"label\": \"太康县\",\n  \"value\": \"411627\" },\n\n{\n  \"label\": \"鹿邑县\",\n  \"value\": \"411628\" },\n\n{\n  \"label\": \"河南周口经济开发区\",\n  \"value\": \"411671\" },\n\n{\n  \"label\": \"项城市\",\n  \"value\": \"411681\" }],\n\n\n[{\n  \"label\": \"驿城区\",\n  \"value\": \"411702\" },\n\n{\n  \"label\": \"西平县\",\n  \"value\": \"411721\" },\n\n{\n  \"label\": \"上蔡县\",\n  \"value\": \"411722\" },\n\n{\n  \"label\": \"平舆县\",\n  \"value\": \"411723\" },\n\n{\n  \"label\": \"正阳县\",\n  \"value\": \"411724\" },\n\n{\n  \"label\": \"确山县\",\n  \"value\": \"411725\" },\n\n{\n  \"label\": \"泌阳县\",\n  \"value\": \"411726\" },\n\n{\n  \"label\": \"汝南县\",\n  \"value\": \"411727\" },\n\n{\n  \"label\": \"遂平县\",\n  \"value\": \"411728\" },\n\n{\n  \"label\": \"新蔡县\",\n  \"value\": \"411729\" },\n\n{\n  \"label\": \"河南驻马店经济开发区\",\n  \"value\": \"411771\" }],\n\n\n[{\n  \"label\": \"济源市\",\n  \"value\": \"419001\" }]],\n\n\n[\n[{\n  \"label\": \"江岸区\",\n  \"value\": \"420102\" },\n\n{\n  \"label\": \"江汉区\",\n  \"value\": \"420103\" },\n\n{\n  \"label\": \"硚口区\",\n  \"value\": \"420104\" },\n\n{\n  \"label\": \"汉阳区\",\n  \"value\": \"420105\" },\n\n{\n  \"label\": \"武昌区\",\n  \"value\": \"420106\" },\n\n{\n  \"label\": \"青山区\",\n  \"value\": \"420107\" },\n\n{\n  \"label\": \"洪山区\",\n  \"value\": \"420111\" },\n\n{\n  \"label\": \"东西湖区\",\n  \"value\": \"420112\" },\n\n{\n  \"label\": \"汉南区\",\n  \"value\": \"420113\" },\n\n{\n  \"label\": \"蔡甸区\",\n  \"value\": \"420114\" },\n\n{\n  \"label\": \"江夏区\",\n  \"value\": \"420115\" },\n\n{\n  \"label\": \"黄陂区\",\n  \"value\": \"420116\" },\n\n{\n  \"label\": \"新洲区\",\n  \"value\": \"420117\" }],\n\n\n[{\n  \"label\": \"黄石港区\",\n  \"value\": \"420202\" },\n\n{\n  \"label\": \"西塞山区\",\n  \"value\": \"420203\" },\n\n{\n  \"label\": \"下陆区\",\n  \"value\": \"420204\" },\n\n{\n  \"label\": \"铁山区\",\n  \"value\": \"420205\" },\n\n{\n  \"label\": \"阳新县\",\n  \"value\": \"420222\" },\n\n{\n  \"label\": \"大冶市\",\n  \"value\": \"420281\" }],\n\n\n[{\n  \"label\": \"茅箭区\",\n  \"value\": \"420302\" },\n\n{\n  \"label\": \"张湾区\",\n  \"value\": \"420303\" },\n\n{\n  \"label\": \"郧阳区\",\n  \"value\": \"420304\" },\n\n{\n  \"label\": \"郧西县\",\n  \"value\": \"420322\" },\n\n{\n  \"label\": \"竹山县\",\n  \"value\": \"420323\" },\n\n{\n  \"label\": \"竹溪县\",\n  \"value\": \"420324\" },\n\n{\n  \"label\": \"房县\",\n  \"value\": \"420325\" },\n\n{\n  \"label\": \"丹江口市\",\n  \"value\": \"420381\" }],\n\n\n[{\n  \"label\": \"西陵区\",\n  \"value\": \"420502\" },\n\n{\n  \"label\": \"伍家岗区\",\n  \"value\": \"420503\" },\n\n{\n  \"label\": \"点军区\",\n  \"value\": \"420504\" },\n\n{\n  \"label\": \"猇亭区\",\n  \"value\": \"420505\" },\n\n{\n  \"label\": \"夷陵区\",\n  \"value\": \"420506\" },\n\n{\n  \"label\": \"远安县\",\n  \"value\": \"420525\" },\n\n{\n  \"label\": \"兴山县\",\n  \"value\": \"420526\" },\n\n{\n  \"label\": \"秭归县\",\n  \"value\": \"420527\" },\n\n{\n  \"label\": \"长阳土家族自治县\",\n  \"value\": \"420528\" },\n\n{\n  \"label\": \"五峰土家族自治县\",\n  \"value\": \"420529\" },\n\n{\n  \"label\": \"宜都市\",\n  \"value\": \"420581\" },\n\n{\n  \"label\": \"当阳市\",\n  \"value\": \"420582\" },\n\n{\n  \"label\": \"枝江市\",\n  \"value\": \"420583\" }],\n\n\n[{\n  \"label\": \"襄城区\",\n  \"value\": \"420602\" },\n\n{\n  \"label\": \"樊城区\",\n  \"value\": \"420606\" },\n\n{\n  \"label\": \"襄州区\",\n  \"value\": \"420607\" },\n\n{\n  \"label\": \"南漳县\",\n  \"value\": \"420624\" },\n\n{\n  \"label\": \"谷城县\",\n  \"value\": \"420625\" },\n\n{\n  \"label\": \"保康县\",\n  \"value\": \"420626\" },\n\n{\n  \"label\": \"老河口市\",\n  \"value\": \"420682\" },\n\n{\n  \"label\": \"枣阳市\",\n  \"value\": \"420683\" },\n\n{\n  \"label\": \"宜城市\",\n  \"value\": \"420684\" }],\n\n\n[{\n  \"label\": \"梁子湖区\",\n  \"value\": \"420702\" },\n\n{\n  \"label\": \"华容区\",\n  \"value\": \"420703\" },\n\n{\n  \"label\": \"鄂城区\",\n  \"value\": \"420704\" }],\n\n\n[{\n  \"label\": \"东宝区\",\n  \"value\": \"420802\" },\n\n{\n  \"label\": \"掇刀区\",\n  \"value\": \"420804\" },\n\n{\n  \"label\": \"京山县\",\n  \"value\": \"420821\" },\n\n{\n  \"label\": \"沙洋县\",\n  \"value\": \"420822\" },\n\n{\n  \"label\": \"钟祥市\",\n  \"value\": \"420881\" }],\n\n\n[{\n  \"label\": \"孝南区\",\n  \"value\": \"420902\" },\n\n{\n  \"label\": \"孝昌县\",\n  \"value\": \"420921\" },\n\n{\n  \"label\": \"大悟县\",\n  \"value\": \"420922\" },\n\n{\n  \"label\": \"云梦县\",\n  \"value\": \"420923\" },\n\n{\n  \"label\": \"应城市\",\n  \"value\": \"420981\" },\n\n{\n  \"label\": \"安陆市\",\n  \"value\": \"420982\" },\n\n{\n  \"label\": \"汉川市\",\n  \"value\": \"420984\" }],\n\n\n[{\n  \"label\": \"沙市区\",\n  \"value\": \"421002\" },\n\n{\n  \"label\": \"荆州区\",\n  \"value\": \"421003\" },\n\n{\n  \"label\": \"公安县\",\n  \"value\": \"421022\" },\n\n{\n  \"label\": \"监利县\",\n  \"value\": \"421023\" },\n\n{\n  \"label\": \"江陵县\",\n  \"value\": \"421024\" },\n\n{\n  \"label\": \"荆州经济技术开发区\",\n  \"value\": \"421071\" },\n\n{\n  \"label\": \"石首市\",\n  \"value\": \"421081\" },\n\n{\n  \"label\": \"洪湖市\",\n  \"value\": \"421083\" },\n\n{\n  \"label\": \"松滋市\",\n  \"value\": \"421087\" }],\n\n\n[{\n  \"label\": \"黄州区\",\n  \"value\": \"421102\" },\n\n{\n  \"label\": \"团风县\",\n  \"value\": \"421121\" },\n\n{\n  \"label\": \"红安县\",\n  \"value\": \"421122\" },\n\n{\n  \"label\": \"罗田县\",\n  \"value\": \"421123\" },\n\n{\n  \"label\": \"英山县\",\n  \"value\": \"421124\" },\n\n{\n  \"label\": \"浠水县\",\n  \"value\": \"421125\" },\n\n{\n  \"label\": \"蕲春县\",\n  \"value\": \"421126\" },\n\n{\n  \"label\": \"黄梅县\",\n  \"value\": \"421127\" },\n\n{\n  \"label\": \"龙感湖管理区\",\n  \"value\": \"421171\" },\n\n{\n  \"label\": \"麻城市\",\n  \"value\": \"421181\" },\n\n{\n  \"label\": \"武穴市\",\n  \"value\": \"421182\" }],\n\n\n[{\n  \"label\": \"咸安区\",\n  \"value\": \"421202\" },\n\n{\n  \"label\": \"嘉鱼县\",\n  \"value\": \"421221\" },\n\n{\n  \"label\": \"通城县\",\n  \"value\": \"421222\" },\n\n{\n  \"label\": \"崇阳县\",\n  \"value\": \"421223\" },\n\n{\n  \"label\": \"通山县\",\n  \"value\": \"421224\" },\n\n{\n  \"label\": \"赤壁市\",\n  \"value\": \"421281\" }],\n\n\n[{\n  \"label\": \"曾都区\",\n  \"value\": \"421303\" },\n\n{\n  \"label\": \"随县\",\n  \"value\": \"421321\" },\n\n{\n  \"label\": \"广水市\",\n  \"value\": \"421381\" }],\n\n\n[{\n  \"label\": \"恩施市\",\n  \"value\": \"422801\" },\n\n{\n  \"label\": \"利川市\",\n  \"value\": \"422802\" },\n\n{\n  \"label\": \"建始县\",\n  \"value\": \"422822\" },\n\n{\n  \"label\": \"巴东县\",\n  \"value\": \"422823\" },\n\n{\n  \"label\": \"宣恩县\",\n  \"value\": \"422825\" },\n\n{\n  \"label\": \"咸丰县\",\n  \"value\": \"422826\" },\n\n{\n  \"label\": \"来凤县\",\n  \"value\": \"422827\" },\n\n{\n  \"label\": \"鹤峰县\",\n  \"value\": \"422828\" }],\n\n\n[{\n  \"label\": \"仙桃市\",\n  \"value\": \"429004\" },\n\n{\n  \"label\": \"潜江市\",\n  \"value\": \"429005\" },\n\n{\n  \"label\": \"天门市\",\n  \"value\": \"429006\" },\n\n{\n  \"label\": \"神农架林区\",\n  \"value\": \"429021\" }]],\n\n\n\n[\n[{\n  \"label\": \"芙蓉区\",\n  \"value\": \"430102\" },\n\n{\n  \"label\": \"天心区\",\n  \"value\": \"430103\" },\n\n{\n  \"label\": \"岳麓区\",\n  \"value\": \"430104\" },\n\n{\n  \"label\": \"开福区\",\n  \"value\": \"430105\" },\n\n{\n  \"label\": \"雨花区\",\n  \"value\": \"430111\" },\n\n{\n  \"label\": \"望城区\",\n  \"value\": \"430112\" },\n\n{\n  \"label\": \"长沙县\",\n  \"value\": \"430121\" },\n\n{\n  \"label\": \"浏阳市\",\n  \"value\": \"430181\" },\n\n{\n  \"label\": \"宁乡市\",\n  \"value\": \"430182\" }],\n\n\n[{\n  \"label\": \"荷塘区\",\n  \"value\": \"430202\" },\n\n{\n  \"label\": \"芦淞区\",\n  \"value\": \"430203\" },\n\n{\n  \"label\": \"石峰区\",\n  \"value\": \"430204\" },\n\n{\n  \"label\": \"天元区\",\n  \"value\": \"430211\" },\n\n{\n  \"label\": \"株洲县\",\n  \"value\": \"430221\" },\n\n{\n  \"label\": \"攸县\",\n  \"value\": \"430223\" },\n\n{\n  \"label\": \"茶陵县\",\n  \"value\": \"430224\" },\n\n{\n  \"label\": \"炎陵县\",\n  \"value\": \"430225\" },\n\n{\n  \"label\": \"云龙示范区\",\n  \"value\": \"430271\" },\n\n{\n  \"label\": \"醴陵市\",\n  \"value\": \"430281\" }],\n\n\n[{\n  \"label\": \"雨湖区\",\n  \"value\": \"430302\" },\n\n{\n  \"label\": \"岳塘区\",\n  \"value\": \"430304\" },\n\n{\n  \"label\": \"湘潭县\",\n  \"value\": \"430321\" },\n\n{\n  \"label\": \"湖南湘潭高新技术产业园区\",\n  \"value\": \"430371\" },\n\n{\n  \"label\": \"湘潭昭山示范区\",\n  \"value\": \"430372\" },\n\n{\n  \"label\": \"湘潭九华示范区\",\n  \"value\": \"430373\" },\n\n{\n  \"label\": \"湘乡市\",\n  \"value\": \"430381\" },\n\n{\n  \"label\": \"韶山市\",\n  \"value\": \"430382\" }],\n\n\n[{\n  \"label\": \"珠晖区\",\n  \"value\": \"430405\" },\n\n{\n  \"label\": \"雁峰区\",\n  \"value\": \"430406\" },\n\n{\n  \"label\": \"石鼓区\",\n  \"value\": \"430407\" },\n\n{\n  \"label\": \"蒸湘区\",\n  \"value\": \"430408\" },\n\n{\n  \"label\": \"南岳区\",\n  \"value\": \"430412\" },\n\n{\n  \"label\": \"衡阳县\",\n  \"value\": \"430421\" },\n\n{\n  \"label\": \"衡南县\",\n  \"value\": \"430422\" },\n\n{\n  \"label\": \"衡山县\",\n  \"value\": \"430423\" },\n\n{\n  \"label\": \"衡东县\",\n  \"value\": \"430424\" },\n\n{\n  \"label\": \"祁东县\",\n  \"value\": \"430426\" },\n\n{\n  \"label\": \"衡阳综合保税区\",\n  \"value\": \"430471\" },\n\n{\n  \"label\": \"湖南衡阳高新技术产业园区\",\n  \"value\": \"430472\" },\n\n{\n  \"label\": \"湖南衡阳松木经济开发区\",\n  \"value\": \"430473\" },\n\n{\n  \"label\": \"耒阳市\",\n  \"value\": \"430481\" },\n\n{\n  \"label\": \"常宁市\",\n  \"value\": \"430482\" }],\n\n\n[{\n  \"label\": \"双清区\",\n  \"value\": \"430502\" },\n\n{\n  \"label\": \"大祥区\",\n  \"value\": \"430503\" },\n\n{\n  \"label\": \"北塔区\",\n  \"value\": \"430511\" },\n\n{\n  \"label\": \"邵东县\",\n  \"value\": \"430521\" },\n\n{\n  \"label\": \"新邵县\",\n  \"value\": \"430522\" },\n\n{\n  \"label\": \"邵阳县\",\n  \"value\": \"430523\" },\n\n{\n  \"label\": \"隆回县\",\n  \"value\": \"430524\" },\n\n{\n  \"label\": \"洞口县\",\n  \"value\": \"430525\" },\n\n{\n  \"label\": \"绥宁县\",\n  \"value\": \"430527\" },\n\n{\n  \"label\": \"新宁县\",\n  \"value\": \"430528\" },\n\n{\n  \"label\": \"城步苗族自治县\",\n  \"value\": \"430529\" },\n\n{\n  \"label\": \"武冈市\",\n  \"value\": \"430581\" }],\n\n\n[{\n  \"label\": \"岳阳楼区\",\n  \"value\": \"430602\" },\n\n{\n  \"label\": \"云溪区\",\n  \"value\": \"430603\" },\n\n{\n  \"label\": \"君山区\",\n  \"value\": \"430611\" },\n\n{\n  \"label\": \"岳阳县\",\n  \"value\": \"430621\" },\n\n{\n  \"label\": \"华容县\",\n  \"value\": \"430623\" },\n\n{\n  \"label\": \"湘阴县\",\n  \"value\": \"430624\" },\n\n{\n  \"label\": \"平江县\",\n  \"value\": \"430626\" },\n\n{\n  \"label\": \"岳阳市屈原管理区\",\n  \"value\": \"430671\" },\n\n{\n  \"label\": \"汨罗市\",\n  \"value\": \"430681\" },\n\n{\n  \"label\": \"临湘市\",\n  \"value\": \"430682\" }],\n\n\n[{\n  \"label\": \"武陵区\",\n  \"value\": \"430702\" },\n\n{\n  \"label\": \"鼎城区\",\n  \"value\": \"430703\" },\n\n{\n  \"label\": \"安乡县\",\n  \"value\": \"430721\" },\n\n{\n  \"label\": \"汉寿县\",\n  \"value\": \"430722\" },\n\n{\n  \"label\": \"澧县\",\n  \"value\": \"430723\" },\n\n{\n  \"label\": \"临澧县\",\n  \"value\": \"430724\" },\n\n{\n  \"label\": \"桃源县\",\n  \"value\": \"430725\" },\n\n{\n  \"label\": \"石门县\",\n  \"value\": \"430726\" },\n\n{\n  \"label\": \"常德市西洞庭管理区\",\n  \"value\": \"430771\" },\n\n{\n  \"label\": \"津市市\",\n  \"value\": \"430781\" }],\n\n\n[{\n  \"label\": \"永定区\",\n  \"value\": \"430802\" },\n\n{\n  \"label\": \"武陵源区\",\n  \"value\": \"430811\" },\n\n{\n  \"label\": \"慈利县\",\n  \"value\": \"430821\" },\n\n{\n  \"label\": \"桑植县\",\n  \"value\": \"430822\" }],\n\n\n[{\n  \"label\": \"资阳区\",\n  \"value\": \"430902\" },\n\n{\n  \"label\": \"赫山区\",\n  \"value\": \"430903\" },\n\n{\n  \"label\": \"南县\",\n  \"value\": \"430921\" },\n\n{\n  \"label\": \"桃江县\",\n  \"value\": \"430922\" },\n\n{\n  \"label\": \"安化县\",\n  \"value\": \"430923\" },\n\n{\n  \"label\": \"益阳市大通湖管理区\",\n  \"value\": \"430971\" },\n\n{\n  \"label\": \"湖南益阳高新技术产业园区\",\n  \"value\": \"430972\" },\n\n{\n  \"label\": \"沅江市\",\n  \"value\": \"430981\" }],\n\n\n[{\n  \"label\": \"北湖区\",\n  \"value\": \"431002\" },\n\n{\n  \"label\": \"苏仙区\",\n  \"value\": \"431003\" },\n\n{\n  \"label\": \"桂阳县\",\n  \"value\": \"431021\" },\n\n{\n  \"label\": \"宜章县\",\n  \"value\": \"431022\" },\n\n{\n  \"label\": \"永兴县\",\n  \"value\": \"431023\" },\n\n{\n  \"label\": \"嘉禾县\",\n  \"value\": \"431024\" },\n\n{\n  \"label\": \"临武县\",\n  \"value\": \"431025\" },\n\n{\n  \"label\": \"汝城县\",\n  \"value\": \"431026\" },\n\n{\n  \"label\": \"桂东县\",\n  \"value\": \"431027\" },\n\n{\n  \"label\": \"安仁县\",\n  \"value\": \"431028\" },\n\n{\n  \"label\": \"资兴市\",\n  \"value\": \"431081\" }],\n\n\n[{\n  \"label\": \"零陵区\",\n  \"value\": \"431102\" },\n\n{\n  \"label\": \"冷水滩区\",\n  \"value\": \"431103\" },\n\n{\n  \"label\": \"祁阳县\",\n  \"value\": \"431121\" },\n\n{\n  \"label\": \"东安县\",\n  \"value\": \"431122\" },\n\n{\n  \"label\": \"双牌县\",\n  \"value\": \"431123\" },\n\n{\n  \"label\": \"道县\",\n  \"value\": \"431124\" },\n\n{\n  \"label\": \"江永县\",\n  \"value\": \"431125\" },\n\n{\n  \"label\": \"宁远县\",\n  \"value\": \"431126\" },\n\n{\n  \"label\": \"蓝山县\",\n  \"value\": \"431127\" },\n\n{\n  \"label\": \"新田县\",\n  \"value\": \"431128\" },\n\n{\n  \"label\": \"江华瑶族自治县\",\n  \"value\": \"431129\" },\n\n{\n  \"label\": \"永州经济技术开发区\",\n  \"value\": \"431171\" },\n\n{\n  \"label\": \"永州市金洞管理区\",\n  \"value\": \"431172\" },\n\n{\n  \"label\": \"永州市回龙圩管理区\",\n  \"value\": \"431173\" }],\n\n\n[{\n  \"label\": \"鹤城区\",\n  \"value\": \"431202\" },\n\n{\n  \"label\": \"中方县\",\n  \"value\": \"431221\" },\n\n{\n  \"label\": \"沅陵县\",\n  \"value\": \"431222\" },\n\n{\n  \"label\": \"辰溪县\",\n  \"value\": \"431223\" },\n\n{\n  \"label\": \"溆浦县\",\n  \"value\": \"431224\" },\n\n{\n  \"label\": \"会同县\",\n  \"value\": \"431225\" },\n\n{\n  \"label\": \"麻阳苗族自治县\",\n  \"value\": \"431226\" },\n\n{\n  \"label\": \"新晃侗族自治县\",\n  \"value\": \"431227\" },\n\n{\n  \"label\": \"芷江侗族自治县\",\n  \"value\": \"431228\" },\n\n{\n  \"label\": \"靖州苗族侗族自治县\",\n  \"value\": \"431229\" },\n\n{\n  \"label\": \"通道侗族自治县\",\n  \"value\": \"431230\" },\n\n{\n  \"label\": \"怀化市洪江管理区\",\n  \"value\": \"431271\" },\n\n{\n  \"label\": \"洪江市\",\n  \"value\": \"431281\" }],\n\n\n[{\n  \"label\": \"娄星区\",\n  \"value\": \"431302\" },\n\n{\n  \"label\": \"双峰县\",\n  \"value\": \"431321\" },\n\n{\n  \"label\": \"新化县\",\n  \"value\": \"431322\" },\n\n{\n  \"label\": \"冷水江市\",\n  \"value\": \"431381\" },\n\n{\n  \"label\": \"涟源市\",\n  \"value\": \"431382\" }],\n\n\n[{\n  \"label\": \"吉首市\",\n  \"value\": \"433101\" },\n\n{\n  \"label\": \"泸溪县\",\n  \"value\": \"433122\" },\n\n{\n  \"label\": \"凤凰县\",\n  \"value\": \"433123\" },\n\n{\n  \"label\": \"花垣县\",\n  \"value\": \"433124\" },\n\n{\n  \"label\": \"保靖县\",\n  \"value\": \"433125\" },\n\n{\n  \"label\": \"古丈县\",\n  \"value\": \"433126\" },\n\n{\n  \"label\": \"永顺县\",\n  \"value\": \"433127\" },\n\n{\n  \"label\": \"龙山县\",\n  \"value\": \"433130\" },\n\n{\n  \"label\": \"湖南吉首经济开发区\",\n  \"value\": \"433172\" },\n\n{\n  \"label\": \"湖南永顺经济开发区\",\n  \"value\": \"433173\" }]],\n\n\n\n[\n[{\n  \"label\": \"荔湾区\",\n  \"value\": \"440103\" },\n\n{\n  \"label\": \"越秀区\",\n  \"value\": \"440104\" },\n\n{\n  \"label\": \"海珠区\",\n  \"value\": \"440105\" },\n\n{\n  \"label\": \"天河区\",\n  \"value\": \"440106\" },\n\n{\n  \"label\": \"白云区\",\n  \"value\": \"440111\" },\n\n{\n  \"label\": \"黄埔区\",\n  \"value\": \"440112\" },\n\n{\n  \"label\": \"番禺区\",\n  \"value\": \"440113\" },\n\n{\n  \"label\": \"花都区\",\n  \"value\": \"440114\" },\n\n{\n  \"label\": \"南沙区\",\n  \"value\": \"440115\" },\n\n{\n  \"label\": \"从化区\",\n  \"value\": \"440117\" },\n\n{\n  \"label\": \"增城区\",\n  \"value\": \"440118\" }],\n\n\n[{\n  \"label\": \"武江区\",\n  \"value\": \"440203\" },\n\n{\n  \"label\": \"浈江区\",\n  \"value\": \"440204\" },\n\n{\n  \"label\": \"曲江区\",\n  \"value\": \"440205\" },\n\n{\n  \"label\": \"始兴县\",\n  \"value\": \"440222\" },\n\n{\n  \"label\": \"仁化县\",\n  \"value\": \"440224\" },\n\n{\n  \"label\": \"翁源县\",\n  \"value\": \"440229\" },\n\n{\n  \"label\": \"乳源瑶族自治县\",\n  \"value\": \"440232\" },\n\n{\n  \"label\": \"新丰县\",\n  \"value\": \"440233\" },\n\n{\n  \"label\": \"乐昌市\",\n  \"value\": \"440281\" },\n\n{\n  \"label\": \"南雄市\",\n  \"value\": \"440282\" }],\n\n\n[{\n  \"label\": \"罗湖区\",\n  \"value\": \"440303\" },\n\n{\n  \"label\": \"福田区\",\n  \"value\": \"440304\" },\n\n{\n  \"label\": \"南山区\",\n  \"value\": \"440305\" },\n\n{\n  \"label\": \"宝安区\",\n  \"value\": \"440306\" },\n\n{\n  \"label\": \"龙岗区\",\n  \"value\": \"440307\" },\n\n{\n  \"label\": \"盐田区\",\n  \"value\": \"440308\" },\n\n{\n  \"label\": \"龙华区\",\n  \"value\": \"440309\" },\n\n{\n  \"label\": \"坪山区\",\n  \"value\": \"440310\" }],\n\n\n[{\n  \"label\": \"香洲区\",\n  \"value\": \"440402\" },\n\n{\n  \"label\": \"斗门区\",\n  \"value\": \"440403\" },\n\n{\n  \"label\": \"金湾区\",\n  \"value\": \"440404\" }],\n\n\n[{\n  \"label\": \"龙湖区\",\n  \"value\": \"440507\" },\n\n{\n  \"label\": \"金平区\",\n  \"value\": \"440511\" },\n\n{\n  \"label\": \"濠江区\",\n  \"value\": \"440512\" },\n\n{\n  \"label\": \"潮阳区\",\n  \"value\": \"440513\" },\n\n{\n  \"label\": \"潮南区\",\n  \"value\": \"440514\" },\n\n{\n  \"label\": \"澄海区\",\n  \"value\": \"440515\" },\n\n{\n  \"label\": \"南澳县\",\n  \"value\": \"440523\" }],\n\n\n[{\n  \"label\": \"禅城区\",\n  \"value\": \"440604\" },\n\n{\n  \"label\": \"南海区\",\n  \"value\": \"440605\" },\n\n{\n  \"label\": \"顺德区\",\n  \"value\": \"440606\" },\n\n{\n  \"label\": \"三水区\",\n  \"value\": \"440607\" },\n\n{\n  \"label\": \"高明区\",\n  \"value\": \"440608\" }],\n\n\n[{\n  \"label\": \"蓬江区\",\n  \"value\": \"440703\" },\n\n{\n  \"label\": \"江海区\",\n  \"value\": \"440704\" },\n\n{\n  \"label\": \"新会区\",\n  \"value\": \"440705\" },\n\n{\n  \"label\": \"台山市\",\n  \"value\": \"440781\" },\n\n{\n  \"label\": \"开平市\",\n  \"value\": \"440783\" },\n\n{\n  \"label\": \"鹤山市\",\n  \"value\": \"440784\" },\n\n{\n  \"label\": \"恩平市\",\n  \"value\": \"440785\" }],\n\n\n[{\n  \"label\": \"赤坎区\",\n  \"value\": \"440802\" },\n\n{\n  \"label\": \"霞山区\",\n  \"value\": \"440803\" },\n\n{\n  \"label\": \"坡头区\",\n  \"value\": \"440804\" },\n\n{\n  \"label\": \"麻章区\",\n  \"value\": \"440811\" },\n\n{\n  \"label\": \"遂溪县\",\n  \"value\": \"440823\" },\n\n{\n  \"label\": \"徐闻县\",\n  \"value\": \"440825\" },\n\n{\n  \"label\": \"廉江市\",\n  \"value\": \"440881\" },\n\n{\n  \"label\": \"雷州市\",\n  \"value\": \"440882\" },\n\n{\n  \"label\": \"吴川市\",\n  \"value\": \"440883\" }],\n\n\n[{\n  \"label\": \"茂南区\",\n  \"value\": \"440902\" },\n\n{\n  \"label\": \"电白区\",\n  \"value\": \"440904\" },\n\n{\n  \"label\": \"高州市\",\n  \"value\": \"440981\" },\n\n{\n  \"label\": \"化州市\",\n  \"value\": \"440982\" },\n\n{\n  \"label\": \"信宜市\",\n  \"value\": \"440983\" }],\n\n\n[{\n  \"label\": \"端州区\",\n  \"value\": \"441202\" },\n\n{\n  \"label\": \"鼎湖区\",\n  \"value\": \"441203\" },\n\n{\n  \"label\": \"高要区\",\n  \"value\": \"441204\" },\n\n{\n  \"label\": \"广宁县\",\n  \"value\": \"441223\" },\n\n{\n  \"label\": \"怀集县\",\n  \"value\": \"441224\" },\n\n{\n  \"label\": \"封开县\",\n  \"value\": \"441225\" },\n\n{\n  \"label\": \"德庆县\",\n  \"value\": \"441226\" },\n\n{\n  \"label\": \"四会市\",\n  \"value\": \"441284\" }],\n\n\n[{\n  \"label\": \"惠城区\",\n  \"value\": \"441302\" },\n\n{\n  \"label\": \"惠阳区\",\n  \"value\": \"441303\" },\n\n{\n  \"label\": \"博罗县\",\n  \"value\": \"441322\" },\n\n{\n  \"label\": \"惠东县\",\n  \"value\": \"441323\" },\n\n{\n  \"label\": \"龙门县\",\n  \"value\": \"441324\" }],\n\n\n[{\n  \"label\": \"梅江区\",\n  \"value\": \"441402\" },\n\n{\n  \"label\": \"梅县区\",\n  \"value\": \"441403\" },\n\n{\n  \"label\": \"大埔县\",\n  \"value\": \"441422\" },\n\n{\n  \"label\": \"丰顺县\",\n  \"value\": \"441423\" },\n\n{\n  \"label\": \"五华县\",\n  \"value\": \"441424\" },\n\n{\n  \"label\": \"平远县\",\n  \"value\": \"441426\" },\n\n{\n  \"label\": \"蕉岭县\",\n  \"value\": \"441427\" },\n\n{\n  \"label\": \"兴宁市\",\n  \"value\": \"441481\" }],\n\n\n[{\n  \"label\": \"城区\",\n  \"value\": \"441502\" },\n\n{\n  \"label\": \"海丰县\",\n  \"value\": \"441521\" },\n\n{\n  \"label\": \"陆河县\",\n  \"value\": \"441523\" },\n\n{\n  \"label\": \"陆丰市\",\n  \"value\": \"441581\" }],\n\n\n[{\n  \"label\": \"源城区\",\n  \"value\": \"441602\" },\n\n{\n  \"label\": \"紫金县\",\n  \"value\": \"441621\" },\n\n{\n  \"label\": \"龙川县\",\n  \"value\": \"441622\" },\n\n{\n  \"label\": \"连平县\",\n  \"value\": \"441623\" },\n\n{\n  \"label\": \"和平县\",\n  \"value\": \"441624\" },\n\n{\n  \"label\": \"东源县\",\n  \"value\": \"441625\" }],\n\n\n[{\n  \"label\": \"江城区\",\n  \"value\": \"441702\" },\n\n{\n  \"label\": \"阳东区\",\n  \"value\": \"441704\" },\n\n{\n  \"label\": \"阳西县\",\n  \"value\": \"441721\" },\n\n{\n  \"label\": \"阳春市\",\n  \"value\": \"441781\" }],\n\n\n[{\n  \"label\": \"清城区\",\n  \"value\": \"441802\" },\n\n{\n  \"label\": \"清新区\",\n  \"value\": \"441803\" },\n\n{\n  \"label\": \"佛冈县\",\n  \"value\": \"441821\" },\n\n{\n  \"label\": \"阳山县\",\n  \"value\": \"441823\" },\n\n{\n  \"label\": \"连山壮族瑶族自治县\",\n  \"value\": \"441825\" },\n\n{\n  \"label\": \"连南瑶族自治县\",\n  \"value\": \"441826\" },\n\n{\n  \"label\": \"英德市\",\n  \"value\": \"441881\" },\n\n{\n  \"label\": \"连州市\",\n  \"value\": \"441882\" }],\n\n\n[{\n  \"label\": \"东莞市\",\n  \"value\": \"441900\" }],\n\n[{\n  \"label\": \"中山市\",\n  \"value\": \"442000\" }],\n\n[{\n  \"label\": \"湘桥区\",\n  \"value\": \"445102\" },\n\n{\n  \"label\": \"潮安区\",\n  \"value\": \"445103\" },\n\n{\n  \"label\": \"饶平县\",\n  \"value\": \"445122\" }],\n\n\n[{\n  \"label\": \"榕城区\",\n  \"value\": \"445202\" },\n\n{\n  \"label\": \"揭东区\",\n  \"value\": \"445203\" },\n\n{\n  \"label\": \"揭西县\",\n  \"value\": \"445222\" },\n\n{\n  \"label\": \"惠来县\",\n  \"value\": \"445224\" },\n\n{\n  \"label\": \"普宁市\",\n  \"value\": \"445281\" }],\n\n\n[{\n  \"label\": \"云城区\",\n  \"value\": \"445302\" },\n\n{\n  \"label\": \"云安区\",\n  \"value\": \"445303\" },\n\n{\n  \"label\": \"新兴县\",\n  \"value\": \"445321\" },\n\n{\n  \"label\": \"郁南县\",\n  \"value\": \"445322\" },\n\n{\n  \"label\": \"罗定市\",\n  \"value\": \"445381\" }]],\n\n\n\n[\n[{\n  \"label\": \"兴宁区\",\n  \"value\": \"450102\" },\n\n{\n  \"label\": \"青秀区\",\n  \"value\": \"450103\" },\n\n{\n  \"label\": \"江南区\",\n  \"value\": \"450105\" },\n\n{\n  \"label\": \"西乡塘区\",\n  \"value\": \"450107\" },\n\n{\n  \"label\": \"良庆区\",\n  \"value\": \"450108\" },\n\n{\n  \"label\": \"邕宁区\",\n  \"value\": \"450109\" },\n\n{\n  \"label\": \"武鸣区\",\n  \"value\": \"450110\" },\n\n{\n  \"label\": \"隆安县\",\n  \"value\": \"450123\" },\n\n{\n  \"label\": \"马山县\",\n  \"value\": \"450124\" },\n\n{\n  \"label\": \"上林县\",\n  \"value\": \"450125\" },\n\n{\n  \"label\": \"宾阳县\",\n  \"value\": \"450126\" },\n\n{\n  \"label\": \"横县\",\n  \"value\": \"450127\" }],\n\n\n[{\n  \"label\": \"城中区\",\n  \"value\": \"450202\" },\n\n{\n  \"label\": \"鱼峰区\",\n  \"value\": \"450203\" },\n\n{\n  \"label\": \"柳南区\",\n  \"value\": \"450204\" },\n\n{\n  \"label\": \"柳北区\",\n  \"value\": \"450205\" },\n\n{\n  \"label\": \"柳江区\",\n  \"value\": \"450206\" },\n\n{\n  \"label\": \"柳城县\",\n  \"value\": \"450222\" },\n\n{\n  \"label\": \"鹿寨县\",\n  \"value\": \"450223\" },\n\n{\n  \"label\": \"融安县\",\n  \"value\": \"450224\" },\n\n{\n  \"label\": \"融水苗族自治县\",\n  \"value\": \"450225\" },\n\n{\n  \"label\": \"三江侗族自治县\",\n  \"value\": \"450226\" }],\n\n\n[{\n  \"label\": \"秀峰区\",\n  \"value\": \"450302\" },\n\n{\n  \"label\": \"叠彩区\",\n  \"value\": \"450303\" },\n\n{\n  \"label\": \"象山区\",\n  \"value\": \"450304\" },\n\n{\n  \"label\": \"七星区\",\n  \"value\": \"450305\" },\n\n{\n  \"label\": \"雁山区\",\n  \"value\": \"450311\" },\n\n{\n  \"label\": \"临桂区\",\n  \"value\": \"450312\" },\n\n{\n  \"label\": \"阳朔县\",\n  \"value\": \"450321\" },\n\n{\n  \"label\": \"灵川县\",\n  \"value\": \"450323\" },\n\n{\n  \"label\": \"全州县\",\n  \"value\": \"450324\" },\n\n{\n  \"label\": \"兴安县\",\n  \"value\": \"450325\" },\n\n{\n  \"label\": \"永福县\",\n  \"value\": \"450326\" },\n\n{\n  \"label\": \"灌阳县\",\n  \"value\": \"450327\" },\n\n{\n  \"label\": \"龙胜各族自治县\",\n  \"value\": \"450328\" },\n\n{\n  \"label\": \"资源县\",\n  \"value\": \"450329\" },\n\n{\n  \"label\": \"平乐县\",\n  \"value\": \"450330\" },\n\n{\n  \"label\": \"荔浦县\",\n  \"value\": \"450331\" },\n\n{\n  \"label\": \"恭城瑶族自治县\",\n  \"value\": \"450332\" }],\n\n\n[{\n  \"label\": \"万秀区\",\n  \"value\": \"450403\" },\n\n{\n  \"label\": \"长洲区\",\n  \"value\": \"450405\" },\n\n{\n  \"label\": \"龙圩区\",\n  \"value\": \"450406\" },\n\n{\n  \"label\": \"苍梧县\",\n  \"value\": \"450421\" },\n\n{\n  \"label\": \"藤县\",\n  \"value\": \"450422\" },\n\n{\n  \"label\": \"蒙山县\",\n  \"value\": \"450423\" },\n\n{\n  \"label\": \"岑溪市\",\n  \"value\": \"450481\" }],\n\n\n[{\n  \"label\": \"海城区\",\n  \"value\": \"450502\" },\n\n{\n  \"label\": \"银海区\",\n  \"value\": \"450503\" },\n\n{\n  \"label\": \"铁山港区\",\n  \"value\": \"450512\" },\n\n{\n  \"label\": \"合浦县\",\n  \"value\": \"450521\" }],\n\n\n[{\n  \"label\": \"港口区\",\n  \"value\": \"450602\" },\n\n{\n  \"label\": \"防城区\",\n  \"value\": \"450603\" },\n\n{\n  \"label\": \"上思县\",\n  \"value\": \"450621\" },\n\n{\n  \"label\": \"东兴市\",\n  \"value\": \"450681\" }],\n\n\n[{\n  \"label\": \"钦南区\",\n  \"value\": \"450702\" },\n\n{\n  \"label\": \"钦北区\",\n  \"value\": \"450703\" },\n\n{\n  \"label\": \"灵山县\",\n  \"value\": \"450721\" },\n\n{\n  \"label\": \"浦北县\",\n  \"value\": \"450722\" }],\n\n\n[{\n  \"label\": \"港北区\",\n  \"value\": \"450802\" },\n\n{\n  \"label\": \"港南区\",\n  \"value\": \"450803\" },\n\n{\n  \"label\": \"覃塘区\",\n  \"value\": \"450804\" },\n\n{\n  \"label\": \"平南县\",\n  \"value\": \"450821\" },\n\n{\n  \"label\": \"桂平市\",\n  \"value\": \"450881\" }],\n\n\n[{\n  \"label\": \"玉州区\",\n  \"value\": \"450902\" },\n\n{\n  \"label\": \"福绵区\",\n  \"value\": \"450903\" },\n\n{\n  \"label\": \"容县\",\n  \"value\": \"450921\" },\n\n{\n  \"label\": \"陆川县\",\n  \"value\": \"450922\" },\n\n{\n  \"label\": \"博白县\",\n  \"value\": \"450923\" },\n\n{\n  \"label\": \"兴业县\",\n  \"value\": \"450924\" },\n\n{\n  \"label\": \"北流市\",\n  \"value\": \"450981\" }],\n\n\n[{\n  \"label\": \"右江区\",\n  \"value\": \"451002\" },\n\n{\n  \"label\": \"田阳县\",\n  \"value\": \"451021\" },\n\n{\n  \"label\": \"田东县\",\n  \"value\": \"451022\" },\n\n{\n  \"label\": \"平果县\",\n  \"value\": \"451023\" },\n\n{\n  \"label\": \"德保县\",\n  \"value\": \"451024\" },\n\n{\n  \"label\": \"那坡县\",\n  \"value\": \"451026\" },\n\n{\n  \"label\": \"凌云县\",\n  \"value\": \"451027\" },\n\n{\n  \"label\": \"乐业县\",\n  \"value\": \"451028\" },\n\n{\n  \"label\": \"田林县\",\n  \"value\": \"451029\" },\n\n{\n  \"label\": \"西林县\",\n  \"value\": \"451030\" },\n\n{\n  \"label\": \"隆林各族自治县\",\n  \"value\": \"451031\" },\n\n{\n  \"label\": \"靖西市\",\n  \"value\": \"451081\" }],\n\n\n[{\n  \"label\": \"八步区\",\n  \"value\": \"451102\" },\n\n{\n  \"label\": \"平桂区\",\n  \"value\": \"451103\" },\n\n{\n  \"label\": \"昭平县\",\n  \"value\": \"451121\" },\n\n{\n  \"label\": \"钟山县\",\n  \"value\": \"451122\" },\n\n{\n  \"label\": \"富川瑶族自治县\",\n  \"value\": \"451123\" }],\n\n\n[{\n  \"label\": \"金城江区\",\n  \"value\": \"451202\" },\n\n{\n  \"label\": \"宜州区\",\n  \"value\": \"451203\" },\n\n{\n  \"label\": \"南丹县\",\n  \"value\": \"451221\" },\n\n{\n  \"label\": \"天峨县\",\n  \"value\": \"451222\" },\n\n{\n  \"label\": \"凤山县\",\n  \"value\": \"451223\" },\n\n{\n  \"label\": \"东兰县\",\n  \"value\": \"451224\" },\n\n{\n  \"label\": \"罗城仫佬族自治县\",\n  \"value\": \"451225\" },\n\n{\n  \"label\": \"环江毛南族自治县\",\n  \"value\": \"451226\" },\n\n{\n  \"label\": \"巴马瑶族自治县\",\n  \"value\": \"451227\" },\n\n{\n  \"label\": \"都安瑶族自治县\",\n  \"value\": \"451228\" },\n\n{\n  \"label\": \"大化瑶族自治县\",\n  \"value\": \"451229\" }],\n\n\n[{\n  \"label\": \"兴宾区\",\n  \"value\": \"451302\" },\n\n{\n  \"label\": \"忻城县\",\n  \"value\": \"451321\" },\n\n{\n  \"label\": \"象州县\",\n  \"value\": \"451322\" },\n\n{\n  \"label\": \"武宣县\",\n  \"value\": \"451323\" },\n\n{\n  \"label\": \"金秀瑶族自治县\",\n  \"value\": \"451324\" },\n\n{\n  \"label\": \"合山市\",\n  \"value\": \"451381\" }],\n\n\n[{\n  \"label\": \"江州区\",\n  \"value\": \"451402\" },\n\n{\n  \"label\": \"扶绥县\",\n  \"value\": \"451421\" },\n\n{\n  \"label\": \"宁明县\",\n  \"value\": \"451422\" },\n\n{\n  \"label\": \"龙州县\",\n  \"value\": \"451423\" },\n\n{\n  \"label\": \"大新县\",\n  \"value\": \"451424\" },\n\n{\n  \"label\": \"天等县\",\n  \"value\": \"451425\" },\n\n{\n  \"label\": \"凭祥市\",\n  \"value\": \"451481\" }]],\n\n\n\n[\n[{\n  \"label\": \"秀英区\",\n  \"value\": \"460105\" },\n\n{\n  \"label\": \"龙华区\",\n  \"value\": \"460106\" },\n\n{\n  \"label\": \"琼山区\",\n  \"value\": \"460107\" },\n\n{\n  \"label\": \"美兰区\",\n  \"value\": \"460108\" }],\n\n\n[{\n  \"label\": \"海棠区\",\n  \"value\": \"460202\" },\n\n{\n  \"label\": \"吉阳区\",\n  \"value\": \"460203\" },\n\n{\n  \"label\": \"天涯区\",\n  \"value\": \"460204\" },\n\n{\n  \"label\": \"崖州区\",\n  \"value\": \"460205\" }],\n\n\n[{\n  \"label\": \"西沙群岛\",\n  \"value\": \"460321\" },\n\n{\n  \"label\": \"南沙群岛\",\n  \"value\": \"460322\" },\n\n{\n  \"label\": \"中沙群岛的岛礁及其海域\",\n  \"value\": \"460323\" }],\n\n\n[{\n  \"label\": \"儋州市\",\n  \"value\": \"460400\" }],\n\n[{\n  \"label\": \"五指山市\",\n  \"value\": \"469001\" },\n\n{\n  \"label\": \"琼海市\",\n  \"value\": \"469002\" },\n\n{\n  \"label\": \"文昌市\",\n  \"value\": \"469005\" },\n\n{\n  \"label\": \"万宁市\",\n  \"value\": \"469006\" },\n\n{\n  \"label\": \"东方市\",\n  \"value\": \"469007\" },\n\n{\n  \"label\": \"定安县\",\n  \"value\": \"469021\" },\n\n{\n  \"label\": \"屯昌县\",\n  \"value\": \"469022\" },\n\n{\n  \"label\": \"澄迈县\",\n  \"value\": \"469023\" },\n\n{\n  \"label\": \"临高县\",\n  \"value\": \"469024\" },\n\n{\n  \"label\": \"白沙黎族自治县\",\n  \"value\": \"469025\" },\n\n{\n  \"label\": \"昌江黎族自治县\",\n  \"value\": \"469026\" },\n\n{\n  \"label\": \"乐东黎族自治县\",\n  \"value\": \"469027\" },\n\n{\n  \"label\": \"陵水黎族自治县\",\n  \"value\": \"469028\" },\n\n{\n  \"label\": \"保亭黎族苗族自治县\",\n  \"value\": \"469029\" },\n\n{\n  \"label\": \"琼中黎族苗族自治县\",\n  \"value\": \"469030\" }]],\n\n\n\n[\n[{\n  \"label\": \"万州区\",\n  \"value\": \"500101\" },\n\n{\n  \"label\": \"涪陵区\",\n  \"value\": \"500102\" },\n\n{\n  \"label\": \"渝中区\",\n  \"value\": \"500103\" },\n\n{\n  \"label\": \"大渡口区\",\n  \"value\": \"500104\" },\n\n{\n  \"label\": \"江北区\",\n  \"value\": \"500105\" },\n\n{\n  \"label\": \"沙坪坝区\",\n  \"value\": \"500106\" },\n\n{\n  \"label\": \"九龙坡区\",\n  \"value\": \"500107\" },\n\n{\n  \"label\": \"南岸区\",\n  \"value\": \"500108\" },\n\n{\n  \"label\": \"北碚区\",\n  \"value\": \"500109\" },\n\n{\n  \"label\": \"綦江区\",\n  \"value\": \"500110\" },\n\n{\n  \"label\": \"大足区\",\n  \"value\": \"500111\" },\n\n{\n  \"label\": \"渝北区\",\n  \"value\": \"500112\" },\n\n{\n  \"label\": \"巴南区\",\n  \"value\": \"500113\" },\n\n{\n  \"label\": \"黔江区\",\n  \"value\": \"500114\" },\n\n{\n  \"label\": \"长寿区\",\n  \"value\": \"500115\" },\n\n{\n  \"label\": \"江津区\",\n  \"value\": \"500116\" },\n\n{\n  \"label\": \"合川区\",\n  \"value\": \"500117\" },\n\n{\n  \"label\": \"永川区\",\n  \"value\": \"500118\" },\n\n{\n  \"label\": \"南川区\",\n  \"value\": \"500119\" },\n\n{\n  \"label\": \"璧山区\",\n  \"value\": \"500120\" },\n\n{\n  \"label\": \"铜梁区\",\n  \"value\": \"500151\" },\n\n{\n  \"label\": \"潼南区\",\n  \"value\": \"500152\" },\n\n{\n  \"label\": \"荣昌区\",\n  \"value\": \"500153\" },\n\n{\n  \"label\": \"开州区\",\n  \"value\": \"500154\" },\n\n{\n  \"label\": \"梁平区\",\n  \"value\": \"500155\" },\n\n{\n  \"label\": \"武隆区\",\n  \"value\": \"500156\" }],\n\n\n[{\n  \"label\": \"城口县\",\n  \"value\": \"500229\" },\n\n{\n  \"label\": \"丰都县\",\n  \"value\": \"500230\" },\n\n{\n  \"label\": \"垫江县\",\n  \"value\": \"500231\" },\n\n{\n  \"label\": \"忠县\",\n  \"value\": \"500233\" },\n\n{\n  \"label\": \"云阳县\",\n  \"value\": \"500235\" },\n\n{\n  \"label\": \"奉节县\",\n  \"value\": \"500236\" },\n\n{\n  \"label\": \"巫山县\",\n  \"value\": \"500237\" },\n\n{\n  \"label\": \"巫溪县\",\n  \"value\": \"500238\" },\n\n{\n  \"label\": \"石柱土家族自治县\",\n  \"value\": \"500240\" },\n\n{\n  \"label\": \"秀山土家族苗族自治县\",\n  \"value\": \"500241\" },\n\n{\n  \"label\": \"酉阳土家族苗族自治县\",\n  \"value\": \"500242\" },\n\n{\n  \"label\": \"彭水苗族土家族自治县\",\n  \"value\": \"500243\" }]],\n\n\n\n[\n[{\n  \"label\": \"锦江区\",\n  \"value\": \"510104\" },\n\n{\n  \"label\": \"青羊区\",\n  \"value\": \"510105\" },\n\n{\n  \"label\": \"金牛区\",\n  \"value\": \"510106\" },\n\n{\n  \"label\": \"武侯区\",\n  \"value\": \"510107\" },\n\n{\n  \"label\": \"成华区\",\n  \"value\": \"510108\" },\n\n{\n  \"label\": \"龙泉驿区\",\n  \"value\": \"510112\" },\n\n{\n  \"label\": \"青白江区\",\n  \"value\": \"510113\" },\n\n{\n  \"label\": \"新都区\",\n  \"value\": \"510114\" },\n\n{\n  \"label\": \"温江区\",\n  \"value\": \"510115\" },\n\n{\n  \"label\": \"双流区\",\n  \"value\": \"510116\" },\n\n{\n  \"label\": \"郫都区\",\n  \"value\": \"510117\" },\n\n{\n  \"label\": \"金堂县\",\n  \"value\": \"510121\" },\n\n{\n  \"label\": \"大邑县\",\n  \"value\": \"510129\" },\n\n{\n  \"label\": \"蒲江县\",\n  \"value\": \"510131\" },\n\n{\n  \"label\": \"新津县\",\n  \"value\": \"510132\" },\n\n{\n  \"label\": \"都江堰市\",\n  \"value\": \"510181\" },\n\n{\n  \"label\": \"彭州市\",\n  \"value\": \"510182\" },\n\n{\n  \"label\": \"邛崃市\",\n  \"value\": \"510183\" },\n\n{\n  \"label\": \"崇州市\",\n  \"value\": \"510184\" },\n\n{\n  \"label\": \"简阳市\",\n  \"value\": \"510185\" }],\n\n\n[{\n  \"label\": \"自流井区\",\n  \"value\": \"510302\" },\n\n{\n  \"label\": \"贡井区\",\n  \"value\": \"510303\" },\n\n{\n  \"label\": \"大安区\",\n  \"value\": \"510304\" },\n\n{\n  \"label\": \"沿滩区\",\n  \"value\": \"510311\" },\n\n{\n  \"label\": \"荣县\",\n  \"value\": \"510321\" },\n\n{\n  \"label\": \"富顺县\",\n  \"value\": \"510322\" }],\n\n\n[{\n  \"label\": \"东区\",\n  \"value\": \"510402\" },\n\n{\n  \"label\": \"西区\",\n  \"value\": \"510403\" },\n\n{\n  \"label\": \"仁和区\",\n  \"value\": \"510411\" },\n\n{\n  \"label\": \"米易县\",\n  \"value\": \"510421\" },\n\n{\n  \"label\": \"盐边县\",\n  \"value\": \"510422\" }],\n\n\n[{\n  \"label\": \"江阳区\",\n  \"value\": \"510502\" },\n\n{\n  \"label\": \"纳溪区\",\n  \"value\": \"510503\" },\n\n{\n  \"label\": \"龙马潭区\",\n  \"value\": \"510504\" },\n\n{\n  \"label\": \"泸县\",\n  \"value\": \"510521\" },\n\n{\n  \"label\": \"合江县\",\n  \"value\": \"510522\" },\n\n{\n  \"label\": \"叙永县\",\n  \"value\": \"510524\" },\n\n{\n  \"label\": \"古蔺县\",\n  \"value\": \"510525\" }],\n\n\n[{\n  \"label\": \"旌阳区\",\n  \"value\": \"510603\" },\n\n{\n  \"label\": \"罗江区\",\n  \"value\": \"510604\" },\n\n{\n  \"label\": \"中江县\",\n  \"value\": \"510623\" },\n\n{\n  \"label\": \"广汉市\",\n  \"value\": \"510681\" },\n\n{\n  \"label\": \"什邡市\",\n  \"value\": \"510682\" },\n\n{\n  \"label\": \"绵竹市\",\n  \"value\": \"510683\" }],\n\n\n[{\n  \"label\": \"涪城区\",\n  \"value\": \"510703\" },\n\n{\n  \"label\": \"游仙区\",\n  \"value\": \"510704\" },\n\n{\n  \"label\": \"安州区\",\n  \"value\": \"510705\" },\n\n{\n  \"label\": \"三台县\",\n  \"value\": \"510722\" },\n\n{\n  \"label\": \"盐亭县\",\n  \"value\": \"510723\" },\n\n{\n  \"label\": \"梓潼县\",\n  \"value\": \"510725\" },\n\n{\n  \"label\": \"北川羌族自治县\",\n  \"value\": \"510726\" },\n\n{\n  \"label\": \"平武县\",\n  \"value\": \"510727\" },\n\n{\n  \"label\": \"江油市\",\n  \"value\": \"510781\" }],\n\n\n[{\n  \"label\": \"利州区\",\n  \"value\": \"510802\" },\n\n{\n  \"label\": \"昭化区\",\n  \"value\": \"510811\" },\n\n{\n  \"label\": \"朝天区\",\n  \"value\": \"510812\" },\n\n{\n  \"label\": \"旺苍县\",\n  \"value\": \"510821\" },\n\n{\n  \"label\": \"青川县\",\n  \"value\": \"510822\" },\n\n{\n  \"label\": \"剑阁县\",\n  \"value\": \"510823\" },\n\n{\n  \"label\": \"苍溪县\",\n  \"value\": \"510824\" }],\n\n\n[{\n  \"label\": \"船山区\",\n  \"value\": \"510903\" },\n\n{\n  \"label\": \"安居区\",\n  \"value\": \"510904\" },\n\n{\n  \"label\": \"蓬溪县\",\n  \"value\": \"510921\" },\n\n{\n  \"label\": \"射洪县\",\n  \"value\": \"510922\" },\n\n{\n  \"label\": \"大英县\",\n  \"value\": \"510923\" }],\n\n\n[{\n  \"label\": \"市中区\",\n  \"value\": \"511002\" },\n\n{\n  \"label\": \"东兴区\",\n  \"value\": \"511011\" },\n\n{\n  \"label\": \"威远县\",\n  \"value\": \"511024\" },\n\n{\n  \"label\": \"资中县\",\n  \"value\": \"511025\" },\n\n{\n  \"label\": \"内江经济开发区\",\n  \"value\": \"511071\" },\n\n{\n  \"label\": \"隆昌市\",\n  \"value\": \"511083\" }],\n\n\n[{\n  \"label\": \"市中区\",\n  \"value\": \"511102\" },\n\n{\n  \"label\": \"沙湾区\",\n  \"value\": \"511111\" },\n\n{\n  \"label\": \"五通桥区\",\n  \"value\": \"511112\" },\n\n{\n  \"label\": \"金口河区\",\n  \"value\": \"511113\" },\n\n{\n  \"label\": \"犍为县\",\n  \"value\": \"511123\" },\n\n{\n  \"label\": \"井研县\",\n  \"value\": \"511124\" },\n\n{\n  \"label\": \"夹江县\",\n  \"value\": \"511126\" },\n\n{\n  \"label\": \"沐川县\",\n  \"value\": \"511129\" },\n\n{\n  \"label\": \"峨边彝族自治县\",\n  \"value\": \"511132\" },\n\n{\n  \"label\": \"马边彝族自治县\",\n  \"value\": \"511133\" },\n\n{\n  \"label\": \"峨眉山市\",\n  \"value\": \"511181\" }],\n\n\n[{\n  \"label\": \"顺庆区\",\n  \"value\": \"511302\" },\n\n{\n  \"label\": \"高坪区\",\n  \"value\": \"511303\" },\n\n{\n  \"label\": \"嘉陵区\",\n  \"value\": \"511304\" },\n\n{\n  \"label\": \"南部县\",\n  \"value\": \"511321\" },\n\n{\n  \"label\": \"营山县\",\n  \"value\": \"511322\" },\n\n{\n  \"label\": \"蓬安县\",\n  \"value\": \"511323\" },\n\n{\n  \"label\": \"仪陇县\",\n  \"value\": \"511324\" },\n\n{\n  \"label\": \"西充县\",\n  \"value\": \"511325\" },\n\n{\n  \"label\": \"阆中市\",\n  \"value\": \"511381\" }],\n\n\n[{\n  \"label\": \"东坡区\",\n  \"value\": \"511402\" },\n\n{\n  \"label\": \"彭山区\",\n  \"value\": \"511403\" },\n\n{\n  \"label\": \"仁寿县\",\n  \"value\": \"511421\" },\n\n{\n  \"label\": \"洪雅县\",\n  \"value\": \"511423\" },\n\n{\n  \"label\": \"丹棱县\",\n  \"value\": \"511424\" },\n\n{\n  \"label\": \"青神县\",\n  \"value\": \"511425\" }],\n\n\n[{\n  \"label\": \"翠屏区\",\n  \"value\": \"511502\" },\n\n{\n  \"label\": \"南溪区\",\n  \"value\": \"511503\" },\n\n{\n  \"label\": \"宜宾县\",\n  \"value\": \"511521\" },\n\n{\n  \"label\": \"江安县\",\n  \"value\": \"511523\" },\n\n{\n  \"label\": \"长宁县\",\n  \"value\": \"511524\" },\n\n{\n  \"label\": \"高县\",\n  \"value\": \"511525\" },\n\n{\n  \"label\": \"珙县\",\n  \"value\": \"511526\" },\n\n{\n  \"label\": \"筠连县\",\n  \"value\": \"511527\" },\n\n{\n  \"label\": \"兴文县\",\n  \"value\": \"511528\" },\n\n{\n  \"label\": \"屏山县\",\n  \"value\": \"511529\" }],\n\n\n[{\n  \"label\": \"广安区\",\n  \"value\": \"511602\" },\n\n{\n  \"label\": \"前锋区\",\n  \"value\": \"511603\" },\n\n{\n  \"label\": \"岳池县\",\n  \"value\": \"511621\" },\n\n{\n  \"label\": \"武胜县\",\n  \"value\": \"511622\" },\n\n{\n  \"label\": \"邻水县\",\n  \"value\": \"511623\" },\n\n{\n  \"label\": \"华蓥市\",\n  \"value\": \"511681\" }],\n\n\n[{\n  \"label\": \"通川区\",\n  \"value\": \"511702\" },\n\n{\n  \"label\": \"达川区\",\n  \"value\": \"511703\" },\n\n{\n  \"label\": \"宣汉县\",\n  \"value\": \"511722\" },\n\n{\n  \"label\": \"开江县\",\n  \"value\": \"511723\" },\n\n{\n  \"label\": \"大竹县\",\n  \"value\": \"511724\" },\n\n{\n  \"label\": \"渠县\",\n  \"value\": \"511725\" },\n\n{\n  \"label\": \"达州经济开发区\",\n  \"value\": \"511771\" },\n\n{\n  \"label\": \"万源市\",\n  \"value\": \"511781\" }],\n\n\n[{\n  \"label\": \"雨城区\",\n  \"value\": \"511802\" },\n\n{\n  \"label\": \"名山区\",\n  \"value\": \"511803\" },\n\n{\n  \"label\": \"荥经县\",\n  \"value\": \"511822\" },\n\n{\n  \"label\": \"汉源县\",\n  \"value\": \"511823\" },\n\n{\n  \"label\": \"石棉县\",\n  \"value\": \"511824\" },\n\n{\n  \"label\": \"天全县\",\n  \"value\": \"511825\" },\n\n{\n  \"label\": \"芦山县\",\n  \"value\": \"511826\" },\n\n{\n  \"label\": \"宝兴县\",\n  \"value\": \"511827\" }],\n\n\n[{\n  \"label\": \"巴州区\",\n  \"value\": \"511902\" },\n\n{\n  \"label\": \"恩阳区\",\n  \"value\": \"511903\" },\n\n{\n  \"label\": \"通江县\",\n  \"value\": \"511921\" },\n\n{\n  \"label\": \"南江县\",\n  \"value\": \"511922\" },\n\n{\n  \"label\": \"平昌县\",\n  \"value\": \"511923\" },\n\n{\n  \"label\": \"巴中经济开发区\",\n  \"value\": \"511971\" }],\n\n\n[{\n  \"label\": \"雁江区\",\n  \"value\": \"512002\" },\n\n{\n  \"label\": \"安岳县\",\n  \"value\": \"512021\" },\n\n{\n  \"label\": \"乐至县\",\n  \"value\": \"512022\" }],\n\n\n[{\n  \"label\": \"马尔康市\",\n  \"value\": \"513201\" },\n\n{\n  \"label\": \"汶川县\",\n  \"value\": \"513221\" },\n\n{\n  \"label\": \"理县\",\n  \"value\": \"513222\" },\n\n{\n  \"label\": \"茂县\",\n  \"value\": \"513223\" },\n\n{\n  \"label\": \"松潘县\",\n  \"value\": \"513224\" },\n\n{\n  \"label\": \"九寨沟县\",\n  \"value\": \"513225\" },\n\n{\n  \"label\": \"金川县\",\n  \"value\": \"513226\" },\n\n{\n  \"label\": \"小金县\",\n  \"value\": \"513227\" },\n\n{\n  \"label\": \"黑水县\",\n  \"value\": \"513228\" },\n\n{\n  \"label\": \"壤塘县\",\n  \"value\": \"513230\" },\n\n{\n  \"label\": \"阿坝县\",\n  \"value\": \"513231\" },\n\n{\n  \"label\": \"若尔盖县\",\n  \"value\": \"513232\" },\n\n{\n  \"label\": \"红原县\",\n  \"value\": \"513233\" }],\n\n\n[{\n  \"label\": \"康定市\",\n  \"value\": \"513301\" },\n\n{\n  \"label\": \"泸定县\",\n  \"value\": \"513322\" },\n\n{\n  \"label\": \"丹巴县\",\n  \"value\": \"513323\" },\n\n{\n  \"label\": \"九龙县\",\n  \"value\": \"513324\" },\n\n{\n  \"label\": \"雅江县\",\n  \"value\": \"513325\" },\n\n{\n  \"label\": \"道孚县\",\n  \"value\": \"513326\" },\n\n{\n  \"label\": \"炉霍县\",\n  \"value\": \"513327\" },\n\n{\n  \"label\": \"甘孜县\",\n  \"value\": \"513328\" },\n\n{\n  \"label\": \"新龙县\",\n  \"value\": \"513329\" },\n\n{\n  \"label\": \"德格县\",\n  \"value\": \"513330\" },\n\n{\n  \"label\": \"白玉县\",\n  \"value\": \"513331\" },\n\n{\n  \"label\": \"石渠县\",\n  \"value\": \"513332\" },\n\n{\n  \"label\": \"色达县\",\n  \"value\": \"513333\" },\n\n{\n  \"label\": \"理塘县\",\n  \"value\": \"513334\" },\n\n{\n  \"label\": \"巴塘县\",\n  \"value\": \"513335\" },\n\n{\n  \"label\": \"乡城县\",\n  \"value\": \"513336\" },\n\n{\n  \"label\": \"稻城县\",\n  \"value\": \"513337\" },\n\n{\n  \"label\": \"得荣县\",\n  \"value\": \"513338\" }],\n\n\n[{\n  \"label\": \"西昌市\",\n  \"value\": \"513401\" },\n\n{\n  \"label\": \"木里藏族自治县\",\n  \"value\": \"513422\" },\n\n{\n  \"label\": \"盐源县\",\n  \"value\": \"513423\" },\n\n{\n  \"label\": \"德昌县\",\n  \"value\": \"513424\" },\n\n{\n  \"label\": \"会理县\",\n  \"value\": \"513425\" },\n\n{\n  \"label\": \"会东县\",\n  \"value\": \"513426\" },\n\n{\n  \"label\": \"宁南县\",\n  \"value\": \"513427\" },\n\n{\n  \"label\": \"普格县\",\n  \"value\": \"513428\" },\n\n{\n  \"label\": \"布拖县\",\n  \"value\": \"513429\" },\n\n{\n  \"label\": \"金阳县\",\n  \"value\": \"513430\" },\n\n{\n  \"label\": \"昭觉县\",\n  \"value\": \"513431\" },\n\n{\n  \"label\": \"喜德县\",\n  \"value\": \"513432\" },\n\n{\n  \"label\": \"冕宁县\",\n  \"value\": \"513433\" },\n\n{\n  \"label\": \"越西县\",\n  \"value\": \"513434\" },\n\n{\n  \"label\": \"甘洛县\",\n  \"value\": \"513435\" },\n\n{\n  \"label\": \"美姑县\",\n  \"value\": \"513436\" },\n\n{\n  \"label\": \"雷波县\",\n  \"value\": \"513437\" }]],\n\n\n\n[\n[{\n  \"label\": \"南明区\",\n  \"value\": \"520102\" },\n\n{\n  \"label\": \"云岩区\",\n  \"value\": \"520103\" },\n\n{\n  \"label\": \"花溪区\",\n  \"value\": \"520111\" },\n\n{\n  \"label\": \"乌当区\",\n  \"value\": \"520112\" },\n\n{\n  \"label\": \"白云区\",\n  \"value\": \"520113\" },\n\n{\n  \"label\": \"观山湖区\",\n  \"value\": \"520115\" },\n\n{\n  \"label\": \"开阳县\",\n  \"value\": \"520121\" },\n\n{\n  \"label\": \"息烽县\",\n  \"value\": \"520122\" },\n\n{\n  \"label\": \"修文县\",\n  \"value\": \"520123\" },\n\n{\n  \"label\": \"清镇市\",\n  \"value\": \"520181\" }],\n\n\n[{\n  \"label\": \"钟山区\",\n  \"value\": \"520201\" },\n\n{\n  \"label\": \"六枝特区\",\n  \"value\": \"520203\" },\n\n{\n  \"label\": \"水城县\",\n  \"value\": \"520221\" },\n\n{\n  \"label\": \"盘州市\",\n  \"value\": \"520281\" }],\n\n\n[{\n  \"label\": \"红花岗区\",\n  \"value\": \"520302\" },\n\n{\n  \"label\": \"汇川区\",\n  \"value\": \"520303\" },\n\n{\n  \"label\": \"播州区\",\n  \"value\": \"520304\" },\n\n{\n  \"label\": \"桐梓县\",\n  \"value\": \"520322\" },\n\n{\n  \"label\": \"绥阳县\",\n  \"value\": \"520323\" },\n\n{\n  \"label\": \"正安县\",\n  \"value\": \"520324\" },\n\n{\n  \"label\": \"道真仡佬族苗族自治县\",\n  \"value\": \"520325\" },\n\n{\n  \"label\": \"务川仡佬族苗族自治县\",\n  \"value\": \"520326\" },\n\n{\n  \"label\": \"凤冈县\",\n  \"value\": \"520327\" },\n\n{\n  \"label\": \"湄潭县\",\n  \"value\": \"520328\" },\n\n{\n  \"label\": \"余庆县\",\n  \"value\": \"520329\" },\n\n{\n  \"label\": \"习水县\",\n  \"value\": \"520330\" },\n\n{\n  \"label\": \"赤水市\",\n  \"value\": \"520381\" },\n\n{\n  \"label\": \"仁怀市\",\n  \"value\": \"520382\" }],\n\n\n[{\n  \"label\": \"西秀区\",\n  \"value\": \"520402\" },\n\n{\n  \"label\": \"平坝区\",\n  \"value\": \"520403\" },\n\n{\n  \"label\": \"普定县\",\n  \"value\": \"520422\" },\n\n{\n  \"label\": \"镇宁布依族苗族自治县\",\n  \"value\": \"520423\" },\n\n{\n  \"label\": \"关岭布依族苗族自治县\",\n  \"value\": \"520424\" },\n\n{\n  \"label\": \"紫云苗族布依族自治县\",\n  \"value\": \"520425\" }],\n\n\n[{\n  \"label\": \"七星关区\",\n  \"value\": \"520502\" },\n\n{\n  \"label\": \"大方县\",\n  \"value\": \"520521\" },\n\n{\n  \"label\": \"黔西县\",\n  \"value\": \"520522\" },\n\n{\n  \"label\": \"金沙县\",\n  \"value\": \"520523\" },\n\n{\n  \"label\": \"织金县\",\n  \"value\": \"520524\" },\n\n{\n  \"label\": \"纳雍县\",\n  \"value\": \"520525\" },\n\n{\n  \"label\": \"威宁彝族回族苗族自治县\",\n  \"value\": \"520526\" },\n\n{\n  \"label\": \"赫章县\",\n  \"value\": \"520527\" }],\n\n\n[{\n  \"label\": \"碧江区\",\n  \"value\": \"520602\" },\n\n{\n  \"label\": \"万山区\",\n  \"value\": \"520603\" },\n\n{\n  \"label\": \"江口县\",\n  \"value\": \"520621\" },\n\n{\n  \"label\": \"玉屏侗族自治县\",\n  \"value\": \"520622\" },\n\n{\n  \"label\": \"石阡县\",\n  \"value\": \"520623\" },\n\n{\n  \"label\": \"思南县\",\n  \"value\": \"520624\" },\n\n{\n  \"label\": \"印江土家族苗族自治县\",\n  \"value\": \"520625\" },\n\n{\n  \"label\": \"德江县\",\n  \"value\": \"520626\" },\n\n{\n  \"label\": \"沿河土家族自治县\",\n  \"value\": \"520627\" },\n\n{\n  \"label\": \"松桃苗族自治县\",\n  \"value\": \"520628\" }],\n\n\n[{\n  \"label\": \"兴义市\",\n  \"value\": \"522301\" },\n\n{\n  \"label\": \"兴仁县\",\n  \"value\": \"522322\" },\n\n{\n  \"label\": \"普安县\",\n  \"value\": \"522323\" },\n\n{\n  \"label\": \"晴隆县\",\n  \"value\": \"522324\" },\n\n{\n  \"label\": \"贞丰县\",\n  \"value\": \"522325\" },\n\n{\n  \"label\": \"望谟县\",\n  \"value\": \"522326\" },\n\n{\n  \"label\": \"册亨县\",\n  \"value\": \"522327\" },\n\n{\n  \"label\": \"安龙县\",\n  \"value\": \"522328\" }],\n\n\n[{\n  \"label\": \"凯里市\",\n  \"value\": \"522601\" },\n\n{\n  \"label\": \"黄平县\",\n  \"value\": \"522622\" },\n\n{\n  \"label\": \"施秉县\",\n  \"value\": \"522623\" },\n\n{\n  \"label\": \"三穗县\",\n  \"value\": \"522624\" },\n\n{\n  \"label\": \"镇远县\",\n  \"value\": \"522625\" },\n\n{\n  \"label\": \"岑巩县\",\n  \"value\": \"522626\" },\n\n{\n  \"label\": \"天柱县\",\n  \"value\": \"522627\" },\n\n{\n  \"label\": \"锦屏县\",\n  \"value\": \"522628\" },\n\n{\n  \"label\": \"剑河县\",\n  \"value\": \"522629\" },\n\n{\n  \"label\": \"台江县\",\n  \"value\": \"522630\" },\n\n{\n  \"label\": \"黎平县\",\n  \"value\": \"522631\" },\n\n{\n  \"label\": \"榕江县\",\n  \"value\": \"522632\" },\n\n{\n  \"label\": \"从江县\",\n  \"value\": \"522633\" },\n\n{\n  \"label\": \"雷山县\",\n  \"value\": \"522634\" },\n\n{\n  \"label\": \"麻江县\",\n  \"value\": \"522635\" },\n\n{\n  \"label\": \"丹寨县\",\n  \"value\": \"522636\" }],\n\n\n[{\n  \"label\": \"都匀市\",\n  \"value\": \"522701\" },\n\n{\n  \"label\": \"福泉市\",\n  \"value\": \"522702\" },\n\n{\n  \"label\": \"荔波县\",\n  \"value\": \"522722\" },\n\n{\n  \"label\": \"贵定县\",\n  \"value\": \"522723\" },\n\n{\n  \"label\": \"瓮安县\",\n  \"value\": \"522725\" },\n\n{\n  \"label\": \"独山县\",\n  \"value\": \"522726\" },\n\n{\n  \"label\": \"平塘县\",\n  \"value\": \"522727\" },\n\n{\n  \"label\": \"罗甸县\",\n  \"value\": \"522728\" },\n\n{\n  \"label\": \"长顺县\",\n  \"value\": \"522729\" },\n\n{\n  \"label\": \"龙里县\",\n  \"value\": \"522730\" },\n\n{\n  \"label\": \"惠水县\",\n  \"value\": \"522731\" },\n\n{\n  \"label\": \"三都水族自治县\",\n  \"value\": \"522732\" }]],\n\n\n\n[\n[{\n  \"label\": \"五华区\",\n  \"value\": \"530102\" },\n\n{\n  \"label\": \"盘龙区\",\n  \"value\": \"530103\" },\n\n{\n  \"label\": \"官渡区\",\n  \"value\": \"530111\" },\n\n{\n  \"label\": \"西山区\",\n  \"value\": \"530112\" },\n\n{\n  \"label\": \"东川区\",\n  \"value\": \"530113\" },\n\n{\n  \"label\": \"呈贡区\",\n  \"value\": \"530114\" },\n\n{\n  \"label\": \"晋宁区\",\n  \"value\": \"530115\" },\n\n{\n  \"label\": \"富民县\",\n  \"value\": \"530124\" },\n\n{\n  \"label\": \"宜良县\",\n  \"value\": \"530125\" },\n\n{\n  \"label\": \"石林彝族自治县\",\n  \"value\": \"530126\" },\n\n{\n  \"label\": \"嵩明县\",\n  \"value\": \"530127\" },\n\n{\n  \"label\": \"禄劝彝族苗族自治县\",\n  \"value\": \"530128\" },\n\n{\n  \"label\": \"寻甸回族彝族自治县\",\n  \"value\": \"530129\" },\n\n{\n  \"label\": \"安宁市\",\n  \"value\": \"530181\" }],\n\n\n[{\n  \"label\": \"麒麟区\",\n  \"value\": \"530302\" },\n\n{\n  \"label\": \"沾益区\",\n  \"value\": \"530303\" },\n\n{\n  \"label\": \"马龙县\",\n  \"value\": \"530321\" },\n\n{\n  \"label\": \"陆良县\",\n  \"value\": \"530322\" },\n\n{\n  \"label\": \"师宗县\",\n  \"value\": \"530323\" },\n\n{\n  \"label\": \"罗平县\",\n  \"value\": \"530324\" },\n\n{\n  \"label\": \"富源县\",\n  \"value\": \"530325\" },\n\n{\n  \"label\": \"会泽县\",\n  \"value\": \"530326\" },\n\n{\n  \"label\": \"宣威市\",\n  \"value\": \"530381\" }],\n\n\n[{\n  \"label\": \"红塔区\",\n  \"value\": \"530402\" },\n\n{\n  \"label\": \"江川区\",\n  \"value\": \"530403\" },\n\n{\n  \"label\": \"澄江县\",\n  \"value\": \"530422\" },\n\n{\n  \"label\": \"通海县\",\n  \"value\": \"530423\" },\n\n{\n  \"label\": \"华宁县\",\n  \"value\": \"530424\" },\n\n{\n  \"label\": \"易门县\",\n  \"value\": \"530425\" },\n\n{\n  \"label\": \"峨山彝族自治县\",\n  \"value\": \"530426\" },\n\n{\n  \"label\": \"新平彝族傣族自治县\",\n  \"value\": \"530427\" },\n\n{\n  \"label\": \"元江哈尼族彝族傣族自治县\",\n  \"value\": \"530428\" }],\n\n\n[{\n  \"label\": \"隆阳区\",\n  \"value\": \"530502\" },\n\n{\n  \"label\": \"施甸县\",\n  \"value\": \"530521\" },\n\n{\n  \"label\": \"龙陵县\",\n  \"value\": \"530523\" },\n\n{\n  \"label\": \"昌宁县\",\n  \"value\": \"530524\" },\n\n{\n  \"label\": \"腾冲市\",\n  \"value\": \"530581\" }],\n\n\n[{\n  \"label\": \"昭阳区\",\n  \"value\": \"530602\" },\n\n{\n  \"label\": \"鲁甸县\",\n  \"value\": \"530621\" },\n\n{\n  \"label\": \"巧家县\",\n  \"value\": \"530622\" },\n\n{\n  \"label\": \"盐津县\",\n  \"value\": \"530623\" },\n\n{\n  \"label\": \"大关县\",\n  \"value\": \"530624\" },\n\n{\n  \"label\": \"永善县\",\n  \"value\": \"530625\" },\n\n{\n  \"label\": \"绥江县\",\n  \"value\": \"530626\" },\n\n{\n  \"label\": \"镇雄县\",\n  \"value\": \"530627\" },\n\n{\n  \"label\": \"彝良县\",\n  \"value\": \"530628\" },\n\n{\n  \"label\": \"威信县\",\n  \"value\": \"530629\" },\n\n{\n  \"label\": \"水富县\",\n  \"value\": \"530630\" }],\n\n\n[{\n  \"label\": \"古城区\",\n  \"value\": \"530702\" },\n\n{\n  \"label\": \"玉龙纳西族自治县\",\n  \"value\": \"530721\" },\n\n{\n  \"label\": \"永胜县\",\n  \"value\": \"530722\" },\n\n{\n  \"label\": \"华坪县\",\n  \"value\": \"530723\" },\n\n{\n  \"label\": \"宁蒗彝族自治县\",\n  \"value\": \"530724\" }],\n\n\n[{\n  \"label\": \"思茅区\",\n  \"value\": \"530802\" },\n\n{\n  \"label\": \"宁洱哈尼族彝族自治县\",\n  \"value\": \"530821\" },\n\n{\n  \"label\": \"墨江哈尼族自治县\",\n  \"value\": \"530822\" },\n\n{\n  \"label\": \"景东彝族自治县\",\n  \"value\": \"530823\" },\n\n{\n  \"label\": \"景谷傣族彝族自治县\",\n  \"value\": \"530824\" },\n\n{\n  \"label\": \"镇沅彝族哈尼族拉祜族自治县\",\n  \"value\": \"530825\" },\n\n{\n  \"label\": \"江城哈尼族彝族自治县\",\n  \"value\": \"530826\" },\n\n{\n  \"label\": \"孟连傣族拉祜族佤族自治县\",\n  \"value\": \"530827\" },\n\n{\n  \"label\": \"澜沧拉祜族自治县\",\n  \"value\": \"530828\" },\n\n{\n  \"label\": \"西盟佤族自治县\",\n  \"value\": \"530829\" }],\n\n\n[{\n  \"label\": \"临翔区\",\n  \"value\": \"530902\" },\n\n{\n  \"label\": \"凤庆县\",\n  \"value\": \"530921\" },\n\n{\n  \"label\": \"云县\",\n  \"value\": \"530922\" },\n\n{\n  \"label\": \"永德县\",\n  \"value\": \"530923\" },\n\n{\n  \"label\": \"镇康县\",\n  \"value\": \"530924\" },\n\n{\n  \"label\": \"双江拉祜族佤族布朗族傣族自治县\",\n  \"value\": \"530925\" },\n\n{\n  \"label\": \"耿马傣族佤族自治县\",\n  \"value\": \"530926\" },\n\n{\n  \"label\": \"沧源佤族自治县\",\n  \"value\": \"530927\" }],\n\n\n[{\n  \"label\": \"楚雄市\",\n  \"value\": \"532301\" },\n\n{\n  \"label\": \"双柏县\",\n  \"value\": \"532322\" },\n\n{\n  \"label\": \"牟定县\",\n  \"value\": \"532323\" },\n\n{\n  \"label\": \"南华县\",\n  \"value\": \"532324\" },\n\n{\n  \"label\": \"姚安县\",\n  \"value\": \"532325\" },\n\n{\n  \"label\": \"大姚县\",\n  \"value\": \"532326\" },\n\n{\n  \"label\": \"永仁县\",\n  \"value\": \"532327\" },\n\n{\n  \"label\": \"元谋县\",\n  \"value\": \"532328\" },\n\n{\n  \"label\": \"武定县\",\n  \"value\": \"532329\" },\n\n{\n  \"label\": \"禄丰县\",\n  \"value\": \"532331\" }],\n\n\n[{\n  \"label\": \"个旧市\",\n  \"value\": \"532501\" },\n\n{\n  \"label\": \"开远市\",\n  \"value\": \"532502\" },\n\n{\n  \"label\": \"蒙自市\",\n  \"value\": \"532503\" },\n\n{\n  \"label\": \"弥勒市\",\n  \"value\": \"532504\" },\n\n{\n  \"label\": \"屏边苗族自治县\",\n  \"value\": \"532523\" },\n\n{\n  \"label\": \"建水县\",\n  \"value\": \"532524\" },\n\n{\n  \"label\": \"石屏县\",\n  \"value\": \"532525\" },\n\n{\n  \"label\": \"泸西县\",\n  \"value\": \"532527\" },\n\n{\n  \"label\": \"元阳县\",\n  \"value\": \"532528\" },\n\n{\n  \"label\": \"红河县\",\n  \"value\": \"532529\" },\n\n{\n  \"label\": \"金平苗族瑶族傣族自治县\",\n  \"value\": \"532530\" },\n\n{\n  \"label\": \"绿春县\",\n  \"value\": \"532531\" },\n\n{\n  \"label\": \"河口瑶族自治县\",\n  \"value\": \"532532\" }],\n\n\n[{\n  \"label\": \"文山市\",\n  \"value\": \"532601\" },\n\n{\n  \"label\": \"砚山县\",\n  \"value\": \"532622\" },\n\n{\n  \"label\": \"西畴县\",\n  \"value\": \"532623\" },\n\n{\n  \"label\": \"麻栗坡县\",\n  \"value\": \"532624\" },\n\n{\n  \"label\": \"马关县\",\n  \"value\": \"532625\" },\n\n{\n  \"label\": \"丘北县\",\n  \"value\": \"532626\" },\n\n{\n  \"label\": \"广南县\",\n  \"value\": \"532627\" },\n\n{\n  \"label\": \"富宁县\",\n  \"value\": \"532628\" }],\n\n\n[{\n  \"label\": \"景洪市\",\n  \"value\": \"532801\" },\n\n{\n  \"label\": \"勐海县\",\n  \"value\": \"532822\" },\n\n{\n  \"label\": \"勐腊县\",\n  \"value\": \"532823\" }],\n\n\n[{\n  \"label\": \"大理市\",\n  \"value\": \"532901\" },\n\n{\n  \"label\": \"漾濞彝族自治县\",\n  \"value\": \"532922\" },\n\n{\n  \"label\": \"祥云县\",\n  \"value\": \"532923\" },\n\n{\n  \"label\": \"宾川县\",\n  \"value\": \"532924\" },\n\n{\n  \"label\": \"弥渡县\",\n  \"value\": \"532925\" },\n\n{\n  \"label\": \"南涧彝族自治县\",\n  \"value\": \"532926\" },\n\n{\n  \"label\": \"巍山彝族回族自治县\",\n  \"value\": \"532927\" },\n\n{\n  \"label\": \"永平县\",\n  \"value\": \"532928\" },\n\n{\n  \"label\": \"云龙县\",\n  \"value\": \"532929\" },\n\n{\n  \"label\": \"洱源县\",\n  \"value\": \"532930\" },\n\n{\n  \"label\": \"剑川县\",\n  \"value\": \"532931\" },\n\n{\n  \"label\": \"鹤庆县\",\n  \"value\": \"532932\" }],\n\n\n[{\n  \"label\": \"瑞丽市\",\n  \"value\": \"533102\" },\n\n{\n  \"label\": \"芒市\",\n  \"value\": \"533103\" },\n\n{\n  \"label\": \"梁河县\",\n  \"value\": \"533122\" },\n\n{\n  \"label\": \"盈江县\",\n  \"value\": \"533123\" },\n\n{\n  \"label\": \"陇川县\",\n  \"value\": \"533124\" }],\n\n\n[{\n  \"label\": \"泸水市\",\n  \"value\": \"533301\" },\n\n{\n  \"label\": \"福贡县\",\n  \"value\": \"533323\" },\n\n{\n  \"label\": \"贡山独龙族怒族自治县\",\n  \"value\": \"533324\" },\n\n{\n  \"label\": \"兰坪白族普米族自治县\",\n  \"value\": \"533325\" }],\n\n\n[{\n  \"label\": \"香格里拉市\",\n  \"value\": \"533401\" },\n\n{\n  \"label\": \"德钦县\",\n  \"value\": \"533422\" },\n\n{\n  \"label\": \"维西傈僳族自治县\",\n  \"value\": \"533423\" }]],\n\n\n\n[\n[{\n  \"label\": \"城关区\",\n  \"value\": \"540102\" },\n\n{\n  \"label\": \"堆龙德庆区\",\n  \"value\": \"540103\" },\n\n{\n  \"label\": \"林周县\",\n  \"value\": \"540121\" },\n\n{\n  \"label\": \"当雄县\",\n  \"value\": \"540122\" },\n\n{\n  \"label\": \"尼木县\",\n  \"value\": \"540123\" },\n\n{\n  \"label\": \"曲水县\",\n  \"value\": \"540124\" },\n\n{\n  \"label\": \"达孜县\",\n  \"value\": \"540126\" },\n\n{\n  \"label\": \"墨竹工卡县\",\n  \"value\": \"540127\" },\n\n{\n  \"label\": \"格尔木藏青工业园区\",\n  \"value\": \"540171\" },\n\n{\n  \"label\": \"拉萨经济技术开发区\",\n  \"value\": \"540172\" },\n\n{\n  \"label\": \"西藏文化旅游创意园区\",\n  \"value\": \"540173\" },\n\n{\n  \"label\": \"达孜工业园区\",\n  \"value\": \"540174\" }],\n\n\n[{\n  \"label\": \"桑珠孜区\",\n  \"value\": \"540202\" },\n\n{\n  \"label\": \"南木林县\",\n  \"value\": \"540221\" },\n\n{\n  \"label\": \"江孜县\",\n  \"value\": \"540222\" },\n\n{\n  \"label\": \"定日县\",\n  \"value\": \"540223\" },\n\n{\n  \"label\": \"萨迦县\",\n  \"value\": \"540224\" },\n\n{\n  \"label\": \"拉孜县\",\n  \"value\": \"540225\" },\n\n{\n  \"label\": \"昂仁县\",\n  \"value\": \"540226\" },\n\n{\n  \"label\": \"谢通门县\",\n  \"value\": \"540227\" },\n\n{\n  \"label\": \"白朗县\",\n  \"value\": \"540228\" },\n\n{\n  \"label\": \"仁布县\",\n  \"value\": \"540229\" },\n\n{\n  \"label\": \"康马县\",\n  \"value\": \"540230\" },\n\n{\n  \"label\": \"定结县\",\n  \"value\": \"540231\" },\n\n{\n  \"label\": \"仲巴县\",\n  \"value\": \"540232\" },\n\n{\n  \"label\": \"亚东县\",\n  \"value\": \"540233\" },\n\n{\n  \"label\": \"吉隆县\",\n  \"value\": \"540234\" },\n\n{\n  \"label\": \"聂拉木县\",\n  \"value\": \"540235\" },\n\n{\n  \"label\": \"萨嘎县\",\n  \"value\": \"540236\" },\n\n{\n  \"label\": \"岗巴县\",\n  \"value\": \"540237\" }],\n\n\n[{\n  \"label\": \"卡若区\",\n  \"value\": \"540302\" },\n\n{\n  \"label\": \"江达县\",\n  \"value\": \"540321\" },\n\n{\n  \"label\": \"贡觉县\",\n  \"value\": \"540322\" },\n\n{\n  \"label\": \"类乌齐县\",\n  \"value\": \"540323\" },\n\n{\n  \"label\": \"丁青县\",\n  \"value\": \"540324\" },\n\n{\n  \"label\": \"察雅县\",\n  \"value\": \"540325\" },\n\n{\n  \"label\": \"八宿县\",\n  \"value\": \"540326\" },\n\n{\n  \"label\": \"左贡县\",\n  \"value\": \"540327\" },\n\n{\n  \"label\": \"芒康县\",\n  \"value\": \"540328\" },\n\n{\n  \"label\": \"洛隆县\",\n  \"value\": \"540329\" },\n\n{\n  \"label\": \"边坝县\",\n  \"value\": \"540330\" }],\n\n\n[{\n  \"label\": \"巴宜区\",\n  \"value\": \"540402\" },\n\n{\n  \"label\": \"工布江达县\",\n  \"value\": \"540421\" },\n\n{\n  \"label\": \"米林县\",\n  \"value\": \"540422\" },\n\n{\n  \"label\": \"墨脱县\",\n  \"value\": \"540423\" },\n\n{\n  \"label\": \"波密县\",\n  \"value\": \"540424\" },\n\n{\n  \"label\": \"察隅县\",\n  \"value\": \"540425\" },\n\n{\n  \"label\": \"朗县\",\n  \"value\": \"540426\" }],\n\n\n[{\n  \"label\": \"乃东区\",\n  \"value\": \"540502\" },\n\n{\n  \"label\": \"扎囊县\",\n  \"value\": \"540521\" },\n\n{\n  \"label\": \"贡嘎县\",\n  \"value\": \"540522\" },\n\n{\n  \"label\": \"桑日县\",\n  \"value\": \"540523\" },\n\n{\n  \"label\": \"琼结县\",\n  \"value\": \"540524\" },\n\n{\n  \"label\": \"曲松县\",\n  \"value\": \"540525\" },\n\n{\n  \"label\": \"措美县\",\n  \"value\": \"540526\" },\n\n{\n  \"label\": \"洛扎县\",\n  \"value\": \"540527\" },\n\n{\n  \"label\": \"加查县\",\n  \"value\": \"540528\" },\n\n{\n  \"label\": \"隆子县\",\n  \"value\": \"540529\" },\n\n{\n  \"label\": \"错那县\",\n  \"value\": \"540530\" },\n\n{\n  \"label\": \"浪卡子县\",\n  \"value\": \"540531\" }],\n\n\n[{\n  \"label\": \"那曲县\",\n  \"value\": \"542421\" },\n\n{\n  \"label\": \"嘉黎县\",\n  \"value\": \"542422\" },\n\n{\n  \"label\": \"比如县\",\n  \"value\": \"542423\" },\n\n{\n  \"label\": \"聂荣县\",\n  \"value\": \"542424\" },\n\n{\n  \"label\": \"安多县\",\n  \"value\": \"542425\" },\n\n{\n  \"label\": \"申扎县\",\n  \"value\": \"542426\" },\n\n{\n  \"label\": \"索县\",\n  \"value\": \"542427\" },\n\n{\n  \"label\": \"班戈县\",\n  \"value\": \"542428\" },\n\n{\n  \"label\": \"巴青县\",\n  \"value\": \"542429\" },\n\n{\n  \"label\": \"尼玛县\",\n  \"value\": \"542430\" },\n\n{\n  \"label\": \"双湖县\",\n  \"value\": \"542431\" }],\n\n\n[{\n  \"label\": \"普兰县\",\n  \"value\": \"542521\" },\n\n{\n  \"label\": \"札达县\",\n  \"value\": \"542522\" },\n\n{\n  \"label\": \"噶尔县\",\n  \"value\": \"542523\" },\n\n{\n  \"label\": \"日土县\",\n  \"value\": \"542524\" },\n\n{\n  \"label\": \"革吉县\",\n  \"value\": \"542525\" },\n\n{\n  \"label\": \"改则县\",\n  \"value\": \"542526\" },\n\n{\n  \"label\": \"措勤县\",\n  \"value\": \"542527\" }]],\n\n\n\n[\n[{\n  \"label\": \"新城区\",\n  \"value\": \"610102\" },\n\n{\n  \"label\": \"碑林区\",\n  \"value\": \"610103\" },\n\n{\n  \"label\": \"莲湖区\",\n  \"value\": \"610104\" },\n\n{\n  \"label\": \"灞桥区\",\n  \"value\": \"610111\" },\n\n{\n  \"label\": \"未央区\",\n  \"value\": \"610112\" },\n\n{\n  \"label\": \"雁塔区\",\n  \"value\": \"610113\" },\n\n{\n  \"label\": \"阎良区\",\n  \"value\": \"610114\" },\n\n{\n  \"label\": \"临潼区\",\n  \"value\": \"610115\" },\n\n{\n  \"label\": \"长安区\",\n  \"value\": \"610116\" },\n\n{\n  \"label\": \"高陵区\",\n  \"value\": \"610117\" },\n\n{\n  \"label\": \"鄠邑区\",\n  \"value\": \"610118\" },\n\n{\n  \"label\": \"蓝田县\",\n  \"value\": \"610122\" },\n\n{\n  \"label\": \"周至县\",\n  \"value\": \"610124\" }],\n\n\n[{\n  \"label\": \"王益区\",\n  \"value\": \"610202\" },\n\n{\n  \"label\": \"印台区\",\n  \"value\": \"610203\" },\n\n{\n  \"label\": \"耀州区\",\n  \"value\": \"610204\" },\n\n{\n  \"label\": \"宜君县\",\n  \"value\": \"610222\" }],\n\n\n[{\n  \"label\": \"渭滨区\",\n  \"value\": \"610302\" },\n\n{\n  \"label\": \"金台区\",\n  \"value\": \"610303\" },\n\n{\n  \"label\": \"陈仓区\",\n  \"value\": \"610304\" },\n\n{\n  \"label\": \"凤翔县\",\n  \"value\": \"610322\" },\n\n{\n  \"label\": \"岐山县\",\n  \"value\": \"610323\" },\n\n{\n  \"label\": \"扶风县\",\n  \"value\": \"610324\" },\n\n{\n  \"label\": \"眉县\",\n  \"value\": \"610326\" },\n\n{\n  \"label\": \"陇县\",\n  \"value\": \"610327\" },\n\n{\n  \"label\": \"千阳县\",\n  \"value\": \"610328\" },\n\n{\n  \"label\": \"麟游县\",\n  \"value\": \"610329\" },\n\n{\n  \"label\": \"凤县\",\n  \"value\": \"610330\" },\n\n{\n  \"label\": \"太白县\",\n  \"value\": \"610331\" }],\n\n\n[{\n  \"label\": \"秦都区\",\n  \"value\": \"610402\" },\n\n{\n  \"label\": \"杨陵区\",\n  \"value\": \"610403\" },\n\n{\n  \"label\": \"渭城区\",\n  \"value\": \"610404\" },\n\n{\n  \"label\": \"三原县\",\n  \"value\": \"610422\" },\n\n{\n  \"label\": \"泾阳县\",\n  \"value\": \"610423\" },\n\n{\n  \"label\": \"乾县\",\n  \"value\": \"610424\" },\n\n{\n  \"label\": \"礼泉县\",\n  \"value\": \"610425\" },\n\n{\n  \"label\": \"永寿县\",\n  \"value\": \"610426\" },\n\n{\n  \"label\": \"彬县\",\n  \"value\": \"610427\" },\n\n{\n  \"label\": \"长武县\",\n  \"value\": \"610428\" },\n\n{\n  \"label\": \"旬邑县\",\n  \"value\": \"610429\" },\n\n{\n  \"label\": \"淳化县\",\n  \"value\": \"610430\" },\n\n{\n  \"label\": \"武功县\",\n  \"value\": \"610431\" },\n\n{\n  \"label\": \"兴平市\",\n  \"value\": \"610481\" }],\n\n\n[{\n  \"label\": \"临渭区\",\n  \"value\": \"610502\" },\n\n{\n  \"label\": \"华州区\",\n  \"value\": \"610503\" },\n\n{\n  \"label\": \"潼关县\",\n  \"value\": \"610522\" },\n\n{\n  \"label\": \"大荔县\",\n  \"value\": \"610523\" },\n\n{\n  \"label\": \"合阳县\",\n  \"value\": \"610524\" },\n\n{\n  \"label\": \"澄城县\",\n  \"value\": \"610525\" },\n\n{\n  \"label\": \"蒲城县\",\n  \"value\": \"610526\" },\n\n{\n  \"label\": \"白水县\",\n  \"value\": \"610527\" },\n\n{\n  \"label\": \"富平县\",\n  \"value\": \"610528\" },\n\n{\n  \"label\": \"韩城市\",\n  \"value\": \"610581\" },\n\n{\n  \"label\": \"华阴市\",\n  \"value\": \"610582\" }],\n\n\n[{\n  \"label\": \"宝塔区\",\n  \"value\": \"610602\" },\n\n{\n  \"label\": \"安塞区\",\n  \"value\": \"610603\" },\n\n{\n  \"label\": \"延长县\",\n  \"value\": \"610621\" },\n\n{\n  \"label\": \"延川县\",\n  \"value\": \"610622\" },\n\n{\n  \"label\": \"子长县\",\n  \"value\": \"610623\" },\n\n{\n  \"label\": \"志丹县\",\n  \"value\": \"610625\" },\n\n{\n  \"label\": \"吴起县\",\n  \"value\": \"610626\" },\n\n{\n  \"label\": \"甘泉县\",\n  \"value\": \"610627\" },\n\n{\n  \"label\": \"富县\",\n  \"value\": \"610628\" },\n\n{\n  \"label\": \"洛川县\",\n  \"value\": \"610629\" },\n\n{\n  \"label\": \"宜川县\",\n  \"value\": \"610630\" },\n\n{\n  \"label\": \"黄龙县\",\n  \"value\": \"610631\" },\n\n{\n  \"label\": \"黄陵县\",\n  \"value\": \"610632\" }],\n\n\n[{\n  \"label\": \"汉台区\",\n  \"value\": \"610702\" },\n\n{\n  \"label\": \"南郑区\",\n  \"value\": \"610703\" },\n\n{\n  \"label\": \"城固县\",\n  \"value\": \"610722\" },\n\n{\n  \"label\": \"洋县\",\n  \"value\": \"610723\" },\n\n{\n  \"label\": \"西乡县\",\n  \"value\": \"610724\" },\n\n{\n  \"label\": \"勉县\",\n  \"value\": \"610725\" },\n\n{\n  \"label\": \"宁强县\",\n  \"value\": \"610726\" },\n\n{\n  \"label\": \"略阳县\",\n  \"value\": \"610727\" },\n\n{\n  \"label\": \"镇巴县\",\n  \"value\": \"610728\" },\n\n{\n  \"label\": \"留坝县\",\n  \"value\": \"610729\" },\n\n{\n  \"label\": \"佛坪县\",\n  \"value\": \"610730\" }],\n\n\n[{\n  \"label\": \"榆阳区\",\n  \"value\": \"610802\" },\n\n{\n  \"label\": \"横山区\",\n  \"value\": \"610803\" },\n\n{\n  \"label\": \"府谷县\",\n  \"value\": \"610822\" },\n\n{\n  \"label\": \"靖边县\",\n  \"value\": \"610824\" },\n\n{\n  \"label\": \"定边县\",\n  \"value\": \"610825\" },\n\n{\n  \"label\": \"绥德县\",\n  \"value\": \"610826\" },\n\n{\n  \"label\": \"米脂县\",\n  \"value\": \"610827\" },\n\n{\n  \"label\": \"佳县\",\n  \"value\": \"610828\" },\n\n{\n  \"label\": \"吴堡县\",\n  \"value\": \"610829\" },\n\n{\n  \"label\": \"清涧县\",\n  \"value\": \"610830\" },\n\n{\n  \"label\": \"子洲县\",\n  \"value\": \"610831\" },\n\n{\n  \"label\": \"神木市\",\n  \"value\": \"610881\" }],\n\n\n[{\n  \"label\": \"汉滨区\",\n  \"value\": \"610902\" },\n\n{\n  \"label\": \"汉阴县\",\n  \"value\": \"610921\" },\n\n{\n  \"label\": \"石泉县\",\n  \"value\": \"610922\" },\n\n{\n  \"label\": \"宁陕县\",\n  \"value\": \"610923\" },\n\n{\n  \"label\": \"紫阳县\",\n  \"value\": \"610924\" },\n\n{\n  \"label\": \"岚皋县\",\n  \"value\": \"610925\" },\n\n{\n  \"label\": \"平利县\",\n  \"value\": \"610926\" },\n\n{\n  \"label\": \"镇坪县\",\n  \"value\": \"610927\" },\n\n{\n  \"label\": \"旬阳县\",\n  \"value\": \"610928\" },\n\n{\n  \"label\": \"白河县\",\n  \"value\": \"610929\" }],\n\n\n[{\n  \"label\": \"商州区\",\n  \"value\": \"611002\" },\n\n{\n  \"label\": \"洛南县\",\n  \"value\": \"611021\" },\n\n{\n  \"label\": \"丹凤县\",\n  \"value\": \"611022\" },\n\n{\n  \"label\": \"商南县\",\n  \"value\": \"611023\" },\n\n{\n  \"label\": \"山阳县\",\n  \"value\": \"611024\" },\n\n{\n  \"label\": \"镇安县\",\n  \"value\": \"611025\" },\n\n{\n  \"label\": \"柞水县\",\n  \"value\": \"611026\" }]],\n\n\n\n[\n[{\n  \"label\": \"城关区\",\n  \"value\": \"620102\" },\n\n{\n  \"label\": \"七里河区\",\n  \"value\": \"620103\" },\n\n{\n  \"label\": \"西固区\",\n  \"value\": \"620104\" },\n\n{\n  \"label\": \"安宁区\",\n  \"value\": \"620105\" },\n\n{\n  \"label\": \"红古区\",\n  \"value\": \"620111\" },\n\n{\n  \"label\": \"永登县\",\n  \"value\": \"620121\" },\n\n{\n  \"label\": \"皋兰县\",\n  \"value\": \"620122\" },\n\n{\n  \"label\": \"榆中县\",\n  \"value\": \"620123\" },\n\n{\n  \"label\": \"兰州新区\",\n  \"value\": \"620171\" }],\n\n\n[{\n  \"label\": \"嘉峪关市\",\n  \"value\": \"620201\" }],\n\n[{\n  \"label\": \"金川区\",\n  \"value\": \"620302\" },\n\n{\n  \"label\": \"永昌县\",\n  \"value\": \"620321\" }],\n\n\n[{\n  \"label\": \"白银区\",\n  \"value\": \"620402\" },\n\n{\n  \"label\": \"平川区\",\n  \"value\": \"620403\" },\n\n{\n  \"label\": \"靖远县\",\n  \"value\": \"620421\" },\n\n{\n  \"label\": \"会宁县\",\n  \"value\": \"620422\" },\n\n{\n  \"label\": \"景泰县\",\n  \"value\": \"620423\" }],\n\n\n[{\n  \"label\": \"秦州区\",\n  \"value\": \"620502\" },\n\n{\n  \"label\": \"麦积区\",\n  \"value\": \"620503\" },\n\n{\n  \"label\": \"清水县\",\n  \"value\": \"620521\" },\n\n{\n  \"label\": \"秦安县\",\n  \"value\": \"620522\" },\n\n{\n  \"label\": \"甘谷县\",\n  \"value\": \"620523\" },\n\n{\n  \"label\": \"武山县\",\n  \"value\": \"620524\" },\n\n{\n  \"label\": \"张家川回族自治县\",\n  \"value\": \"620525\" }],\n\n\n[{\n  \"label\": \"凉州区\",\n  \"value\": \"620602\" },\n\n{\n  \"label\": \"民勤县\",\n  \"value\": \"620621\" },\n\n{\n  \"label\": \"古浪县\",\n  \"value\": \"620622\" },\n\n{\n  \"label\": \"天祝藏族自治县\",\n  \"value\": \"620623\" }],\n\n\n[{\n  \"label\": \"甘州区\",\n  \"value\": \"620702\" },\n\n{\n  \"label\": \"肃南裕固族自治县\",\n  \"value\": \"620721\" },\n\n{\n  \"label\": \"民乐县\",\n  \"value\": \"620722\" },\n\n{\n  \"label\": \"临泽县\",\n  \"value\": \"620723\" },\n\n{\n  \"label\": \"高台县\",\n  \"value\": \"620724\" },\n\n{\n  \"label\": \"山丹县\",\n  \"value\": \"620725\" }],\n\n\n[{\n  \"label\": \"崆峒区\",\n  \"value\": \"620802\" },\n\n{\n  \"label\": \"泾川县\",\n  \"value\": \"620821\" },\n\n{\n  \"label\": \"灵台县\",\n  \"value\": \"620822\" },\n\n{\n  \"label\": \"崇信县\",\n  \"value\": \"620823\" },\n\n{\n  \"label\": \"华亭县\",\n  \"value\": \"620824\" },\n\n{\n  \"label\": \"庄浪县\",\n  \"value\": \"620825\" },\n\n{\n  \"label\": \"静宁县\",\n  \"value\": \"620826\" },\n\n{\n  \"label\": \"平凉工业园区\",\n  \"value\": \"620871\" }],\n\n\n[{\n  \"label\": \"肃州区\",\n  \"value\": \"620902\" },\n\n{\n  \"label\": \"金塔县\",\n  \"value\": \"620921\" },\n\n{\n  \"label\": \"瓜州县\",\n  \"value\": \"620922\" },\n\n{\n  \"label\": \"肃北蒙古族自治县\",\n  \"value\": \"620923\" },\n\n{\n  \"label\": \"阿克塞哈萨克族自治县\",\n  \"value\": \"620924\" },\n\n{\n  \"label\": \"玉门市\",\n  \"value\": \"620981\" },\n\n{\n  \"label\": \"敦煌市\",\n  \"value\": \"620982\" }],\n\n\n[{\n  \"label\": \"西峰区\",\n  \"value\": \"621002\" },\n\n{\n  \"label\": \"庆城县\",\n  \"value\": \"621021\" },\n\n{\n  \"label\": \"环县\",\n  \"value\": \"621022\" },\n\n{\n  \"label\": \"华池县\",\n  \"value\": \"621023\" },\n\n{\n  \"label\": \"合水县\",\n  \"value\": \"621024\" },\n\n{\n  \"label\": \"正宁县\",\n  \"value\": \"621025\" },\n\n{\n  \"label\": \"宁县\",\n  \"value\": \"621026\" },\n\n{\n  \"label\": \"镇原县\",\n  \"value\": \"621027\" }],\n\n\n[{\n  \"label\": \"安定区\",\n  \"value\": \"621102\" },\n\n{\n  \"label\": \"通渭县\",\n  \"value\": \"621121\" },\n\n{\n  \"label\": \"陇西县\",\n  \"value\": \"621122\" },\n\n{\n  \"label\": \"渭源县\",\n  \"value\": \"621123\" },\n\n{\n  \"label\": \"临洮县\",\n  \"value\": \"621124\" },\n\n{\n  \"label\": \"漳县\",\n  \"value\": \"621125\" },\n\n{\n  \"label\": \"岷县\",\n  \"value\": \"621126\" }],\n\n\n[{\n  \"label\": \"武都区\",\n  \"value\": \"621202\" },\n\n{\n  \"label\": \"成县\",\n  \"value\": \"621221\" },\n\n{\n  \"label\": \"文县\",\n  \"value\": \"621222\" },\n\n{\n  \"label\": \"宕昌县\",\n  \"value\": \"621223\" },\n\n{\n  \"label\": \"康县\",\n  \"value\": \"621224\" },\n\n{\n  \"label\": \"西和县\",\n  \"value\": \"621225\" },\n\n{\n  \"label\": \"礼县\",\n  \"value\": \"621226\" },\n\n{\n  \"label\": \"徽县\",\n  \"value\": \"621227\" },\n\n{\n  \"label\": \"两当县\",\n  \"value\": \"621228\" }],\n\n\n[{\n  \"label\": \"临夏市\",\n  \"value\": \"622901\" },\n\n{\n  \"label\": \"临夏县\",\n  \"value\": \"622921\" },\n\n{\n  \"label\": \"康乐县\",\n  \"value\": \"622922\" },\n\n{\n  \"label\": \"永靖县\",\n  \"value\": \"622923\" },\n\n{\n  \"label\": \"广河县\",\n  \"value\": \"622924\" },\n\n{\n  \"label\": \"和政县\",\n  \"value\": \"622925\" },\n\n{\n  \"label\": \"东乡族自治县\",\n  \"value\": \"622926\" },\n\n{\n  \"label\": \"积石山保安族东乡族撒拉族自治县\",\n  \"value\": \"622927\" }],\n\n\n[{\n  \"label\": \"合作市\",\n  \"value\": \"623001\" },\n\n{\n  \"label\": \"临潭县\",\n  \"value\": \"623021\" },\n\n{\n  \"label\": \"卓尼县\",\n  \"value\": \"623022\" },\n\n{\n  \"label\": \"舟曲县\",\n  \"value\": \"623023\" },\n\n{\n  \"label\": \"迭部县\",\n  \"value\": \"623024\" },\n\n{\n  \"label\": \"玛曲县\",\n  \"value\": \"623025\" },\n\n{\n  \"label\": \"碌曲县\",\n  \"value\": \"623026\" },\n\n{\n  \"label\": \"夏河县\",\n  \"value\": \"623027\" }]],\n\n\n\n[\n[{\n  \"label\": \"城东区\",\n  \"value\": \"630102\" },\n\n{\n  \"label\": \"城中区\",\n  \"value\": \"630103\" },\n\n{\n  \"label\": \"城西区\",\n  \"value\": \"630104\" },\n\n{\n  \"label\": \"城北区\",\n  \"value\": \"630105\" },\n\n{\n  \"label\": \"大通回族土族自治县\",\n  \"value\": \"630121\" },\n\n{\n  \"label\": \"湟中县\",\n  \"value\": \"630122\" },\n\n{\n  \"label\": \"湟源县\",\n  \"value\": \"630123\" }],\n\n\n[{\n  \"label\": \"乐都区\",\n  \"value\": \"630202\" },\n\n{\n  \"label\": \"平安区\",\n  \"value\": \"630203\" },\n\n{\n  \"label\": \"民和回族土族自治县\",\n  \"value\": \"630222\" },\n\n{\n  \"label\": \"互助土族自治县\",\n  \"value\": \"630223\" },\n\n{\n  \"label\": \"化隆回族自治县\",\n  \"value\": \"630224\" },\n\n{\n  \"label\": \"循化撒拉族自治县\",\n  \"value\": \"630225\" }],\n\n\n[{\n  \"label\": \"门源回族自治县\",\n  \"value\": \"632221\" },\n\n{\n  \"label\": \"祁连县\",\n  \"value\": \"632222\" },\n\n{\n  \"label\": \"海晏县\",\n  \"value\": \"632223\" },\n\n{\n  \"label\": \"刚察县\",\n  \"value\": \"632224\" }],\n\n\n[{\n  \"label\": \"同仁县\",\n  \"value\": \"632321\" },\n\n{\n  \"label\": \"尖扎县\",\n  \"value\": \"632322\" },\n\n{\n  \"label\": \"泽库县\",\n  \"value\": \"632323\" },\n\n{\n  \"label\": \"河南蒙古族自治县\",\n  \"value\": \"632324\" }],\n\n\n[{\n  \"label\": \"共和县\",\n  \"value\": \"632521\" },\n\n{\n  \"label\": \"同德县\",\n  \"value\": \"632522\" },\n\n{\n  \"label\": \"贵德县\",\n  \"value\": \"632523\" },\n\n{\n  \"label\": \"兴海县\",\n  \"value\": \"632524\" },\n\n{\n  \"label\": \"贵南县\",\n  \"value\": \"632525\" }],\n\n\n[{\n  \"label\": \"玛沁县\",\n  \"value\": \"632621\" },\n\n{\n  \"label\": \"班玛县\",\n  \"value\": \"632622\" },\n\n{\n  \"label\": \"甘德县\",\n  \"value\": \"632623\" },\n\n{\n  \"label\": \"达日县\",\n  \"value\": \"632624\" },\n\n{\n  \"label\": \"久治县\",\n  \"value\": \"632625\" },\n\n{\n  \"label\": \"玛多县\",\n  \"value\": \"632626\" }],\n\n\n[{\n  \"label\": \"玉树市\",\n  \"value\": \"632701\" },\n\n{\n  \"label\": \"杂多县\",\n  \"value\": \"632722\" },\n\n{\n  \"label\": \"称多县\",\n  \"value\": \"632723\" },\n\n{\n  \"label\": \"治多县\",\n  \"value\": \"632724\" },\n\n{\n  \"label\": \"囊谦县\",\n  \"value\": \"632725\" },\n\n{\n  \"label\": \"曲麻莱县\",\n  \"value\": \"632726\" }],\n\n\n[{\n  \"label\": \"格尔木市\",\n  \"value\": \"632801\" },\n\n{\n  \"label\": \"德令哈市\",\n  \"value\": \"632802\" },\n\n{\n  \"label\": \"乌兰县\",\n  \"value\": \"632821\" },\n\n{\n  \"label\": \"都兰县\",\n  \"value\": \"632822\" },\n\n{\n  \"label\": \"天峻县\",\n  \"value\": \"632823\" },\n\n{\n  \"label\": \"大柴旦行政委员会\",\n  \"value\": \"632857\" },\n\n{\n  \"label\": \"冷湖行政委员会\",\n  \"value\": \"632858\" },\n\n{\n  \"label\": \"茫崖行政委员会\",\n  \"value\": \"632859\" }]],\n\n\n\n[\n[{\n  \"label\": \"兴庆区\",\n  \"value\": \"640104\" },\n\n{\n  \"label\": \"西夏区\",\n  \"value\": \"640105\" },\n\n{\n  \"label\": \"金凤区\",\n  \"value\": \"640106\" },\n\n{\n  \"label\": \"永宁县\",\n  \"value\": \"640121\" },\n\n{\n  \"label\": \"贺兰县\",\n  \"value\": \"640122\" },\n\n{\n  \"label\": \"灵武市\",\n  \"value\": \"640181\" }],\n\n\n[{\n  \"label\": \"大武口区\",\n  \"value\": \"640202\" },\n\n{\n  \"label\": \"惠农区\",\n  \"value\": \"640205\" },\n\n{\n  \"label\": \"平罗县\",\n  \"value\": \"640221\" }],\n\n\n[{\n  \"label\": \"利通区\",\n  \"value\": \"640302\" },\n\n{\n  \"label\": \"红寺堡区\",\n  \"value\": \"640303\" },\n\n{\n  \"label\": \"盐池县\",\n  \"value\": \"640323\" },\n\n{\n  \"label\": \"同心县\",\n  \"value\": \"640324\" },\n\n{\n  \"label\": \"青铜峡市\",\n  \"value\": \"640381\" }],\n\n\n[{\n  \"label\": \"原州区\",\n  \"value\": \"640402\" },\n\n{\n  \"label\": \"西吉县\",\n  \"value\": \"640422\" },\n\n{\n  \"label\": \"隆德县\",\n  \"value\": \"640423\" },\n\n{\n  \"label\": \"泾源县\",\n  \"value\": \"640424\" },\n\n{\n  \"label\": \"彭阳县\",\n  \"value\": \"640425\" }],\n\n\n[{\n  \"label\": \"沙坡头区\",\n  \"value\": \"640502\" },\n\n{\n  \"label\": \"中宁县\",\n  \"value\": \"640521\" },\n\n{\n  \"label\": \"海原县\",\n  \"value\": \"640522\" }]],\n\n\n\n[\n[{\n  \"label\": \"天山区\",\n  \"value\": \"650102\" },\n\n{\n  \"label\": \"沙依巴克区\",\n  \"value\": \"650103\" },\n\n{\n  \"label\": \"新市区\",\n  \"value\": \"650104\" },\n\n{\n  \"label\": \"水磨沟区\",\n  \"value\": \"650105\" },\n\n{\n  \"label\": \"头屯河区\",\n  \"value\": \"650106\" },\n\n{\n  \"label\": \"达坂城区\",\n  \"value\": \"650107\" },\n\n{\n  \"label\": \"米东区\",\n  \"value\": \"650109\" },\n\n{\n  \"label\": \"乌鲁木齐县\",\n  \"value\": \"650121\" },\n\n{\n  \"label\": \"乌鲁木齐经济技术开发区\",\n  \"value\": \"650171\" },\n\n{\n  \"label\": \"乌鲁木齐高新技术产业开发区\",\n  \"value\": \"650172\" }],\n\n\n[{\n  \"label\": \"独山子区\",\n  \"value\": \"650202\" },\n\n{\n  \"label\": \"克拉玛依区\",\n  \"value\": \"650203\" },\n\n{\n  \"label\": \"白碱滩区\",\n  \"value\": \"650204\" },\n\n{\n  \"label\": \"乌尔禾区\",\n  \"value\": \"650205\" }],\n\n\n[{\n  \"label\": \"高昌区\",\n  \"value\": \"650402\" },\n\n{\n  \"label\": \"鄯善县\",\n  \"value\": \"650421\" },\n\n{\n  \"label\": \"托克逊县\",\n  \"value\": \"650422\" }],\n\n\n[{\n  \"label\": \"伊州区\",\n  \"value\": \"650502\" },\n\n{\n  \"label\": \"巴里坤哈萨克自治县\",\n  \"value\": \"650521\" },\n\n{\n  \"label\": \"伊吾县\",\n  \"value\": \"650522\" }],\n\n\n[{\n  \"label\": \"昌吉市\",\n  \"value\": \"652301\" },\n\n{\n  \"label\": \"阜康市\",\n  \"value\": \"652302\" },\n\n{\n  \"label\": \"呼图壁县\",\n  \"value\": \"652323\" },\n\n{\n  \"label\": \"玛纳斯县\",\n  \"value\": \"652324\" },\n\n{\n  \"label\": \"奇台县\",\n  \"value\": \"652325\" },\n\n{\n  \"label\": \"吉木萨尔县\",\n  \"value\": \"652327\" },\n\n{\n  \"label\": \"木垒哈萨克自治县\",\n  \"value\": \"652328\" }],\n\n\n[{\n  \"label\": \"博乐市\",\n  \"value\": \"652701\" },\n\n{\n  \"label\": \"阿拉山口市\",\n  \"value\": \"652702\" },\n\n{\n  \"label\": \"精河县\",\n  \"value\": \"652722\" },\n\n{\n  \"label\": \"温泉县\",\n  \"value\": \"652723\" }],\n\n\n[{\n  \"label\": \"库尔勒市\",\n  \"value\": \"652801\" },\n\n{\n  \"label\": \"轮台县\",\n  \"value\": \"652822\" },\n\n{\n  \"label\": \"尉犁县\",\n  \"value\": \"652823\" },\n\n{\n  \"label\": \"若羌县\",\n  \"value\": \"652824\" },\n\n{\n  \"label\": \"且末县\",\n  \"value\": \"652825\" },\n\n{\n  \"label\": \"焉耆回族自治县\",\n  \"value\": \"652826\" },\n\n{\n  \"label\": \"和静县\",\n  \"value\": \"652827\" },\n\n{\n  \"label\": \"和硕县\",\n  \"value\": \"652828\" },\n\n{\n  \"label\": \"博湖县\",\n  \"value\": \"652829\" },\n\n{\n  \"label\": \"库尔勒经济技术开发区\",\n  \"value\": \"652871\" }],\n\n\n[{\n  \"label\": \"阿克苏市\",\n  \"value\": \"652901\" },\n\n{\n  \"label\": \"温宿县\",\n  \"value\": \"652922\" },\n\n{\n  \"label\": \"库车县\",\n  \"value\": \"652923\" },\n\n{\n  \"label\": \"沙雅县\",\n  \"value\": \"652924\" },\n\n{\n  \"label\": \"新和县\",\n  \"value\": \"652925\" },\n\n{\n  \"label\": \"拜城县\",\n  \"value\": \"652926\" },\n\n{\n  \"label\": \"乌什县\",\n  \"value\": \"652927\" },\n\n{\n  \"label\": \"阿瓦提县\",\n  \"value\": \"652928\" },\n\n{\n  \"label\": \"柯坪县\",\n  \"value\": \"652929\" }],\n\n\n[{\n  \"label\": \"阿图什市\",\n  \"value\": \"653001\" },\n\n{\n  \"label\": \"阿克陶县\",\n  \"value\": \"653022\" },\n\n{\n  \"label\": \"阿合奇县\",\n  \"value\": \"653023\" },\n\n{\n  \"label\": \"乌恰县\",\n  \"value\": \"653024\" }],\n\n\n[{\n  \"label\": \"喀什市\",\n  \"value\": \"653101\" },\n\n{\n  \"label\": \"疏附县\",\n  \"value\": \"653121\" },\n\n{\n  \"label\": \"疏勒县\",\n  \"value\": \"653122\" },\n\n{\n  \"label\": \"英吉沙县\",\n  \"value\": \"653123\" },\n\n{\n  \"label\": \"泽普县\",\n  \"value\": \"653124\" },\n\n{\n  \"label\": \"莎车县\",\n  \"value\": \"653125\" },\n\n{\n  \"label\": \"叶城县\",\n  \"value\": \"653126\" },\n\n{\n  \"label\": \"麦盖提县\",\n  \"value\": \"653127\" },\n\n{\n  \"label\": \"岳普湖县\",\n  \"value\": \"653128\" },\n\n{\n  \"label\": \"伽师县\",\n  \"value\": \"653129\" },\n\n{\n  \"label\": \"巴楚县\",\n  \"value\": \"653130\" },\n\n{\n  \"label\": \"塔什库尔干塔吉克自治县\",\n  \"value\": \"653131\" }],\n\n\n[{\n  \"label\": \"和田市\",\n  \"value\": \"653201\" },\n\n{\n  \"label\": \"和田县\",\n  \"value\": \"653221\" },\n\n{\n  \"label\": \"墨玉县\",\n  \"value\": \"653222\" },\n\n{\n  \"label\": \"皮山县\",\n  \"value\": \"653223\" },\n\n{\n  \"label\": \"洛浦县\",\n  \"value\": \"653224\" },\n\n{\n  \"label\": \"策勒县\",\n  \"value\": \"653225\" },\n\n{\n  \"label\": \"于田县\",\n  \"value\": \"653226\" },\n\n{\n  \"label\": \"民丰县\",\n  \"value\": \"653227\" }],\n\n\n[{\n  \"label\": \"伊宁市\",\n  \"value\": \"654002\" },\n\n{\n  \"label\": \"奎屯市\",\n  \"value\": \"654003\" },\n\n{\n  \"label\": \"霍尔果斯市\",\n  \"value\": \"654004\" },\n\n{\n  \"label\": \"伊宁县\",\n  \"value\": \"654021\" },\n\n{\n  \"label\": \"察布查尔锡伯自治县\",\n  \"value\": \"654022\" },\n\n{\n  \"label\": \"霍城县\",\n  \"value\": \"654023\" },\n\n{\n  \"label\": \"巩留县\",\n  \"value\": \"654024\" },\n\n{\n  \"label\": \"新源县\",\n  \"value\": \"654025\" },\n\n{\n  \"label\": \"昭苏县\",\n  \"value\": \"654026\" },\n\n{\n  \"label\": \"特克斯县\",\n  \"value\": \"654027\" },\n\n{\n  \"label\": \"尼勒克县\",\n  \"value\": \"654028\" }],\n\n\n[{\n  \"label\": \"塔城市\",\n  \"value\": \"654201\" },\n\n{\n  \"label\": \"乌苏市\",\n  \"value\": \"654202\" },\n\n{\n  \"label\": \"额敏县\",\n  \"value\": \"654221\" },\n\n{\n  \"label\": \"沙湾县\",\n  \"value\": \"654223\" },\n\n{\n  \"label\": \"托里县\",\n  \"value\": \"654224\" },\n\n{\n  \"label\": \"裕民县\",\n  \"value\": \"654225\" },\n\n{\n  \"label\": \"和布克赛尔蒙古自治县\",\n  \"value\": \"654226\" }],\n\n\n[{\n  \"label\": \"阿勒泰市\",\n  \"value\": \"654301\" },\n\n{\n  \"label\": \"布尔津县\",\n  \"value\": \"654321\" },\n\n{\n  \"label\": \"富蕴县\",\n  \"value\": \"654322\" },\n\n{\n  \"label\": \"福海县\",\n  \"value\": \"654323\" },\n\n{\n  \"label\": \"哈巴河县\",\n  \"value\": \"654324\" },\n\n{\n  \"label\": \"青河县\",\n  \"value\": \"654325\" },\n\n{\n  \"label\": \"吉木乃县\",\n  \"value\": \"654326\" }],\n\n\n[{\n  \"label\": \"石河子市\",\n  \"value\": \"659001\" },\n\n{\n  \"label\": \"阿拉尔市\",\n  \"value\": \"659002\" },\n\n{\n  \"label\": \"图木舒克市\",\n  \"value\": \"659003\" },\n\n{\n  \"label\": \"五家渠市\",\n  \"value\": \"659004\" },\n\n{\n  \"label\": \"铁门关市\",\n  \"value\": \"659006\" }]],\n\n\n\n[\n[{\n  \"label\": \"台北\",\n  \"value\": \"660101\" }],\n\n[{\n  \"label\": \"高雄\",\n  \"value\": \"660201\" }],\n\n[{\n  \"label\": \"基隆\",\n  \"value\": \"660301\" }],\n\n[{\n  \"label\": \"台中\",\n  \"value\": \"660401\" }],\n\n[{\n  \"label\": \"台南\",\n  \"value\": \"660501\" }],\n\n[{\n  \"label\": \"新竹\",\n  \"value\": \"660601\" }],\n\n[{\n  \"label\": \"嘉义\",\n  \"value\": \"660701\" }],\n\n[{\n  \"label\": \"宜兰\",\n  \"value\": \"660801\" }],\n\n[{\n  \"label\": \"桃园\",\n  \"value\": \"660901\" }],\n\n[{\n  \"label\": \"苗栗\",\n  \"value\": \"661001\" }],\n\n[{\n  \"label\": \"彰化\",\n  \"value\": \"661101\" }],\n\n[{\n  \"label\": \"南投\",\n  \"value\": \"661201\" }],\n\n[{\n  \"label\": \"云林\",\n  \"value\": \"661301\" }],\n\n[{\n  \"label\": \"屏东\",\n  \"value\": \"661401\" }],\n\n[{\n  \"label\": \"台东\",\n  \"value\": \"661501\" }],\n\n[{\n  \"label\": \"花莲\",\n  \"value\": \"661601\" }],\n\n[{\n  \"label\": \"澎湖\",\n  \"value\": \"661701\" }]],\n\n\n[\n[{\n  \"label\": \"香港岛\",\n  \"value\": \"670101\" }],\n\n[{\n  \"label\": \"九龙\",\n  \"value\": \"670201\" }],\n\n[{\n  \"label\": \"新界\",\n  \"value\": \"670301\" }]],\n\n\n[\n[{\n  \"label\": \"澳门半岛\",\n  \"value\": \"680101\" }],\n\n[{\n  \"label\": \"氹仔岛\",\n  \"value\": \"680201\" }],\n\n[{\n  \"label\": \"路环岛\",\n  \"value\": \"680301\" }],\n\n[{\n  \"label\": \"路氹城\",\n  \"value\": \"680401\" }]]];var _default =\n\n\n\nareaData;exports.default = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///282\n");

/***/ }),

/***/ 283:
/*!***************************************************!*\
  !*** D:/kxsx_app/components/w-picker/w-picker.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("Object.defineProperty(exports, \"__esModule\", { value: true });exports.default = void 0;var forMatNum = function forMatNum(num) {\n  return num < 10 ? '0' + num : num + '';\n};\nvar initPicker = {\n  //日期\n  date: {\n    init: function init(start, end) {var mode = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"date\";var step = arguments.length > 3 ? arguments[3] : undefined;var value = arguments.length > 4 ? arguments[4] : undefined;var flag = arguments.length > 5 ? arguments[5] : undefined;var disabled = arguments.length > 6 ? arguments[6] : undefined;\n      var aToday = new Date();\n      var tYear,tMonth,tDay,tHours,tMinutes,tSeconds,defaultVal = [];\n      var initstartDate = new Date(start);\n      var endDate = new Date(end);\n      if (start > end) {\n        initstartDate = new Date(end);\n        endDate = new Date(start);\n      };\n      var startYear = initstartDate.getFullYear();\n      var startMonth = initstartDate.getMonth() + 1;\n      var endYear = endDate.getFullYear();\n      var years = [],months = [],days = [],hours = [],minutes = [],seconds = [],areas = [],returnArr = [];\n      var curMonth = flag ? value[1] * 1 : value[1] + 1;\n      var dYear = aToday.getFullYear();\n      var dMonth = aToday.getMonth() + 1;\n      var dDate = aToday.getDate();\n      var totalDays = new Date(startYear, curMonth, 0).getDate();\n      for (var s = startYear; s <= endYear; s++) {\n        years.push(s + '');\n      };\n      var curYear = years[value[0]];\n      switch (mode) {\n        case \"half\":\n        case \"date\":\n        case \"yearMonth\":\n          if (disabled && curYear == dYear) {\n            for (var m = 1; m <= dMonth; m++) {\n              months.push(forMatNum(m));\n            };\n            for (var d = 1; d <= dDate; d++) {\n              days.push(forMatNum(d));\n            }\n          } else {\n            for (var _m = 1; _m <= 12; _m++) {\n              months.push(forMatNum(_m));\n            };\n            for (var _d = 1; _d <= totalDays; _d++) {\n              days.push(forMatNum(_d));\n            }\n          };\n          break;\n        default:\n          for (var _m2 = 1; _m2 <= 12; _m2++) {\n            months.push(forMatNum(_m2));\n          };\n          for (var _d2 = 1; _d2 <= totalDays; _d2++) {\n            days.push(forMatNum(_d2));\n          }\n          break;}\n\n      for (var h = 0; h < 24; h++) {\n        hours.push(forMatNum(h));\n      }\n      for (var _m3 = 0; _m3 < 60; _m3 += step * 1) {\n        minutes.push(forMatNum(_m3));\n      }\n      for (var _s = 0; _s < 60; _s++) {\n        seconds.push(forMatNum(_s));\n      }\n      if (flag) {\n        returnArr = [\n        years.indexOf(value[0]),\n        months.indexOf(value[1]),\n        days.indexOf(value[2]),\n        hours.indexOf(value[3]),\n        minutes.indexOf(value[4]) == -1 ? 0 : minutes.indexOf(value[4]),\n        seconds.indexOf(value[5])];\n\n      };\n      switch (mode) {\n        case \"range\":\n          if (flag) {\n            defaultVal = [returnArr[0], returnArr[1], returnArr[2], 0, returnArr[0], returnArr[1], returnArr[2]];\n            return { years: years, months: months, days: days, defaultVal: defaultVal };\n          } else {\n            return { years: years, months: months, days: days };\n          }\n          break;\n        case \"date\":\n          if (flag) {\n            defaultVal = [returnArr[0], returnArr[1], returnArr[2]];\n            return { years: years, months: months, days: days, defaultVal: defaultVal };\n          } else {\n            return { years: years, months: months, days: days };\n          }\n          break;\n        case \"half\":\n          areas = [{\n            label: \"上午\",\n            value: 0 },\n          {\n            label: \"下午\",\n            value: 1 }];\n\n          if (flag) {\n            defaultVal = [returnArr[0], returnArr[1], returnArr[2], returnArr[3]];\n            return { years: years, months: months, days: days, areas: areas, defaultVal: defaultVal };\n          } else {\n            return { years: years, months: months, days: days, areas: areas };\n          }\n          break;\n        case \"yearMonth\":\n          if (flag) {\n            defaultVal = [returnArr[0], returnArr[1]];\n            return { years: years, months: months, defaultVal: defaultVal };\n          } else {\n            return { years: years, months: months };\n          }\n          break;\n        case \"dateTime\":\n          if (flag) {\n            defaultVal = returnArr;\n            return { years: years, months: months, days: days, hours: hours, minutes: minutes, seconds: seconds, defaultVal: defaultVal };\n          } else {\n            return { years: years, months: months, days: days, hours: hours, minutes: minutes, seconds: seconds };\n          }\n          break;\n        case \"time\":\n          if (flag) {\n            defaultVal = [returnArr[3], returnArr[4], returnArr[5]];\n            return { hours: hours, minutes: minutes, seconds: seconds, defaultVal: defaultVal };\n          } else {\n            return { hours: hours, minutes: minutes, seconds: seconds };\n          }\n          break;}\n\n    },\n    initMonths: function initMonths(year, disabled) {\n      var aDate = new Date();\n      var dYear = aDate.getFullYear();\n      var dMonth = aDate.getMonth() + 1;\n      var dDate = aDate.getDate();\n      var flag = dYear == year ? true : false;\n      var months = [];\n      if (flag && disabled) {\n        for (var m = 1; m <= dMonth; m++) {\n          months.push(forMatNum(m));\n        };\n      } else {\n        for (var _m4 = 1; _m4 <= 12; _m4++) {\n          months.push(forMatNum(_m4));\n        };\n      };\n      return months;\n    },\n    initDays: function initDays(year, month, disabled) {\n      var aDate = new Date();\n      var dYear = aDate.getFullYear();\n      var dMonth = aDate.getMonth() + 1;\n      var dDate = aDate.getDate();\n      var flag = dYear == year && dMonth == month ? true : false;\n      var totalDays = new Date(year, month, 0).getDate();\n      var dates = [];\n      if (flag && disabled) {\n        for (var d = 1; d <= dDate; d++) {\n          dates.push(forMatNum(d));\n        };\n      } else {\n        for (var _d3 = 1; _d3 <= totalDays; _d3++) {\n          dates.push(forMatNum(_d3));\n        };\n      };\n      return dates;\n    } },\n\n  //短期日期上下午\n  limitHour: {\n    init: function init() {var dayStep = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 7;\n      var startDate = new Date();\n      var date = [],areas = [],hours = [];\n      var hour = new Date().getHours();\n      var weeks = [\"周日\", \"周一\", \"周二\", \"周三\", \"周四\", \"周五\", \"周六\"];\n      var arrs = [];\n      for (var i = 0; i < dayStep; i++) {\n        var year = void 0,month = void 0,day = void 0,weekday = void 0;\n        year = startDate.getFullYear();\n        month = forMatNum(startDate.getMonth() + 1);\n        day = forMatNum(startDate.getDate());\n        weekday = weeks[startDate.getDay()];\n        var label = \"\";\n        switch (i) {\n          case 0:\n            label = \"今天\";\n            break;\n          case 1:\n            label = \"明天\";\n            break;\n          case 2:\n            label = \"后天\";\n            break;\n          default:\n            label = month + \"月\" + day + \"日\" + \" \" + weekday;\n            break;}\n\n        date.push({\n          label: label,\n          value: year + \"-\" + month + \"-\" + day,\n          today: i == 0 ? true : false });\n\n        startDate.setDate(startDate.getDate() + 1);\n      }\n      if (hour > 12) {\n        areas = [{\n          label: \"下午\",\n          value: 1 }];\n\n      } else {\n        areas = [{\n          label: \"上午\",\n          value: 0 },\n        {\n          label: \"下午\",\n          value: 1 }];\n\n      };\n      for (var k = hour > 12 ? hour - 12 : hour; k <= 12; k++) {\n        hours.push({\n          label: forMatNum(k),\n          value: forMatNum(hour > 12 ? k + 12 : k) });\n\n      };\n      return { date: date, areas: areas, hours: hours };\n    },\n    initAreas: function initAreas(date) {\n      var areas = [];\n      var hour = new Date().getHours();\n      if (date.today) {\n        if (hour > 12) {\n          areas = [{\n            label: \"下午\",\n            value: 1 }];\n\n        } else {\n          areas = [{\n            label: \"上午\",\n            value: 0 },\n          {\n            label: \"下午\",\n            value: 1 }];\n\n        };\n      } else {\n        areas = [{\n          label: \"上午\",\n          value: 0 },\n        {\n          label: \"下午\",\n          value: 1 }];\n\n      }\n      return areas;areas = [{\n        label: \"上午\",\n        value: 0 },\n      {\n        label: \"下午\",\n        value: 1 }];\n\n    },\n    initHours: function initHours(dateCol, hourCol) {\n      var hours = [];\n      var hour = new Date().getHours();\n      if (dateCol.today) {\n        if (hourCol.value == 1 && hour <= 12) {\n          for (var k = 1; k <= 12; k++) {\n            hours.push({\n              label: forMatNum(k),\n              value: forMatNum(hourCol.value == 1 ? k + 12 : k) });\n\n          };\n        } else {\n          for (var _k = hour > 12 ? hour - 12 : hour; _k <= 12; _k++) {\n            hours.push({\n              label: forMatNum(_k),\n              value: forMatNum(hourCol.value == 1 ? _k + 12 : _k) });\n\n          };\n        }\n\n      } else {\n        for (var _k2 = 1; _k2 <= 12; _k2++) {\n          hours.push({\n            label: forMatNum(_k2),\n            value: forMatNum(hourCol.value == 1 ? _k2 + 12 : _k2) });\n\n        };\n      };\n      return hours;\n    } },\n\n  //短期日期时间初始化\n  limit: {\n    init: function init() {var dayStep = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 7;var startHour = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 8;var endHour = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 20;var minuteStep = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;var afterStep = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 30;\n      var startDate = new Date();\n      var bsDate = new Date(new Date().getTime() + afterStep * 60 * 1000);\n      var date = [],hours = [],minutes = [];\n      var hour = bsDate.getHours();\n      var minute = Math.floor(bsDate.getMinutes() / minuteStep) * minuteStep;\n      var weeks = [\"周日\", \"周一\", \"周二\", \"周三\", \"周四\", \"周五\", \"周六\"];\n      for (var i = 0; i < dayStep; i++) {\n        var year = void 0,month = void 0,day = void 0,weekday = void 0;\n        year = startDate.getFullYear();\n        month = forMatNum(startDate.getMonth() + 1);\n        day = forMatNum(startDate.getDate());\n        weekday = weeks[startDate.getDay()];\n        var label = \"\";\n        switch (i) {\n          case 0:\n            label = \"今天\";\n            break;\n          case 1:\n            label = \"明天\";\n            break;\n          case 2:\n            label = \"后天\";\n            break;\n          default:\n            label = month + \"月\" + day + \"日\" + \" \" + weekday;\n            break;}\n\n        date.push({\n          label: label,\n          value: year + \"-\" + month + \"-\" + day,\n          flag: i == 0 ? true : false });\n\n        startDate.setDate(startDate.getDate() + 1);\n      }\n      if (hour < startHour) {\n        hour = startHour;\n      };\n      if (hour > endHour) {\n        hour = endHour;\n      };\n      for (var k = hour * 1; k <= endHour * 1; k++) {\n        hours.push({\n          label: forMatNum(k),\n          value: forMatNum(k),\n          flag: k == hour ? true : false });\n\n      };\n      for (var j = minute; j < 60; j += minuteStep * 1) {\n        minutes.push({\n          label: forMatNum(j),\n          value: forMatNum(j) });\n\n      }\n      return { date: date, hours: hours, minutes: minutes };\n    },\n    initHours: function initHours() {var startHour = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 8;var endHour = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 20;var minuteStep = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;var afterStep = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 30;var date = arguments.length > 4 ? arguments[4] : undefined;\n      var hours = [];\n      var arr = date.split(\"-\");\n      var aDate = new Date();\n      var dYear = aDate.getFullYear();\n      var dMonth = aDate.getMonth() + 1;\n      var dDate = aDate.getDate();\n      var bsDate = new Date(new Date().getTime() + afterStep * 60 * 1000);\n      var hour = bsDate.getHours();\n      var flag = dYear == arr[0] && dMonth == arr[1] && dDate == arr[2] ? true : false;\n      if (hour > endHour) {\n        hour = endHour;\n      };\n      if (flag) {\n        for (var k = hour * 1; k <= endHour * 1; k++) {\n          hours.push({\n            label: forMatNum(k),\n            value: forMatNum(k),\n            flag: k == hour ? true : false });\n\n        };\n      } else {\n        for (var _k3 = startHour * 1; _k3 <= endHour * 1; _k3++) {\n          hours.push({\n            label: forMatNum(_k3),\n            value: forMatNum(_k3),\n            flag: false });\n\n        }\n      };\n      return hours;\n    },\n    initMinutes: function initMinutes() {var startHour = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 8;var endHour = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 20;var minuteStep = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;var afterStep = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 30;var date = arguments.length > 4 ? arguments[4] : undefined;var hour = arguments.length > 5 ? arguments[5] : undefined;\n      var minutes = [];\n      var bsDate = new Date(new Date().getTime() + afterStep * 60 * 1000);\n      var arr = date.split(\"-\");\n      var aDate = new Date();\n      var dYear = aDate.getFullYear();\n      var dMonth = aDate.getMonth() + 1;\n      var dDate = aDate.getDate();\n      var dHour = bsDate.getHours();;\n      var minute = Math.floor(bsDate.getMinutes() / minuteStep) * minuteStep;\n      var flag = dYear == arr[0] && dMonth == arr[1] && dDate == arr[2] ? true : false;\n      if (flag) {\n        if (hour == dHour) {\n          for (var j = minute; j < 60; j += minuteStep * 1) {\n            minutes.push({\n              label: forMatNum(j),\n              value: forMatNum(j) });\n\n          }\n        } else {\n          for (var _j = 0; _j < 60; _j += minuteStep * 1) {\n            minutes.push({\n              label: forMatNum(_j),\n              value: forMatNum(_j) });\n\n          }\n        }\n\n      } else {\n        for (var _j2 = 0; _j2 < 60; _j2 += minuteStep * 1) {\n          minutes.push({\n            label: forMatNum(_j2),\n            value: forMatNum(_j2) });\n\n        }\n      }\n      return minutes;\n    } },\n\n  //选择区间初始化\n  range: {\n    init: function init(start, end, value, flag) {\n      var aToday = new Date();\n      var tYear,tMonth,tDay,tHours,tMinutes,tSeconds,defaultVal = [];\n      var initstartDate = new Date(start);\n      var endDate = new Date(end);\n      if (start > end) {\n        initstartDate = new Date(end);\n        endDate = new Date(start);\n      };\n      var startYear = initstartDate.getFullYear();\n      var startMonth = initstartDate.getMonth() + 1;\n      var endYear = endDate.getFullYear();\n      var fyears = [],fmonths = [],fdays = [],tyears = [],tmonths = [],tdays = [],returnArr = [];\n      var curMonth = flag ? value[1] * 1 : value[1] + 1;\n      var totalDays = new Date(startYear, curMonth, 0).getDate();\n      for (var s = startYear; s <= endYear; s++) {\n        fyears.push(s + '');\n      };\n      for (var m = 1; m <= 12; m++) {\n        fmonths.push(forMatNum(m));\n      };\n      for (var d = 1; d <= totalDays; d++) {\n        fdays.push(forMatNum(d));\n      };\n      for (var _s2 = startYear; _s2 <= endYear; _s2++) {\n        tyears.push(_s2 + '');\n      };\n      for (var _m5 = 1; _m5 <= 12; _m5++) {\n        tmonths.push(forMatNum(_m5));\n      };\n      for (var _d4 = 1; _d4 <= totalDays; _d4++) {\n        tdays.push(forMatNum(_d4));\n      };\n      if (flag) {\n        defaultVal = [\n        fyears.indexOf(value[0]),\n        fmonths.indexOf(value[1]),\n        fdays.indexOf(value[2]),\n        0,\n        tyears.indexOf(value[0]),\n        tmonths.indexOf(value[1]),\n        tdays.indexOf(value[2])];\n\n        return {\n          fyears: fyears,\n          fmonths: fmonths,\n          fdays: fdays,\n          tyears: tyears,\n          tmonths: tmonths,\n          tdays: tdays,\n          defaultVal: defaultVal };\n\n      } else {\n        return {\n          fyears: fyears,\n          fmonths: fmonths,\n          fdays: fdays,\n          tyears: tyears,\n          tmonths: tmonths,\n          tdays: tdays };\n\n      }\n    },\n    initDays: function initDays(year, month) {\n      var totalDays = new Date(year, month, 0).getDate();\n      var dates = [];\n      for (var d = 1; d <= totalDays; d++) {\n        dates.push(forMatNum(d));\n      };\n      return dates;\n    } } };var _default =\n\n\n\ninitPicker;exports.default = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///283\n");

/***/ }),

/***/ 3:
/*!******************************************************************************************!*\
  !*** ./node_modules/@dcloudio/vue-cli-plugin-uni/packages/mp-vue/dist/mp.runtime.esm.js ***!
  \******************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(global) {/*!\n * Vue.js v2.6.11\n * (c) 2014-2019 Evan You\n * Released under the MIT License.\n */\n/*  */\n\nvar emptyObject = Object.freeze({});\n\n// These helpers produce better VM code in JS engines due to their\n// explicitness and function inlining.\nfunction isUndef (v) {\n  return v === undefined || v === null\n}\n\nfunction isDef (v) {\n  return v !== undefined && v !== null\n}\n\nfunction isTrue (v) {\n  return v === true\n}\n\nfunction isFalse (v) {\n  return v === false\n}\n\n/**\n * Check if value is primitive.\n */\nfunction isPrimitive (value) {\n  return (\n    typeof value === 'string' ||\n    typeof value === 'number' ||\n    // $flow-disable-line\n    typeof value === 'symbol' ||\n    typeof value === 'boolean'\n  )\n}\n\n/**\n * Quick object check - this is primarily used to tell\n * Objects from primitive values when we know the value\n * is a JSON-compliant type.\n */\nfunction isObject (obj) {\n  return obj !== null && typeof obj === 'object'\n}\n\n/**\n * Get the raw type string of a value, e.g., [object Object].\n */\nvar _toString = Object.prototype.toString;\n\nfunction toRawType (value) {\n  return _toString.call(value).slice(8, -1)\n}\n\n/**\n * Strict object type check. Only returns true\n * for plain JavaScript objects.\n */\nfunction isPlainObject (obj) {\n  return _toString.call(obj) === '[object Object]'\n}\n\nfunction isRegExp (v) {\n  return _toString.call(v) === '[object RegExp]'\n}\n\n/**\n * Check if val is a valid array index.\n */\nfunction isValidArrayIndex (val) {\n  var n = parseFloat(String(val));\n  return n >= 0 && Math.floor(n) === n && isFinite(val)\n}\n\nfunction isPromise (val) {\n  return (\n    isDef(val) &&\n    typeof val.then === 'function' &&\n    typeof val.catch === 'function'\n  )\n}\n\n/**\n * Convert a value to a string that is actually rendered.\n */\nfunction toString (val) {\n  return val == null\n    ? ''\n    : Array.isArray(val) || (isPlainObject(val) && val.toString === _toString)\n      ? JSON.stringify(val, null, 2)\n      : String(val)\n}\n\n/**\n * Convert an input value to a number for persistence.\n * If the conversion fails, return original string.\n */\nfunction toNumber (val) {\n  var n = parseFloat(val);\n  return isNaN(n) ? val : n\n}\n\n/**\n * Make a map and return a function for checking if a key\n * is in that map.\n */\nfunction makeMap (\n  str,\n  expectsLowerCase\n) {\n  var map = Object.create(null);\n  var list = str.split(',');\n  for (var i = 0; i < list.length; i++) {\n    map[list[i]] = true;\n  }\n  return expectsLowerCase\n    ? function (val) { return map[val.toLowerCase()]; }\n    : function (val) { return map[val]; }\n}\n\n/**\n * Check if a tag is a built-in tag.\n */\nvar isBuiltInTag = makeMap('slot,component', true);\n\n/**\n * Check if an attribute is a reserved attribute.\n */\nvar isReservedAttribute = makeMap('key,ref,slot,slot-scope,is');\n\n/**\n * Remove an item from an array.\n */\nfunction remove (arr, item) {\n  if (arr.length) {\n    var index = arr.indexOf(item);\n    if (index > -1) {\n      return arr.splice(index, 1)\n    }\n  }\n}\n\n/**\n * Check whether an object has the property.\n */\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction hasOwn (obj, key) {\n  return hasOwnProperty.call(obj, key)\n}\n\n/**\n * Create a cached version of a pure function.\n */\nfunction cached (fn) {\n  var cache = Object.create(null);\n  return (function cachedFn (str) {\n    var hit = cache[str];\n    return hit || (cache[str] = fn(str))\n  })\n}\n\n/**\n * Camelize a hyphen-delimited string.\n */\nvar camelizeRE = /-(\\w)/g;\nvar camelize = cached(function (str) {\n  return str.replace(camelizeRE, function (_, c) { return c ? c.toUpperCase() : ''; })\n});\n\n/**\n * Capitalize a string.\n */\nvar capitalize = cached(function (str) {\n  return str.charAt(0).toUpperCase() + str.slice(1)\n});\n\n/**\n * Hyphenate a camelCase string.\n */\nvar hyphenateRE = /\\B([A-Z])/g;\nvar hyphenate = cached(function (str) {\n  return str.replace(hyphenateRE, '-$1').toLowerCase()\n});\n\n/**\n * Simple bind polyfill for environments that do not support it,\n * e.g., PhantomJS 1.x. Technically, we don't need this anymore\n * since native bind is now performant enough in most browsers.\n * But removing it would mean breaking code that was able to run in\n * PhantomJS 1.x, so this must be kept for backward compatibility.\n */\n\n/* istanbul ignore next */\nfunction polyfillBind (fn, ctx) {\n  function boundFn (a) {\n    var l = arguments.length;\n    return l\n      ? l > 1\n        ? fn.apply(ctx, arguments)\n        : fn.call(ctx, a)\n      : fn.call(ctx)\n  }\n\n  boundFn._length = fn.length;\n  return boundFn\n}\n\nfunction nativeBind (fn, ctx) {\n  return fn.bind(ctx)\n}\n\nvar bind = Function.prototype.bind\n  ? nativeBind\n  : polyfillBind;\n\n/**\n * Convert an Array-like object to a real Array.\n */\nfunction toArray (list, start) {\n  start = start || 0;\n  var i = list.length - start;\n  var ret = new Array(i);\n  while (i--) {\n    ret[i] = list[i + start];\n  }\n  return ret\n}\n\n/**\n * Mix properties into target object.\n */\nfunction extend (to, _from) {\n  for (var key in _from) {\n    to[key] = _from[key];\n  }\n  return to\n}\n\n/**\n * Merge an Array of Objects into a single Object.\n */\nfunction toObject (arr) {\n  var res = {};\n  for (var i = 0; i < arr.length; i++) {\n    if (arr[i]) {\n      extend(res, arr[i]);\n    }\n  }\n  return res\n}\n\n/* eslint-disable no-unused-vars */\n\n/**\n * Perform no operation.\n * Stubbing args to make Flow happy without leaving useless transpiled code\n * with ...rest (https://flow.org/blog/2017/05/07/Strict-Function-Call-Arity/).\n */\nfunction noop (a, b, c) {}\n\n/**\n * Always return false.\n */\nvar no = function (a, b, c) { return false; };\n\n/* eslint-enable no-unused-vars */\n\n/**\n * Return the same value.\n */\nvar identity = function (_) { return _; };\n\n/**\n * Check if two values are loosely equal - that is,\n * if they are plain objects, do they have the same shape?\n */\nfunction looseEqual (a, b) {\n  if (a === b) { return true }\n  var isObjectA = isObject(a);\n  var isObjectB = isObject(b);\n  if (isObjectA && isObjectB) {\n    try {\n      var isArrayA = Array.isArray(a);\n      var isArrayB = Array.isArray(b);\n      if (isArrayA && isArrayB) {\n        return a.length === b.length && a.every(function (e, i) {\n          return looseEqual(e, b[i])\n        })\n      } else if (a instanceof Date && b instanceof Date) {\n        return a.getTime() === b.getTime()\n      } else if (!isArrayA && !isArrayB) {\n        var keysA = Object.keys(a);\n        var keysB = Object.keys(b);\n        return keysA.length === keysB.length && keysA.every(function (key) {\n          return looseEqual(a[key], b[key])\n        })\n      } else {\n        /* istanbul ignore next */\n        return false\n      }\n    } catch (e) {\n      /* istanbul ignore next */\n      return false\n    }\n  } else if (!isObjectA && !isObjectB) {\n    return String(a) === String(b)\n  } else {\n    return false\n  }\n}\n\n/**\n * Return the first index at which a loosely equal value can be\n * found in the array (if value is a plain object, the array must\n * contain an object of the same shape), or -1 if it is not present.\n */\nfunction looseIndexOf (arr, val) {\n  for (var i = 0; i < arr.length; i++) {\n    if (looseEqual(arr[i], val)) { return i }\n  }\n  return -1\n}\n\n/**\n * Ensure a function is called only once.\n */\nfunction once (fn) {\n  var called = false;\n  return function () {\n    if (!called) {\n      called = true;\n      fn.apply(this, arguments);\n    }\n  }\n}\n\nvar ASSET_TYPES = [\n  'component',\n  'directive',\n  'filter'\n];\n\nvar LIFECYCLE_HOOKS = [\n  'beforeCreate',\n  'created',\n  'beforeMount',\n  'mounted',\n  'beforeUpdate',\n  'updated',\n  'beforeDestroy',\n  'destroyed',\n  'activated',\n  'deactivated',\n  'errorCaptured',\n  'serverPrefetch'\n];\n\n/*  */\n\n\n\nvar config = ({\n  /**\n   * Option merge strategies (used in core/util/options)\n   */\n  // $flow-disable-line\n  optionMergeStrategies: Object.create(null),\n\n  /**\n   * Whether to suppress warnings.\n   */\n  silent: false,\n\n  /**\n   * Show production mode tip message on boot?\n   */\n  productionTip: \"development\" !== 'production',\n\n  /**\n   * Whether to enable devtools\n   */\n  devtools: \"development\" !== 'production',\n\n  /**\n   * Whether to record perf\n   */\n  performance: false,\n\n  /**\n   * Error handler for watcher errors\n   */\n  errorHandler: null,\n\n  /**\n   * Warn handler for watcher warns\n   */\n  warnHandler: null,\n\n  /**\n   * Ignore certain custom elements\n   */\n  ignoredElements: [],\n\n  /**\n   * Custom user key aliases for v-on\n   */\n  // $flow-disable-line\n  keyCodes: Object.create(null),\n\n  /**\n   * Check if a tag is reserved so that it cannot be registered as a\n   * component. This is platform-dependent and may be overwritten.\n   */\n  isReservedTag: no,\n\n  /**\n   * Check if an attribute is reserved so that it cannot be used as a component\n   * prop. This is platform-dependent and may be overwritten.\n   */\n  isReservedAttr: no,\n\n  /**\n   * Check if a tag is an unknown element.\n   * Platform-dependent.\n   */\n  isUnknownElement: no,\n\n  /**\n   * Get the namespace of an element\n   */\n  getTagNamespace: noop,\n\n  /**\n   * Parse the real tag name for the specific platform.\n   */\n  parsePlatformTagName: identity,\n\n  /**\n   * Check if an attribute must be bound using property, e.g. value\n   * Platform-dependent.\n   */\n  mustUseProp: no,\n\n  /**\n   * Perform updates asynchronously. Intended to be used by Vue Test Utils\n   * This will significantly reduce performance if set to false.\n   */\n  async: true,\n\n  /**\n   * Exposed for legacy reasons\n   */\n  _lifecycleHooks: LIFECYCLE_HOOKS\n});\n\n/*  */\n\n/**\n * unicode letters used for parsing html tags, component names and property paths.\n * using https://www.w3.org/TR/html53/semantics-scripting.html#potentialcustomelementname\n * skipping \\u10000-\\uEFFFF due to it freezing up PhantomJS\n */\nvar unicodeRegExp = /a-zA-Z\\u00B7\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u203F-\\u2040\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD/;\n\n/**\n * Check if a string starts with $ or _\n */\nfunction isReserved (str) {\n  var c = (str + '').charCodeAt(0);\n  return c === 0x24 || c === 0x5F\n}\n\n/**\n * Define a property.\n */\nfunction def (obj, key, val, enumerable) {\n  Object.defineProperty(obj, key, {\n    value: val,\n    enumerable: !!enumerable,\n    writable: true,\n    configurable: true\n  });\n}\n\n/**\n * Parse simple path.\n */\nvar bailRE = new RegExp((\"[^\" + (unicodeRegExp.source) + \".$_\\\\d]\"));\nfunction parsePath (path) {\n  if (bailRE.test(path)) {\n    return\n  }\n  var segments = path.split('.');\n  return function (obj) {\n    for (var i = 0; i < segments.length; i++) {\n      if (!obj) { return }\n      obj = obj[segments[i]];\n    }\n    return obj\n  }\n}\n\n/*  */\n\n// can we use __proto__?\nvar hasProto = '__proto__' in {};\n\n// Browser environment sniffing\nvar inBrowser = typeof window !== 'undefined';\nvar inWeex = typeof WXEnvironment !== 'undefined' && !!WXEnvironment.platform;\nvar weexPlatform = inWeex && WXEnvironment.platform.toLowerCase();\nvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\nvar isIE = UA && /msie|trident/.test(UA);\nvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\nvar isEdge = UA && UA.indexOf('edge/') > 0;\nvar isAndroid = (UA && UA.indexOf('android') > 0) || (weexPlatform === 'android');\nvar isIOS = (UA && /iphone|ipad|ipod|ios/.test(UA)) || (weexPlatform === 'ios');\nvar isChrome = UA && /chrome\\/\\d+/.test(UA) && !isEdge;\nvar isPhantomJS = UA && /phantomjs/.test(UA);\nvar isFF = UA && UA.match(/firefox\\/(\\d+)/);\n\n// Firefox has a \"watch\" function on Object.prototype...\nvar nativeWatch = ({}).watch;\nif (inBrowser) {\n  try {\n    var opts = {};\n    Object.defineProperty(opts, 'passive', ({\n      get: function get () {\n      }\n    })); // https://github.com/facebook/flow/issues/285\n    window.addEventListener('test-passive', null, opts);\n  } catch (e) {}\n}\n\n// this needs to be lazy-evaled because vue may be required before\n// vue-server-renderer can set VUE_ENV\nvar _isServer;\nvar isServerRendering = function () {\n  if (_isServer === undefined) {\n    /* istanbul ignore if */\n    if (!inBrowser && !inWeex && typeof global !== 'undefined') {\n      // detect presence of vue-server-renderer and avoid\n      // Webpack shimming the process\n      _isServer = global['process'] && global['process'].env.VUE_ENV === 'server';\n    } else {\n      _isServer = false;\n    }\n  }\n  return _isServer\n};\n\n// detect devtools\nvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\n/* istanbul ignore next */\nfunction isNative (Ctor) {\n  return typeof Ctor === 'function' && /native code/.test(Ctor.toString())\n}\n\nvar hasSymbol =\n  typeof Symbol !== 'undefined' && isNative(Symbol) &&\n  typeof Reflect !== 'undefined' && isNative(Reflect.ownKeys);\n\nvar _Set;\n/* istanbul ignore if */ // $flow-disable-line\nif (typeof Set !== 'undefined' && isNative(Set)) {\n  // use native Set when available.\n  _Set = Set;\n} else {\n  // a non-standard Set polyfill that only works with primitive keys.\n  _Set = /*@__PURE__*/(function () {\n    function Set () {\n      this.set = Object.create(null);\n    }\n    Set.prototype.has = function has (key) {\n      return this.set[key] === true\n    };\n    Set.prototype.add = function add (key) {\n      this.set[key] = true;\n    };\n    Set.prototype.clear = function clear () {\n      this.set = Object.create(null);\n    };\n\n    return Set;\n  }());\n}\n\n/*  */\n\nvar warn = noop;\nvar tip = noop;\nvar generateComponentTrace = (noop); // work around flow check\nvar formatComponentName = (noop);\n\nif (true) {\n  var hasConsole = typeof console !== 'undefined';\n  var classifyRE = /(?:^|[-_])(\\w)/g;\n  var classify = function (str) { return str\n    .replace(classifyRE, function (c) { return c.toUpperCase(); })\n    .replace(/[-_]/g, ''); };\n\n  warn = function (msg, vm) {\n    var trace = vm ? generateComponentTrace(vm) : '';\n\n    if (config.warnHandler) {\n      config.warnHandler.call(null, msg, vm, trace);\n    } else if (hasConsole && (!config.silent)) {\n      console.error((\"[Vue warn]: \" + msg + trace));\n    }\n  };\n\n  tip = function (msg, vm) {\n    if (hasConsole && (!config.silent)) {\n      console.warn(\"[Vue tip]: \" + msg + (\n        vm ? generateComponentTrace(vm) : ''\n      ));\n    }\n  };\n\n  formatComponentName = function (vm, includeFile) {\n    {\n      if(vm.$scope && vm.$scope.is){\n        return vm.$scope.is\n      }\n    }\n    if (vm.$root === vm) {\n      return '<Root>'\n    }\n    var options = typeof vm === 'function' && vm.cid != null\n      ? vm.options\n      : vm._isVue\n        ? vm.$options || vm.constructor.options\n        : vm;\n    var name = options.name || options._componentTag;\n    var file = options.__file;\n    if (!name && file) {\n      var match = file.match(/([^/\\\\]+)\\.vue$/);\n      name = match && match[1];\n    }\n\n    return (\n      (name ? (\"<\" + (classify(name)) + \">\") : \"<Anonymous>\") +\n      (file && includeFile !== false ? (\" at \" + file) : '')\n    )\n  };\n\n  var repeat = function (str, n) {\n    var res = '';\n    while (n) {\n      if (n % 2 === 1) { res += str; }\n      if (n > 1) { str += str; }\n      n >>= 1;\n    }\n    return res\n  };\n\n  generateComponentTrace = function (vm) {\n    if (vm._isVue && vm.$parent) {\n      var tree = [];\n      var currentRecursiveSequence = 0;\n      while (vm) {\n        if (tree.length > 0) {\n          var last = tree[tree.length - 1];\n          if (last.constructor === vm.constructor) {\n            currentRecursiveSequence++;\n            vm = vm.$parent;\n            continue\n          } else if (currentRecursiveSequence > 0) {\n            tree[tree.length - 1] = [last, currentRecursiveSequence];\n            currentRecursiveSequence = 0;\n          }\n        }\n        tree.push(vm);\n        vm = vm.$parent;\n      }\n      return '\\n\\nfound in\\n\\n' + tree\n        .map(function (vm, i) { return (\"\" + (i === 0 ? '---> ' : repeat(' ', 5 + i * 2)) + (Array.isArray(vm)\n            ? ((formatComponentName(vm[0])) + \"... (\" + (vm[1]) + \" recursive calls)\")\n            : formatComponentName(vm))); })\n        .join('\\n')\n    } else {\n      return (\"\\n\\n(found in \" + (formatComponentName(vm)) + \")\")\n    }\n  };\n}\n\n/*  */\n\nvar uid = 0;\n\n/**\n * A dep is an observable that can have multiple\n * directives subscribing to it.\n */\nvar Dep = function Dep () {\n  // fixed by xxxxxx (nvue vuex)\n  /* eslint-disable no-undef */\n  if(typeof SharedObject !== 'undefined'){\n    this.id = SharedObject.uid++;\n  } else {\n    this.id = uid++;\n  }\n  this.subs = [];\n};\n\nDep.prototype.addSub = function addSub (sub) {\n  this.subs.push(sub);\n};\n\nDep.prototype.removeSub = function removeSub (sub) {\n  remove(this.subs, sub);\n};\n\nDep.prototype.depend = function depend () {\n  if (Dep.SharedObject.target) {\n    Dep.SharedObject.target.addDep(this);\n  }\n};\n\nDep.prototype.notify = function notify () {\n  // stabilize the subscriber list first\n  var subs = this.subs.slice();\n  if ( true && !config.async) {\n    // subs aren't sorted in scheduler if not running async\n    // we need to sort them now to make sure they fire in correct\n    // order\n    subs.sort(function (a, b) { return a.id - b.id; });\n  }\n  for (var i = 0, l = subs.length; i < l; i++) {\n    subs[i].update();\n  }\n};\n\n// The current target watcher being evaluated.\n// This is globally unique because only one watcher\n// can be evaluated at a time.\n// fixed by xxxxxx (nvue shared vuex)\n/* eslint-disable no-undef */\nDep.SharedObject = typeof SharedObject !== 'undefined' ? SharedObject : {};\nDep.SharedObject.target = null;\nDep.SharedObject.targetStack = [];\n\nfunction pushTarget (target) {\n  Dep.SharedObject.targetStack.push(target);\n  Dep.SharedObject.target = target;\n}\n\nfunction popTarget () {\n  Dep.SharedObject.targetStack.pop();\n  Dep.SharedObject.target = Dep.SharedObject.targetStack[Dep.SharedObject.targetStack.length - 1];\n}\n\n/*  */\n\nvar VNode = function VNode (\n  tag,\n  data,\n  children,\n  text,\n  elm,\n  context,\n  componentOptions,\n  asyncFactory\n) {\n  this.tag = tag;\n  this.data = data;\n  this.children = children;\n  this.text = text;\n  this.elm = elm;\n  this.ns = undefined;\n  this.context = context;\n  this.fnContext = undefined;\n  this.fnOptions = undefined;\n  this.fnScopeId = undefined;\n  this.key = data && data.key;\n  this.componentOptions = componentOptions;\n  this.componentInstance = undefined;\n  this.parent = undefined;\n  this.raw = false;\n  this.isStatic = false;\n  this.isRootInsert = true;\n  this.isComment = false;\n  this.isCloned = false;\n  this.isOnce = false;\n  this.asyncFactory = asyncFactory;\n  this.asyncMeta = undefined;\n  this.isAsyncPlaceholder = false;\n};\n\nvar prototypeAccessors = { child: { configurable: true } };\n\n// DEPRECATED: alias for componentInstance for backwards compat.\n/* istanbul ignore next */\nprototypeAccessors.child.get = function () {\n  return this.componentInstance\n};\n\nObject.defineProperties( VNode.prototype, prototypeAccessors );\n\nvar createEmptyVNode = function (text) {\n  if ( text === void 0 ) text = '';\n\n  var node = new VNode();\n  node.text = text;\n  node.isComment = true;\n  return node\n};\n\nfunction createTextVNode (val) {\n  return new VNode(undefined, undefined, undefined, String(val))\n}\n\n// optimized shallow clone\n// used for static nodes and slot nodes because they may be reused across\n// multiple renders, cloning them avoids errors when DOM manipulations rely\n// on their elm reference.\nfunction cloneVNode (vnode) {\n  var cloned = new VNode(\n    vnode.tag,\n    vnode.data,\n    // #7975\n    // clone children array to avoid mutating original in case of cloning\n    // a child.\n    vnode.children && vnode.children.slice(),\n    vnode.text,\n    vnode.elm,\n    vnode.context,\n    vnode.componentOptions,\n    vnode.asyncFactory\n  );\n  cloned.ns = vnode.ns;\n  cloned.isStatic = vnode.isStatic;\n  cloned.key = vnode.key;\n  cloned.isComment = vnode.isComment;\n  cloned.fnContext = vnode.fnContext;\n  cloned.fnOptions = vnode.fnOptions;\n  cloned.fnScopeId = vnode.fnScopeId;\n  cloned.asyncMeta = vnode.asyncMeta;\n  cloned.isCloned = true;\n  return cloned\n}\n\n/*\n * not type checking this file because flow doesn't play well with\n * dynamically accessing methods on Array prototype\n */\n\nvar arrayProto = Array.prototype;\nvar arrayMethods = Object.create(arrayProto);\n\nvar methodsToPatch = [\n  'push',\n  'pop',\n  'shift',\n  'unshift',\n  'splice',\n  'sort',\n  'reverse'\n];\n\n/**\n * Intercept mutating methods and emit events\n */\nmethodsToPatch.forEach(function (method) {\n  // cache original method\n  var original = arrayProto[method];\n  def(arrayMethods, method, function mutator () {\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n    var result = original.apply(this, args);\n    var ob = this.__ob__;\n    var inserted;\n    switch (method) {\n      case 'push':\n      case 'unshift':\n        inserted = args;\n        break\n      case 'splice':\n        inserted = args.slice(2);\n        break\n    }\n    if (inserted) { ob.observeArray(inserted); }\n    // notify change\n    ob.dep.notify();\n    return result\n  });\n});\n\n/*  */\n\nvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\n/**\n * In some cases we may want to disable observation inside a component's\n * update computation.\n */\nvar shouldObserve = true;\n\nfunction toggleObserving (value) {\n  shouldObserve = value;\n}\n\n/**\n * Observer class that is attached to each observed\n * object. Once attached, the observer converts the target\n * object's property keys into getter/setters that\n * collect dependencies and dispatch updates.\n */\nvar Observer = function Observer (value) {\n  this.value = value;\n  this.dep = new Dep();\n  this.vmCount = 0;\n  def(value, '__ob__', this);\n  if (Array.isArray(value)) {\n    if (hasProto) {\n      {// fixed by xxxxxx 微信小程序使用 plugins 之后，数组方法被直接挂载到了数组对象上，需要执行 copyAugment 逻辑\n        if(value.push !== value.__proto__.push){\n          copyAugment(value, arrayMethods, arrayKeys);\n        } else {\n          protoAugment(value, arrayMethods);\n        }\n      }\n    } else {\n      copyAugment(value, arrayMethods, arrayKeys);\n    }\n    this.observeArray(value);\n  } else {\n    this.walk(value);\n  }\n};\n\n/**\n * Walk through all properties and convert them into\n * getter/setters. This method should only be called when\n * value type is Object.\n */\nObserver.prototype.walk = function walk (obj) {\n  var keys = Object.keys(obj);\n  for (var i = 0; i < keys.length; i++) {\n    defineReactive$$1(obj, keys[i]);\n  }\n};\n\n/**\n * Observe a list of Array items.\n */\nObserver.prototype.observeArray = function observeArray (items) {\n  for (var i = 0, l = items.length; i < l; i++) {\n    observe(items[i]);\n  }\n};\n\n// helpers\n\n/**\n * Augment a target Object or Array by intercepting\n * the prototype chain using __proto__\n */\nfunction protoAugment (target, src) {\n  /* eslint-disable no-proto */\n  target.__proto__ = src;\n  /* eslint-enable no-proto */\n}\n\n/**\n * Augment a target Object or Array by defining\n * hidden properties.\n */\n/* istanbul ignore next */\nfunction copyAugment (target, src, keys) {\n  for (var i = 0, l = keys.length; i < l; i++) {\n    var key = keys[i];\n    def(target, key, src[key]);\n  }\n}\n\n/**\n * Attempt to create an observer instance for a value,\n * returns the new observer if successfully observed,\n * or the existing observer if the value already has one.\n */\nfunction observe (value, asRootData) {\n  if (!isObject(value) || value instanceof VNode) {\n    return\n  }\n  var ob;\n  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n    ob = value.__ob__;\n  } else if (\n    shouldObserve &&\n    !isServerRendering() &&\n    (Array.isArray(value) || isPlainObject(value)) &&\n    Object.isExtensible(value) &&\n    !value._isVue\n  ) {\n    ob = new Observer(value);\n  }\n  if (asRootData && ob) {\n    ob.vmCount++;\n  }\n  return ob\n}\n\n/**\n * Define a reactive property on an Object.\n */\nfunction defineReactive$$1 (\n  obj,\n  key,\n  val,\n  customSetter,\n  shallow\n) {\n  var dep = new Dep();\n\n  var property = Object.getOwnPropertyDescriptor(obj, key);\n  if (property && property.configurable === false) {\n    return\n  }\n\n  // cater for pre-defined getter/setters\n  var getter = property && property.get;\n  var setter = property && property.set;\n  if ((!getter || setter) && arguments.length === 2) {\n    val = obj[key];\n  }\n\n  var childOb = !shallow && observe(val);\n  Object.defineProperty(obj, key, {\n    enumerable: true,\n    configurable: true,\n    get: function reactiveGetter () {\n      var value = getter ? getter.call(obj) : val;\n      if (Dep.SharedObject.target) { // fixed by xxxxxx\n        dep.depend();\n        if (childOb) {\n          childOb.dep.depend();\n          if (Array.isArray(value)) {\n            dependArray(value);\n          }\n        }\n      }\n      return value\n    },\n    set: function reactiveSetter (newVal) {\n      var value = getter ? getter.call(obj) : val;\n      /* eslint-disable no-self-compare */\n      if (newVal === value || (newVal !== newVal && value !== value)) {\n        return\n      }\n      /* eslint-enable no-self-compare */\n      if ( true && customSetter) {\n        customSetter();\n      }\n      // #7981: for accessor properties without setter\n      if (getter && !setter) { return }\n      if (setter) {\n        setter.call(obj, newVal);\n      } else {\n        val = newVal;\n      }\n      childOb = !shallow && observe(newVal);\n      dep.notify();\n    }\n  });\n}\n\n/**\n * Set a property on an object. Adds the new property and\n * triggers change notification if the property doesn't\n * already exist.\n */\nfunction set (target, key, val) {\n  if ( true &&\n    (isUndef(target) || isPrimitive(target))\n  ) {\n    warn((\"Cannot set reactive property on undefined, null, or primitive value: \" + ((target))));\n  }\n  if (Array.isArray(target) && isValidArrayIndex(key)) {\n    target.length = Math.max(target.length, key);\n    target.splice(key, 1, val);\n    return val\n  }\n  if (key in target && !(key in Object.prototype)) {\n    target[key] = val;\n    return val\n  }\n  var ob = (target).__ob__;\n  if (target._isVue || (ob && ob.vmCount)) {\n     true && warn(\n      'Avoid adding reactive properties to a Vue instance or its root $data ' +\n      'at runtime - declare it upfront in the data option.'\n    );\n    return val\n  }\n  if (!ob) {\n    target[key] = val;\n    return val\n  }\n  defineReactive$$1(ob.value, key, val);\n  ob.dep.notify();\n  return val\n}\n\n/**\n * Delete a property and trigger change if necessary.\n */\nfunction del (target, key) {\n  if ( true &&\n    (isUndef(target) || isPrimitive(target))\n  ) {\n    warn((\"Cannot delete reactive property on undefined, null, or primitive value: \" + ((target))));\n  }\n  if (Array.isArray(target) && isValidArrayIndex(key)) {\n    target.splice(key, 1);\n    return\n  }\n  var ob = (target).__ob__;\n  if (target._isVue || (ob && ob.vmCount)) {\n     true && warn(\n      'Avoid deleting properties on a Vue instance or its root $data ' +\n      '- just set it to null.'\n    );\n    return\n  }\n  if (!hasOwn(target, key)) {\n    return\n  }\n  delete target[key];\n  if (!ob) {\n    return\n  }\n  ob.dep.notify();\n}\n\n/**\n * Collect dependencies on array elements when the array is touched, since\n * we cannot intercept array element access like property getters.\n */\nfunction dependArray (value) {\n  for (var e = (void 0), i = 0, l = value.length; i < l; i++) {\n    e = value[i];\n    e && e.__ob__ && e.__ob__.dep.depend();\n    if (Array.isArray(e)) {\n      dependArray(e);\n    }\n  }\n}\n\n/*  */\n\n/**\n * Option overwriting strategies are functions that handle\n * how to merge a parent option value and a child option\n * value into the final value.\n */\nvar strats = config.optionMergeStrategies;\n\n/**\n * Options with restrictions\n */\nif (true) {\n  strats.el = strats.propsData = function (parent, child, vm, key) {\n    if (!vm) {\n      warn(\n        \"option \\\"\" + key + \"\\\" can only be used during instance \" +\n        'creation with the `new` keyword.'\n      );\n    }\n    return defaultStrat(parent, child)\n  };\n}\n\n/**\n * Helper that recursively merges two data objects together.\n */\nfunction mergeData (to, from) {\n  if (!from) { return to }\n  var key, toVal, fromVal;\n\n  var keys = hasSymbol\n    ? Reflect.ownKeys(from)\n    : Object.keys(from);\n\n  for (var i = 0; i < keys.length; i++) {\n    key = keys[i];\n    // in case the object is already observed...\n    if (key === '__ob__') { continue }\n    toVal = to[key];\n    fromVal = from[key];\n    if (!hasOwn(to, key)) {\n      set(to, key, fromVal);\n    } else if (\n      toVal !== fromVal &&\n      isPlainObject(toVal) &&\n      isPlainObject(fromVal)\n    ) {\n      mergeData(toVal, fromVal);\n    }\n  }\n  return to\n}\n\n/**\n * Data\n */\nfunction mergeDataOrFn (\n  parentVal,\n  childVal,\n  vm\n) {\n  if (!vm) {\n    // in a Vue.extend merge, both should be functions\n    if (!childVal) {\n      return parentVal\n    }\n    if (!parentVal) {\n      return childVal\n    }\n    // when parentVal & childVal are both present,\n    // we need to return a function that returns the\n    // merged result of both functions... no need to\n    // check if parentVal is a function here because\n    // it has to be a function to pass previous merges.\n    return function mergedDataFn () {\n      return mergeData(\n        typeof childVal === 'function' ? childVal.call(this, this) : childVal,\n        typeof parentVal === 'function' ? parentVal.call(this, this) : parentVal\n      )\n    }\n  } else {\n    return function mergedInstanceDataFn () {\n      // instance merge\n      var instanceData = typeof childVal === 'function'\n        ? childVal.call(vm, vm)\n        : childVal;\n      var defaultData = typeof parentVal === 'function'\n        ? parentVal.call(vm, vm)\n        : parentVal;\n      if (instanceData) {\n        return mergeData(instanceData, defaultData)\n      } else {\n        return defaultData\n      }\n    }\n  }\n}\n\nstrats.data = function (\n  parentVal,\n  childVal,\n  vm\n) {\n  if (!vm) {\n    if (childVal && typeof childVal !== 'function') {\n       true && warn(\n        'The \"data\" option should be a function ' +\n        'that returns a per-instance value in component ' +\n        'definitions.',\n        vm\n      );\n\n      return parentVal\n    }\n    return mergeDataOrFn(parentVal, childVal)\n  }\n\n  return mergeDataOrFn(parentVal, childVal, vm)\n};\n\n/**\n * Hooks and props are merged as arrays.\n */\nfunction mergeHook (\n  parentVal,\n  childVal\n) {\n  var res = childVal\n    ? parentVal\n      ? parentVal.concat(childVal)\n      : Array.isArray(childVal)\n        ? childVal\n        : [childVal]\n    : parentVal;\n  return res\n    ? dedupeHooks(res)\n    : res\n}\n\nfunction dedupeHooks (hooks) {\n  var res = [];\n  for (var i = 0; i < hooks.length; i++) {\n    if (res.indexOf(hooks[i]) === -1) {\n      res.push(hooks[i]);\n    }\n  }\n  return res\n}\n\nLIFECYCLE_HOOKS.forEach(function (hook) {\n  strats[hook] = mergeHook;\n});\n\n/**\n * Assets\n *\n * When a vm is present (instance creation), we need to do\n * a three-way merge between constructor options, instance\n * options and parent options.\n */\nfunction mergeAssets (\n  parentVal,\n  childVal,\n  vm,\n  key\n) {\n  var res = Object.create(parentVal || null);\n  if (childVal) {\n     true && assertObjectType(key, childVal, vm);\n    return extend(res, childVal)\n  } else {\n    return res\n  }\n}\n\nASSET_TYPES.forEach(function (type) {\n  strats[type + 's'] = mergeAssets;\n});\n\n/**\n * Watchers.\n *\n * Watchers hashes should not overwrite one\n * another, so we merge them as arrays.\n */\nstrats.watch = function (\n  parentVal,\n  childVal,\n  vm,\n  key\n) {\n  // work around Firefox's Object.prototype.watch...\n  if (parentVal === nativeWatch) { parentVal = undefined; }\n  if (childVal === nativeWatch) { childVal = undefined; }\n  /* istanbul ignore if */\n  if (!childVal) { return Object.create(parentVal || null) }\n  if (true) {\n    assertObjectType(key, childVal, vm);\n  }\n  if (!parentVal) { return childVal }\n  var ret = {};\n  extend(ret, parentVal);\n  for (var key$1 in childVal) {\n    var parent = ret[key$1];\n    var child = childVal[key$1];\n    if (parent && !Array.isArray(parent)) {\n      parent = [parent];\n    }\n    ret[key$1] = parent\n      ? parent.concat(child)\n      : Array.isArray(child) ? child : [child];\n  }\n  return ret\n};\n\n/**\n * Other object hashes.\n */\nstrats.props =\nstrats.methods =\nstrats.inject =\nstrats.computed = function (\n  parentVal,\n  childVal,\n  vm,\n  key\n) {\n  if (childVal && \"development\" !== 'production') {\n    assertObjectType(key, childVal, vm);\n  }\n  if (!parentVal) { return childVal }\n  var ret = Object.create(null);\n  extend(ret, parentVal);\n  if (childVal) { extend(ret, childVal); }\n  return ret\n};\nstrats.provide = mergeDataOrFn;\n\n/**\n * Default strategy.\n */\nvar defaultStrat = function (parentVal, childVal) {\n  return childVal === undefined\n    ? parentVal\n    : childVal\n};\n\n/**\n * Validate component names\n */\nfunction checkComponents (options) {\n  for (var key in options.components) {\n    validateComponentName(key);\n  }\n}\n\nfunction validateComponentName (name) {\n  if (!new RegExp((\"^[a-zA-Z][\\\\-\\\\.0-9_\" + (unicodeRegExp.source) + \"]*$\")).test(name)) {\n    warn(\n      'Invalid component name: \"' + name + '\". Component names ' +\n      'should conform to valid custom element name in html5 specification.'\n    );\n  }\n  if (isBuiltInTag(name) || config.isReservedTag(name)) {\n    warn(\n      'Do not use built-in or reserved HTML elements as component ' +\n      'id: ' + name\n    );\n  }\n}\n\n/**\n * Ensure all props option syntax are normalized into the\n * Object-based format.\n */\nfunction normalizeProps (options, vm) {\n  var props = options.props;\n  if (!props) { return }\n  var res = {};\n  var i, val, name;\n  if (Array.isArray(props)) {\n    i = props.length;\n    while (i--) {\n      val = props[i];\n      if (typeof val === 'string') {\n        name = camelize(val);\n        res[name] = { type: null };\n      } else if (true) {\n        warn('props must be strings when using array syntax.');\n      }\n    }\n  } else if (isPlainObject(props)) {\n    for (var key in props) {\n      val = props[key];\n      name = camelize(key);\n      res[name] = isPlainObject(val)\n        ? val\n        : { type: val };\n    }\n  } else if (true) {\n    warn(\n      \"Invalid value for option \\\"props\\\": expected an Array or an Object, \" +\n      \"but got \" + (toRawType(props)) + \".\",\n      vm\n    );\n  }\n  options.props = res;\n}\n\n/**\n * Normalize all injections into Object-based format\n */\nfunction normalizeInject (options, vm) {\n  var inject = options.inject;\n  if (!inject) { return }\n  var normalized = options.inject = {};\n  if (Array.isArray(inject)) {\n    for (var i = 0; i < inject.length; i++) {\n      normalized[inject[i]] = { from: inject[i] };\n    }\n  } else if (isPlainObject(inject)) {\n    for (var key in inject) {\n      var val = inject[key];\n      normalized[key] = isPlainObject(val)\n        ? extend({ from: key }, val)\n        : { from: val };\n    }\n  } else if (true) {\n    warn(\n      \"Invalid value for option \\\"inject\\\": expected an Array or an Object, \" +\n      \"but got \" + (toRawType(inject)) + \".\",\n      vm\n    );\n  }\n}\n\n/**\n * Normalize raw function directives into object format.\n */\nfunction normalizeDirectives (options) {\n  var dirs = options.directives;\n  if (dirs) {\n    for (var key in dirs) {\n      var def$$1 = dirs[key];\n      if (typeof def$$1 === 'function') {\n        dirs[key] = { bind: def$$1, update: def$$1 };\n      }\n    }\n  }\n}\n\nfunction assertObjectType (name, value, vm) {\n  if (!isPlainObject(value)) {\n    warn(\n      \"Invalid value for option \\\"\" + name + \"\\\": expected an Object, \" +\n      \"but got \" + (toRawType(value)) + \".\",\n      vm\n    );\n  }\n}\n\n/**\n * Merge two option objects into a new one.\n * Core utility used in both instantiation and inheritance.\n */\nfunction mergeOptions (\n  parent,\n  child,\n  vm\n) {\n  if (true) {\n    checkComponents(child);\n  }\n\n  if (typeof child === 'function') {\n    child = child.options;\n  }\n\n  normalizeProps(child, vm);\n  normalizeInject(child, vm);\n  normalizeDirectives(child);\n\n  // Apply extends and mixins on the child options,\n  // but only if it is a raw options object that isn't\n  // the result of another mergeOptions call.\n  // Only merged options has the _base property.\n  if (!child._base) {\n    if (child.extends) {\n      parent = mergeOptions(parent, child.extends, vm);\n    }\n    if (child.mixins) {\n      for (var i = 0, l = child.mixins.length; i < l; i++) {\n        parent = mergeOptions(parent, child.mixins[i], vm);\n      }\n    }\n  }\n\n  var options = {};\n  var key;\n  for (key in parent) {\n    mergeField(key);\n  }\n  for (key in child) {\n    if (!hasOwn(parent, key)) {\n      mergeField(key);\n    }\n  }\n  function mergeField (key) {\n    var strat = strats[key] || defaultStrat;\n    options[key] = strat(parent[key], child[key], vm, key);\n  }\n  return options\n}\n\n/**\n * Resolve an asset.\n * This function is used because child instances need access\n * to assets defined in its ancestor chain.\n */\nfunction resolveAsset (\n  options,\n  type,\n  id,\n  warnMissing\n) {\n  /* istanbul ignore if */\n  if (typeof id !== 'string') {\n    return\n  }\n  var assets = options[type];\n  // check local registration variations first\n  if (hasOwn(assets, id)) { return assets[id] }\n  var camelizedId = camelize(id);\n  if (hasOwn(assets, camelizedId)) { return assets[camelizedId] }\n  var PascalCaseId = capitalize(camelizedId);\n  if (hasOwn(assets, PascalCaseId)) { return assets[PascalCaseId] }\n  // fallback to prototype chain\n  var res = assets[id] || assets[camelizedId] || assets[PascalCaseId];\n  if ( true && warnMissing && !res) {\n    warn(\n      'Failed to resolve ' + type.slice(0, -1) + ': ' + id,\n      options\n    );\n  }\n  return res\n}\n\n/*  */\n\n\n\nfunction validateProp (\n  key,\n  propOptions,\n  propsData,\n  vm\n) {\n  var prop = propOptions[key];\n  var absent = !hasOwn(propsData, key);\n  var value = propsData[key];\n  // boolean casting\n  var booleanIndex = getTypeIndex(Boolean, prop.type);\n  if (booleanIndex > -1) {\n    if (absent && !hasOwn(prop, 'default')) {\n      value = false;\n    } else if (value === '' || value === hyphenate(key)) {\n      // only cast empty string / same name to boolean if\n      // boolean has higher priority\n      var stringIndex = getTypeIndex(String, prop.type);\n      if (stringIndex < 0 || booleanIndex < stringIndex) {\n        value = true;\n      }\n    }\n  }\n  // check default value\n  if (value === undefined) {\n    value = getPropDefaultValue(vm, prop, key);\n    // since the default value is a fresh copy,\n    // make sure to observe it.\n    var prevShouldObserve = shouldObserve;\n    toggleObserving(true);\n    observe(value);\n    toggleObserving(prevShouldObserve);\n  }\n  if (\n    true\n  ) {\n    assertProp(prop, key, value, vm, absent);\n  }\n  return value\n}\n\n/**\n * Get the default value of a prop.\n */\nfunction getPropDefaultValue (vm, prop, key) {\n  // no default, return undefined\n  if (!hasOwn(prop, 'default')) {\n    return undefined\n  }\n  var def = prop.default;\n  // warn against non-factory defaults for Object & Array\n  if ( true && isObject(def)) {\n    warn(\n      'Invalid default value for prop \"' + key + '\": ' +\n      'Props with type Object/Array must use a factory function ' +\n      'to return the default value.',\n      vm\n    );\n  }\n  // the raw prop value was also undefined from previous render,\n  // return previous default value to avoid unnecessary watcher trigger\n  if (vm && vm.$options.propsData &&\n    vm.$options.propsData[key] === undefined &&\n    vm._props[key] !== undefined\n  ) {\n    return vm._props[key]\n  }\n  // call factory function for non-Function types\n  // a value is Function if its prototype is function even across different execution context\n  return typeof def === 'function' && getType(prop.type) !== 'Function'\n    ? def.call(vm)\n    : def\n}\n\n/**\n * Assert whether a prop is valid.\n */\nfunction assertProp (\n  prop,\n  name,\n  value,\n  vm,\n  absent\n) {\n  if (prop.required && absent) {\n    warn(\n      'Missing required prop: \"' + name + '\"',\n      vm\n    );\n    return\n  }\n  if (value == null && !prop.required) {\n    return\n  }\n  var type = prop.type;\n  var valid = !type || type === true;\n  var expectedTypes = [];\n  if (type) {\n    if (!Array.isArray(type)) {\n      type = [type];\n    }\n    for (var i = 0; i < type.length && !valid; i++) {\n      var assertedType = assertType(value, type[i]);\n      expectedTypes.push(assertedType.expectedType || '');\n      valid = assertedType.valid;\n    }\n  }\n\n  if (!valid) {\n    warn(\n      getInvalidTypeMessage(name, value, expectedTypes),\n      vm\n    );\n    return\n  }\n  var validator = prop.validator;\n  if (validator) {\n    if (!validator(value)) {\n      warn(\n        'Invalid prop: custom validator check failed for prop \"' + name + '\".',\n        vm\n      );\n    }\n  }\n}\n\nvar simpleCheckRE = /^(String|Number|Boolean|Function|Symbol)$/;\n\nfunction assertType (value, type) {\n  var valid;\n  var expectedType = getType(type);\n  if (simpleCheckRE.test(expectedType)) {\n    var t = typeof value;\n    valid = t === expectedType.toLowerCase();\n    // for primitive wrapper objects\n    if (!valid && t === 'object') {\n      valid = value instanceof type;\n    }\n  } else if (expectedType === 'Object') {\n    valid = isPlainObject(value);\n  } else if (expectedType === 'Array') {\n    valid = Array.isArray(value);\n  } else {\n    valid = value instanceof type;\n  }\n  return {\n    valid: valid,\n    expectedType: expectedType\n  }\n}\n\n/**\n * Use function string name to check built-in types,\n * because a simple equality check will fail when running\n * across different vms / iframes.\n */\nfunction getType (fn) {\n  var match = fn && fn.toString().match(/^\\s*function (\\w+)/);\n  return match ? match[1] : ''\n}\n\nfunction isSameType (a, b) {\n  return getType(a) === getType(b)\n}\n\nfunction getTypeIndex (type, expectedTypes) {\n  if (!Array.isArray(expectedTypes)) {\n    return isSameType(expectedTypes, type) ? 0 : -1\n  }\n  for (var i = 0, len = expectedTypes.length; i < len; i++) {\n    if (isSameType(expectedTypes[i], type)) {\n      return i\n    }\n  }\n  return -1\n}\n\nfunction getInvalidTypeMessage (name, value, expectedTypes) {\n  var message = \"Invalid prop: type check failed for prop \\\"\" + name + \"\\\".\" +\n    \" Expected \" + (expectedTypes.map(capitalize).join(', '));\n  var expectedType = expectedTypes[0];\n  var receivedType = toRawType(value);\n  var expectedValue = styleValue(value, expectedType);\n  var receivedValue = styleValue(value, receivedType);\n  // check if we need to specify expected value\n  if (expectedTypes.length === 1 &&\n      isExplicable(expectedType) &&\n      !isBoolean(expectedType, receivedType)) {\n    message += \" with value \" + expectedValue;\n  }\n  message += \", got \" + receivedType + \" \";\n  // check if we need to specify received value\n  if (isExplicable(receivedType)) {\n    message += \"with value \" + receivedValue + \".\";\n  }\n  return message\n}\n\nfunction styleValue (value, type) {\n  if (type === 'String') {\n    return (\"\\\"\" + value + \"\\\"\")\n  } else if (type === 'Number') {\n    return (\"\" + (Number(value)))\n  } else {\n    return (\"\" + value)\n  }\n}\n\nfunction isExplicable (value) {\n  var explicitTypes = ['string', 'number', 'boolean'];\n  return explicitTypes.some(function (elem) { return value.toLowerCase() === elem; })\n}\n\nfunction isBoolean () {\n  var args = [], len = arguments.length;\n  while ( len-- ) args[ len ] = arguments[ len ];\n\n  return args.some(function (elem) { return elem.toLowerCase() === 'boolean'; })\n}\n\n/*  */\n\nfunction handleError (err, vm, info) {\n  // Deactivate deps tracking while processing error handler to avoid possible infinite rendering.\n  // See: https://github.com/vuejs/vuex/issues/1505\n  pushTarget();\n  try {\n    if (vm) {\n      var cur = vm;\n      while ((cur = cur.$parent)) {\n        var hooks = cur.$options.errorCaptured;\n        if (hooks) {\n          for (var i = 0; i < hooks.length; i++) {\n            try {\n              var capture = hooks[i].call(cur, err, vm, info) === false;\n              if (capture) { return }\n            } catch (e) {\n              globalHandleError(e, cur, 'errorCaptured hook');\n            }\n          }\n        }\n      }\n    }\n    globalHandleError(err, vm, info);\n  } finally {\n    popTarget();\n  }\n}\n\nfunction invokeWithErrorHandling (\n  handler,\n  context,\n  args,\n  vm,\n  info\n) {\n  var res;\n  try {\n    res = args ? handler.apply(context, args) : handler.call(context);\n    if (res && !res._isVue && isPromise(res) && !res._handled) {\n      res.catch(function (e) { return handleError(e, vm, info + \" (Promise/async)\"); });\n      // issue #9511\n      // avoid catch triggering multiple times when nested calls\n      res._handled = true;\n    }\n  } catch (e) {\n    handleError(e, vm, info);\n  }\n  return res\n}\n\nfunction globalHandleError (err, vm, info) {\n  if (config.errorHandler) {\n    try {\n      return config.errorHandler.call(null, err, vm, info)\n    } catch (e) {\n      // if the user intentionally throws the original error in the handler,\n      // do not log it twice\n      if (e !== err) {\n        logError(e, null, 'config.errorHandler');\n      }\n    }\n  }\n  logError(err, vm, info);\n}\n\nfunction logError (err, vm, info) {\n  if (true) {\n    warn((\"Error in \" + info + \": \\\"\" + (err.toString()) + \"\\\"\"), vm);\n  }\n  /* istanbul ignore else */\n  if ((inBrowser || inWeex) && typeof console !== 'undefined') {\n    console.error(err);\n  } else {\n    throw err\n  }\n}\n\n/*  */\n\nvar callbacks = [];\nvar pending = false;\n\nfunction flushCallbacks () {\n  pending = false;\n  var copies = callbacks.slice(0);\n  callbacks.length = 0;\n  for (var i = 0; i < copies.length; i++) {\n    copies[i]();\n  }\n}\n\n// Here we have async deferring wrappers using microtasks.\n// In 2.5 we used (macro) tasks (in combination with microtasks).\n// However, it has subtle problems when state is changed right before repaint\n// (e.g. #6813, out-in transitions).\n// Also, using (macro) tasks in event handler would cause some weird behaviors\n// that cannot be circumvented (e.g. #7109, #7153, #7546, #7834, #8109).\n// So we now use microtasks everywhere, again.\n// A major drawback of this tradeoff is that there are some scenarios\n// where microtasks have too high a priority and fire in between supposedly\n// sequential events (e.g. #4521, #6690, which have workarounds)\n// or even between bubbling of the same event (#6566).\nvar timerFunc;\n\n// The nextTick behavior leverages the microtask queue, which can be accessed\n// via either native Promise.then or MutationObserver.\n// MutationObserver has wider support, however it is seriously bugged in\n// UIWebView in iOS >= 9.3.3 when triggered in touch event handlers. It\n// completely stops working after triggering a few times... so, if native\n// Promise is available, we will use it:\n/* istanbul ignore next, $flow-disable-line */\nif (typeof Promise !== 'undefined' && isNative(Promise)) {\n  var p = Promise.resolve();\n  timerFunc = function () {\n    p.then(flushCallbacks);\n    // In problematic UIWebViews, Promise.then doesn't completely break, but\n    // it can get stuck in a weird state where callbacks are pushed into the\n    // microtask queue but the queue isn't being flushed, until the browser\n    // needs to do some other work, e.g. handle a timer. Therefore we can\n    // \"force\" the microtask queue to be flushed by adding an empty timer.\n    if (isIOS) { setTimeout(noop); }\n  };\n} else if (!isIE && typeof MutationObserver !== 'undefined' && (\n  isNative(MutationObserver) ||\n  // PhantomJS and iOS 7.x\n  MutationObserver.toString() === '[object MutationObserverConstructor]'\n)) {\n  // Use MutationObserver where native Promise is not available,\n  // e.g. PhantomJS, iOS7, Android 4.4\n  // (#6466 MutationObserver is unreliable in IE11)\n  var counter = 1;\n  var observer = new MutationObserver(flushCallbacks);\n  var textNode = document.createTextNode(String(counter));\n  observer.observe(textNode, {\n    characterData: true\n  });\n  timerFunc = function () {\n    counter = (counter + 1) % 2;\n    textNode.data = String(counter);\n  };\n} else if (typeof setImmediate !== 'undefined' && isNative(setImmediate)) {\n  // Fallback to setImmediate.\n  // Technically it leverages the (macro) task queue,\n  // but it is still a better choice than setTimeout.\n  timerFunc = function () {\n    setImmediate(flushCallbacks);\n  };\n} else {\n  // Fallback to setTimeout.\n  timerFunc = function () {\n    setTimeout(flushCallbacks, 0);\n  };\n}\n\nfunction nextTick (cb, ctx) {\n  var _resolve;\n  callbacks.push(function () {\n    if (cb) {\n      try {\n        cb.call(ctx);\n      } catch (e) {\n        handleError(e, ctx, 'nextTick');\n      }\n    } else if (_resolve) {\n      _resolve(ctx);\n    }\n  });\n  if (!pending) {\n    pending = true;\n    timerFunc();\n  }\n  // $flow-disable-line\n  if (!cb && typeof Promise !== 'undefined') {\n    return new Promise(function (resolve) {\n      _resolve = resolve;\n    })\n  }\n}\n\n/*  */\n\n/* not type checking this file because flow doesn't play well with Proxy */\n\nvar initProxy;\n\nif (true) {\n  var allowedGlobals = makeMap(\n    'Infinity,undefined,NaN,isFinite,isNaN,' +\n    'parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,' +\n    'Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,' +\n    'require' // for Webpack/Browserify\n  );\n\n  var warnNonPresent = function (target, key) {\n    warn(\n      \"Property or method \\\"\" + key + \"\\\" is not defined on the instance but \" +\n      'referenced during render. Make sure that this property is reactive, ' +\n      'either in the data option, or for class-based components, by ' +\n      'initializing the property. ' +\n      'See: https://vuejs.org/v2/guide/reactivity.html#Declaring-Reactive-Properties.',\n      target\n    );\n  };\n\n  var warnReservedPrefix = function (target, key) {\n    warn(\n      \"Property \\\"\" + key + \"\\\" must be accessed with \\\"$data.\" + key + \"\\\" because \" +\n      'properties starting with \"$\" or \"_\" are not proxied in the Vue instance to ' +\n      'prevent conflicts with Vue internals. ' +\n      'See: https://vuejs.org/v2/api/#data',\n      target\n    );\n  };\n\n  var hasProxy =\n    typeof Proxy !== 'undefined' && isNative(Proxy);\n\n  if (hasProxy) {\n    var isBuiltInModifier = makeMap('stop,prevent,self,ctrl,shift,alt,meta,exact');\n    config.keyCodes = new Proxy(config.keyCodes, {\n      set: function set (target, key, value) {\n        if (isBuiltInModifier(key)) {\n          warn((\"Avoid overwriting built-in modifier in config.keyCodes: .\" + key));\n          return false\n        } else {\n          target[key] = value;\n          return true\n        }\n      }\n    });\n  }\n\n  var hasHandler = {\n    has: function has (target, key) {\n      var has = key in target;\n      var isAllowed = allowedGlobals(key) ||\n        (typeof key === 'string' && key.charAt(0) === '_' && !(key in target.$data));\n      if (!has && !isAllowed) {\n        if (key in target.$data) { warnReservedPrefix(target, key); }\n        else { warnNonPresent(target, key); }\n      }\n      return has || !isAllowed\n    }\n  };\n\n  var getHandler = {\n    get: function get (target, key) {\n      if (typeof key === 'string' && !(key in target)) {\n        if (key in target.$data) { warnReservedPrefix(target, key); }\n        else { warnNonPresent(target, key); }\n      }\n      return target[key]\n    }\n  };\n\n  initProxy = function initProxy (vm) {\n    if (hasProxy) {\n      // determine which proxy handler to use\n      var options = vm.$options;\n      var handlers = options.render && options.render._withStripped\n        ? getHandler\n        : hasHandler;\n      vm._renderProxy = new Proxy(vm, handlers);\n    } else {\n      vm._renderProxy = vm;\n    }\n  };\n}\n\n/*  */\n\nvar seenObjects = new _Set();\n\n/**\n * Recursively traverse an object to evoke all converted\n * getters, so that every nested property inside the object\n * is collected as a \"deep\" dependency.\n */\nfunction traverse (val) {\n  _traverse(val, seenObjects);\n  seenObjects.clear();\n}\n\nfunction _traverse (val, seen) {\n  var i, keys;\n  var isA = Array.isArray(val);\n  if ((!isA && !isObject(val)) || Object.isFrozen(val) || val instanceof VNode) {\n    return\n  }\n  if (val.__ob__) {\n    var depId = val.__ob__.dep.id;\n    if (seen.has(depId)) {\n      return\n    }\n    seen.add(depId);\n  }\n  if (isA) {\n    i = val.length;\n    while (i--) { _traverse(val[i], seen); }\n  } else {\n    keys = Object.keys(val);\n    i = keys.length;\n    while (i--) { _traverse(val[keys[i]], seen); }\n  }\n}\n\nvar mark;\nvar measure;\n\nif (true) {\n  var perf = inBrowser && window.performance;\n  /* istanbul ignore if */\n  if (\n    perf &&\n    perf.mark &&\n    perf.measure &&\n    perf.clearMarks &&\n    perf.clearMeasures\n  ) {\n    mark = function (tag) { return perf.mark(tag); };\n    measure = function (name, startTag, endTag) {\n      perf.measure(name, startTag, endTag);\n      perf.clearMarks(startTag);\n      perf.clearMarks(endTag);\n      // perf.clearMeasures(name)\n    };\n  }\n}\n\n/*  */\n\nvar normalizeEvent = cached(function (name) {\n  var passive = name.charAt(0) === '&';\n  name = passive ? name.slice(1) : name;\n  var once$$1 = name.charAt(0) === '~'; // Prefixed last, checked first\n  name = once$$1 ? name.slice(1) : name;\n  var capture = name.charAt(0) === '!';\n  name = capture ? name.slice(1) : name;\n  return {\n    name: name,\n    once: once$$1,\n    capture: capture,\n    passive: passive\n  }\n});\n\nfunction createFnInvoker (fns, vm) {\n  function invoker () {\n    var arguments$1 = arguments;\n\n    var fns = invoker.fns;\n    if (Array.isArray(fns)) {\n      var cloned = fns.slice();\n      for (var i = 0; i < cloned.length; i++) {\n        invokeWithErrorHandling(cloned[i], null, arguments$1, vm, \"v-on handler\");\n      }\n    } else {\n      // return handler return value for single handlers\n      return invokeWithErrorHandling(fns, null, arguments, vm, \"v-on handler\")\n    }\n  }\n  invoker.fns = fns;\n  return invoker\n}\n\nfunction updateListeners (\n  on,\n  oldOn,\n  add,\n  remove$$1,\n  createOnceHandler,\n  vm\n) {\n  var name, def$$1, cur, old, event;\n  for (name in on) {\n    def$$1 = cur = on[name];\n    old = oldOn[name];\n    event = normalizeEvent(name);\n    if (isUndef(cur)) {\n       true && warn(\n        \"Invalid handler for event \\\"\" + (event.name) + \"\\\": got \" + String(cur),\n        vm\n      );\n    } else if (isUndef(old)) {\n      if (isUndef(cur.fns)) {\n        cur = on[name] = createFnInvoker(cur, vm);\n      }\n      if (isTrue(event.once)) {\n        cur = on[name] = createOnceHandler(event.name, cur, event.capture);\n      }\n      add(event.name, cur, event.capture, event.passive, event.params);\n    } else if (cur !== old) {\n      old.fns = cur;\n      on[name] = old;\n    }\n  }\n  for (name in oldOn) {\n    if (isUndef(on[name])) {\n      event = normalizeEvent(name);\n      remove$$1(event.name, oldOn[name], event.capture);\n    }\n  }\n}\n\n/*  */\n\n/*  */\n\n// fixed by xxxxxx (mp properties)\r\nfunction extractPropertiesFromVNodeData(data, Ctor, res, context) {\r\n  var propOptions = Ctor.options.mpOptions && Ctor.options.mpOptions.properties;\r\n  if (isUndef(propOptions)) {\r\n    return res\r\n  }\n  var externalClasses = Ctor.options.mpOptions.externalClasses || [];\r\n  var attrs = data.attrs;\n  var props = data.props;\r\n  if (isDef(attrs) || isDef(props)) {\r\n    for (var key in propOptions) {\r\n      var altKey = hyphenate(key);\n      var result = checkProp(res, props, key, altKey, true) ||\n          checkProp(res, attrs, key, altKey, false);\n      // externalClass\n      if (\n        result &&\n        res[key] &&\n        externalClasses.indexOf(altKey) !== -1 &&\n        context[camelize(res[key])]\n      ) {\n        // 赋值 externalClass 真正的值(模板里 externalClass 的值可能是字符串)\n        res[key] = context[camelize(res[key])];\n      }\r\n    }\r\n  }\r\n  return res\r\n}\n\nfunction extractPropsFromVNodeData (\n  data,\n  Ctor,\n  tag,\n  context// fixed by xxxxxx\n) {\n  // we are only extracting raw values here.\n  // validation and default values are handled in the child\n  // component itself.\n  var propOptions = Ctor.options.props;\n  if (isUndef(propOptions)) {\n    // fixed by xxxxxx\n    return extractPropertiesFromVNodeData(data, Ctor, {}, context)\n  }\n  var res = {};\n  var attrs = data.attrs;\n  var props = data.props;\n  if (isDef(attrs) || isDef(props)) {\n    for (var key in propOptions) {\n      var altKey = hyphenate(key);\n      if (true) {\n        var keyInLowerCase = key.toLowerCase();\n        if (\n          key !== keyInLowerCase &&\n          attrs && hasOwn(attrs, keyInLowerCase)\n        ) {\n          tip(\n            \"Prop \\\"\" + keyInLowerCase + \"\\\" is passed to component \" +\n            (formatComponentName(tag || Ctor)) + \", but the declared prop name is\" +\n            \" \\\"\" + key + \"\\\". \" +\n            \"Note that HTML attributes are case-insensitive and camelCased \" +\n            \"props need to use their kebab-case equivalents when using in-DOM \" +\n            \"templates. You should probably use \\\"\" + altKey + \"\\\" instead of \\\"\" + key + \"\\\".\"\n          );\n        }\n      }\n      checkProp(res, props, key, altKey, true) ||\n      checkProp(res, attrs, key, altKey, false);\n    }\n  }\n  // fixed by xxxxxx\n  return extractPropertiesFromVNodeData(data, Ctor, res, context)\n}\n\nfunction checkProp (\n  res,\n  hash,\n  key,\n  altKey,\n  preserve\n) {\n  if (isDef(hash)) {\n    if (hasOwn(hash, key)) {\n      res[key] = hash[key];\n      if (!preserve) {\n        delete hash[key];\n      }\n      return true\n    } else if (hasOwn(hash, altKey)) {\n      res[key] = hash[altKey];\n      if (!preserve) {\n        delete hash[altKey];\n      }\n      return true\n    }\n  }\n  return false\n}\n\n/*  */\n\n// The template compiler attempts to minimize the need for normalization by\n// statically analyzing the template at compile time.\n//\n// For plain HTML markup, normalization can be completely skipped because the\n// generated render function is guaranteed to return Array<VNode>. There are\n// two cases where extra normalization is needed:\n\n// 1. When the children contains components - because a functional component\n// may return an Array instead of a single root. In this case, just a simple\n// normalization is needed - if any child is an Array, we flatten the whole\n// thing with Array.prototype.concat. It is guaranteed to be only 1-level deep\n// because functional components already normalize their own children.\nfunction simpleNormalizeChildren (children) {\n  for (var i = 0; i < children.length; i++) {\n    if (Array.isArray(children[i])) {\n      return Array.prototype.concat.apply([], children)\n    }\n  }\n  return children\n}\n\n// 2. When the children contains constructs that always generated nested Arrays,\n// e.g. <template>, <slot>, v-for, or when the children is provided by user\n// with hand-written render functions / JSX. In such cases a full normalization\n// is needed to cater to all possible types of children values.\nfunction normalizeChildren (children) {\n  return isPrimitive(children)\n    ? [createTextVNode(children)]\n    : Array.isArray(children)\n      ? normalizeArrayChildren(children)\n      : undefined\n}\n\nfunction isTextNode (node) {\n  return isDef(node) && isDef(node.text) && isFalse(node.isComment)\n}\n\nfunction normalizeArrayChildren (children, nestedIndex) {\n  var res = [];\n  var i, c, lastIndex, last;\n  for (i = 0; i < children.length; i++) {\n    c = children[i];\n    if (isUndef(c) || typeof c === 'boolean') { continue }\n    lastIndex = res.length - 1;\n    last = res[lastIndex];\n    //  nested\n    if (Array.isArray(c)) {\n      if (c.length > 0) {\n        c = normalizeArrayChildren(c, ((nestedIndex || '') + \"_\" + i));\n        // merge adjacent text nodes\n        if (isTextNode(c[0]) && isTextNode(last)) {\n          res[lastIndex] = createTextVNode(last.text + (c[0]).text);\n          c.shift();\n        }\n        res.push.apply(res, c);\n      }\n    } else if (isPrimitive(c)) {\n      if (isTextNode(last)) {\n        // merge adjacent text nodes\n        // this is necessary for SSR hydration because text nodes are\n        // essentially merged when rendered to HTML strings\n        res[lastIndex] = createTextVNode(last.text + c);\n      } else if (c !== '') {\n        // convert primitive to vnode\n        res.push(createTextVNode(c));\n      }\n    } else {\n      if (isTextNode(c) && isTextNode(last)) {\n        // merge adjacent text nodes\n        res[lastIndex] = createTextVNode(last.text + c.text);\n      } else {\n        // default key for nested array children (likely generated by v-for)\n        if (isTrue(children._isVList) &&\n          isDef(c.tag) &&\n          isUndef(c.key) &&\n          isDef(nestedIndex)) {\n          c.key = \"__vlist\" + nestedIndex + \"_\" + i + \"__\";\n        }\n        res.push(c);\n      }\n    }\n  }\n  return res\n}\n\n/*  */\n\nfunction initProvide (vm) {\n  var provide = vm.$options.provide;\n  if (provide) {\n    vm._provided = typeof provide === 'function'\n      ? provide.call(vm)\n      : provide;\n  }\n}\n\nfunction initInjections (vm) {\n  var result = resolveInject(vm.$options.inject, vm);\n  if (result) {\n    toggleObserving(false);\n    Object.keys(result).forEach(function (key) {\n      /* istanbul ignore else */\n      if (true) {\n        defineReactive$$1(vm, key, result[key], function () {\n          warn(\n            \"Avoid mutating an injected value directly since the changes will be \" +\n            \"overwritten whenever the provided component re-renders. \" +\n            \"injection being mutated: \\\"\" + key + \"\\\"\",\n            vm\n          );\n        });\n      } else {}\n    });\n    toggleObserving(true);\n  }\n}\n\nfunction resolveInject (inject, vm) {\n  if (inject) {\n    // inject is :any because flow is not smart enough to figure out cached\n    var result = Object.create(null);\n    var keys = hasSymbol\n      ? Reflect.ownKeys(inject)\n      : Object.keys(inject);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n      // #6574 in case the inject object is observed...\n      if (key === '__ob__') { continue }\n      var provideKey = inject[key].from;\n      var source = vm;\n      while (source) {\n        if (source._provided && hasOwn(source._provided, provideKey)) {\n          result[key] = source._provided[provideKey];\n          break\n        }\n        source = source.$parent;\n      }\n      if (!source) {\n        if ('default' in inject[key]) {\n          var provideDefault = inject[key].default;\n          result[key] = typeof provideDefault === 'function'\n            ? provideDefault.call(vm)\n            : provideDefault;\n        } else if (true) {\n          warn((\"Injection \\\"\" + key + \"\\\" not found\"), vm);\n        }\n      }\n    }\n    return result\n  }\n}\n\n/*  */\n\n\n\n/**\n * Runtime helper for resolving raw children VNodes into a slot object.\n */\nfunction resolveSlots (\n  children,\n  context\n) {\n  if (!children || !children.length) {\n    return {}\n  }\n  var slots = {};\n  for (var i = 0, l = children.length; i < l; i++) {\n    var child = children[i];\n    var data = child.data;\n    // remove slot attribute if the node is resolved as a Vue slot node\n    if (data && data.attrs && data.attrs.slot) {\n      delete data.attrs.slot;\n    }\n    // named slots should only be respected if the vnode was rendered in the\n    // same context.\n    if ((child.context === context || child.fnContext === context) &&\n      data && data.slot != null\n    ) {\n      var name = data.slot;\n      var slot = (slots[name] || (slots[name] = []));\n      if (child.tag === 'template') {\n        slot.push.apply(slot, child.children || []);\n      } else {\n        slot.push(child);\n      }\n    } else {\n      // fixed by xxxxxx 临时 hack 掉 uni-app 中的异步 name slot page\n      if(child.asyncMeta && child.asyncMeta.data && child.asyncMeta.data.slot === 'page'){\n        (slots['page'] || (slots['page'] = [])).push(child);\n      }else{\n        (slots.default || (slots.default = [])).push(child);\n      }\n    }\n  }\n  // ignore slots that contains only whitespace\n  for (var name$1 in slots) {\n    if (slots[name$1].every(isWhitespace)) {\n      delete slots[name$1];\n    }\n  }\n  return slots\n}\n\nfunction isWhitespace (node) {\n  return (node.isComment && !node.asyncFactory) || node.text === ' '\n}\n\n/*  */\n\nfunction normalizeScopedSlots (\n  slots,\n  normalSlots,\n  prevSlots\n) {\n  var res;\n  var hasNormalSlots = Object.keys(normalSlots).length > 0;\n  var isStable = slots ? !!slots.$stable : !hasNormalSlots;\n  var key = slots && slots.$key;\n  if (!slots) {\n    res = {};\n  } else if (slots._normalized) {\n    // fast path 1: child component re-render only, parent did not change\n    return slots._normalized\n  } else if (\n    isStable &&\n    prevSlots &&\n    prevSlots !== emptyObject &&\n    key === prevSlots.$key &&\n    !hasNormalSlots &&\n    !prevSlots.$hasNormal\n  ) {\n    // fast path 2: stable scoped slots w/ no normal slots to proxy,\n    // only need to normalize once\n    return prevSlots\n  } else {\n    res = {};\n    for (var key$1 in slots) {\n      if (slots[key$1] && key$1[0] !== '$') {\n        res[key$1] = normalizeScopedSlot(normalSlots, key$1, slots[key$1]);\n      }\n    }\n  }\n  // expose normal slots on scopedSlots\n  for (var key$2 in normalSlots) {\n    if (!(key$2 in res)) {\n      res[key$2] = proxyNormalSlot(normalSlots, key$2);\n    }\n  }\n  // avoriaz seems to mock a non-extensible $scopedSlots object\n  // and when that is passed down this would cause an error\n  if (slots && Object.isExtensible(slots)) {\n    (slots)._normalized = res;\n  }\n  def(res, '$stable', isStable);\n  def(res, '$key', key);\n  def(res, '$hasNormal', hasNormalSlots);\n  return res\n}\n\nfunction normalizeScopedSlot(normalSlots, key, fn) {\n  var normalized = function () {\n    var res = arguments.length ? fn.apply(null, arguments) : fn({});\n    res = res && typeof res === 'object' && !Array.isArray(res)\n      ? [res] // single vnode\n      : normalizeChildren(res);\n    return res && (\n      res.length === 0 ||\n      (res.length === 1 && res[0].isComment) // #9658\n    ) ? undefined\n      : res\n  };\n  // this is a slot using the new v-slot syntax without scope. although it is\n  // compiled as a scoped slot, render fn users would expect it to be present\n  // on this.$slots because the usage is semantically a normal slot.\n  if (fn.proxy) {\n    Object.defineProperty(normalSlots, key, {\n      get: normalized,\n      enumerable: true,\n      configurable: true\n    });\n  }\n  return normalized\n}\n\nfunction proxyNormalSlot(slots, key) {\n  return function () { return slots[key]; }\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering v-for lists.\n */\nfunction renderList (\n  val,\n  render\n) {\n  var ret, i, l, keys, key;\n  if (Array.isArray(val) || typeof val === 'string') {\n    ret = new Array(val.length);\n    for (i = 0, l = val.length; i < l; i++) {\n      ret[i] = render(val[i], i, i, i); // fixed by xxxxxx\n    }\n  } else if (typeof val === 'number') {\n    ret = new Array(val);\n    for (i = 0; i < val; i++) {\n      ret[i] = render(i + 1, i, i, i); // fixed by xxxxxx\n    }\n  } else if (isObject(val)) {\n    if (hasSymbol && val[Symbol.iterator]) {\n      ret = [];\n      var iterator = val[Symbol.iterator]();\n      var result = iterator.next();\n      while (!result.done) {\n        ret.push(render(result.value, ret.length, i++, i)); // fixed by xxxxxx\n        result = iterator.next();\n      }\n    } else {\n      keys = Object.keys(val);\n      ret = new Array(keys.length);\n      for (i = 0, l = keys.length; i < l; i++) {\n        key = keys[i];\n        ret[i] = render(val[key], key, i, i); // fixed by xxxxxx\n      }\n    }\n  }\n  if (!isDef(ret)) {\n    ret = [];\n  }\n  (ret)._isVList = true;\n  return ret\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering <slot>\n */\nfunction renderSlot (\n  name,\n  fallback,\n  props,\n  bindObject\n) {\n  var scopedSlotFn = this.$scopedSlots[name];\n  var nodes;\n  if (scopedSlotFn) { // scoped slot\n    props = props || {};\n    if (bindObject) {\n      if ( true && !isObject(bindObject)) {\n        warn(\n          'slot v-bind without argument expects an Object',\n          this\n        );\n      }\n      props = extend(extend({}, bindObject), props);\n    }\n    // fixed by xxxxxx app-plus scopedSlot\n    nodes = scopedSlotFn(props, this, props._i) || fallback;\n  } else {\n    nodes = this.$slots[name] || fallback;\n  }\n\n  var target = props && props.slot;\n  if (target) {\n    return this.$createElement('template', { slot: target }, nodes)\n  } else {\n    return nodes\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for resolving filters\n */\nfunction resolveFilter (id) {\n  return resolveAsset(this.$options, 'filters', id, true) || identity\n}\n\n/*  */\n\nfunction isKeyNotMatch (expect, actual) {\n  if (Array.isArray(expect)) {\n    return expect.indexOf(actual) === -1\n  } else {\n    return expect !== actual\n  }\n}\n\n/**\n * Runtime helper for checking keyCodes from config.\n * exposed as Vue.prototype._k\n * passing in eventKeyName as last argument separately for backwards compat\n */\nfunction checkKeyCodes (\n  eventKeyCode,\n  key,\n  builtInKeyCode,\n  eventKeyName,\n  builtInKeyName\n) {\n  var mappedKeyCode = config.keyCodes[key] || builtInKeyCode;\n  if (builtInKeyName && eventKeyName && !config.keyCodes[key]) {\n    return isKeyNotMatch(builtInKeyName, eventKeyName)\n  } else if (mappedKeyCode) {\n    return isKeyNotMatch(mappedKeyCode, eventKeyCode)\n  } else if (eventKeyName) {\n    return hyphenate(eventKeyName) !== key\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for merging v-bind=\"object\" into a VNode's data.\n */\nfunction bindObjectProps (\n  data,\n  tag,\n  value,\n  asProp,\n  isSync\n) {\n  if (value) {\n    if (!isObject(value)) {\n       true && warn(\n        'v-bind without argument expects an Object or Array value',\n        this\n      );\n    } else {\n      if (Array.isArray(value)) {\n        value = toObject(value);\n      }\n      var hash;\n      var loop = function ( key ) {\n        if (\n          key === 'class' ||\n          key === 'style' ||\n          isReservedAttribute(key)\n        ) {\n          hash = data;\n        } else {\n          var type = data.attrs && data.attrs.type;\n          hash = asProp || config.mustUseProp(tag, type, key)\n            ? data.domProps || (data.domProps = {})\n            : data.attrs || (data.attrs = {});\n        }\n        var camelizedKey = camelize(key);\n        var hyphenatedKey = hyphenate(key);\n        if (!(camelizedKey in hash) && !(hyphenatedKey in hash)) {\n          hash[key] = value[key];\n\n          if (isSync) {\n            var on = data.on || (data.on = {});\n            on[(\"update:\" + key)] = function ($event) {\n              value[key] = $event;\n            };\n          }\n        }\n      };\n\n      for (var key in value) loop( key );\n    }\n  }\n  return data\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering static trees.\n */\nfunction renderStatic (\n  index,\n  isInFor\n) {\n  var cached = this._staticTrees || (this._staticTrees = []);\n  var tree = cached[index];\n  // if has already-rendered static tree and not inside v-for,\n  // we can reuse the same tree.\n  if (tree && !isInFor) {\n    return tree\n  }\n  // otherwise, render a fresh tree.\n  tree = cached[index] = this.$options.staticRenderFns[index].call(\n    this._renderProxy,\n    null,\n    this // for render fns generated for functional component templates\n  );\n  markStatic(tree, (\"__static__\" + index), false);\n  return tree\n}\n\n/**\n * Runtime helper for v-once.\n * Effectively it means marking the node as static with a unique key.\n */\nfunction markOnce (\n  tree,\n  index,\n  key\n) {\n  markStatic(tree, (\"__once__\" + index + (key ? (\"_\" + key) : \"\")), true);\n  return tree\n}\n\nfunction markStatic (\n  tree,\n  key,\n  isOnce\n) {\n  if (Array.isArray(tree)) {\n    for (var i = 0; i < tree.length; i++) {\n      if (tree[i] && typeof tree[i] !== 'string') {\n        markStaticNode(tree[i], (key + \"_\" + i), isOnce);\n      }\n    }\n  } else {\n    markStaticNode(tree, key, isOnce);\n  }\n}\n\nfunction markStaticNode (node, key, isOnce) {\n  node.isStatic = true;\n  node.key = key;\n  node.isOnce = isOnce;\n}\n\n/*  */\n\nfunction bindObjectListeners (data, value) {\n  if (value) {\n    if (!isPlainObject(value)) {\n       true && warn(\n        'v-on without argument expects an Object value',\n        this\n      );\n    } else {\n      var on = data.on = data.on ? extend({}, data.on) : {};\n      for (var key in value) {\n        var existing = on[key];\n        var ours = value[key];\n        on[key] = existing ? [].concat(existing, ours) : ours;\n      }\n    }\n  }\n  return data\n}\n\n/*  */\n\nfunction resolveScopedSlots (\n  fns, // see flow/vnode\n  res,\n  // the following are added in 2.6\n  hasDynamicKeys,\n  contentHashKey\n) {\n  res = res || { $stable: !hasDynamicKeys };\n  for (var i = 0; i < fns.length; i++) {\n    var slot = fns[i];\n    if (Array.isArray(slot)) {\n      resolveScopedSlots(slot, res, hasDynamicKeys);\n    } else if (slot) {\n      // marker for reverse proxying v-slot without scope on this.$slots\n      if (slot.proxy) {\n        slot.fn.proxy = true;\n      }\n      res[slot.key] = slot.fn;\n    }\n  }\n  if (contentHashKey) {\n    (res).$key = contentHashKey;\n  }\n  return res\n}\n\n/*  */\n\nfunction bindDynamicKeys (baseObj, values) {\n  for (var i = 0; i < values.length; i += 2) {\n    var key = values[i];\n    if (typeof key === 'string' && key) {\n      baseObj[values[i]] = values[i + 1];\n    } else if ( true && key !== '' && key !== null) {\n      // null is a special value for explicitly removing a binding\n      warn(\n        (\"Invalid value for dynamic directive argument (expected string or null): \" + key),\n        this\n      );\n    }\n  }\n  return baseObj\n}\n\n// helper to dynamically append modifier runtime markers to event names.\n// ensure only append when value is already string, otherwise it will be cast\n// to string and cause the type check to miss.\nfunction prependModifier (value, symbol) {\n  return typeof value === 'string' ? symbol + value : value\n}\n\n/*  */\n\nfunction installRenderHelpers (target) {\n  target._o = markOnce;\n  target._n = toNumber;\n  target._s = toString;\n  target._l = renderList;\n  target._t = renderSlot;\n  target._q = looseEqual;\n  target._i = looseIndexOf;\n  target._m = renderStatic;\n  target._f = resolveFilter;\n  target._k = checkKeyCodes;\n  target._b = bindObjectProps;\n  target._v = createTextVNode;\n  target._e = createEmptyVNode;\n  target._u = resolveScopedSlots;\n  target._g = bindObjectListeners;\n  target._d = bindDynamicKeys;\n  target._p = prependModifier;\n}\n\n/*  */\n\nfunction FunctionalRenderContext (\n  data,\n  props,\n  children,\n  parent,\n  Ctor\n) {\n  var this$1 = this;\n\n  var options = Ctor.options;\n  // ensure the createElement function in functional components\n  // gets a unique context - this is necessary for correct named slot check\n  var contextVm;\n  if (hasOwn(parent, '_uid')) {\n    contextVm = Object.create(parent);\n    // $flow-disable-line\n    contextVm._original = parent;\n  } else {\n    // the context vm passed in is a functional context as well.\n    // in this case we want to make sure we are able to get a hold to the\n    // real context instance.\n    contextVm = parent;\n    // $flow-disable-line\n    parent = parent._original;\n  }\n  var isCompiled = isTrue(options._compiled);\n  var needNormalization = !isCompiled;\n\n  this.data = data;\n  this.props = props;\n  this.children = children;\n  this.parent = parent;\n  this.listeners = data.on || emptyObject;\n  this.injections = resolveInject(options.inject, parent);\n  this.slots = function () {\n    if (!this$1.$slots) {\n      normalizeScopedSlots(\n        data.scopedSlots,\n        this$1.$slots = resolveSlots(children, parent)\n      );\n    }\n    return this$1.$slots\n  };\n\n  Object.defineProperty(this, 'scopedSlots', ({\n    enumerable: true,\n    get: function get () {\n      return normalizeScopedSlots(data.scopedSlots, this.slots())\n    }\n  }));\n\n  // support for compiled functional template\n  if (isCompiled) {\n    // exposing $options for renderStatic()\n    this.$options = options;\n    // pre-resolve slots for renderSlot()\n    this.$slots = this.slots();\n    this.$scopedSlots = normalizeScopedSlots(data.scopedSlots, this.$slots);\n  }\n\n  if (options._scopeId) {\n    this._c = function (a, b, c, d) {\n      var vnode = createElement(contextVm, a, b, c, d, needNormalization);\n      if (vnode && !Array.isArray(vnode)) {\n        vnode.fnScopeId = options._scopeId;\n        vnode.fnContext = parent;\n      }\n      return vnode\n    };\n  } else {\n    this._c = function (a, b, c, d) { return createElement(contextVm, a, b, c, d, needNormalization); };\n  }\n}\n\ninstallRenderHelpers(FunctionalRenderContext.prototype);\n\nfunction createFunctionalComponent (\n  Ctor,\n  propsData,\n  data,\n  contextVm,\n  children\n) {\n  var options = Ctor.options;\n  var props = {};\n  var propOptions = options.props;\n  if (isDef(propOptions)) {\n    for (var key in propOptions) {\n      props[key] = validateProp(key, propOptions, propsData || emptyObject);\n    }\n  } else {\n    if (isDef(data.attrs)) { mergeProps(props, data.attrs); }\n    if (isDef(data.props)) { mergeProps(props, data.props); }\n  }\n\n  var renderContext = new FunctionalRenderContext(\n    data,\n    props,\n    children,\n    contextVm,\n    Ctor\n  );\n\n  var vnode = options.render.call(null, renderContext._c, renderContext);\n\n  if (vnode instanceof VNode) {\n    return cloneAndMarkFunctionalResult(vnode, data, renderContext.parent, options, renderContext)\n  } else if (Array.isArray(vnode)) {\n    var vnodes = normalizeChildren(vnode) || [];\n    var res = new Array(vnodes.length);\n    for (var i = 0; i < vnodes.length; i++) {\n      res[i] = cloneAndMarkFunctionalResult(vnodes[i], data, renderContext.parent, options, renderContext);\n    }\n    return res\n  }\n}\n\nfunction cloneAndMarkFunctionalResult (vnode, data, contextVm, options, renderContext) {\n  // #7817 clone node before setting fnContext, otherwise if the node is reused\n  // (e.g. it was from a cached normal slot) the fnContext causes named slots\n  // that should not be matched to match.\n  var clone = cloneVNode(vnode);\n  clone.fnContext = contextVm;\n  clone.fnOptions = options;\n  if (true) {\n    (clone.devtoolsMeta = clone.devtoolsMeta || {}).renderContext = renderContext;\n  }\n  if (data.slot) {\n    (clone.data || (clone.data = {})).slot = data.slot;\n  }\n  return clone\n}\n\nfunction mergeProps (to, from) {\n  for (var key in from) {\n    to[camelize(key)] = from[key];\n  }\n}\n\n/*  */\n\n/*  */\n\n/*  */\n\n/*  */\n\n// inline hooks to be invoked on component VNodes during patch\nvar componentVNodeHooks = {\n  init: function init (vnode, hydrating) {\n    if (\n      vnode.componentInstance &&\n      !vnode.componentInstance._isDestroyed &&\n      vnode.data.keepAlive\n    ) {\n      // kept-alive components, treat as a patch\n      var mountedNode = vnode; // work around flow\n      componentVNodeHooks.prepatch(mountedNode, mountedNode);\n    } else {\n      var child = vnode.componentInstance = createComponentInstanceForVnode(\n        vnode,\n        activeInstance\n      );\n      child.$mount(hydrating ? vnode.elm : undefined, hydrating);\n    }\n  },\n\n  prepatch: function prepatch (oldVnode, vnode) {\n    var options = vnode.componentOptions;\n    var child = vnode.componentInstance = oldVnode.componentInstance;\n    updateChildComponent(\n      child,\n      options.propsData, // updated props\n      options.listeners, // updated listeners\n      vnode, // new parent vnode\n      options.children // new children\n    );\n  },\n\n  insert: function insert (vnode) {\n    var context = vnode.context;\n    var componentInstance = vnode.componentInstance;\n    if (!componentInstance._isMounted) {\n      callHook(componentInstance, 'onServiceCreated');\n      callHook(componentInstance, 'onServiceAttached');\n      componentInstance._isMounted = true;\n      callHook(componentInstance, 'mounted');\n    }\n    if (vnode.data.keepAlive) {\n      if (context._isMounted) {\n        // vue-router#1212\n        // During updates, a kept-alive component's child components may\n        // change, so directly walking the tree here may call activated hooks\n        // on incorrect children. Instead we push them into a queue which will\n        // be processed after the whole patch process ended.\n        queueActivatedComponent(componentInstance);\n      } else {\n        activateChildComponent(componentInstance, true /* direct */);\n      }\n    }\n  },\n\n  destroy: function destroy (vnode) {\n    var componentInstance = vnode.componentInstance;\n    if (!componentInstance._isDestroyed) {\n      if (!vnode.data.keepAlive) {\n        componentInstance.$destroy();\n      } else {\n        deactivateChildComponent(componentInstance, true /* direct */);\n      }\n    }\n  }\n};\n\nvar hooksToMerge = Object.keys(componentVNodeHooks);\n\nfunction createComponent (\n  Ctor,\n  data,\n  context,\n  children,\n  tag\n) {\n  if (isUndef(Ctor)) {\n    return\n  }\n\n  var baseCtor = context.$options._base;\n\n  // plain options object: turn it into a constructor\n  if (isObject(Ctor)) {\n    Ctor = baseCtor.extend(Ctor);\n  }\n\n  // if at this stage it's not a constructor or an async component factory,\n  // reject.\n  if (typeof Ctor !== 'function') {\n    if (true) {\n      warn((\"Invalid Component definition: \" + (String(Ctor))), context);\n    }\n    return\n  }\n\n  // async component\n  var asyncFactory;\n  if (isUndef(Ctor.cid)) {\n    asyncFactory = Ctor;\n    Ctor = resolveAsyncComponent(asyncFactory, baseCtor);\n    if (Ctor === undefined) {\n      // return a placeholder node for async component, which is rendered\n      // as a comment node but preserves all the raw information for the node.\n      // the information will be used for async server-rendering and hydration.\n      return createAsyncPlaceholder(\n        asyncFactory,\n        data,\n        context,\n        children,\n        tag\n      )\n    }\n  }\n\n  data = data || {};\n\n  // resolve constructor options in case global mixins are applied after\n  // component constructor creation\n  resolveConstructorOptions(Ctor);\n\n  // transform component v-model data into props & events\n  if (isDef(data.model)) {\n    transformModel(Ctor.options, data);\n  }\n\n  // extract props\n  var propsData = extractPropsFromVNodeData(data, Ctor, tag, context); // fixed by xxxxxx\n\n  // functional component\n  if (isTrue(Ctor.options.functional)) {\n    return createFunctionalComponent(Ctor, propsData, data, context, children)\n  }\n\n  // extract listeners, since these needs to be treated as\n  // child component listeners instead of DOM listeners\n  var listeners = data.on;\n  // replace with listeners with .native modifier\n  // so it gets processed during parent component patch.\n  data.on = data.nativeOn;\n\n  if (isTrue(Ctor.options.abstract)) {\n    // abstract components do not keep anything\n    // other than props & listeners & slot\n\n    // work around flow\n    var slot = data.slot;\n    data = {};\n    if (slot) {\n      data.slot = slot;\n    }\n  }\n\n  // install component management hooks onto the placeholder node\n  installComponentHooks(data);\n\n  // return a placeholder vnode\n  var name = Ctor.options.name || tag;\n  var vnode = new VNode(\n    (\"vue-component-\" + (Ctor.cid) + (name ? (\"-\" + name) : '')),\n    data, undefined, undefined, undefined, context,\n    { Ctor: Ctor, propsData: propsData, listeners: listeners, tag: tag, children: children },\n    asyncFactory\n  );\n\n  return vnode\n}\n\nfunction createComponentInstanceForVnode (\n  vnode, // we know it's MountedComponentVNode but flow doesn't\n  parent // activeInstance in lifecycle state\n) {\n  var options = {\n    _isComponent: true,\n    _parentVnode: vnode,\n    parent: parent\n  };\n  // check inline-template render functions\n  var inlineTemplate = vnode.data.inlineTemplate;\n  if (isDef(inlineTemplate)) {\n    options.render = inlineTemplate.render;\n    options.staticRenderFns = inlineTemplate.staticRenderFns;\n  }\n  return new vnode.componentOptions.Ctor(options)\n}\n\nfunction installComponentHooks (data) {\n  var hooks = data.hook || (data.hook = {});\n  for (var i = 0; i < hooksToMerge.length; i++) {\n    var key = hooksToMerge[i];\n    var existing = hooks[key];\n    var toMerge = componentVNodeHooks[key];\n    if (existing !== toMerge && !(existing && existing._merged)) {\n      hooks[key] = existing ? mergeHook$1(toMerge, existing) : toMerge;\n    }\n  }\n}\n\nfunction mergeHook$1 (f1, f2) {\n  var merged = function (a, b) {\n    // flow complains about extra args which is why we use any\n    f1(a, b);\n    f2(a, b);\n  };\n  merged._merged = true;\n  return merged\n}\n\n// transform component v-model info (value and callback) into\n// prop and event handler respectively.\nfunction transformModel (options, data) {\n  var prop = (options.model && options.model.prop) || 'value';\n  var event = (options.model && options.model.event) || 'input'\n  ;(data.attrs || (data.attrs = {}))[prop] = data.model.value;\n  var on = data.on || (data.on = {});\n  var existing = on[event];\n  var callback = data.model.callback;\n  if (isDef(existing)) {\n    if (\n      Array.isArray(existing)\n        ? existing.indexOf(callback) === -1\n        : existing !== callback\n    ) {\n      on[event] = [callback].concat(existing);\n    }\n  } else {\n    on[event] = callback;\n  }\n}\n\n/*  */\n\nvar SIMPLE_NORMALIZE = 1;\nvar ALWAYS_NORMALIZE = 2;\n\n// wrapper function for providing a more flexible interface\n// without getting yelled at by flow\nfunction createElement (\n  context,\n  tag,\n  data,\n  children,\n  normalizationType,\n  alwaysNormalize\n) {\n  if (Array.isArray(data) || isPrimitive(data)) {\n    normalizationType = children;\n    children = data;\n    data = undefined;\n  }\n  if (isTrue(alwaysNormalize)) {\n    normalizationType = ALWAYS_NORMALIZE;\n  }\n  return _createElement(context, tag, data, children, normalizationType)\n}\n\nfunction _createElement (\n  context,\n  tag,\n  data,\n  children,\n  normalizationType\n) {\n  if (isDef(data) && isDef((data).__ob__)) {\n     true && warn(\n      \"Avoid using observed data object as vnode data: \" + (JSON.stringify(data)) + \"\\n\" +\n      'Always create fresh vnode data objects in each render!',\n      context\n    );\n    return createEmptyVNode()\n  }\n  // object syntax in v-bind\n  if (isDef(data) && isDef(data.is)) {\n    tag = data.is;\n  }\n  if (!tag) {\n    // in case of component :is set to falsy value\n    return createEmptyVNode()\n  }\n  // warn against non-primitive key\n  if ( true &&\n    isDef(data) && isDef(data.key) && !isPrimitive(data.key)\n  ) {\n    {\n      warn(\n        'Avoid using non-primitive value as key, ' +\n        'use string/number value instead.',\n        context\n      );\n    }\n  }\n  // support single function children as default scoped slot\n  if (Array.isArray(children) &&\n    typeof children[0] === 'function'\n  ) {\n    data = data || {};\n    data.scopedSlots = { default: children[0] };\n    children.length = 0;\n  }\n  if (normalizationType === ALWAYS_NORMALIZE) {\n    children = normalizeChildren(children);\n  } else if (normalizationType === SIMPLE_NORMALIZE) {\n    children = simpleNormalizeChildren(children);\n  }\n  var vnode, ns;\n  if (typeof tag === 'string') {\n    var Ctor;\n    ns = (context.$vnode && context.$vnode.ns) || config.getTagNamespace(tag);\n    if (config.isReservedTag(tag)) {\n      // platform built-in elements\n      if ( true && isDef(data) && isDef(data.nativeOn)) {\n        warn(\n          (\"The .native modifier for v-on is only valid on components but it was used on <\" + tag + \">.\"),\n          context\n        );\n      }\n      vnode = new VNode(\n        config.parsePlatformTagName(tag), data, children,\n        undefined, undefined, context\n      );\n    } else if ((!data || !data.pre) && isDef(Ctor = resolveAsset(context.$options, 'components', tag))) {\n      // component\n      vnode = createComponent(Ctor, data, context, children, tag);\n    } else {\n      // unknown or unlisted namespaced elements\n      // check at runtime because it may get assigned a namespace when its\n      // parent normalizes children\n      vnode = new VNode(\n        tag, data, children,\n        undefined, undefined, context\n      );\n    }\n  } else {\n    // direct component options / constructor\n    vnode = createComponent(tag, data, context, children);\n  }\n  if (Array.isArray(vnode)) {\n    return vnode\n  } else if (isDef(vnode)) {\n    if (isDef(ns)) { applyNS(vnode, ns); }\n    if (isDef(data)) { registerDeepBindings(data); }\n    return vnode\n  } else {\n    return createEmptyVNode()\n  }\n}\n\nfunction applyNS (vnode, ns, force) {\n  vnode.ns = ns;\n  if (vnode.tag === 'foreignObject') {\n    // use default namespace inside foreignObject\n    ns = undefined;\n    force = true;\n  }\n  if (isDef(vnode.children)) {\n    for (var i = 0, l = vnode.children.length; i < l; i++) {\n      var child = vnode.children[i];\n      if (isDef(child.tag) && (\n        isUndef(child.ns) || (isTrue(force) && child.tag !== 'svg'))) {\n        applyNS(child, ns, force);\n      }\n    }\n  }\n}\n\n// ref #5318\n// necessary to ensure parent re-render when deep bindings like :style and\n// :class are used on slot nodes\nfunction registerDeepBindings (data) {\n  if (isObject(data.style)) {\n    traverse(data.style);\n  }\n  if (isObject(data.class)) {\n    traverse(data.class);\n  }\n}\n\n/*  */\n\nfunction initRender (vm) {\n  vm._vnode = null; // the root of the child tree\n  vm._staticTrees = null; // v-once cached trees\n  var options = vm.$options;\n  var parentVnode = vm.$vnode = options._parentVnode; // the placeholder node in parent tree\n  var renderContext = parentVnode && parentVnode.context;\n  vm.$slots = resolveSlots(options._renderChildren, renderContext);\n  vm.$scopedSlots = emptyObject;\n  // bind the createElement fn to this instance\n  // so that we get proper render context inside it.\n  // args order: tag, data, children, normalizationType, alwaysNormalize\n  // internal version is used by render functions compiled from templates\n  vm._c = function (a, b, c, d) { return createElement(vm, a, b, c, d, false); };\n  // normalization is always applied for the public version, used in\n  // user-written render functions.\n  vm.$createElement = function (a, b, c, d) { return createElement(vm, a, b, c, d, true); };\n\n  // $attrs & $listeners are exposed for easier HOC creation.\n  // they need to be reactive so that HOCs using them are always updated\n  var parentData = parentVnode && parentVnode.data;\n\n  /* istanbul ignore else */\n  if (true) {\n    defineReactive$$1(vm, '$attrs', parentData && parentData.attrs || emptyObject, function () {\n      !isUpdatingChildComponent && warn(\"$attrs is readonly.\", vm);\n    }, true);\n    defineReactive$$1(vm, '$listeners', options._parentListeners || emptyObject, function () {\n      !isUpdatingChildComponent && warn(\"$listeners is readonly.\", vm);\n    }, true);\n  } else {}\n}\n\nvar currentRenderingInstance = null;\n\nfunction renderMixin (Vue) {\n  // install runtime convenience helpers\n  installRenderHelpers(Vue.prototype);\n\n  Vue.prototype.$nextTick = function (fn) {\n    return nextTick(fn, this)\n  };\n\n  Vue.prototype._render = function () {\n    var vm = this;\n    var ref = vm.$options;\n    var render = ref.render;\n    var _parentVnode = ref._parentVnode;\n\n    if (_parentVnode) {\n      vm.$scopedSlots = normalizeScopedSlots(\n        _parentVnode.data.scopedSlots,\n        vm.$slots,\n        vm.$scopedSlots\n      );\n    }\n\n    // set parent vnode. this allows render functions to have access\n    // to the data on the placeholder node.\n    vm.$vnode = _parentVnode;\n    // render self\n    var vnode;\n    try {\n      // There's no need to maintain a stack because all render fns are called\n      // separately from one another. Nested component's render fns are called\n      // when parent component is patched.\n      currentRenderingInstance = vm;\n      vnode = render.call(vm._renderProxy, vm.$createElement);\n    } catch (e) {\n      handleError(e, vm, \"render\");\n      // return error render result,\n      // or previous vnode to prevent render error causing blank component\n      /* istanbul ignore else */\n      if ( true && vm.$options.renderError) {\n        try {\n          vnode = vm.$options.renderError.call(vm._renderProxy, vm.$createElement, e);\n        } catch (e) {\n          handleError(e, vm, \"renderError\");\n          vnode = vm._vnode;\n        }\n      } else {\n        vnode = vm._vnode;\n      }\n    } finally {\n      currentRenderingInstance = null;\n    }\n    // if the returned array contains only a single node, allow it\n    if (Array.isArray(vnode) && vnode.length === 1) {\n      vnode = vnode[0];\n    }\n    // return empty vnode in case the render function errored out\n    if (!(vnode instanceof VNode)) {\n      if ( true && Array.isArray(vnode)) {\n        warn(\n          'Multiple root nodes returned from render function. Render function ' +\n          'should return a single root node.',\n          vm\n        );\n      }\n      vnode = createEmptyVNode();\n    }\n    // set parent\n    vnode.parent = _parentVnode;\n    return vnode\n  };\n}\n\n/*  */\n\nfunction ensureCtor (comp, base) {\n  if (\n    comp.__esModule ||\n    (hasSymbol && comp[Symbol.toStringTag] === 'Module')\n  ) {\n    comp = comp.default;\n  }\n  return isObject(comp)\n    ? base.extend(comp)\n    : comp\n}\n\nfunction createAsyncPlaceholder (\n  factory,\n  data,\n  context,\n  children,\n  tag\n) {\n  var node = createEmptyVNode();\n  node.asyncFactory = factory;\n  node.asyncMeta = { data: data, context: context, children: children, tag: tag };\n  return node\n}\n\nfunction resolveAsyncComponent (\n  factory,\n  baseCtor\n) {\n  if (isTrue(factory.error) && isDef(factory.errorComp)) {\n    return factory.errorComp\n  }\n\n  if (isDef(factory.resolved)) {\n    return factory.resolved\n  }\n\n  var owner = currentRenderingInstance;\n  if (owner && isDef(factory.owners) && factory.owners.indexOf(owner) === -1) {\n    // already pending\n    factory.owners.push(owner);\n  }\n\n  if (isTrue(factory.loading) && isDef(factory.loadingComp)) {\n    return factory.loadingComp\n  }\n\n  if (owner && !isDef(factory.owners)) {\n    var owners = factory.owners = [owner];\n    var sync = true;\n    var timerLoading = null;\n    var timerTimeout = null\n\n    ;(owner).$on('hook:destroyed', function () { return remove(owners, owner); });\n\n    var forceRender = function (renderCompleted) {\n      for (var i = 0, l = owners.length; i < l; i++) {\n        (owners[i]).$forceUpdate();\n      }\n\n      if (renderCompleted) {\n        owners.length = 0;\n        if (timerLoading !== null) {\n          clearTimeout(timerLoading);\n          timerLoading = null;\n        }\n        if (timerTimeout !== null) {\n          clearTimeout(timerTimeout);\n          timerTimeout = null;\n        }\n      }\n    };\n\n    var resolve = once(function (res) {\n      // cache resolved\n      factory.resolved = ensureCtor(res, baseCtor);\n      // invoke callbacks only if this is not a synchronous resolve\n      // (async resolves are shimmed as synchronous during SSR)\n      if (!sync) {\n        forceRender(true);\n      } else {\n        owners.length = 0;\n      }\n    });\n\n    var reject = once(function (reason) {\n       true && warn(\n        \"Failed to resolve async component: \" + (String(factory)) +\n        (reason ? (\"\\nReason: \" + reason) : '')\n      );\n      if (isDef(factory.errorComp)) {\n        factory.error = true;\n        forceRender(true);\n      }\n    });\n\n    var res = factory(resolve, reject);\n\n    if (isObject(res)) {\n      if (isPromise(res)) {\n        // () => Promise\n        if (isUndef(factory.resolved)) {\n          res.then(resolve, reject);\n        }\n      } else if (isPromise(res.component)) {\n        res.component.then(resolve, reject);\n\n        if (isDef(res.error)) {\n          factory.errorComp = ensureCtor(res.error, baseCtor);\n        }\n\n        if (isDef(res.loading)) {\n          factory.loadingComp = ensureCtor(res.loading, baseCtor);\n          if (res.delay === 0) {\n            factory.loading = true;\n          } else {\n            timerLoading = setTimeout(function () {\n              timerLoading = null;\n              if (isUndef(factory.resolved) && isUndef(factory.error)) {\n                factory.loading = true;\n                forceRender(false);\n              }\n            }, res.delay || 200);\n          }\n        }\n\n        if (isDef(res.timeout)) {\n          timerTimeout = setTimeout(function () {\n            timerTimeout = null;\n            if (isUndef(factory.resolved)) {\n              reject(\n                 true\n                  ? (\"timeout (\" + (res.timeout) + \"ms)\")\n                  : undefined\n              );\n            }\n          }, res.timeout);\n        }\n      }\n    }\n\n    sync = false;\n    // return in case resolved synchronously\n    return factory.loading\n      ? factory.loadingComp\n      : factory.resolved\n  }\n}\n\n/*  */\n\nfunction isAsyncPlaceholder (node) {\n  return node.isComment && node.asyncFactory\n}\n\n/*  */\n\nfunction getFirstComponentChild (children) {\n  if (Array.isArray(children)) {\n    for (var i = 0; i < children.length; i++) {\n      var c = children[i];\n      if (isDef(c) && (isDef(c.componentOptions) || isAsyncPlaceholder(c))) {\n        return c\n      }\n    }\n  }\n}\n\n/*  */\n\n/*  */\n\nfunction initEvents (vm) {\n  vm._events = Object.create(null);\n  vm._hasHookEvent = false;\n  // init parent attached events\n  var listeners = vm.$options._parentListeners;\n  if (listeners) {\n    updateComponentListeners(vm, listeners);\n  }\n}\n\nvar target;\n\nfunction add (event, fn) {\n  target.$on(event, fn);\n}\n\nfunction remove$1 (event, fn) {\n  target.$off(event, fn);\n}\n\nfunction createOnceHandler (event, fn) {\n  var _target = target;\n  return function onceHandler () {\n    var res = fn.apply(null, arguments);\n    if (res !== null) {\n      _target.$off(event, onceHandler);\n    }\n  }\n}\n\nfunction updateComponentListeners (\n  vm,\n  listeners,\n  oldListeners\n) {\n  target = vm;\n  updateListeners(listeners, oldListeners || {}, add, remove$1, createOnceHandler, vm);\n  target = undefined;\n}\n\nfunction eventsMixin (Vue) {\n  var hookRE = /^hook:/;\n  Vue.prototype.$on = function (event, fn) {\n    var vm = this;\n    if (Array.isArray(event)) {\n      for (var i = 0, l = event.length; i < l; i++) {\n        vm.$on(event[i], fn);\n      }\n    } else {\n      (vm._events[event] || (vm._events[event] = [])).push(fn);\n      // optimize hook:event cost by using a boolean flag marked at registration\n      // instead of a hash lookup\n      if (hookRE.test(event)) {\n        vm._hasHookEvent = true;\n      }\n    }\n    return vm\n  };\n\n  Vue.prototype.$once = function (event, fn) {\n    var vm = this;\n    function on () {\n      vm.$off(event, on);\n      fn.apply(vm, arguments);\n    }\n    on.fn = fn;\n    vm.$on(event, on);\n    return vm\n  };\n\n  Vue.prototype.$off = function (event, fn) {\n    var vm = this;\n    // all\n    if (!arguments.length) {\n      vm._events = Object.create(null);\n      return vm\n    }\n    // array of events\n    if (Array.isArray(event)) {\n      for (var i$1 = 0, l = event.length; i$1 < l; i$1++) {\n        vm.$off(event[i$1], fn);\n      }\n      return vm\n    }\n    // specific event\n    var cbs = vm._events[event];\n    if (!cbs) {\n      return vm\n    }\n    if (!fn) {\n      vm._events[event] = null;\n      return vm\n    }\n    // specific handler\n    var cb;\n    var i = cbs.length;\n    while (i--) {\n      cb = cbs[i];\n      if (cb === fn || cb.fn === fn) {\n        cbs.splice(i, 1);\n        break\n      }\n    }\n    return vm\n  };\n\n  Vue.prototype.$emit = function (event) {\n    var vm = this;\n    if (true) {\n      var lowerCaseEvent = event.toLowerCase();\n      if (lowerCaseEvent !== event && vm._events[lowerCaseEvent]) {\n        tip(\n          \"Event \\\"\" + lowerCaseEvent + \"\\\" is emitted in component \" +\n          (formatComponentName(vm)) + \" but the handler is registered for \\\"\" + event + \"\\\". \" +\n          \"Note that HTML attributes are case-insensitive and you cannot use \" +\n          \"v-on to listen to camelCase events when using in-DOM templates. \" +\n          \"You should probably use \\\"\" + (hyphenate(event)) + \"\\\" instead of \\\"\" + event + \"\\\".\"\n        );\n      }\n    }\n    var cbs = vm._events[event];\n    if (cbs) {\n      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n      var args = toArray(arguments, 1);\n      var info = \"event handler for \\\"\" + event + \"\\\"\";\n      for (var i = 0, l = cbs.length; i < l; i++) {\n        invokeWithErrorHandling(cbs[i], vm, args, vm, info);\n      }\n    }\n    return vm\n  };\n}\n\n/*  */\n\nvar activeInstance = null;\nvar isUpdatingChildComponent = false;\n\nfunction setActiveInstance(vm) {\n  var prevActiveInstance = activeInstance;\n  activeInstance = vm;\n  return function () {\n    activeInstance = prevActiveInstance;\n  }\n}\n\nfunction initLifecycle (vm) {\n  var options = vm.$options;\n\n  // locate first non-abstract parent\n  var parent = options.parent;\n  if (parent && !options.abstract) {\n    while (parent.$options.abstract && parent.$parent) {\n      parent = parent.$parent;\n    }\n    parent.$children.push(vm);\n  }\n\n  vm.$parent = parent;\n  vm.$root = parent ? parent.$root : vm;\n\n  vm.$children = [];\n  vm.$refs = {};\n\n  vm._watcher = null;\n  vm._inactive = null;\n  vm._directInactive = false;\n  vm._isMounted = false;\n  vm._isDestroyed = false;\n  vm._isBeingDestroyed = false;\n}\n\nfunction lifecycleMixin (Vue) {\n  Vue.prototype._update = function (vnode, hydrating) {\n    var vm = this;\n    var prevEl = vm.$el;\n    var prevVnode = vm._vnode;\n    var restoreActiveInstance = setActiveInstance(vm);\n    vm._vnode = vnode;\n    // Vue.prototype.__patch__ is injected in entry points\n    // based on the rendering backend used.\n    if (!prevVnode) {\n      // initial render\n      vm.$el = vm.__patch__(vm.$el, vnode, hydrating, false /* removeOnly */);\n    } else {\n      // updates\n      vm.$el = vm.__patch__(prevVnode, vnode);\n    }\n    restoreActiveInstance();\n    // update __vue__ reference\n    if (prevEl) {\n      prevEl.__vue__ = null;\n    }\n    if (vm.$el) {\n      vm.$el.__vue__ = vm;\n    }\n    // if parent is an HOC, update its $el as well\n    if (vm.$vnode && vm.$parent && vm.$vnode === vm.$parent._vnode) {\n      vm.$parent.$el = vm.$el;\n    }\n    // updated hook is called by the scheduler to ensure that children are\n    // updated in a parent's updated hook.\n  };\n\n  Vue.prototype.$forceUpdate = function () {\n    var vm = this;\n    if (vm._watcher) {\n      vm._watcher.update();\n    }\n  };\n\n  Vue.prototype.$destroy = function () {\n    var vm = this;\n    if (vm._isBeingDestroyed) {\n      return\n    }\n    callHook(vm, 'beforeDestroy');\n    vm._isBeingDestroyed = true;\n    // remove self from parent\n    var parent = vm.$parent;\n    if (parent && !parent._isBeingDestroyed && !vm.$options.abstract) {\n      remove(parent.$children, vm);\n    }\n    // teardown watchers\n    if (vm._watcher) {\n      vm._watcher.teardown();\n    }\n    var i = vm._watchers.length;\n    while (i--) {\n      vm._watchers[i].teardown();\n    }\n    // remove reference from data ob\n    // frozen object may not have observer.\n    if (vm._data.__ob__) {\n      vm._data.__ob__.vmCount--;\n    }\n    // call the last hook...\n    vm._isDestroyed = true;\n    // invoke destroy hooks on current rendered tree\n    vm.__patch__(vm._vnode, null);\n    // fire destroyed hook\n    callHook(vm, 'destroyed');\n    // turn off all instance listeners.\n    vm.$off();\n    // remove __vue__ reference\n    if (vm.$el) {\n      vm.$el.__vue__ = null;\n    }\n    // release circular reference (#6759)\n    if (vm.$vnode) {\n      vm.$vnode.parent = null;\n    }\n  };\n}\n\nfunction updateChildComponent (\n  vm,\n  propsData,\n  listeners,\n  parentVnode,\n  renderChildren\n) {\n  if (true) {\n    isUpdatingChildComponent = true;\n  }\n\n  // determine whether component has slot children\n  // we need to do this before overwriting $options._renderChildren.\n\n  // check if there are dynamic scopedSlots (hand-written or compiled but with\n  // dynamic slot names). Static scoped slots compiled from template has the\n  // \"$stable\" marker.\n  var newScopedSlots = parentVnode.data.scopedSlots;\n  var oldScopedSlots = vm.$scopedSlots;\n  var hasDynamicScopedSlot = !!(\n    (newScopedSlots && !newScopedSlots.$stable) ||\n    (oldScopedSlots !== emptyObject && !oldScopedSlots.$stable) ||\n    (newScopedSlots && vm.$scopedSlots.$key !== newScopedSlots.$key)\n  );\n\n  // Any static slot children from the parent may have changed during parent's\n  // update. Dynamic scoped slots may also have changed. In such cases, a forced\n  // update is necessary to ensure correctness.\n  var needsForceUpdate = !!(\n    renderChildren ||               // has new static slots\n    vm.$options._renderChildren ||  // has old static slots\n    hasDynamicScopedSlot\n  );\n\n  vm.$options._parentVnode = parentVnode;\n  vm.$vnode = parentVnode; // update vm's placeholder node without re-render\n\n  if (vm._vnode) { // update child tree's parent\n    vm._vnode.parent = parentVnode;\n  }\n  vm.$options._renderChildren = renderChildren;\n\n  // update $attrs and $listeners hash\n  // these are also reactive so they may trigger child update if the child\n  // used them during render\n  vm.$attrs = parentVnode.data.attrs || emptyObject;\n  vm.$listeners = listeners || emptyObject;\n\n  // update props\n  if (propsData && vm.$options.props) {\n    toggleObserving(false);\n    var props = vm._props;\n    var propKeys = vm.$options._propKeys || [];\n    for (var i = 0; i < propKeys.length; i++) {\n      var key = propKeys[i];\n      var propOptions = vm.$options.props; // wtf flow?\n      props[key] = validateProp(key, propOptions, propsData, vm);\n    }\n    toggleObserving(true);\n    // keep a copy of raw propsData\n    vm.$options.propsData = propsData;\n  }\n  \n  // fixed by xxxxxx update properties(mp runtime)\n  vm._$updateProperties && vm._$updateProperties(vm);\n  \n  // update listeners\n  listeners = listeners || emptyObject;\n  var oldListeners = vm.$options._parentListeners;\n  vm.$options._parentListeners = listeners;\n  updateComponentListeners(vm, listeners, oldListeners);\n\n  // resolve slots + force update if has children\n  if (needsForceUpdate) {\n    vm.$slots = resolveSlots(renderChildren, parentVnode.context);\n    vm.$forceUpdate();\n  }\n\n  if (true) {\n    isUpdatingChildComponent = false;\n  }\n}\n\nfunction isInInactiveTree (vm) {\n  while (vm && (vm = vm.$parent)) {\n    if (vm._inactive) { return true }\n  }\n  return false\n}\n\nfunction activateChildComponent (vm, direct) {\n  if (direct) {\n    vm._directInactive = false;\n    if (isInInactiveTree(vm)) {\n      return\n    }\n  } else if (vm._directInactive) {\n    return\n  }\n  if (vm._inactive || vm._inactive === null) {\n    vm._inactive = false;\n    for (var i = 0; i < vm.$children.length; i++) {\n      activateChildComponent(vm.$children[i]);\n    }\n    callHook(vm, 'activated');\n  }\n}\n\nfunction deactivateChildComponent (vm, direct) {\n  if (direct) {\n    vm._directInactive = true;\n    if (isInInactiveTree(vm)) {\n      return\n    }\n  }\n  if (!vm._inactive) {\n    vm._inactive = true;\n    for (var i = 0; i < vm.$children.length; i++) {\n      deactivateChildComponent(vm.$children[i]);\n    }\n    callHook(vm, 'deactivated');\n  }\n}\n\nfunction callHook (vm, hook) {\n  // #7573 disable dep collection when invoking lifecycle hooks\n  pushTarget();\n  var handlers = vm.$options[hook];\n  var info = hook + \" hook\";\n  if (handlers) {\n    for (var i = 0, j = handlers.length; i < j; i++) {\n      invokeWithErrorHandling(handlers[i], vm, null, vm, info);\n    }\n  }\n  if (vm._hasHookEvent) {\n    vm.$emit('hook:' + hook);\n  }\n  popTarget();\n}\n\n/*  */\n\nvar MAX_UPDATE_COUNT = 100;\n\nvar queue = [];\nvar activatedChildren = [];\nvar has = {};\nvar circular = {};\nvar waiting = false;\nvar flushing = false;\nvar index = 0;\n\n/**\n * Reset the scheduler's state.\n */\nfunction resetSchedulerState () {\n  index = queue.length = activatedChildren.length = 0;\n  has = {};\n  if (true) {\n    circular = {};\n  }\n  waiting = flushing = false;\n}\n\n// Async edge case #6566 requires saving the timestamp when event listeners are\n// attached. However, calling performance.now() has a perf overhead especially\n// if the page has thousands of event listeners. Instead, we take a timestamp\n// every time the scheduler flushes and use that for all event listeners\n// attached during that flush.\nvar currentFlushTimestamp = 0;\n\n// Async edge case fix requires storing an event listener's attach timestamp.\nvar getNow = Date.now;\n\n// Determine what event timestamp the browser is using. Annoyingly, the\n// timestamp can either be hi-res (relative to page load) or low-res\n// (relative to UNIX epoch), so in order to compare time we have to use the\n// same timestamp type when saving the flush timestamp.\n// All IE versions use low-res event timestamps, and have problematic clock\n// implementations (#9632)\nif (inBrowser && !isIE) {\n  var performance = window.performance;\n  if (\n    performance &&\n    typeof performance.now === 'function' &&\n    getNow() > document.createEvent('Event').timeStamp\n  ) {\n    // if the event timestamp, although evaluated AFTER the Date.now(), is\n    // smaller than it, it means the event is using a hi-res timestamp,\n    // and we need to use the hi-res version for event listener timestamps as\n    // well.\n    getNow = function () { return performance.now(); };\n  }\n}\n\n/**\n * Flush both queues and run the watchers.\n */\nfunction flushSchedulerQueue () {\n  currentFlushTimestamp = getNow();\n  flushing = true;\n  var watcher, id;\n\n  // Sort queue before flush.\n  // This ensures that:\n  // 1. Components are updated from parent to child. (because parent is always\n  //    created before the child)\n  // 2. A component's user watchers are run before its render watcher (because\n  //    user watchers are created before the render watcher)\n  // 3. If a component is destroyed during a parent component's watcher run,\n  //    its watchers can be skipped.\n  queue.sort(function (a, b) { return a.id - b.id; });\n\n  // do not cache length because more watchers might be pushed\n  // as we run existing watchers\n  for (index = 0; index < queue.length; index++) {\n    watcher = queue[index];\n    if (watcher.before) {\n      watcher.before();\n    }\n    id = watcher.id;\n    has[id] = null;\n    watcher.run();\n    // in dev build, check and stop circular updates.\n    if ( true && has[id] != null) {\n      circular[id] = (circular[id] || 0) + 1;\n      if (circular[id] > MAX_UPDATE_COUNT) {\n        warn(\n          'You may have an infinite update loop ' + (\n            watcher.user\n              ? (\"in watcher with expression \\\"\" + (watcher.expression) + \"\\\"\")\n              : \"in a component render function.\"\n          ),\n          watcher.vm\n        );\n        break\n      }\n    }\n  }\n\n  // keep copies of post queues before resetting state\n  var activatedQueue = activatedChildren.slice();\n  var updatedQueue = queue.slice();\n\n  resetSchedulerState();\n\n  // call component updated and activated hooks\n  callActivatedHooks(activatedQueue);\n  callUpdatedHooks(updatedQueue);\n\n  // devtool hook\n  /* istanbul ignore if */\n  if (devtools && config.devtools) {\n    devtools.emit('flush');\n  }\n}\n\nfunction callUpdatedHooks (queue) {\n  var i = queue.length;\n  while (i--) {\n    var watcher = queue[i];\n    var vm = watcher.vm;\n    if (vm._watcher === watcher && vm._isMounted && !vm._isDestroyed) {\n      callHook(vm, 'updated');\n    }\n  }\n}\n\n/**\n * Queue a kept-alive component that was activated during patch.\n * The queue will be processed after the entire tree has been patched.\n */\nfunction queueActivatedComponent (vm) {\n  // setting _inactive to false here so that a render function can\n  // rely on checking whether it's in an inactive tree (e.g. router-view)\n  vm._inactive = false;\n  activatedChildren.push(vm);\n}\n\nfunction callActivatedHooks (queue) {\n  for (var i = 0; i < queue.length; i++) {\n    queue[i]._inactive = true;\n    activateChildComponent(queue[i], true /* true */);\n  }\n}\n\n/**\n * Push a watcher into the watcher queue.\n * Jobs with duplicate IDs will be skipped unless it's\n * pushed when the queue is being flushed.\n */\nfunction queueWatcher (watcher) {\n  var id = watcher.id;\n  if (has[id] == null) {\n    has[id] = true;\n    if (!flushing) {\n      queue.push(watcher);\n    } else {\n      // if already flushing, splice the watcher based on its id\n      // if already past its id, it will be run next immediately.\n      var i = queue.length - 1;\n      while (i > index && queue[i].id > watcher.id) {\n        i--;\n      }\n      queue.splice(i + 1, 0, watcher);\n    }\n    // queue the flush\n    if (!waiting) {\n      waiting = true;\n\n      if ( true && !config.async) {\n        flushSchedulerQueue();\n        return\n      }\n      nextTick(flushSchedulerQueue);\n    }\n  }\n}\n\n/*  */\n\n\n\nvar uid$2 = 0;\n\n/**\n * A watcher parses an expression, collects dependencies,\n * and fires callback when the expression value changes.\n * This is used for both the $watch() api and directives.\n */\nvar Watcher = function Watcher (\n  vm,\n  expOrFn,\n  cb,\n  options,\n  isRenderWatcher\n) {\n  this.vm = vm;\n  if (isRenderWatcher) {\n    vm._watcher = this;\n  }\n  vm._watchers.push(this);\n  // options\n  if (options) {\n    this.deep = !!options.deep;\n    this.user = !!options.user;\n    this.lazy = !!options.lazy;\n    this.sync = !!options.sync;\n    this.before = options.before;\n  } else {\n    this.deep = this.user = this.lazy = this.sync = false;\n  }\n  this.cb = cb;\n  this.id = ++uid$2; // uid for batching\n  this.active = true;\n  this.dirty = this.lazy; // for lazy watchers\n  this.deps = [];\n  this.newDeps = [];\n  this.depIds = new _Set();\n  this.newDepIds = new _Set();\n  this.expression =  true\n    ? expOrFn.toString()\n    : undefined;\n  // parse expression for getter\n  if (typeof expOrFn === 'function') {\n    this.getter = expOrFn;\n  } else {\n    this.getter = parsePath(expOrFn);\n    if (!this.getter) {\n      this.getter = noop;\n       true && warn(\n        \"Failed watching path: \\\"\" + expOrFn + \"\\\" \" +\n        'Watcher only accepts simple dot-delimited paths. ' +\n        'For full control, use a function instead.',\n        vm\n      );\n    }\n  }\n  this.value = this.lazy\n    ? undefined\n    : this.get();\n};\n\n/**\n * Evaluate the getter, and re-collect dependencies.\n */\nWatcher.prototype.get = function get () {\n  pushTarget(this);\n  var value;\n  var vm = this.vm;\n  try {\n    value = this.getter.call(vm, vm);\n  } catch (e) {\n    if (this.user) {\n      handleError(e, vm, (\"getter for watcher \\\"\" + (this.expression) + \"\\\"\"));\n    } else {\n      throw e\n    }\n  } finally {\n    // \"touch\" every property so they are all tracked as\n    // dependencies for deep watching\n    if (this.deep) {\n      traverse(value);\n    }\n    popTarget();\n    this.cleanupDeps();\n  }\n  return value\n};\n\n/**\n * Add a dependency to this directive.\n */\nWatcher.prototype.addDep = function addDep (dep) {\n  var id = dep.id;\n  if (!this.newDepIds.has(id)) {\n    this.newDepIds.add(id);\n    this.newDeps.push(dep);\n    if (!this.depIds.has(id)) {\n      dep.addSub(this);\n    }\n  }\n};\n\n/**\n * Clean up for dependency collection.\n */\nWatcher.prototype.cleanupDeps = function cleanupDeps () {\n  var i = this.deps.length;\n  while (i--) {\n    var dep = this.deps[i];\n    if (!this.newDepIds.has(dep.id)) {\n      dep.removeSub(this);\n    }\n  }\n  var tmp = this.depIds;\n  this.depIds = this.newDepIds;\n  this.newDepIds = tmp;\n  this.newDepIds.clear();\n  tmp = this.deps;\n  this.deps = this.newDeps;\n  this.newDeps = tmp;\n  this.newDeps.length = 0;\n};\n\n/**\n * Subscriber interface.\n * Will be called when a dependency changes.\n */\nWatcher.prototype.update = function update () {\n  /* istanbul ignore else */\n  if (this.lazy) {\n    this.dirty = true;\n  } else if (this.sync) {\n    this.run();\n  } else {\n    queueWatcher(this);\n  }\n};\n\n/**\n * Scheduler job interface.\n * Will be called by the scheduler.\n */\nWatcher.prototype.run = function run () {\n  if (this.active) {\n    var value = this.get();\n    if (\n      value !== this.value ||\n      // Deep watchers and watchers on Object/Arrays should fire even\n      // when the value is the same, because the value may\n      // have mutated.\n      isObject(value) ||\n      this.deep\n    ) {\n      // set new value\n      var oldValue = this.value;\n      this.value = value;\n      if (this.user) {\n        try {\n          this.cb.call(this.vm, value, oldValue);\n        } catch (e) {\n          handleError(e, this.vm, (\"callback for watcher \\\"\" + (this.expression) + \"\\\"\"));\n        }\n      } else {\n        this.cb.call(this.vm, value, oldValue);\n      }\n    }\n  }\n};\n\n/**\n * Evaluate the value of the watcher.\n * This only gets called for lazy watchers.\n */\nWatcher.prototype.evaluate = function evaluate () {\n  this.value = this.get();\n  this.dirty = false;\n};\n\n/**\n * Depend on all deps collected by this watcher.\n */\nWatcher.prototype.depend = function depend () {\n  var i = this.deps.length;\n  while (i--) {\n    this.deps[i].depend();\n  }\n};\n\n/**\n * Remove self from all dependencies' subscriber list.\n */\nWatcher.prototype.teardown = function teardown () {\n  if (this.active) {\n    // remove self from vm's watcher list\n    // this is a somewhat expensive operation so we skip it\n    // if the vm is being destroyed.\n    if (!this.vm._isBeingDestroyed) {\n      remove(this.vm._watchers, this);\n    }\n    var i = this.deps.length;\n    while (i--) {\n      this.deps[i].removeSub(this);\n    }\n    this.active = false;\n  }\n};\n\n/*  */\n\nvar sharedPropertyDefinition = {\n  enumerable: true,\n  configurable: true,\n  get: noop,\n  set: noop\n};\n\nfunction proxy (target, sourceKey, key) {\n  sharedPropertyDefinition.get = function proxyGetter () {\n    return this[sourceKey][key]\n  };\n  sharedPropertyDefinition.set = function proxySetter (val) {\n    this[sourceKey][key] = val;\n  };\n  Object.defineProperty(target, key, sharedPropertyDefinition);\n}\n\nfunction initState (vm) {\n  vm._watchers = [];\n  var opts = vm.$options;\n  if (opts.props) { initProps(vm, opts.props); }\n  if (opts.methods) { initMethods(vm, opts.methods); }\n  if (opts.data) {\n    initData(vm);\n  } else {\n    observe(vm._data = {}, true /* asRootData */);\n  }\n  if (opts.computed) { initComputed(vm, opts.computed); }\n  if (opts.watch && opts.watch !== nativeWatch) {\n    initWatch(vm, opts.watch);\n  }\n}\n\nfunction initProps (vm, propsOptions) {\n  var propsData = vm.$options.propsData || {};\n  var props = vm._props = {};\n  // cache prop keys so that future props updates can iterate using Array\n  // instead of dynamic object key enumeration.\n  var keys = vm.$options._propKeys = [];\n  var isRoot = !vm.$parent;\n  // root instance props should be converted\n  if (!isRoot) {\n    toggleObserving(false);\n  }\n  var loop = function ( key ) {\n    keys.push(key);\n    var value = validateProp(key, propsOptions, propsData, vm);\n    /* istanbul ignore else */\n    if (true) {\n      var hyphenatedKey = hyphenate(key);\n      if (isReservedAttribute(hyphenatedKey) ||\n          config.isReservedAttr(hyphenatedKey)) {\n        warn(\n          (\"\\\"\" + hyphenatedKey + \"\\\" is a reserved attribute and cannot be used as component prop.\"),\n          vm\n        );\n      }\n      defineReactive$$1(props, key, value, function () {\n        if (!isRoot && !isUpdatingChildComponent) {\n          {\n            if(vm.mpHost === 'mp-baidu'){//百度 observer 在 setData callback 之后触发，直接忽略该 warn\n                return\n            }\n            //fixed by xxxxxx __next_tick_pending,uni://form-field 时不告警\n            if(\n                key === 'value' && \n                Array.isArray(vm.$options.behaviors) &&\n                vm.$options.behaviors.indexOf('uni://form-field') !== -1\n              ){\n              return\n            }\n            if(vm._getFormData){\n              return\n            }\n            var $parent = vm.$parent;\n            while($parent){\n              if($parent.__next_tick_pending){\n                return  \n              }\n              $parent = $parent.$parent;\n            }\n          }\n          warn(\n            \"Avoid mutating a prop directly since the value will be \" +\n            \"overwritten whenever the parent component re-renders. \" +\n            \"Instead, use a data or computed property based on the prop's \" +\n            \"value. Prop being mutated: \\\"\" + key + \"\\\"\",\n            vm\n          );\n        }\n      });\n    } else {}\n    // static props are already proxied on the component's prototype\n    // during Vue.extend(). We only need to proxy props defined at\n    // instantiation here.\n    if (!(key in vm)) {\n      proxy(vm, \"_props\", key);\n    }\n  };\n\n  for (var key in propsOptions) loop( key );\n  toggleObserving(true);\n}\n\nfunction initData (vm) {\n  var data = vm.$options.data;\n  data = vm._data = typeof data === 'function'\n    ? getData(data, vm)\n    : data || {};\n  if (!isPlainObject(data)) {\n    data = {};\n     true && warn(\n      'data functions should return an object:\\n' +\n      'https://vuejs.org/v2/guide/components.html#data-Must-Be-a-Function',\n      vm\n    );\n  }\n  // proxy data on instance\n  var keys = Object.keys(data);\n  var props = vm.$options.props;\n  var methods = vm.$options.methods;\n  var i = keys.length;\n  while (i--) {\n    var key = keys[i];\n    if (true) {\n      if (methods && hasOwn(methods, key)) {\n        warn(\n          (\"Method \\\"\" + key + \"\\\" has already been defined as a data property.\"),\n          vm\n        );\n      }\n    }\n    if (props && hasOwn(props, key)) {\n       true && warn(\n        \"The data property \\\"\" + key + \"\\\" is already declared as a prop. \" +\n        \"Use prop default value instead.\",\n        vm\n      );\n    } else if (!isReserved(key)) {\n      proxy(vm, \"_data\", key);\n    }\n  }\n  // observe data\n  observe(data, true /* asRootData */);\n}\n\nfunction getData (data, vm) {\n  // #7573 disable dep collection when invoking data getters\n  pushTarget();\n  try {\n    return data.call(vm, vm)\n  } catch (e) {\n    handleError(e, vm, \"data()\");\n    return {}\n  } finally {\n    popTarget();\n  }\n}\n\nvar computedWatcherOptions = { lazy: true };\n\nfunction initComputed (vm, computed) {\n  // $flow-disable-line\n  var watchers = vm._computedWatchers = Object.create(null);\n  // computed properties are just getters during SSR\n  var isSSR = isServerRendering();\n\n  for (var key in computed) {\n    var userDef = computed[key];\n    var getter = typeof userDef === 'function' ? userDef : userDef.get;\n    if ( true && getter == null) {\n      warn(\n        (\"Getter is missing for computed property \\\"\" + key + \"\\\".\"),\n        vm\n      );\n    }\n\n    if (!isSSR) {\n      // create internal watcher for the computed property.\n      watchers[key] = new Watcher(\n        vm,\n        getter || noop,\n        noop,\n        computedWatcherOptions\n      );\n    }\n\n    // component-defined computed properties are already defined on the\n    // component prototype. We only need to define computed properties defined\n    // at instantiation here.\n    if (!(key in vm)) {\n      defineComputed(vm, key, userDef);\n    } else if (true) {\n      if (key in vm.$data) {\n        warn((\"The computed property \\\"\" + key + \"\\\" is already defined in data.\"), vm);\n      } else if (vm.$options.props && key in vm.$options.props) {\n        warn((\"The computed property \\\"\" + key + \"\\\" is already defined as a prop.\"), vm);\n      }\n    }\n  }\n}\n\nfunction defineComputed (\n  target,\n  key,\n  userDef\n) {\n  var shouldCache = !isServerRendering();\n  if (typeof userDef === 'function') {\n    sharedPropertyDefinition.get = shouldCache\n      ? createComputedGetter(key)\n      : createGetterInvoker(userDef);\n    sharedPropertyDefinition.set = noop;\n  } else {\n    sharedPropertyDefinition.get = userDef.get\n      ? shouldCache && userDef.cache !== false\n        ? createComputedGetter(key)\n        : createGetterInvoker(userDef.get)\n      : noop;\n    sharedPropertyDefinition.set = userDef.set || noop;\n  }\n  if ( true &&\n      sharedPropertyDefinition.set === noop) {\n    sharedPropertyDefinition.set = function () {\n      warn(\n        (\"Computed property \\\"\" + key + \"\\\" was assigned to but it has no setter.\"),\n        this\n      );\n    };\n  }\n  Object.defineProperty(target, key, sharedPropertyDefinition);\n}\n\nfunction createComputedGetter (key) {\n  return function computedGetter () {\n    var watcher = this._computedWatchers && this._computedWatchers[key];\n    if (watcher) {\n      if (watcher.dirty) {\n        watcher.evaluate();\n      }\n      if (Dep.SharedObject.target) {// fixed by xxxxxx\n        watcher.depend();\n      }\n      return watcher.value\n    }\n  }\n}\n\nfunction createGetterInvoker(fn) {\n  return function computedGetter () {\n    return fn.call(this, this)\n  }\n}\n\nfunction initMethods (vm, methods) {\n  var props = vm.$options.props;\n  for (var key in methods) {\n    if (true) {\n      if (typeof methods[key] !== 'function') {\n        warn(\n          \"Method \\\"\" + key + \"\\\" has type \\\"\" + (typeof methods[key]) + \"\\\" in the component definition. \" +\n          \"Did you reference the function correctly?\",\n          vm\n        );\n      }\n      if (props && hasOwn(props, key)) {\n        warn(\n          (\"Method \\\"\" + key + \"\\\" has already been defined as a prop.\"),\n          vm\n        );\n      }\n      if ((key in vm) && isReserved(key)) {\n        warn(\n          \"Method \\\"\" + key + \"\\\" conflicts with an existing Vue instance method. \" +\n          \"Avoid defining component methods that start with _ or $.\"\n        );\n      }\n    }\n    vm[key] = typeof methods[key] !== 'function' ? noop : bind(methods[key], vm);\n  }\n}\n\nfunction initWatch (vm, watch) {\n  for (var key in watch) {\n    var handler = watch[key];\n    if (Array.isArray(handler)) {\n      for (var i = 0; i < handler.length; i++) {\n        createWatcher(vm, key, handler[i]);\n      }\n    } else {\n      createWatcher(vm, key, handler);\n    }\n  }\n}\n\nfunction createWatcher (\n  vm,\n  expOrFn,\n  handler,\n  options\n) {\n  if (isPlainObject(handler)) {\n    options = handler;\n    handler = handler.handler;\n  }\n  if (typeof handler === 'string') {\n    handler = vm[handler];\n  }\n  return vm.$watch(expOrFn, handler, options)\n}\n\nfunction stateMixin (Vue) {\n  // flow somehow has problems with directly declared definition object\n  // when using Object.defineProperty, so we have to procedurally build up\n  // the object here.\n  var dataDef = {};\n  dataDef.get = function () { return this._data };\n  var propsDef = {};\n  propsDef.get = function () { return this._props };\n  if (true) {\n    dataDef.set = function () {\n      warn(\n        'Avoid replacing instance root $data. ' +\n        'Use nested data properties instead.',\n        this\n      );\n    };\n    propsDef.set = function () {\n      warn(\"$props is readonly.\", this);\n    };\n  }\n  Object.defineProperty(Vue.prototype, '$data', dataDef);\n  Object.defineProperty(Vue.prototype, '$props', propsDef);\n\n  Vue.prototype.$set = set;\n  Vue.prototype.$delete = del;\n\n  Vue.prototype.$watch = function (\n    expOrFn,\n    cb,\n    options\n  ) {\n    var vm = this;\n    if (isPlainObject(cb)) {\n      return createWatcher(vm, expOrFn, cb, options)\n    }\n    options = options || {};\n    options.user = true;\n    var watcher = new Watcher(vm, expOrFn, cb, options);\n    if (options.immediate) {\n      try {\n        cb.call(vm, watcher.value);\n      } catch (error) {\n        handleError(error, vm, (\"callback for immediate watcher \\\"\" + (watcher.expression) + \"\\\"\"));\n      }\n    }\n    return function unwatchFn () {\n      watcher.teardown();\n    }\n  };\n}\n\n/*  */\n\nvar uid$3 = 0;\n\nfunction initMixin (Vue) {\n  Vue.prototype._init = function (options) {\n    var vm = this;\n    // a uid\n    vm._uid = uid$3++;\n\n    var startTag, endTag;\n    /* istanbul ignore if */\n    if ( true && config.performance && mark) {\n      startTag = \"vue-perf-start:\" + (vm._uid);\n      endTag = \"vue-perf-end:\" + (vm._uid);\n      mark(startTag);\n    }\n\n    // a flag to avoid this being observed\n    vm._isVue = true;\n    // merge options\n    if (options && options._isComponent) {\n      // optimize internal component instantiation\n      // since dynamic options merging is pretty slow, and none of the\n      // internal component options needs special treatment.\n      initInternalComponent(vm, options);\n    } else {\n      vm.$options = mergeOptions(\n        resolveConstructorOptions(vm.constructor),\n        options || {},\n        vm\n      );\n    }\n    /* istanbul ignore else */\n    if (true) {\n      initProxy(vm);\n    } else {}\n    // expose real self\n    vm._self = vm;\n    initLifecycle(vm);\n    initEvents(vm);\n    initRender(vm);\n    callHook(vm, 'beforeCreate');\n    vm.mpHost !== 'mp-toutiao' && initInjections(vm); // resolve injections before data/props  \n    initState(vm);\n    vm.mpHost !== 'mp-toutiao' && initProvide(vm); // resolve provide after data/props\n    vm.mpHost !== 'mp-toutiao' && callHook(vm, 'created');      \n\n    /* istanbul ignore if */\n    if ( true && config.performance && mark) {\n      vm._name = formatComponentName(vm, false);\n      mark(endTag);\n      measure((\"vue \" + (vm._name) + \" init\"), startTag, endTag);\n    }\n\n    if (vm.$options.el) {\n      vm.$mount(vm.$options.el);\n    }\n  };\n}\n\nfunction initInternalComponent (vm, options) {\n  var opts = vm.$options = Object.create(vm.constructor.options);\n  // doing this because it's faster than dynamic enumeration.\n  var parentVnode = options._parentVnode;\n  opts.parent = options.parent;\n  opts._parentVnode = parentVnode;\n\n  var vnodeComponentOptions = parentVnode.componentOptions;\n  opts.propsData = vnodeComponentOptions.propsData;\n  opts._parentListeners = vnodeComponentOptions.listeners;\n  opts._renderChildren = vnodeComponentOptions.children;\n  opts._componentTag = vnodeComponentOptions.tag;\n\n  if (options.render) {\n    opts.render = options.render;\n    opts.staticRenderFns = options.staticRenderFns;\n  }\n}\n\nfunction resolveConstructorOptions (Ctor) {\n  var options = Ctor.options;\n  if (Ctor.super) {\n    var superOptions = resolveConstructorOptions(Ctor.super);\n    var cachedSuperOptions = Ctor.superOptions;\n    if (superOptions !== cachedSuperOptions) {\n      // super option changed,\n      // need to resolve new options.\n      Ctor.superOptions = superOptions;\n      // check if there are any late-modified/attached options (#4976)\n      var modifiedOptions = resolveModifiedOptions(Ctor);\n      // update base extend options\n      if (modifiedOptions) {\n        extend(Ctor.extendOptions, modifiedOptions);\n      }\n      options = Ctor.options = mergeOptions(superOptions, Ctor.extendOptions);\n      if (options.name) {\n        options.components[options.name] = Ctor;\n      }\n    }\n  }\n  return options\n}\n\nfunction resolveModifiedOptions (Ctor) {\n  var modified;\n  var latest = Ctor.options;\n  var sealed = Ctor.sealedOptions;\n  for (var key in latest) {\n    if (latest[key] !== sealed[key]) {\n      if (!modified) { modified = {}; }\n      modified[key] = latest[key];\n    }\n  }\n  return modified\n}\n\nfunction Vue (options) {\n  if ( true &&\n    !(this instanceof Vue)\n  ) {\n    warn('Vue is a constructor and should be called with the `new` keyword');\n  }\n  this._init(options);\n}\n\ninitMixin(Vue);\nstateMixin(Vue);\neventsMixin(Vue);\nlifecycleMixin(Vue);\nrenderMixin(Vue);\n\n/*  */\n\nfunction initUse (Vue) {\n  Vue.use = function (plugin) {\n    var installedPlugins = (this._installedPlugins || (this._installedPlugins = []));\n    if (installedPlugins.indexOf(plugin) > -1) {\n      return this\n    }\n\n    // additional parameters\n    var args = toArray(arguments, 1);\n    args.unshift(this);\n    if (typeof plugin.install === 'function') {\n      plugin.install.apply(plugin, args);\n    } else if (typeof plugin === 'function') {\n      plugin.apply(null, args);\n    }\n    installedPlugins.push(plugin);\n    return this\n  };\n}\n\n/*  */\n\nfunction initMixin$1 (Vue) {\n  Vue.mixin = function (mixin) {\n    this.options = mergeOptions(this.options, mixin);\n    return this\n  };\n}\n\n/*  */\n\nfunction initExtend (Vue) {\n  /**\n   * Each instance constructor, including Vue, has a unique\n   * cid. This enables us to create wrapped \"child\n   * constructors\" for prototypal inheritance and cache them.\n   */\n  Vue.cid = 0;\n  var cid = 1;\n\n  /**\n   * Class inheritance\n   */\n  Vue.extend = function (extendOptions) {\n    extendOptions = extendOptions || {};\n    var Super = this;\n    var SuperId = Super.cid;\n    var cachedCtors = extendOptions._Ctor || (extendOptions._Ctor = {});\n    if (cachedCtors[SuperId]) {\n      return cachedCtors[SuperId]\n    }\n\n    var name = extendOptions.name || Super.options.name;\n    if ( true && name) {\n      validateComponentName(name);\n    }\n\n    var Sub = function VueComponent (options) {\n      this._init(options);\n    };\n    Sub.prototype = Object.create(Super.prototype);\n    Sub.prototype.constructor = Sub;\n    Sub.cid = cid++;\n    Sub.options = mergeOptions(\n      Super.options,\n      extendOptions\n    );\n    Sub['super'] = Super;\n\n    // For props and computed properties, we define the proxy getters on\n    // the Vue instances at extension time, on the extended prototype. This\n    // avoids Object.defineProperty calls for each instance created.\n    if (Sub.options.props) {\n      initProps$1(Sub);\n    }\n    if (Sub.options.computed) {\n      initComputed$1(Sub);\n    }\n\n    // allow further extension/mixin/plugin usage\n    Sub.extend = Super.extend;\n    Sub.mixin = Super.mixin;\n    Sub.use = Super.use;\n\n    // create asset registers, so extended classes\n    // can have their private assets too.\n    ASSET_TYPES.forEach(function (type) {\n      Sub[type] = Super[type];\n    });\n    // enable recursive self-lookup\n    if (name) {\n      Sub.options.components[name] = Sub;\n    }\n\n    // keep a reference to the super options at extension time.\n    // later at instantiation we can check if Super's options have\n    // been updated.\n    Sub.superOptions = Super.options;\n    Sub.extendOptions = extendOptions;\n    Sub.sealedOptions = extend({}, Sub.options);\n\n    // cache constructor\n    cachedCtors[SuperId] = Sub;\n    return Sub\n  };\n}\n\nfunction initProps$1 (Comp) {\n  var props = Comp.options.props;\n  for (var key in props) {\n    proxy(Comp.prototype, \"_props\", key);\n  }\n}\n\nfunction initComputed$1 (Comp) {\n  var computed = Comp.options.computed;\n  for (var key in computed) {\n    defineComputed(Comp.prototype, key, computed[key]);\n  }\n}\n\n/*  */\n\nfunction initAssetRegisters (Vue) {\n  /**\n   * Create asset registration methods.\n   */\n  ASSET_TYPES.forEach(function (type) {\n    Vue[type] = function (\n      id,\n      definition\n    ) {\n      if (!definition) {\n        return this.options[type + 's'][id]\n      } else {\n        /* istanbul ignore if */\n        if ( true && type === 'component') {\n          validateComponentName(id);\n        }\n        if (type === 'component' && isPlainObject(definition)) {\n          definition.name = definition.name || id;\n          definition = this.options._base.extend(definition);\n        }\n        if (type === 'directive' && typeof definition === 'function') {\n          definition = { bind: definition, update: definition };\n        }\n        this.options[type + 's'][id] = definition;\n        return definition\n      }\n    };\n  });\n}\n\n/*  */\n\n\n\nfunction getComponentName (opts) {\n  return opts && (opts.Ctor.options.name || opts.tag)\n}\n\nfunction matches (pattern, name) {\n  if (Array.isArray(pattern)) {\n    return pattern.indexOf(name) > -1\n  } else if (typeof pattern === 'string') {\n    return pattern.split(',').indexOf(name) > -1\n  } else if (isRegExp(pattern)) {\n    return pattern.test(name)\n  }\n  /* istanbul ignore next */\n  return false\n}\n\nfunction pruneCache (keepAliveInstance, filter) {\n  var cache = keepAliveInstance.cache;\n  var keys = keepAliveInstance.keys;\n  var _vnode = keepAliveInstance._vnode;\n  for (var key in cache) {\n    var cachedNode = cache[key];\n    if (cachedNode) {\n      var name = getComponentName(cachedNode.componentOptions);\n      if (name && !filter(name)) {\n        pruneCacheEntry(cache, key, keys, _vnode);\n      }\n    }\n  }\n}\n\nfunction pruneCacheEntry (\n  cache,\n  key,\n  keys,\n  current\n) {\n  var cached$$1 = cache[key];\n  if (cached$$1 && (!current || cached$$1.tag !== current.tag)) {\n    cached$$1.componentInstance.$destroy();\n  }\n  cache[key] = null;\n  remove(keys, key);\n}\n\nvar patternTypes = [String, RegExp, Array];\n\nvar KeepAlive = {\n  name: 'keep-alive',\n  abstract: true,\n\n  props: {\n    include: patternTypes,\n    exclude: patternTypes,\n    max: [String, Number]\n  },\n\n  created: function created () {\n    this.cache = Object.create(null);\n    this.keys = [];\n  },\n\n  destroyed: function destroyed () {\n    for (var key in this.cache) {\n      pruneCacheEntry(this.cache, key, this.keys);\n    }\n  },\n\n  mounted: function mounted () {\n    var this$1 = this;\n\n    this.$watch('include', function (val) {\n      pruneCache(this$1, function (name) { return matches(val, name); });\n    });\n    this.$watch('exclude', function (val) {\n      pruneCache(this$1, function (name) { return !matches(val, name); });\n    });\n  },\n\n  render: function render () {\n    var slot = this.$slots.default;\n    var vnode = getFirstComponentChild(slot);\n    var componentOptions = vnode && vnode.componentOptions;\n    if (componentOptions) {\n      // check pattern\n      var name = getComponentName(componentOptions);\n      var ref = this;\n      var include = ref.include;\n      var exclude = ref.exclude;\n      if (\n        // not included\n        (include && (!name || !matches(include, name))) ||\n        // excluded\n        (exclude && name && matches(exclude, name))\n      ) {\n        return vnode\n      }\n\n      var ref$1 = this;\n      var cache = ref$1.cache;\n      var keys = ref$1.keys;\n      var key = vnode.key == null\n        // same constructor may get registered as different local components\n        // so cid alone is not enough (#3269)\n        ? componentOptions.Ctor.cid + (componentOptions.tag ? (\"::\" + (componentOptions.tag)) : '')\n        : vnode.key;\n      if (cache[key]) {\n        vnode.componentInstance = cache[key].componentInstance;\n        // make current key freshest\n        remove(keys, key);\n        keys.push(key);\n      } else {\n        cache[key] = vnode;\n        keys.push(key);\n        // prune oldest entry\n        if (this.max && keys.length > parseInt(this.max)) {\n          pruneCacheEntry(cache, keys[0], keys, this._vnode);\n        }\n      }\n\n      vnode.data.keepAlive = true;\n    }\n    return vnode || (slot && slot[0])\n  }\n};\n\nvar builtInComponents = {\n  KeepAlive: KeepAlive\n};\n\n/*  */\n\nfunction initGlobalAPI (Vue) {\n  // config\n  var configDef = {};\n  configDef.get = function () { return config; };\n  if (true) {\n    configDef.set = function () {\n      warn(\n        'Do not replace the Vue.config object, set individual fields instead.'\n      );\n    };\n  }\n  Object.defineProperty(Vue, 'config', configDef);\n\n  // exposed util methods.\n  // NOTE: these are not considered part of the public API - avoid relying on\n  // them unless you are aware of the risk.\n  Vue.util = {\n    warn: warn,\n    extend: extend,\n    mergeOptions: mergeOptions,\n    defineReactive: defineReactive$$1\n  };\n\n  Vue.set = set;\n  Vue.delete = del;\n  Vue.nextTick = nextTick;\n\n  // 2.6 explicit observable API\n  Vue.observable = function (obj) {\n    observe(obj);\n    return obj\n  };\n\n  Vue.options = Object.create(null);\n  ASSET_TYPES.forEach(function (type) {\n    Vue.options[type + 's'] = Object.create(null);\n  });\n\n  // this is used to identify the \"base\" constructor to extend all plain-object\n  // components with in Weex's multi-instance scenarios.\n  Vue.options._base = Vue;\n\n  extend(Vue.options.components, builtInComponents);\n\n  initUse(Vue);\n  initMixin$1(Vue);\n  initExtend(Vue);\n  initAssetRegisters(Vue);\n}\n\ninitGlobalAPI(Vue);\n\nObject.defineProperty(Vue.prototype, '$isServer', {\n  get: isServerRendering\n});\n\nObject.defineProperty(Vue.prototype, '$ssrContext', {\n  get: function get () {\n    /* istanbul ignore next */\n    return this.$vnode && this.$vnode.ssrContext\n  }\n});\n\n// expose FunctionalRenderContext for ssr runtime helper installation\nObject.defineProperty(Vue, 'FunctionalRenderContext', {\n  value: FunctionalRenderContext\n});\n\nVue.version = '2.6.11';\n\n/**\n * https://raw.githubusercontent.com/Tencent/westore/master/packages/westore/utils/diff.js\n */\nvar ARRAYTYPE = '[object Array]';\nvar OBJECTTYPE = '[object Object]';\n// const FUNCTIONTYPE = '[object Function]'\n\nfunction diff(current, pre) {\n    var result = {};\n    syncKeys(current, pre);\n    _diff(current, pre, '', result);\n    return result\n}\n\nfunction syncKeys(current, pre) {\n    if (current === pre) { return }\n    var rootCurrentType = type(current);\n    var rootPreType = type(pre);\n    if (rootCurrentType == OBJECTTYPE && rootPreType == OBJECTTYPE) {\n        if(Object.keys(current).length >= Object.keys(pre).length){\n            for (var key in pre) {\n                var currentValue = current[key];\n                if (currentValue === undefined) {\n                    current[key] = null;\n                } else {\n                    syncKeys(currentValue, pre[key]);\n                }\n            }\n        }\n    } else if (rootCurrentType == ARRAYTYPE && rootPreType == ARRAYTYPE) {\n        if (current.length >= pre.length) {\n            pre.forEach(function (item, index) {\n                syncKeys(current[index], item);\n            });\n        }\n    }\n}\n\nfunction _diff(current, pre, path, result) {\n    if (current === pre) { return }\n    var rootCurrentType = type(current);\n    var rootPreType = type(pre);\n    if (rootCurrentType == OBJECTTYPE) {\n        if (rootPreType != OBJECTTYPE || Object.keys(current).length < Object.keys(pre).length) {\n            setResult(result, path, current);\n        } else {\n            var loop = function ( key ) {\n                var currentValue = current[key];\n                var preValue = pre[key];\n                var currentType = type(currentValue);\n                var preType = type(preValue);\n                if (currentType != ARRAYTYPE && currentType != OBJECTTYPE) {\n                    if (currentValue != pre[key]) {\n                        setResult(result, (path == '' ? '' : path + \".\") + key, currentValue);\n                    }\n                } else if (currentType == ARRAYTYPE) {\n                    if (preType != ARRAYTYPE) {\n                        setResult(result, (path == '' ? '' : path + \".\") + key, currentValue);\n                    } else {\n                        if (currentValue.length < preValue.length) {\n                            setResult(result, (path == '' ? '' : path + \".\") + key, currentValue);\n                        } else {\n                            currentValue.forEach(function (item, index) {\n                                _diff(item, preValue[index], (path == '' ? '' : path + \".\") + key + '[' + index + ']', result);\n                            });\n                        }\n                    }\n                } else if (currentType == OBJECTTYPE) {\n                    if (preType != OBJECTTYPE || Object.keys(currentValue).length < Object.keys(preValue).length) {\n                        setResult(result, (path == '' ? '' : path + \".\") + key, currentValue);\n                    } else {\n                        for (var subKey in currentValue) {\n                            _diff(currentValue[subKey], preValue[subKey], (path == '' ? '' : path + \".\") + key + '.' + subKey, result);\n                        }\n                    }\n                }\n            };\n\n            for (var key in current) loop( key );\n        }\n    } else if (rootCurrentType == ARRAYTYPE) {\n        if (rootPreType != ARRAYTYPE) {\n            setResult(result, path, current);\n        } else {\n            if (current.length < pre.length) {\n                setResult(result, path, current);\n            } else {\n                current.forEach(function (item, index) {\n                    _diff(item, pre[index], path + '[' + index + ']', result);\n                });\n            }\n        }\n    } else {\n        setResult(result, path, current);\n    }\n}\n\nfunction setResult(result, k, v) {\n    // if (type(v) != FUNCTIONTYPE) {\n        result[k] = v;\n    // }\n}\n\nfunction type(obj) {\n    return Object.prototype.toString.call(obj)\n}\n\n/*  */\r\n\r\nfunction flushCallbacks$1(vm) {\r\n    if (vm.__next_tick_callbacks && vm.__next_tick_callbacks.length) {\r\n        if (Object({\"VUE_APP_PLATFORM\":\"app-plus\",\"NODE_ENV\":\"development\",\"BASE_URL\":\"/\"}).VUE_APP_DEBUG) {\r\n            var mpInstance = vm.$scope;\r\n            console.log('[' + (+new Date) + '][' + (mpInstance.is || mpInstance.route) + '][' + vm._uid +\r\n                ']:flushCallbacks[' + vm.__next_tick_callbacks.length + ']');\r\n        }\r\n        var copies = vm.__next_tick_callbacks.slice(0);\r\n        vm.__next_tick_callbacks.length = 0;\r\n        for (var i = 0; i < copies.length; i++) {\r\n            copies[i]();\r\n        }\r\n    }\r\n}\r\n\r\nfunction hasRenderWatcher(vm) {\r\n    return queue.find(function (watcher) { return vm._watcher === watcher; })\r\n}\r\n\r\nfunction nextTick$1(vm, cb) {\r\n    //1.nextTick 之前 已 setData 且 setData 还未回调完成\r\n    //2.nextTick 之前存在 render watcher\r\n    if (!vm.__next_tick_pending && !hasRenderWatcher(vm)) {\n        if(Object({\"VUE_APP_PLATFORM\":\"app-plus\",\"NODE_ENV\":\"development\",\"BASE_URL\":\"/\"}).VUE_APP_DEBUG){\n            var mpInstance = vm.$scope;\n            console.log('[' + (+new Date) + '][' + (mpInstance.is || mpInstance.route) + '][' + vm._uid +\n                ']:nextVueTick');\n        }\r\n        return nextTick(cb, vm)\r\n    }else{\n        if(Object({\"VUE_APP_PLATFORM\":\"app-plus\",\"NODE_ENV\":\"development\",\"BASE_URL\":\"/\"}).VUE_APP_DEBUG){\n            var mpInstance$1 = vm.$scope;\n            console.log('[' + (+new Date) + '][' + (mpInstance$1.is || mpInstance$1.route) + '][' + vm._uid +\n                ']:nextMPTick');\n        }\n    }\r\n    var _resolve;\r\n    if (!vm.__next_tick_callbacks) {\r\n        vm.__next_tick_callbacks = [];\r\n    }\r\n    vm.__next_tick_callbacks.push(function () {\r\n        if (cb) {\r\n            try {\r\n                cb.call(vm);\r\n            } catch (e) {\r\n                handleError(e, vm, 'nextTick');\r\n            }\r\n        } else if (_resolve) {\r\n            _resolve(vm);\r\n        }\r\n    });\r\n    // $flow-disable-line\r\n    if (!cb && typeof Promise !== 'undefined') {\r\n        return new Promise(function (resolve) {\r\n            _resolve = resolve;\r\n        })\r\n    }\r\n}\n\n/*  */\r\n\r\nfunction cloneWithData(vm) {\r\n  // 确保当前 vm 所有数据被同步\r\n  var ret = Object.create(null);\r\n  var dataKeys = [].concat(\r\n    Object.keys(vm._data || {}),\r\n    Object.keys(vm._computedWatchers || {}));\r\n\r\n  dataKeys.reduce(function(ret, key) {\r\n    ret[key] = vm[key];\r\n    return ret\r\n  }, ret);\r\n  //TODO 需要把无用数据处理掉，比如 list=>l0 则 list 需要移除，否则多传输一份数据\r\n  Object.assign(ret, vm.$mp.data || {});\r\n  if (\r\n    Array.isArray(vm.$options.behaviors) &&\r\n    vm.$options.behaviors.indexOf('uni://form-field') !== -1\r\n  ) { //form-field\r\n    ret['name'] = vm.name;\r\n    ret['value'] = vm.value;\r\n  }\r\n\r\n  return JSON.parse(JSON.stringify(ret))\r\n}\r\n\r\nvar patch = function(oldVnode, vnode) {\n  var this$1 = this;\n\r\n  if (vnode === null) { //destroy\r\n    return\r\n  }\r\n  if (this.mpType === 'page' || this.mpType === 'component') {\r\n    var mpInstance = this.$scope;\r\n    var data = Object.create(null);\r\n    try {\r\n      data = cloneWithData(this);\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n    data.__webviewId__ = mpInstance.data.__webviewId__;\r\n    var mpData = Object.create(null);\r\n    Object.keys(data).forEach(function (key) { //仅同步 data 中有的数据\r\n      mpData[key] = mpInstance.data[key];\r\n    });\r\n    var diffData = diff(data, mpData);\r\n    if (Object.keys(diffData).length) {\r\n      if (Object({\"VUE_APP_PLATFORM\":\"app-plus\",\"NODE_ENV\":\"development\",\"BASE_URL\":\"/\"}).VUE_APP_DEBUG) {\r\n        console.log('[' + (+new Date) + '][' + (mpInstance.is || mpInstance.route) + '][' + this._uid +\r\n          ']差量更新',\r\n          JSON.stringify(diffData));\r\n      }\r\n      this.__next_tick_pending = true;\r\n      mpInstance.setData(diffData, function () {\r\n        this$1.__next_tick_pending = false;\r\n        flushCallbacks$1(this$1);\r\n      });\r\n    } else {\r\n      flushCallbacks$1(this);\r\n    }\r\n  }\r\n};\n\n/*  */\n\nfunction createEmptyRender() {\n\n}\n\nfunction mountComponent$1(\n  vm,\n  el,\n  hydrating\n) {\n  if (!vm.mpType) {//main.js 中的 new Vue\n    return vm\n  }\n  if (vm.mpType === 'app') {\n    vm.$options.render = createEmptyRender;\n  }\n  if (!vm.$options.render) {\n    vm.$options.render = createEmptyRender;\n    if (true) {\n      /* istanbul ignore if */\n      if ((vm.$options.template && vm.$options.template.charAt(0) !== '#') ||\n        vm.$options.el || el) {\n        warn(\n          'You are using the runtime-only build of Vue where the template ' +\n          'compiler is not available. Either pre-compile the templates into ' +\n          'render functions, or use the compiler-included build.',\n          vm\n        );\n      } else {\n        warn(\n          'Failed to mount component: template or render function not defined.',\n          vm\n        );\n      }\n    }\n  }\n  \n  vm.mpHost !== 'mp-toutiao' && callHook(vm, 'beforeMount');\n\n  var updateComponent = function () {\n    vm._update(vm._render(), hydrating);\n  };\n\n  // we set this to vm._watcher inside the watcher's constructor\n  // since the watcher's initial patch may call $forceUpdate (e.g. inside child\n  // component's mounted hook), which relies on vm._watcher being already defined\n  new Watcher(vm, updateComponent, noop, {\n    before: function before() {\n      if (vm._isMounted && !vm._isDestroyed) {\n        callHook(vm, 'beforeUpdate');\n      }\n    }\n  }, true /* isRenderWatcher */);\n  hydrating = false;\n  return vm\n}\n\n/*  */\n\nfunction renderClass (\n  staticClass,\n  dynamicClass\n) {\n  if (isDef(staticClass) || isDef(dynamicClass)) {\n    return concat(staticClass, stringifyClass(dynamicClass))\n  }\n  /* istanbul ignore next */\n  return ''\n}\n\nfunction concat (a, b) {\n  return a ? b ? (a + ' ' + b) : a : (b || '')\n}\n\nfunction stringifyClass (value) {\n  if (Array.isArray(value)) {\n    return stringifyArray(value)\n  }\n  if (isObject(value)) {\n    return stringifyObject(value)\n  }\n  if (typeof value === 'string') {\n    return value\n  }\n  /* istanbul ignore next */\n  return ''\n}\n\nfunction stringifyArray (value) {\n  var res = '';\n  var stringified;\n  for (var i = 0, l = value.length; i < l; i++) {\n    if (isDef(stringified = stringifyClass(value[i])) && stringified !== '') {\n      if (res) { res += ' '; }\n      res += stringified;\n    }\n  }\n  return res\n}\n\nfunction stringifyObject (value) {\n  var res = '';\n  for (var key in value) {\n    if (value[key]) {\n      if (res) { res += ' '; }\n      res += key;\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar parseStyleText = cached(function (cssText) {\n  var res = {};\n  var listDelimiter = /;(?![^(]*\\))/g;\n  var propertyDelimiter = /:(.+)/;\n  cssText.split(listDelimiter).forEach(function (item) {\n    if (item) {\n      var tmp = item.split(propertyDelimiter);\n      tmp.length > 1 && (res[tmp[0].trim()] = tmp[1].trim());\n    }\n  });\n  return res\n});\n\n// normalize possible array / string values into Object\nfunction normalizeStyleBinding (bindingStyle) {\n  if (Array.isArray(bindingStyle)) {\n    return toObject(bindingStyle)\n  }\n  if (typeof bindingStyle === 'string') {\n    return parseStyleText(bindingStyle)\n  }\n  return bindingStyle\n}\n\n/*  */\r\n\r\nvar MP_METHODS = ['createSelectorQuery', 'createIntersectionObserver', 'selectAllComponents', 'selectComponent'];\r\n\r\nfunction getTarget(obj, path) {\r\n  var parts = path.split('.');\r\n  var key = parts[0];\r\n  if (key.indexOf('__$n') === 0) { //number index\r\n    key = parseInt(key.replace('__$n', ''));\r\n  }\r\n  if (parts.length === 1) {\r\n    return obj[key]\r\n  }\r\n  return getTarget(obj[key], parts.slice(1).join('.'))\r\n}\r\n\r\nfunction internalMixin(Vue) {\r\n\r\n  Vue.config.errorHandler = function(err) {\n    /* eslint-disable no-undef */\r\n    var app = getApp();\r\n    if (app && app.onError) {\r\n      app.onError(err);\r\n    } else {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  var oldEmit = Vue.prototype.$emit;\r\n\r\n  Vue.prototype.$emit = function(event) {\r\n    if (this.$scope && event) {\r\n      this.$scope['triggerEvent'](event, {\r\n        __args__: toArray(arguments, 1)\r\n      });\r\n    }\r\n    return oldEmit.apply(this, arguments)\r\n  };\r\n\r\n  Vue.prototype.$nextTick = function(fn) {\r\n    return nextTick$1(this, fn)\r\n  };\r\n\r\n  MP_METHODS.forEach(function (method) {\r\n    Vue.prototype[method] = function(args) {\r\n      if (this.$scope && this.$scope[method]) {\r\n        return this.$scope[method](args)\r\n      }\r\n      // mp-alipay\r\n      if (typeof my === 'undefined') {\r\n        return\r\n      }\r\n      if (method === 'createSelectorQuery') {\r\n        /* eslint-disable no-undef */\r\n        return my.createSelectorQuery(args)\r\n      } else if (method === 'createIntersectionObserver') {\r\n        /* eslint-disable no-undef */\r\n        return my.createIntersectionObserver(args)\r\n      }\r\n      // TODO mp-alipay 暂不支持 selectAllComponents,selectComponent\r\n    };\r\n  });\r\n\r\n  Vue.prototype.__init_provide = initProvide;\r\n\r\n  Vue.prototype.__init_injections = initInjections;\r\n\r\n  Vue.prototype.__call_hook = function(hook, args) {\r\n    var vm = this;\r\n    // #7573 disable dep collection when invoking lifecycle hooks\r\n    pushTarget();\r\n    var handlers = vm.$options[hook];\r\n    var info = hook + \" hook\";\r\n    var ret;\r\n    if (handlers) {\r\n      for (var i = 0, j = handlers.length; i < j; i++) {\r\n        ret = invokeWithErrorHandling(handlers[i], vm, args ? [args] : null, vm, info);\r\n      }\r\n    }\r\n    if (vm._hasHookEvent) {\r\n      vm.$emit('hook:' + hook, args);\r\n    }\r\n    popTarget();\r\n    return ret\r\n  };\r\n\r\n  Vue.prototype.__set_model = function(target, key, value, modifiers) {\r\n    if (Array.isArray(modifiers)) {\r\n      if (modifiers.indexOf('trim') !== -1) {\r\n        value = value.trim();\r\n      }\r\n      if (modifiers.indexOf('number') !== -1) {\r\n        value = this._n(value);\r\n      }\r\n    }\r\n    if (!target) {\r\n      target = this;\r\n    }\r\n    target[key] = value;\r\n  };\r\n\r\n  Vue.prototype.__set_sync = function(target, key, value) {\r\n    if (!target) {\r\n      target = this;\r\n    }\r\n    target[key] = value;\r\n  };\r\n\r\n  Vue.prototype.__get_orig = function(item) {\r\n    if (isPlainObject(item)) {\r\n      return item['$orig'] || item\r\n    }\r\n    return item\r\n  };\r\n\r\n  Vue.prototype.__get_value = function(dataPath, target) {\r\n    return getTarget(target || this, dataPath)\r\n  };\r\n\r\n\r\n  Vue.prototype.__get_class = function(dynamicClass, staticClass) {\r\n    return renderClass(staticClass, dynamicClass)\r\n  };\r\n\r\n  Vue.prototype.__get_style = function(dynamicStyle, staticStyle) {\r\n    if (!dynamicStyle && !staticStyle) {\r\n      return ''\r\n    }\r\n    var dynamicStyleObj = normalizeStyleBinding(dynamicStyle);\r\n    var styleObj = staticStyle ? extend(staticStyle, dynamicStyleObj) : dynamicStyleObj;\r\n    return Object.keys(styleObj).map(function (name) { return ((hyphenate(name)) + \":\" + (styleObj[name])); }).join(';')\r\n  };\r\n\r\n  Vue.prototype.__map = function(val, iteratee) {\r\n    //TODO 暂不考虑 string,number\r\n    var ret, i, l, keys, key;\r\n    if (Array.isArray(val)) {\r\n      ret = new Array(val.length);\r\n      for (i = 0, l = val.length; i < l; i++) {\r\n        ret[i] = iteratee(val[i], i);\r\n      }\r\n      return ret\r\n    } else if (isObject(val)) {\r\n      keys = Object.keys(val);\r\n      ret = Object.create(null);\r\n      for (i = 0, l = keys.length; i < l; i++) {\r\n        key = keys[i];\r\n        ret[key] = iteratee(val[key], key, i);\r\n      }\r\n      return ret\r\n    }\r\n    return []\r\n  };\r\n\r\n}\n\n/*  */\r\n\r\nvar LIFECYCLE_HOOKS$1 = [\r\n    //App\r\n    'onLaunch',\r\n    'onShow',\r\n    'onHide',\r\n    'onUniNViewMessage',\n    'onError',\r\n    //Page\r\n    'onLoad',\r\n    // 'onShow',\r\n    'onReady',\r\n    // 'onHide',\r\n    'onUnload',\r\n    'onPullDownRefresh',\r\n    'onReachBottom',\r\n    'onTabItemTap',\r\n    'onShareAppMessage',\n    'onResize',\r\n    'onPageScroll',\r\n    'onNavigationBarButtonTap',\r\n    'onBackPress',\r\n    'onNavigationBarSearchInputChanged',\r\n    'onNavigationBarSearchInputConfirmed',\r\n    'onNavigationBarSearchInputClicked',\r\n    //Component\r\n    // 'onReady', // 兼容旧版本，应该移除该事件\r\n    'onPageShow',\r\n    'onPageHide',\r\n    'onPageResize'\r\n];\r\nfunction lifecycleMixin$1(Vue) {\r\n\r\n    //fixed vue-class-component\r\n    var oldExtend = Vue.extend;\r\n    Vue.extend = function(extendOptions) {\r\n        extendOptions = extendOptions || {};\r\n\r\n        var methods = extendOptions.methods;\r\n        if (methods) {\r\n            Object.keys(methods).forEach(function (methodName) {\r\n                if (LIFECYCLE_HOOKS$1.indexOf(methodName)!==-1) {\r\n                    extendOptions[methodName] = methods[methodName];\r\n                    delete methods[methodName];\r\n                }\r\n            });\r\n        }\r\n\r\n        return oldExtend.call(this, extendOptions)\r\n    };\r\n\r\n    var strategies = Vue.config.optionMergeStrategies;\r\n    var mergeHook = strategies.created;\r\n    LIFECYCLE_HOOKS$1.forEach(function (hook) {\r\n        strategies[hook] = mergeHook;\r\n    });\r\n\r\n    Vue.prototype.__lifecycle_hooks__ = LIFECYCLE_HOOKS$1;\r\n}\n\n/*  */\r\n\n// install platform patch function\r\nVue.prototype.__patch__ = patch;\r\n\r\n// public mount method\r\nVue.prototype.$mount = function(\r\n    el ,\r\n    hydrating \r\n) {\r\n    return mountComponent$1(this, el, hydrating)\r\n};\r\n\r\nlifecycleMixin$1(Vue);\r\ninternalMixin(Vue);\n\n/*  */\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Vue);\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../../webpack/buildin/global.js */ 2)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///3\n");

/***/ }),

/***/ 4:
/*!******************************!*\
  !*** D:/kxsx_app/pages.json ***!
  \******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiI0LmpzIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///4\n");

/***/ }),

/***/ 5:
/*!*******************************************************!*\
  !*** ./node_modules/@dcloudio/uni-stat/dist/index.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(uni) {var _package = __webpack_require__(/*! ../package.json */ 6);function _possibleConstructorReturn(self, call) {if (call && (typeof call === \"object\" || typeof call === \"function\")) {return call;}return _assertThisInitialized(self);}function _assertThisInitialized(self) {if (self === void 0) {throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return self;}function _getPrototypeOf(o) {_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {return o.__proto__ || Object.getPrototypeOf(o);};return _getPrototypeOf(o);}function _inherits(subClass, superClass) {if (typeof superClass !== \"function\" && superClass !== null) {throw new TypeError(\"Super expression must either be null or a function\");}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });if (superClass) _setPrototypeOf(subClass, superClass);}function _setPrototypeOf(o, p) {_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {o.__proto__ = p;return o;};return _setPrototypeOf(o, p);}function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError(\"Cannot call a class as a function\");}}function _defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}function _createClass(Constructor, protoProps, staticProps) {if (protoProps) _defineProperties(Constructor.prototype, protoProps);if (staticProps) _defineProperties(Constructor, staticProps);return Constructor;}\n\nvar STAT_VERSION = _package.version;\nvar STAT_URL = 'https://tongji.dcloud.io/uni/stat';\nvar STAT_H5_URL = 'https://tongji.dcloud.io/uni/stat.gif';\nvar PAGE_PVER_TIME = 1800;\nvar APP_PVER_TIME = 300;\nvar OPERATING_TIME = 10;\n\nvar UUID_KEY = '__DC_STAT_UUID';\nvar UUID_VALUE = '__DC_UUID_VALUE';\n\nfunction getUuid() {\n  var uuid = '';\n  if (getPlatformName() === 'n') {\n    try {\n      uuid = plus.runtime.getDCloudId();\n    } catch (e) {\n      uuid = '';\n    }\n    return uuid;\n  }\n\n  try {\n    uuid = uni.getStorageSync(UUID_KEY);\n  } catch (e) {\n    uuid = UUID_VALUE;\n  }\n\n  if (!uuid) {\n    uuid = Date.now() + '' + Math.floor(Math.random() * 1e7);\n    try {\n      uni.setStorageSync(UUID_KEY, uuid);\n    } catch (e) {\n      uni.setStorageSync(UUID_KEY, UUID_VALUE);\n    }\n  }\n  return uuid;\n}\n\nvar getSgin = function getSgin(statData) {\n  var arr = Object.keys(statData);\n  var sortArr = arr.sort();\n  var sgin = {};\n  var sginStr = '';\n  for (var i in sortArr) {\n    sgin[sortArr[i]] = statData[sortArr[i]];\n    sginStr += sortArr[i] + '=' + statData[sortArr[i]] + '&';\n  }\n  // const options = sginStr.substr(0, sginStr.length - 1)\n  // sginStr = sginStr.substr(0, sginStr.length - 1) + '&key=' + STAT_KEY;\n  // const si = crypto.createHash('md5').update(sginStr).digest('hex');\n  return {\n    sign: '',\n    options: sginStr.substr(0, sginStr.length - 1) };\n\n};\n\nvar getSplicing = function getSplicing(data) {\n  var str = '';\n  for (var i in data) {\n    str += i + '=' + data[i] + '&';\n  }\n  return str.substr(0, str.length - 1);\n};\n\nvar getTime = function getTime() {\n  return parseInt(new Date().getTime() / 1000);\n};\n\nvar getPlatformName = function getPlatformName() {\n  var platformList = {\n    'app-plus': 'n',\n    'h5': 'h5',\n    'mp-weixin': 'wx',\n    'mp-alipay': 'ali',\n    'mp-baidu': 'bd',\n    'mp-toutiao': 'tt',\n    'mp-qq': 'qq' };\n\n  return platformList[\"app-plus\"];\n};\n\nvar getPackName = function getPackName() {\n  var packName = '';\n  if (getPlatformName() === 'wx' || getPlatformName() === 'qq') {\n    // 兼容微信小程序低版本基础库\n    if (uni.canIUse('getAccountInfoSync')) {\n      packName = uni.getAccountInfoSync().miniProgram.appId || '';\n    }\n  }\n  return packName;\n};\n\nvar getVersion = function getVersion() {\n  return getPlatformName() === 'n' ? plus.runtime.version : '';\n};\n\nvar getChannel = function getChannel() {\n  var platformName = getPlatformName();\n  var channel = '';\n  if (platformName === 'n') {\n    channel = plus.runtime.channel;\n  }\n  return channel;\n};\n\nvar getScene = function getScene(options) {\n  var platformName = getPlatformName();\n  var scene = '';\n  if (options) {\n    return options;\n  }\n  if (platformName === 'wx') {\n    scene = uni.getLaunchOptionsSync().scene;\n  }\n  return scene;\n};\nvar First__Visit__Time__KEY = 'First__Visit__Time';\nvar Last__Visit__Time__KEY = 'Last__Visit__Time';\n\nvar getFirstVisitTime = function getFirstVisitTime() {\n  var timeStorge = uni.getStorageSync(First__Visit__Time__KEY);\n  var time = 0;\n  if (timeStorge) {\n    time = timeStorge;\n  } else {\n    time = getTime();\n    uni.setStorageSync(First__Visit__Time__KEY, time);\n    uni.removeStorageSync(Last__Visit__Time__KEY);\n  }\n  return time;\n};\n\nvar getLastVisitTime = function getLastVisitTime() {\n  var timeStorge = uni.getStorageSync(Last__Visit__Time__KEY);\n  var time = 0;\n  if (timeStorge) {\n    time = timeStorge;\n  } else {\n    time = '';\n  }\n  uni.setStorageSync(Last__Visit__Time__KEY, getTime());\n  return time;\n};\n\n\nvar PAGE_RESIDENCE_TIME = '__page__residence__time';\nvar First_Page_residence_time = 0;\nvar Last_Page_residence_time = 0;\n\n\nvar setPageResidenceTime = function setPageResidenceTime() {\n  First_Page_residence_time = getTime();\n  if (getPlatformName() === 'n') {\n    uni.setStorageSync(PAGE_RESIDENCE_TIME, getTime());\n  }\n  return First_Page_residence_time;\n};\n\nvar getPageResidenceTime = function getPageResidenceTime() {\n  Last_Page_residence_time = getTime();\n  if (getPlatformName() === 'n') {\n    First_Page_residence_time = uni.getStorageSync(PAGE_RESIDENCE_TIME);\n  }\n  return Last_Page_residence_time - First_Page_residence_time;\n};\nvar TOTAL__VISIT__COUNT = 'Total__Visit__Count';\nvar getTotalVisitCount = function getTotalVisitCount() {\n  var timeStorge = uni.getStorageSync(TOTAL__VISIT__COUNT);\n  var count = 1;\n  if (timeStorge) {\n    count = timeStorge;\n    count++;\n  }\n  uni.setStorageSync(TOTAL__VISIT__COUNT, count);\n  return count;\n};\n\nvar GetEncodeURIComponentOptions = function GetEncodeURIComponentOptions(statData) {\n  var data = {};\n  for (var prop in statData) {\n    data[prop] = encodeURIComponent(statData[prop]);\n  }\n  return data;\n};\n\nvar Set__First__Time = 0;\nvar Set__Last__Time = 0;\n\nvar getFirstTime = function getFirstTime() {\n  var time = new Date().getTime();\n  Set__First__Time = time;\n  Set__Last__Time = 0;\n  return time;\n};\n\n\nvar getLastTime = function getLastTime() {\n  var time = new Date().getTime();\n  Set__Last__Time = time;\n  return time;\n};\n\n\nvar getResidenceTime = function getResidenceTime(type) {\n  var residenceTime = 0;\n  if (Set__First__Time !== 0) {\n    residenceTime = Set__Last__Time - Set__First__Time;\n  }\n\n  residenceTime = parseInt(residenceTime / 1000);\n  residenceTime = residenceTime < 1 ? 1 : residenceTime;\n  if (type === 'app') {\n    var overtime = residenceTime > APP_PVER_TIME ? true : false;\n    return {\n      residenceTime: residenceTime,\n      overtime: overtime };\n\n  }\n  if (type === 'page') {\n    var _overtime = residenceTime > PAGE_PVER_TIME ? true : false;\n    return {\n      residenceTime: residenceTime,\n      overtime: _overtime };\n\n  }\n\n  return {\n    residenceTime: residenceTime };\n\n\n};\n\nvar getRoute = function getRoute() {\n  var pages = getCurrentPages();\n  var page = pages[pages.length - 1];\n  var _self = page.$vm;\n\n  if (getPlatformName() === 'bd') {\n    return _self.$mp && _self.$mp.page.is;\n  } else {\n    return _self.$scope && _self.$scope.route || _self.$mp && _self.$mp.page.route;\n  }\n};\n\nvar getPageRoute = function getPageRoute(self) {\n  var pages = getCurrentPages();\n  var page = pages[pages.length - 1];\n  var _self = page.$vm;\n  var query = self._query;\n  var str = query && JSON.stringify(query) !== '{}' ? '?' + JSON.stringify(query) : '';\n  // clear\n  self._query = '';\n  if (getPlatformName() === 'bd') {\n    return _self.$mp && _self.$mp.page.is + str;\n  } else {\n    return _self.$scope && _self.$scope.route + str || _self.$mp && _self.$mp.page.route + str;\n  }\n};\n\nvar getPageTypes = function getPageTypes(self) {\n  if (self.mpType === 'page' || self.$mp && self.$mp.mpType === 'page' || self.$options.mpType === 'page') {\n    return true;\n  }\n  return false;\n};\n\nvar calibration = function calibration(eventName, options) {\n  //  login 、 share 、pay_success 、pay_fail 、register 、title\n  if (!eventName) {\n    console.error(\"uni.report \\u7F3A\\u5C11 [eventName] \\u53C2\\u6570\");\n    return true;\n  }\n  if (typeof eventName !== 'string') {\n    console.error(\"uni.report [eventName] \\u53C2\\u6570\\u7C7B\\u578B\\u9519\\u8BEF,\\u53EA\\u80FD\\u4E3A String \\u7C7B\\u578B\");\n    return true;\n  }\n  if (eventName.length > 255) {\n    console.error(\"uni.report [eventName] \\u53C2\\u6570\\u957F\\u5EA6\\u4E0D\\u80FD\\u5927\\u4E8E 255\");\n    return true;\n  }\n\n  if (typeof options !== 'string' && typeof options !== 'object') {\n    console.error(\"uni.report [options] \\u53C2\\u6570\\u7C7B\\u578B\\u9519\\u8BEF,\\u53EA\\u80FD\\u4E3A String \\u6216 Object \\u7C7B\\u578B\");\n    return true;\n  }\n\n  if (typeof options === 'string' && options.length > 255) {\n    console.error(\"uni.report [options] \\u53C2\\u6570\\u957F\\u5EA6\\u4E0D\\u80FD\\u5927\\u4E8E 255\");\n    return true;\n  }\n\n  if (eventName === 'title' && typeof options !== 'string') {\n    console.error('uni.report [eventName] 参数为 title 时，[options] 参数只能为 String 类型');\n    return true;\n  }\n};\n\nvar PagesJson = __webpack_require__(/*! uni-pages?{\"type\":\"style\"} */ 7).default;\nvar statConfig = __webpack_require__(/*! uni-stat-config */ 8).default || __webpack_require__(/*! uni-stat-config */ 8);\n\nvar resultOptions = uni.getSystemInfoSync();var\n\nUtil = /*#__PURE__*/function () {\n  function Util() {_classCallCheck(this, Util);\n    this.self = '';\n    this._retry = 0;\n    this._platform = '';\n    this._query = {};\n    this._navigationBarTitle = {\n      config: '',\n      page: '',\n      report: '',\n      lt: '' };\n\n    this._operatingTime = 0;\n    this._reportingRequestData = {\n      '1': [],\n      '11': [] };\n\n    this.__prevent_triggering = false;\n\n    this.__licationHide = false;\n    this.__licationShow = false;\n    this._lastPageRoute = '';\n    this.statData = {\n      uuid: getUuid(),\n      ut: getPlatformName(),\n      mpn: getPackName(),\n      ak: statConfig.appid,\n      usv: STAT_VERSION,\n      v: getVersion(),\n      ch: getChannel(),\n      cn: '',\n      pn: '',\n      ct: '',\n      t: getTime(),\n      tt: '',\n      p: resultOptions.platform === 'android' ? 'a' : 'i',\n      brand: resultOptions.brand || '',\n      md: resultOptions.model,\n      sv: resultOptions.system.replace(/(Android|iOS)\\s/, ''),\n      mpsdk: resultOptions.SDKVersion || '',\n      mpv: resultOptions.version || '',\n      lang: resultOptions.language,\n      pr: resultOptions.pixelRatio,\n      ww: resultOptions.windowWidth,\n      wh: resultOptions.windowHeight,\n      sw: resultOptions.screenWidth,\n      sh: resultOptions.screenHeight };\n\n\n  }_createClass(Util, [{ key: \"_applicationShow\", value: function _applicationShow()\n\n    {\n      if (this.__licationHide) {\n        getLastTime();\n        var time = getResidenceTime('app');\n        if (time.overtime) {\n          var options = {\n            path: this._lastPageRoute,\n            scene: this.statData.sc };\n\n          this._sendReportRequest(options);\n        }\n        this.__licationHide = false;\n      }\n    } }, { key: \"_applicationHide\", value: function _applicationHide(\n\n    self, type) {\n\n      this.__licationHide = true;\n      getLastTime();\n      var time = getResidenceTime();\n      getFirstTime();\n      var route = getPageRoute(this);\n      this._sendHideRequest({\n        urlref: route,\n        urlref_ts: time.residenceTime },\n      type);\n    } }, { key: \"_pageShow\", value: function _pageShow()\n\n    {\n      var route = getPageRoute(this);\n      var routepath = getRoute();\n      this._navigationBarTitle.config = PagesJson &&\n      PagesJson.pages[routepath] &&\n      PagesJson.pages[routepath].titleNView &&\n      PagesJson.pages[routepath].titleNView.titleText ||\n      PagesJson &&\n      PagesJson.pages[routepath] &&\n      PagesJson.pages[routepath].navigationBarTitleText || '';\n\n      if (this.__licationShow) {\n        getFirstTime();\n        this.__licationShow = false;\n        // console.log('这是 onLauch 之后执行的第一次 pageShow ，为下次记录时间做准备');\n        this._lastPageRoute = route;\n        return;\n      }\n\n      getLastTime();\n      this._lastPageRoute = route;\n      var time = getResidenceTime('page');\n      if (time.overtime) {\n        var options = {\n          path: this._lastPageRoute,\n          scene: this.statData.sc };\n\n        this._sendReportRequest(options);\n      }\n      getFirstTime();\n    } }, { key: \"_pageHide\", value: function _pageHide()\n\n    {\n      if (!this.__licationHide) {\n        getLastTime();\n        var time = getResidenceTime('page');\n        this._sendPageRequest({\n          url: this._lastPageRoute,\n          urlref: this._lastPageRoute,\n          urlref_ts: time.residenceTime });\n\n        this._navigationBarTitle = {\n          config: '',\n          page: '',\n          report: '',\n          lt: '' };\n\n        return;\n      }\n    } }, { key: \"_login\", value: function _login()\n\n    {\n      this._sendEventRequest({\n        key: 'login' },\n      0);\n    } }, { key: \"_share\", value: function _share()\n\n    {\n      this._sendEventRequest({\n        key: 'share' },\n      0);\n    } }, { key: \"_payment\", value: function _payment(\n    key) {\n      this._sendEventRequest({\n        key: key },\n      0);\n    } }, { key: \"_sendReportRequest\", value: function _sendReportRequest(\n    options) {\n\n      this._navigationBarTitle.lt = '1';\n      var query = options.query && JSON.stringify(options.query) !== '{}' ? '?' + JSON.stringify(options.query) : '';\n      this.statData.lt = '1';\n      this.statData.url = options.path + query || '';\n      this.statData.t = getTime();\n      this.statData.sc = getScene(options.scene);\n      this.statData.fvts = getFirstVisitTime();\n      this.statData.lvts = getLastVisitTime();\n      this.statData.tvc = getTotalVisitCount();\n      if (getPlatformName() === 'n') {\n        this.getProperty();\n      } else {\n        this.getNetworkInfo();\n      }\n    } }, { key: \"_sendPageRequest\", value: function _sendPageRequest(\n\n    opt) {var\n\n      url =\n\n\n      opt.url,urlref = opt.urlref,urlref_ts = opt.urlref_ts;\n      this._navigationBarTitle.lt = '11';\n      var options = {\n        ak: this.statData.ak,\n        uuid: this.statData.uuid,\n        lt: '11',\n        ut: this.statData.ut,\n        url: url,\n        tt: this.statData.tt,\n        urlref: urlref,\n        urlref_ts: urlref_ts,\n        ch: this.statData.ch,\n        usv: this.statData.usv,\n        t: getTime(),\n        p: this.statData.p };\n\n      this.request(options);\n    } }, { key: \"_sendHideRequest\", value: function _sendHideRequest(\n\n    opt, type) {var\n\n      urlref =\n\n      opt.urlref,urlref_ts = opt.urlref_ts;\n      var options = {\n        ak: this.statData.ak,\n        uuid: this.statData.uuid,\n        lt: '3',\n        ut: this.statData.ut,\n        urlref: urlref,\n        urlref_ts: urlref_ts,\n        ch: this.statData.ch,\n        usv: this.statData.usv,\n        t: getTime(),\n        p: this.statData.p };\n\n      this.request(options, type);\n    } }, { key: \"_sendEventRequest\", value: function _sendEventRequest()\n\n\n\n    {var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},_ref$key = _ref.key,key = _ref$key === void 0 ? '' : _ref$key,_ref$value = _ref.value,value = _ref$value === void 0 ? \"\" : _ref$value;\n      var route = this._lastPageRoute;\n      var options = {\n        ak: this.statData.ak,\n        uuid: this.statData.uuid,\n        lt: '21',\n        ut: this.statData.ut,\n        url: route,\n        ch: this.statData.ch,\n        e_n: key,\n        e_v: typeof value === 'object' ? JSON.stringify(value) : value.toString(),\n        usv: this.statData.usv,\n        t: getTime(),\n        p: this.statData.p };\n\n      this.request(options);\n    } }, { key: \"getNetworkInfo\", value: function getNetworkInfo()\n\n    {var _this = this;\n      uni.getNetworkType({\n        success: function success(result) {\n          _this.statData.net = result.networkType;\n          _this.getLocation();\n        } });\n\n    } }, { key: \"getProperty\", value: function getProperty()\n\n    {var _this2 = this;\n      plus.runtime.getProperty(plus.runtime.appid, function (wgtinfo) {\n        _this2.statData.v = wgtinfo.version || '';\n        _this2.getNetworkInfo();\n      });\n    } }, { key: \"getLocation\", value: function getLocation()\n\n    {var _this3 = this;\n      if (statConfig.getLocation) {\n        uni.getLocation({\n          type: 'wgs84',\n          geocode: true,\n          success: function success(result) {\n            if (result.address) {\n              _this3.statData.cn = result.address.country;\n              _this3.statData.pn = result.address.province;\n              _this3.statData.ct = result.address.city;\n            }\n\n            _this3.statData.lat = result.latitude;\n            _this3.statData.lng = result.longitude;\n            _this3.request(_this3.statData);\n          } });\n\n      } else {\n        this.statData.lat = 0;\n        this.statData.lng = 0;\n        this.request(this.statData);\n      }\n    } }, { key: \"request\", value: function request(\n\n    data, type) {var _this4 = this;\n      var time = getTime();\n      var title = this._navigationBarTitle;\n      data.ttn = title.page;\n      data.ttpj = title.config;\n      data.ttc = title.report;\n\n      var requestData = this._reportingRequestData;\n      if (getPlatformName() === 'n') {\n        requestData = uni.getStorageSync('__UNI__STAT__DATA') || {};\n      }\n      if (!requestData[data.lt]) {\n        requestData[data.lt] = [];\n      }\n      requestData[data.lt].push(data);\n\n      if (getPlatformName() === 'n') {\n        uni.setStorageSync('__UNI__STAT__DATA', requestData);\n      }\n      if (getPageResidenceTime() < OPERATING_TIME && !type) {\n        return;\n      }\n      var uniStatData = this._reportingRequestData;\n      if (getPlatformName() === 'n') {\n        uniStatData = uni.getStorageSync('__UNI__STAT__DATA');\n      }\n      // 时间超过，重新获取时间戳\n      setPageResidenceTime();\n      var firstArr = [];\n      var contentArr = [];\n      var lastArr = [];var _loop = function _loop(\n\n      i) {\n        var rd = uniStatData[i];\n        rd.forEach(function (elm) {\n          var newData = getSplicing(elm);\n          if (i === 0) {\n            firstArr.push(newData);\n          } else if (i === 3) {\n            lastArr.push(newData);\n          } else {\n            contentArr.push(newData);\n          }\n        });};for (var i in uniStatData) {_loop(i);\n      }\n\n      firstArr.push.apply(firstArr, contentArr.concat(lastArr));\n      var optionsData = {\n        usv: STAT_VERSION, //统计 SDK 版本号\n        t: time, //发送请求时的时间戮\n        requests: JSON.stringify(firstArr) };\n\n\n      this._reportingRequestData = {};\n      if (getPlatformName() === 'n') {\n        uni.removeStorageSync('__UNI__STAT__DATA');\n      }\n\n      if (data.ut === 'h5') {\n        this.imageRequest(optionsData);\n        return;\n      }\n\n      if (getPlatformName() === 'n' && this.statData.p === 'a') {\n        setTimeout(function () {\n          _this4._sendRequest(optionsData);\n        }, 200);\n        return;\n      }\n      this._sendRequest(optionsData);\n    } }, { key: \"_sendRequest\", value: function _sendRequest(\n    optionsData) {var _this5 = this;\n      uni.request({\n        url: STAT_URL,\n        method: 'POST',\n        // header: {\n        //   'content-type': 'application/json' // 默认值\n        // },\n        data: optionsData,\n        success: function success() {\n          // if (process.env.NODE_ENV === 'development') {\n          //   console.log('stat request success');\n          // }\n        },\n        fail: function fail(e) {\n          if (++_this5._retry < 3) {\n            setTimeout(function () {\n              _this5._sendRequest(optionsData);\n            }, 1000);\n          }\n        } });\n\n    }\n    /**\r\n       * h5 请求\r\n       */ }, { key: \"imageRequest\", value: function imageRequest(\n    data) {\n      var image = new Image();\n      var options = getSgin(GetEncodeURIComponentOptions(data)).options;\n      image.src = STAT_H5_URL + '?' + options;\n    } }, { key: \"sendEvent\", value: function sendEvent(\n\n    key, value) {\n      // 校验 type 参数\n      if (calibration(key, value)) return;\n\n      if (key === 'title') {\n        this._navigationBarTitle.report = value;\n        return;\n      }\n      this._sendEventRequest({\n        key: key,\n        value: typeof value === 'object' ? JSON.stringify(value) : value },\n      1);\n    } }]);return Util;}();var\n\n\n\nStat = /*#__PURE__*/function (_Util) {_inherits(Stat, _Util);_createClass(Stat, null, [{ key: \"getInstance\", value: function getInstance()\n    {\n      if (!this.instance) {\n        this.instance = new Stat();\n      }\n      return this.instance;\n    } }]);\n  function Stat() {var _this6;_classCallCheck(this, Stat);\n    _this6 = _possibleConstructorReturn(this, _getPrototypeOf(Stat).call(this));\n    _this6.instance = null;\n    // 注册拦截器\n    if (typeof uni.addInterceptor === 'function' && \"development\" !== 'development') {\n      _this6.addInterceptorInit();\n      _this6.interceptLogin();\n      _this6.interceptShare(true);\n      _this6.interceptRequestPayment();\n    }return _this6;\n  }_createClass(Stat, [{ key: \"addInterceptorInit\", value: function addInterceptorInit()\n\n    {\n      var self = this;\n      uni.addInterceptor('setNavigationBarTitle', {\n        invoke: function invoke(args) {\n          self._navigationBarTitle.page = args.title;\n        } });\n\n    } }, { key: \"interceptLogin\", value: function interceptLogin()\n\n    {\n      var self = this;\n      uni.addInterceptor('login', {\n        complete: function complete() {\n          self._login();\n        } });\n\n    } }, { key: \"interceptShare\", value: function interceptShare(\n\n    type) {\n      var self = this;\n      if (!type) {\n        self._share();\n        return;\n      }\n      uni.addInterceptor('share', {\n        success: function success() {\n          self._share();\n        },\n        fail: function fail() {\n          self._share();\n        } });\n\n    } }, { key: \"interceptRequestPayment\", value: function interceptRequestPayment()\n\n    {\n      var self = this;\n      uni.addInterceptor('requestPayment', {\n        success: function success() {\n          self._payment('pay_success');\n        },\n        fail: function fail() {\n          self._payment('pay_fail');\n        } });\n\n    } }, { key: \"report\", value: function report(\n\n    options, self) {\n      this.self = self;\n      // if (process.env.NODE_ENV === 'development') {\n      //   console.log('report init');\n      // }\n      setPageResidenceTime();\n      this.__licationShow = true;\n      this._sendReportRequest(options, true);\n    } }, { key: \"load\", value: function load(\n\n    options, self) {\n      if (!self.$scope && !self.$mp) {\n        var page = getCurrentPages();\n        self.$scope = page[page.length - 1];\n      }\n      this.self = self;\n      this._query = options;\n    } }, { key: \"show\", value: function show(\n\n    self) {\n      this.self = self;\n      if (getPageTypes(self)) {\n        this._pageShow(self);\n      } else {\n        this._applicationShow(self);\n      }\n    } }, { key: \"ready\", value: function ready(\n\n    self) {\n      // this.self = self;\n      // if (getPageTypes(self)) {\n      //   this._pageShow(self);\n      // }\n    } }, { key: \"hide\", value: function hide(\n    self) {\n      this.self = self;\n      if (getPageTypes(self)) {\n        this._pageHide(self);\n      } else {\n        this._applicationHide(self, true);\n      }\n    } }, { key: \"error\", value: function error(\n    em) {\n      if (this._platform === 'devtools') {\n        if (true) {\n          console.info('当前运行环境为开发者工具，不上报数据。');\n        }\n        // return;\n      }\n      var emVal = '';\n      if (!em.message) {\n        emVal = JSON.stringify(em);\n      } else {\n        emVal = em.stack;\n      }\n      var options = {\n        ak: this.statData.ak,\n        uuid: this.statData.uuid,\n        lt: '31',\n        ut: this.statData.ut,\n        ch: this.statData.ch,\n        mpsdk: this.statData.mpsdk,\n        mpv: this.statData.mpv,\n        v: this.statData.v,\n        em: emVal,\n        usv: this.statData.usv,\n        t: getTime(),\n        p: this.statData.p };\n\n      this.request(options);\n    } }]);return Stat;}(Util);\n\n\nvar stat = Stat.getInstance();\nvar isHide = false;\nvar lifecycle = {\n  onLaunch: function onLaunch(options) {\n    stat.report(options, this);\n  },\n  onReady: function onReady() {\n    stat.ready(this);\n  },\n  onLoad: function onLoad(options) {\n    stat.load(options, this);\n    // 重写分享，获取分享上报事件\n    if (this.$scope && this.$scope.onShareAppMessage) {\n      var oldShareAppMessage = this.$scope.onShareAppMessage;\n      this.$scope.onShareAppMessage = function (options) {\n        stat.interceptShare(false);\n        return oldShareAppMessage.call(this, options);\n      };\n    }\n  },\n  onShow: function onShow() {\n    isHide = false;\n    stat.show(this);\n  },\n  onHide: function onHide() {\n    isHide = true;\n    stat.hide(this);\n  },\n  onUnload: function onUnload() {\n    if (isHide) {\n      isHide = false;\n      return;\n    }\n    stat.hide(this);\n  },\n  onError: function onError(e) {\n    stat.error(e);\n  } };\n\n\nfunction main() {\n  if (true) {\n    uni.report = function (type, options) {};\n  } else { var Vue; }\n}\n\nmain();\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-app-plus/dist/index.js */ 1)[\"default\"]))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///5\n");

/***/ }),

/***/ 6:
/*!******************************************************!*\
  !*** ./node_modules/@dcloudio/uni-stat/package.json ***!
  \******************************************************/
/*! exports provided: _from, _id, _inBundle, _integrity, _location, _phantomChildren, _requested, _requiredBy, _resolved, _shasum, _spec, _where, author, bugs, bundleDependencies, deprecated, description, devDependencies, files, gitHead, homepage, license, main, name, repository, scripts, version, default */
/***/ (function(module) {

eval("module.exports = {\"_from\":\"@dcloudio/uni-stat@alpha\",\"_id\":\"@dcloudio/uni-stat@2.0.0-alpha-25720200116005\",\"_inBundle\":false,\"_integrity\":\"sha512-RZFw3WAaS/CZTzzv9JPaWvmoNitojD/06vPdHSzlqZi8GbuE222lFuyochEjrGkG8rPPrWHAnwfoPBuQVtkfdg==\",\"_location\":\"/@dcloudio/uni-stat\",\"_phantomChildren\":{},\"_requested\":{\"type\":\"tag\",\"registry\":true,\"raw\":\"@dcloudio/uni-stat@alpha\",\"name\":\"@dcloudio/uni-stat\",\"escapedName\":\"@dcloudio%2funi-stat\",\"scope\":\"@dcloudio\",\"rawSpec\":\"alpha\",\"saveSpec\":null,\"fetchSpec\":\"alpha\"},\"_requiredBy\":[\"#USER\",\"/\",\"/@dcloudio/vue-cli-plugin-uni\"],\"_resolved\":\"https://registry.npmjs.org/@dcloudio/uni-stat/-/uni-stat-2.0.0-alpha-25720200116005.tgz\",\"_shasum\":\"08bb17aba91c84a981f33d74153aa3dd07b578ad\",\"_spec\":\"@dcloudio/uni-stat@alpha\",\"_where\":\"/Users/guoshengqiang/Documents/dcloud-plugins/alpha/uniapp-cli\",\"author\":\"\",\"bugs\":{\"url\":\"https://github.com/dcloudio/uni-app/issues\"},\"bundleDependencies\":false,\"deprecated\":false,\"description\":\"\",\"devDependencies\":{\"@babel/core\":\"^7.5.5\",\"@babel/preset-env\":\"^7.5.5\",\"eslint\":\"^6.1.0\",\"rollup\":\"^1.19.3\",\"rollup-plugin-babel\":\"^4.3.3\",\"rollup-plugin-clear\":\"^2.0.7\",\"rollup-plugin-commonjs\":\"^10.0.2\",\"rollup-plugin-copy\":\"^3.1.0\",\"rollup-plugin-eslint\":\"^7.0.0\",\"rollup-plugin-json\":\"^4.0.0\",\"rollup-plugin-node-resolve\":\"^5.2.0\",\"rollup-plugin-replace\":\"^2.2.0\",\"rollup-plugin-uglify\":\"^6.0.2\"},\"files\":[\"dist\",\"package.json\",\"LICENSE\"],\"gitHead\":\"a129bde60de35f7ef497f43d5a45b4556231995c\",\"homepage\":\"https://github.com/dcloudio/uni-app#readme\",\"license\":\"Apache-2.0\",\"main\":\"dist/index.js\",\"name\":\"@dcloudio/uni-stat\",\"repository\":{\"type\":\"git\",\"url\":\"git+https://github.com/dcloudio/uni-app.git\",\"directory\":\"packages/uni-stat\"},\"scripts\":{\"build\":\"NODE_ENV=production rollup -c rollup.config.js\",\"dev\":\"NODE_ENV=development rollup -w -c rollup.config.js\"},\"version\":\"2.0.0-alpha-25720200116005\"};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiI2LmpzIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///6\n");

/***/ }),

/***/ 7:
/*!***********************************************!*\
  !*** D:/kxsx_app/pages.json?{"type":"style"} ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("Object.defineProperty(exports, \"__esModule\", { value: true });exports.default = void 0;var _default = { \"pages\": { \"pages/index/index\": { \"navigationBarTitleText\": \"首页\", \"titleNView\": false, \"usingComponents\": { \"uni-load-more\": \"/components/uni-load-more/uni-load-more\" }, \"usingAutoImportComponents\": { \"uni-load-more\": \"/components/uni-load-more/uni-load-more\" } }, \"pages/my/my\": { \"navigationBarTitleText\": \"我的\", \"titleNView\": false, \"usingComponents\": {}, \"usingAutoImportComponents\": {} }, \"pages/my/jifenguize/jifenguize\": { \"navigationBarTitleText\": \"积分规则\", \"navigationBarBackgroundColor\": \"#008800\", \"navigationBarTextStyle\": \"white\", \"titleNView\": { \"titleSize\": \"28rpx\" }, \"usingComponents\": {}, \"usingAutoImportComponents\": {} }, \"pages/my/huiyuantequan/huiyuantequan\": { \"navigationBarTitleText\": \"我的特权\", \"navigationBarBackgroundColor\": \"#008800\", \"navigationBarTextStyle\": \"white\", \"titleNView\": { \"titleSize\": \"28rpx\" }, \"usingComponents\": {}, \"usingAutoImportComponents\": {} }, \"pages/jctbxzjx/jctbxzjx\": { \"navigationBarTitleText\": \"教材同步学习教学\", \"enablePullDownRefresh\": false, \"titleNView\": { \"titleSize\": \"28rpx\" }, \"usingComponents\": { \"uni-load-more\": \"/components/uni-load-more/uni-load-more\" }, \"usingAutoImportComponents\": { \"uni-load-more\": \"/components/uni-load-more/uni-load-more\" } }, \"pages/onlinestore/onlinestore\": { \"navigationBarTitleText\": \"在线商城\", \"titleNView\": { \"titleSize\": \"28rpx\" }, \"usingComponents\": {}, \"usingAutoImportComponents\": {} }, \"pages/myPublished/myPublished\": { \"navigationBarTitleText\": \"我的发表\", \"titleNView\": { \"titleSize\": \"28rpx\" }, \"usingComponents\": {}, \"usingAutoImportComponents\": {} }, \"pages/my/daySignin/daySignin\": { \"navigationBarTitleText\": \"每日签到\", \"titleNView\": { \"titleSize\": \"28rpx\" }, \"usingComponents\": { \"uni-calendar\": \"/components/uni-calendar/uni-calendar\", \"uni-popup\": \"/components/uni-popup/uni-popup\" }, \"usingAutoImportComponents\": { \"uni-calendar\": \"/components/uni-calendar/uni-calendar\", \"uni-popup\": \"/components/uni-popup/uni-popup\" } }, \"pages/onlinestore/myOrder/myOrder\": { \"navigationBarTitleText\": \"我的订单\", \"titleNView\": { \"titleSize\": \"28rpx\" }, \"usingComponents\": {}, \"usingAutoImportComponents\": {} }, \"pages/my/huiyuanxinxi/huiyuanxinxi\": { \"navigationBarTitleText\": \"会员信息\", \"titleNView\": { \"titleSize\": \"28rpx\" }, \"usingComponents\": { \"w-picker\": \"/components/w-picker/w-picker\" }, \"usingAutoImportComponents\": { \"w-picker\": \"/components/w-picker/w-picker\" } }, \"pages/my/huiyuanjifen/huiyuanjifen\": { \"navigationBarTitleText\": \"会员积分\", \"titleNView\": { \"titleSize\": \"28rpx\" }, \"usingComponents\": {}, \"usingAutoImportComponents\": {} }, \"pages/my/mycollect/mycollect\": { \"navigationBarTitleText\": \"我的收藏\", \"titleNView\": { \"titleSize\": \"28rpx\" }, \"usingComponents\": {}, \"usingAutoImportComponents\": {} }, \"pages/my/lstgjl/lstgjl\": { \"navigationBarTitleText\": \"历史投稿记录\", \"titleNView\": { \"titleSize\": \"28rpx\" }, \"usingComponents\": {}, \"usingAutoImportComponents\": {} }, \"pages/publishedDiary/publishedDiary\": { \"navigationBarTitleText\": \"发表记录\", \"titleNView\": { \"titleSize\": \"28rpx\" }, \"usingComponents\": {}, \"usingAutoImportComponents\": {} }, \"pages/chat/chat\": { \"navigationBarTitleText\": \"消息\", \"titleNView\": { \"titleSize\": \"28rpx\" }, \"usingComponents\": {}, \"usingAutoImportComponents\": {} }, \"pages/chat/chatContent/chatContent\": { \"titleNView\": { \"titleSize\": \"28rpx\" }, \"usingComponents\": {}, \"usingAutoImportComponents\": {} }, \"pages/freeTeaching/freeTeaching\": { \"navigationBarTitleText\": \"在线教学\", \"titleNView\": { \"titleSize\": \"28rpx\" }, \"usingComponents\": {}, \"usingAutoImportComponents\": {} }, \"pages/login/login\": { \"navigationStyle\": \"custom\", \"usingComponents\": {}, \"usingAutoImportComponents\": {} }, \"pages/reg/reg\": { \"navigationBarTitleText\": \"开心书写\", \"titleNView\": { \"titleSize\": \"28rpx\" }, \"usingComponents\": { \"w-picker\": \"/components/w-picker/w-picker\" }, \"usingAutoImportComponents\": { \"w-picker\": \"/components/w-picker/w-picker\" } }, \"pages/hncjiaoxue_mulu/hncjiaoxue_mulu\": { \"navigationBarTitleText\": \"功能尺适用教学\", \"titleNView\": { \"titleSize\": \"28rpx\" }, \"usingComponents\": {}, \"usingAutoImportComponents\": {} }, \"pages/Copyright/Copyright\": { \"navigationBarTitleText\": \"版权声明\", \"titleNView\": { \"titleSize\": \"28rpx\" }, \"usingComponents\": {}, \"usingAutoImportComponents\": {} }, \"pages/my/shengjihuiyuan/shengjihuiyuan\": { \"navigationBarTitleText\": \"升级会员\", \"titleNView\": { \"titleSize\": \"28rpx\" }, \"usingComponents\": { \"w-picker\": \"/components/w-picker/w-picker\" }, \"usingAutoImportComponents\": { \"w-picker\": \"/components/w-picker/w-picker\" } }, \"pages/growthDiary/growthDiary\": { \"navigationBarTitleText\": \"个人日记\", \"titleNView\": { \"titleSize\": \"28rpx\" }, \"usingComponents\": {}, \"usingAutoImportComponents\": {} }, \"pages/hncjiaoxue_intro/hncjiaoxue_intro\": { \"navigationBarTitleText\": \"金木水火土\", \"titleNView\": { \"titleSize\": \"28rpx\" }, \"usingComponents\": {}, \"usingAutoImportComponents\": {} }, \"pages/my/mydiscount/mydiscount\": { \"navigationBarTitleText\": \"优惠券\", \"titleNView\": { \"titleSize\": \"28rpx\" }, \"usingComponents\": {}, \"usingAutoImportComponents\": {} }, \"pages/my/signature/signature\": { \"navigationBarTitleText\": \"个性签名\", \"titleNView\": { \"titleSize\": \"28rpx\" }, \"usingComponents\": {}, \"usingAutoImportComponents\": {} }, \"pages/my/videoGift/videoGift\": { \"navigationBarTitleText\": \"视频礼包\", \"titleNView\": { \"titleSize\": \"28rpx\" }, \"usingComponents\": {}, \"usingAutoImportComponents\": {} }, \"pages/my/activeCode/activeCode\": { \"navigationBarTitleText\": \"激活码\", \"titleNView\": { \"titleSize\": \"28rpx\" }, \"usingComponents\": {}, \"usingAutoImportComponents\": {} }, \"pages/message/message\": { \"navigationBarTitleText\": \"首页\", \"titleNView\": false, \"usingComponents\": {}, \"usingAutoImportComponents\": {} } }, \"globalStyle\": { \"backgroundTextStyle\": \"light\", \"navigationBarBackgroundColor\": \"#008800\", \"navigationBarTextStyle\": \"white\" } };exports.default = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///7\n");

/***/ }),

/***/ 8:
/*!**********************************************!*\
  !*** D:/kxsx_app/pages.json?{"type":"stat"} ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("Object.defineProperty(exports, \"__esModule\", { value: true });exports.default = void 0;var _default = { \"appid\": \"\" };exports.default = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJzR0FBZSxFQUFDLFNBQVEsRUFBVCxFIiwiZmlsZSI6IjguanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCB7XCJhcHBpZFwiOlwiXCJ9Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///8\n");

/***/ })

}]);